R version 2.9.2 (2009-08-24)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'


	The following object(s) are masked from package:stats :

	 contr.helmert,
	 contr.poly,
	 contr.SAS,
	 contr.sum,
	 contr.treatment,
	 xtabs 


	The following object(s) are masked from package:base :

	 rcond 

Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print( cesLandLabor ) 
$par
    gamma     alpha       rho 
41.302277  2.740694  5.802162 

$value
[1] 165832.5

$counts
function gradient 
      62       NA 

$convergence
[1] 0

$message
NULL

$hessian
          gamma     alpha        rho
gamma  48696.25  126472.8  -60230.83
alpha 126472.77  328586.3 -156392.12
rho   -60230.83 -156392.1   74457.55

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

attr(,"class")
[1] "cesEst" "list"  
> coef( cesLandLabor ) 
    gamma     alpha       rho 
41.302277  2.740694  5.802162 
> vcov( cesLandLabor ) 
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print( cesLandLaborVrs )
$par
    gamma     alpha       rho       phi 
19.649459  2.999448 17.175560  1.245646 

$value
[1] 97679.9

$counts
function gradient 
     191       NA 

$convergence
[1] 0

$message
NULL

$hessian
            gamma       alpha          rho        phi
gamma   215525.87  102398.274   -19642.408   14743188
alpha   102398.27   48649.741    -9332.375    7004646
rho     -19642.41   -9332.375     1790.189   -1343657
phi   14743188.41 7004645.884 -1343656.561 1010787434

$vcov
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

attr(,"class")
[1] "cesEst" "list"  
> coef( cesLandLaborVrs )
    gamma     alpha       rho       phi 
19.649459  2.999448 17.175560  1.245646 
> vcov( cesLandLaborVrs )
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print( cesLandLaborBfgs )
$par
    gamma     alpha       rho 
 47.10913 561.14577 149.76314 

$value
[1] 165832.4

$counts
function gradient 
      31        8 

$convergence
[1] 0

$message
NULL

$hessian
            gamma       alpha          rho
gamma 37434.99411 20.98467607 -497.7089204
alpha    20.98468  0.01176313   -0.2789976
rho    -497.70892 -0.27899764    6.6172004

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

attr(,"class")
[1] "cesEst" "list"  
> coef( cesLandLaborBfgs )
    gamma     alpha       rho 
 47.10913 561.14577 149.76314 
> vcov( cesLandLaborBfgs )
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> 
> # using the L-BFGS-B optimization method with constrained alpha
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print( cesLandLaborBfgsCon )
$par
    gamma     alpha       rho 
49.142950  1.000000  4.610031 

$value
[1] 165832.4

$counts
function gradient 
      50       50 

$convergence
[1] 52

$message
[1] "ERROR: ABNORMAL_TERMINATION_IN_LNSRCH"

$hessian
              gamma        alpha           rho
gamma  3.440056e+04 3.667095e+05 -9.065424e-08
alpha  3.667095e+05 3.909125e+06  1.642427e+00
rho   -9.065424e-08 1.642427e+00 -1.543764e-08

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

attr(,"class")
[1] "cesEst" "list"  
> coef( cesLandLaborBfgsCon )
    gamma     alpha       rho 
49.142950  1.000000  4.610031 
> vcov( cesLandLaborBfgsCon )
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print( cesLandInt )
$par
     gamma      alpha        rho 
39.8571749  0.6649561 -1.9327816 

$value
[1] 166073.7

$counts
function gradient 
      92       NA 

$convergence
[1] 0

$message
NULL

$hessian
            gamma    alpha        rho
gamma    52409.08 -1621376   223791.2
alpha -1621376.31 50213665 -6953893.1
rho     223791.21 -6953893   965838.5

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

attr(,"class")
[1] "cesEst" "list"  
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print( cesLandIntVrs )
$par
    gamma     alpha       rho       phi 
37.492672  1.319760 -0.983313  1.173182 

$value
[1] 104671.2

$counts
function gradient 
     233       NA 

$convergence
[1] 0

$message
NULL

$hessian
            gamma      alpha         rho        phi
gamma    59345.55   -1943323   -626335.3    6998875
alpha -1943322.55   63619491  20405476.5 -228918432
rho    -626335.30   20405477   6566019.3  -73735641
phi    6998875.38 -228918432 -73735640.8  826624532

$vcov
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

attr(,"class")
[1] "cesEst" "list"  
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print( cesLandIntBfgs )
$par
    gamma     alpha       rho 
 55.44507 336.65007 -48.22737 

$value
[1] 165832.4

$counts
function gradient 
      50       11 

$convergence
[1] 0

$message
NULL

$hessian
           gamma       alpha         rho
gamma 27024.8177 -92.2898068 -3748.78503
alpha   -92.2898   0.3151814    12.80202
rho   -3748.7850  12.8020166   520.01085

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

attr(,"class")
[1] "cesEst" "list"  
> 
> # using the L-BFGS-B optimization method with constrained alpha
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print( cesLandIntBfgsCon )
$par
     gamma      alpha        rho 
37.6795833  0.2614992 -5.0497881 

$value
[1] 165832.4

$counts
function gradient 
     128      128 

$convergence
[1] 1

$message
[1] "NEW_X"

$hessian
            gamma    alpha        rho
gamma    58516.71 -1669731   115977.4
alpha -1669730.81 47646708 -3309396.8
rho     115977.37 -3309397   229869.6

$vcov
            gamma        alpha          rho
gamma  0.57828914 0.0071670102 -0.188585046
alpha  0.00716701 0.0006306428  0.005463255
rho   -0.18858505 0.0054632549  0.173805806

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

attr(,"class")
[1] "cesEst" "list"  
> 

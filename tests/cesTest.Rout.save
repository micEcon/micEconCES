
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-7)
Loading required package: minpack.lm
Loading required package: DEoptim
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor (Nelder-Mead)
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "NM" )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$rss
[1] 165914.1

$cov.unscaled
           gamma        delta         rho
gamma 51681024.1 -180250.3889 -949936.086
delta  -180250.4     628.6881    3313.548
rho    -949936.1    3313.5476   17468.864

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  1.003e+02  6.548e+05  1.53e-04        1
delta  6.909e-02  2.284e+03  3.03e-05        1
rho   -3.746e+00  1.204e+04 -3.11e-04        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428730578760 -1495304223 -7880390441
delta  -1495304223     5215412    27488217
rho    -7880390441    27488217   144916561
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654775.212  1.531062e-04 0.9998778
delta   0.06909165   2283.728  3.025389e-05 0.9999759
rho    -3.74630543  12038.129 -3.112033e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale (Nelder-Mead)
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180

$rss
[1] 83794.05

$cov.unscaled
             gamma         delta           rho            nu
gamma 343.31007871 -1.045707e-01 -2.2492500342  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
nu      0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
    gamma     delta       rho        nu 
233.84853   0.01535  -1.86100   1.43203 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
nu       1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

> coef( cesLandLaborVrs )
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho           nu
gamma 1438367.1567 -438.12004121 -9423.688895 188.41146051
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
nu        188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194557  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
nu      1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$rss
[1] 610748.6

$cov.unscaled
            gamma        delta          rho
gamma 1034.396377 -2.569522629 -3.466063908
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.70 -78466.6193 -105844.6864
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$rss
[1] 177510.9

$cov.unscaled
             gamma         delta          rho
gamma 11108.427498 -2.1880051887 -92.89635405
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896354  0.0183133367   0.77803366

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.899718 

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593373.54 -19419.743516 -824505.9831
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540886    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419597  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099185 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939

$rss
[1] 165843.9

$cov.unscaled
           gamma       delta         rho
gamma 1713990506 -7740272.06 -39478894.2
delta   -7740272    34955.27    178300.3
rho    -39478894   178300.28    909704.6

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47345  0.07176 -4.39599 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.947e+01  3.770e+06  2.37e-05        1
delta  7.176e-02  1.703e+04  4.21e-06        1
rho   -4.396e+00  8.685e+04 -5.06e-05        1

Residual standard error: 91.06148 
Multiple R-squared: 0.906309 

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.421274e+13 -64183833425 -327366628335
delta -6.418383e+10    289855849    1478500402
rho   -3.273666e+11   1478500402    7543446583
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47345267 3769978.90  2.373314e-05 0.9999811
delta  0.07175508   17025.15  4.214651e-06 0.9999966
rho   -4.39599297   86853.02 -5.061417e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B" )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      66       66 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$iter
function gradient 
      66       66 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.800580e+00 -3.879189e-02 -2.783350e+11
delta -3.879189e-02  8.357862e-04  6.048757e+09
rho   -2.783350e+11  6.048757e+09  1.636011e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 66 function and 66 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.222e+02     0.402    0.688
delta  1.000e+00  2.632e+00     0.380    0.704
rho   -9.999e-01  3.683e+13 -2.71e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborBfgsCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.492972e+04 -3.216476e+02 -2.307848e+15
delta -3.216476e+02  6.930020e+00  5.015399e+13
rho   -2.307848e+15  5.015399e+13  1.356518e+27
> coef( summary( cesLandLaborBfgsCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.221872e+02  4.021938e-01 0.6875414
delta  1.0000000 2.632493e+00  3.798680e-01 0.7040434
rho   -0.9999222 3.683094e+13 -2.714897e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.015804                                  
2     17 0.051750 -3 -0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$rss
[1] 2.128614e+18

$cov.unscaled
              gamma         delta           rho
gamma  5.725090e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.0006662873

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.448e-03  -3.486 0.000490 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.448074e-03 -3.4860859 0.0004901436
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$rss
[1] 3.337947e+13

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
nu     3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho         nu 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.001270271

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  3.626e-02  -1.296    0.195    
nu     1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 
Multiple R-squared: -18857212 

> coef( cesLandLaborKmenta )
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 3.626408e-02 -1.29648715 1.948077e-01
nu     1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.61969669587125, 4.8555657017719, -0.461292104597317 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$rss
[1] 122985.2

$cov.unscaled
            gamma       delta          rho
gamma  13.9283784 -15.9958960  0.286083732
delta -15.9958960  18.3706647 -0.328580667
rho     0.2860837  -0.3285807  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.237 -98362.943  1759.20360
delta -98362.943 112966.016 -2020.52836
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658910  0.008951365 0.9928579
delta  4.8555657 336.104174  0.014446609 0.9884737
rho   -0.4612921   6.012499 -0.076722194 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168475.9

$nlm$estimate
[1] 274.353181715   0.000952076  -4.038093245

$nlm$gradient
[1] -3.539155e+02 -2.778149e+07  4.836406e+04

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967

$residuals
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101

$rss
[1] 168475.9

$cov.unscaled
              gamma         delta           rho
gamma 116890.897642 -3.9407087159 -1.405139e+03
delta     -3.940709  0.0001329177  4.741141e-02
rho    -1405.139376  0.0474114129  1.691587e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
     gamma      delta        rho 
274.353182   0.000952  -4.038093 

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.744e+02  3.138e+04   0.009    0.993
delta  9.521e-04  1.058e+00   0.001    0.999
rho   -4.038e+00  3.775e+02  -0.011    0.991

Residual standard error: 91.78123 
Multiple R-squared: 0.9048222 

> coef( cesLandLaborNewton )
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 
> vcov( cesLandLaborNewton )
             gamma         delta           rho
gamma 984664868.80 -33195.719333 -11836604.964
delta    -33195.72      1.119672       399.384
rho   -11836604.96    399.383986    142495.827
> coef( summary( cesLandLaborNewton ) )
           Estimate   Std. Error       t value Pr(>|t|)
gamma 274.353181715 31379.370115  0.0087431067 0.993024
delta   0.000952076     1.058145  0.0008997592 0.999282
rho    -4.038093245   377.486195 -0.0106973270 0.991465
> fitted( cesLandLaborNewton )
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967
> residuals( cesLandLaborNewton )
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "iteration limit reached without convergence (9)"

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     197      151 


$coefficients
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725

$residuals
 [1] -203.802738 -226.519270 -143.750409  -52.344484  -46.024917  -54.056558
 [7]  -33.925631   12.328883  -29.703239   -2.737800   45.046540   72.896126
[13]   46.209965  114.060771   95.715991   59.366706    6.798830   32.662118
[19]   53.911863   56.169127

$rss
[1] 165832.5

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
   gamma    delta      rho 
79.48222  0.05599 -5.99521 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.48222         NA      NA       NA
delta  0.05599         NA      NA       NA
rho   -5.99521         NA      NA       NA

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

> coef( cesLandLaborPort )
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 79.48222273         NA      NA       NA
delta  0.05599207         NA      NA       NA
rho   -5.99520773         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725
> residuals( cesLandLaborPort )
 [1] -203.802738 -226.519270 -143.750409  -52.344484  -46.024917  -54.056558
 [7]  -33.925631   12.328883  -29.703239   -2.737800   45.046540   72.896126
[13]   46.209965  114.060771   95.715991   59.366706    6.798830   32.662118
[19]   53.911863   56.169127
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$message
[1] "both X-convergence and relative convergence (5)"

$nlminb$iterations
[1] 68

$nlminb$evaluations
function gradient 
     109       68 


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$iter
[1] 68

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.329859e+00 -2.856661e-02  3.089893e+10
delta -2.856661e-02  6.136682e-04 -7.059028e+08
rho    3.089893e+10 -7.059028e+08  4.030348e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence achieved after 68 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.050e+02     0.468    0.640
delta  1.000e+00  2.256e+00     0.443    0.658
rho   -1.000e+00  5.781e+13 -1.73e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborPortCon )
   gamma    delta      rho 
49.14295  1.00000 -1.00000 
> vcov( cesLandLaborPortCon )
              gamma         delta           rho
gamma  1.102669e+04 -2.368634e+02  2.562021e+14
delta -2.368634e+02  5.088303e+00 -5.853076e+12
rho    2.562021e+14 -5.853076e+12  3.341811e+27
> coef( summary( cesLandLaborPortCon ) )
      Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.14295 1.050080e+02  4.679923e-01 0.6397901
delta  1.00000 2.255727e+00  4.433161e-01 0.6575371
rho   -1.00000 5.780840e+13 -1.729853e-14 1.0000000
> fitted( cesLandLaborPortCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborPortCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained by hand
> cesLandLaborPortCon2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0.1, 0.1, -0.5 ), upper = c( 300, 0.9, 4 ) )
> print.default( cesLandLaborPortCon2 )
$nlminb
$nlminb$par
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$nlminb$objective
[1] 174341.5

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 37

$nlminb$evaluations
function gradient 
      71       38 


$coefficients
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0.1  0.1 -0.5

$upper
[1] 300.0   0.9   4.0

$fitted.values
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552

$residuals
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776

$rss
[1] 174341.5

$cov.unscaled
           gamma       delta        rho
gamma 261.317656 -4.43884282 -16.513536
delta  -4.438843  0.07540909   0.280593
rho   -16.513536  0.28059303   1.044383

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Coefficients:
gamma delta   rho 
57.69  0.90 -0.50 

> summary( cesLandLaborPortCon2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence achieved after 37 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    57.69    1509.28   0.038    0.970
delta     0.90      25.64   0.035    0.972
rho      -0.50      95.41  -0.005    0.996

Residual standard error: 93.36527 
Multiple R-squared: 0.9015085 

> coef( cesLandLaborPortCon2 )
   gamma    delta      rho 
57.69045  0.90000 -0.50000 
> vcov( cesLandLaborPortCon2 )
           gamma       delta         rho
gamma 2277925.28 -38693.7203 -143949.714
delta  -38693.72    657.3466    2445.950
rho   -143949.71   2445.9501    9103.968
> coef( summary( cesLandLaborPortCon2 ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 57.69045 1509.27972  0.038223827 0.9695092
delta  0.90000   25.63877  0.035103086 0.9719975
rho   -0.50000   95.41471 -0.005240282 0.9958189
> fitted( cesLandLaborPortCon2 )
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552
> residuals( cesLandLaborPortCon2 )
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 

$nlminb$objective
[1] 63124.96

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 112

$nlminb$evaluations
function gradient 
     200      113 


$coefficients
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 

$iter
[1] 112

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1060.701 1103.177 1118.125 1156.391 1156.391 1163.854 1180.336 1212.395
 [9] 1168.744 1246.564 1279.700 1560.776 1634.139 1664.915 1612.570 1596.515
[17] 1690.939 1770.388 1889.620 2001.560

$residuals
 [1] -114.568258 -140.446314  -48.546123   15.405042   21.724608   21.956020
 [7]   59.021761   76.166321   38.962195   31.844934   80.892399  -19.992192
[13]  -59.104303   31.043896   32.118626   29.515669  -35.899308  -14.788462
[19]   -2.199407   -9.665539

$rss
[1] 63124.96

$cov.unscaled
            gamma         delta           rho            nu
gamma 84.91805761 -3.078676e-01 -0.5866017859  2.459042e-02
delta -0.30786760  1.116635e-03  0.0021272016 -9.074794e-05
rho   -0.58660179  2.127202e-03  0.0040565995 -1.665438e-04
nu     0.02459042 -9.074794e-05 -0.0001665438  1.892731e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
80.0678  0.2195 -0.4769  1.8953 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 112 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  80.0678   517.7088   0.155    0.877    
delta   0.2195     1.8773   0.117    0.907    
rho    -0.4769     3.5782  -0.133    0.894    
nu      1.8953     0.2444   7.754 8.89e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 56.18049 
Multiple R-squared: 0.9643385 

> coef( cesLandLaborPortVrs )
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 
> vcov( cesLandLaborPortVrs )
             gamma       delta           rho          nu
gamma 268022.44453 -971.706488 -1851.4606793 77.61345522
delta   -971.70649    3.524378     6.7139757 -0.28642301
rho    -1851.46068    6.713976    12.8036339 -0.52565360
nu        77.61346   -0.286423    -0.5256536  0.05973928
> coef( summary( cesLandLaborPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma 80.0677761 517.7088415  0.1546579 8.770910e-01
delta  0.2194690   1.8773326  0.1169047 9.069356e-01
rho   -0.4768859   3.5782166 -0.1332747 8.939761e-01
nu     1.8952546   0.2444162  7.7542098 8.889523e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060.701 1103.177 1118.125 1156.391 1156.391 1163.854 1180.336 1212.395
 [9] 1168.744 1246.564 1279.700 1560.776 1634.139 1664.915 1612.570 1596.515
[17] 1690.939 1770.388 1889.620 2001.560
> residuals( cesLandLaborPortVrs )
 [1] -114.568258 -140.446314  -48.546123   15.405042   21.724608   21.956020
 [7]   59.021761   76.166321   38.962195   31.844934   80.892399  -19.992192
[13]  -59.104303   31.043896   32.118626   29.515669  -35.899308  -14.788462
[19]   -2.199407   -9.665539
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 

$nlminb$objective
[1] 62517.76

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 134

$nlminb$evaluations
function gradient 
     200      134 


$coefficients
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 

$iter
[1] 134

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1059.048 1102.140 1117.825 1155.308 1155.308 1163.336 1180.830 1212.065
 [9] 1167.930 1245.339 1279.118 1558.854 1632.880 1664.747 1612.493 1597.120
[17] 1691.510 1770.592 1888.489 1998.352

$residuals
 [1] -112.914638 -139.409985  -48.245965   16.488941   22.808508   22.474488
 [7]   58.527815   76.496178   39.775818   33.069720   81.475039  -18.069687
[13]  -57.845352   31.212481   32.196168   28.910862  -36.469896  -14.992671
[19]   -1.068487   -6.458481

$rss
[1] 62517.76

$cov.unscaled
            gamma         delta           rho            nu
gamma 42.01676500 -0.3023356595 -0.4179123283  1.740919e-02
delta -0.30233566  0.0021765420  0.0030076549 -1.280465e-04
rho   -0.41791233  0.0030076549  0.0041604290 -1.706208e-04
nu     0.01740919 -0.0001280465 -0.0001706208  1.894048e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
48.2939  0.3821 -0.2189  1.8856 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 134 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  48.2939   362.4082   0.133    0.894    
delta   0.3821     2.6084   0.146    0.884    
rho    -0.2189     3.6062  -0.061    0.952    
nu      1.8856     0.2433   7.750 9.22e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 55.90964 
Multiple R-squared: 0.9646816 

> coef( cesLandLaborPortVrsCon )
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 
> vcov( cesLandLaborPortVrsCon )
             gamma        delta           rho          nu
gamma 131339.69760 -945.0673818 -1306.3470929 54.41918430
delta   -945.06738    6.8036263     9.4015920 -0.40025892
rho    -1306.34709    9.4015920    13.0050348 -0.53334161
nu        54.41918   -0.4002589    -0.5333416  0.05920582
> coef( summary( cesLandLaborPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 48.2938824 362.4081920  0.13325825 8.939891e-01
delta  0.3820741   2.6083762  0.14647969 8.835427e-01
rho   -0.2189011   3.6062494 -0.06070048 9.515977e-01
nu     1.8856453   0.2433225  7.74957346 9.220173e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1059.048 1102.140 1117.825 1155.308 1155.308 1163.336 1180.830 1212.065
 [9] 1167.930 1245.339 1279.118 1558.854 1632.880 1664.747 1612.493 1597.120
[17] 1691.510 1770.592 1888.489 1998.352
> residuals( cesLandLaborPortVrsCon )
 [1] -112.914638 -139.409985  -48.245965   16.488941   22.808508   22.474488
 [7]   58.527815   76.496178   39.775818   33.069720   81.475039  -18.069687
[13]  -57.845352   31.212481   32.196168   28.910862  -36.469896  -14.992671
[19]   -1.068487   -6.458481
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3 
160.0513531   0.2687823  -0.9985351 

$optim$bestval
[1] 216542.7

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1        par2       par3
1   7.669117e+08 0.245723678  7.0534873
2   2.503711e+08 0.914438187  3.6719344
3   2.649192e+08 0.821805460  7.6490971
4   2.649192e+08 0.729747761  7.6490971
5   7.717613e+07 0.480601294  7.4993169
6   2.581897e+07 0.144394098  4.6242231
7   2.581897e+07 0.144394098  4.9995515
8   2.581897e+07 0.144394098  4.9995515
9   2.581897e+07 0.144394098  4.9995515
10  5.470893e+06 0.321715235  3.4349311
11  5.470893e+06 0.321715235  4.0132942
12  5.470893e+06 0.184993567  4.8244657
13  5.470893e+06 0.184993567  4.8244657
14  9.257941e+05 0.403647579  3.5557293
15  9.257941e+05 0.403647579  3.5557293
16  9.257941e+05 0.064124345  5.5582414
17  9.257941e+05 0.064124345  5.5582414
18  9.257941e+05 0.064124345  6.2698860
19  9.257941e+05 0.064124345  6.2698860
20  9.257941e+05 0.064124345  8.9703898
21  9.257941e+05 0.064124345  9.0010572
22  9.257941e+05 0.001104882  9.5445145
23  9.257941e+05 0.001104882  9.5445145
24  9.257941e+05 0.001104882  9.5445145
25  8.557409e+05 0.125925355  6.5728778
26  8.557409e+05 0.074193430  7.2068535
27  4.449424e+03 0.552605702  6.4662878
28  4.449424e+03 0.552605702  6.4662878
29  4.449424e+03 0.552605702  6.4662878
30  4.449424e+03 0.552605702  6.6650755
31  4.449424e+03 0.552605702  6.6650755
32  4.449424e+03 0.433877652  6.9824982
33  4.449424e+03 0.065664035  2.4258247
34  4.449424e+03 0.065664035  2.4258247
35  1.194638e+02 0.886389319  4.0569264
36  1.194638e+02 0.886389319  3.7163544
37  1.194638e+02 0.886389319  3.7163544
38  1.194638e+02 0.886389319  3.7163544
39  1.194638e+02 0.902019888  3.7163544
40  1.194638e+02 0.902019888  3.7163544
41  1.194638e+02 0.923893241  3.3757897
42  1.194638e+02 0.923893241  3.3757897
43  1.194638e+02 0.923893241  3.3757897
44  1.194638e+02 0.888254677  3.3741628
45  1.194638e+02 0.888254677  3.3741628
46  7.790524e+01 0.949506183  1.2907069
47  7.790524e+01 0.949506183  1.2907069
48  6.184101e+02 0.196425845  8.4236672
49  5.938553e+02 0.447418319  7.8331530
50  5.938553e+02 0.830990411  8.0517411
51  5.938553e+02 0.830990411  8.0517411
52  6.184101e+02 0.195433385  0.6010081
53  6.184101e+02 0.195433385  0.6010081
54  7.362371e+02 0.621386936  4.8552753
55  7.362371e+02 0.621386936  4.8552753
56  7.362371e+02 0.621386936  5.2886764
57  7.362371e+02 0.621386936  5.2886764
58  7.362371e+02 0.621386936  5.2886764
59  7.362371e+02 0.621386936  5.2886764
60  7.362371e+02 0.621386936  5.2886764
61  7.362371e+02 0.642656705  5.2909882
62  7.362371e+02 0.668149280  5.2909882
63  7.362371e+02 0.668149280  5.2909882
64  7.362371e+02 0.668149280  5.1656040
65  7.362371e+02 0.668149280  5.1656040
66  7.362371e+02 0.668149280  5.1656040
67  8.446066e+02 0.552250566  9.3437680
68  8.925635e+02 0.175771792  8.0839695
69  8.925635e+02 0.175771792  8.0839695
70  8.925635e+02 0.175771792  8.0839695
71  8.925635e+02 0.175771792  8.0839695
72  8.836832e+02 0.269244833  7.9287384
73  8.836832e+02 0.269244833  7.9287384
74  8.756722e+02 0.374298121  9.5601136
75  8.509916e+02 0.451164364  8.0950855
76  8.509916e+02 0.451164364  8.0950855
77  7.811380e+02 0.795512009  9.8978953
78  8.740773e+02 0.139931010  3.1256640
79  8.740773e+02 0.139931010  3.1256640
80  6.572685e+02 0.387476712  1.3601892
81  6.642037e+02 0.444085589  1.7578960
82  6.642037e+02 0.444085589  1.7578960
83  7.198960e+02 0.256788940  1.1758272
84  7.198960e+02 0.256788940  1.1758272
85  7.198960e+02 0.256788940  1.1758272
86  7.198960e+02 0.256788940  1.1758272
87  7.198960e+02 0.256788940  1.1758272
88  7.198960e+02 0.256788940  1.1758272
89  7.198960e+02 0.256788940  1.1758272
90  6.611257e+02 0.511784118  2.1429697
91  6.611257e+02 0.511784118  2.1429697
92  6.611257e+02 0.511784118  2.1429697
93  6.872175e+02 0.461330262  2.1429697
94  6.872175e+02 0.461330262  2.1429697
95  7.192568e+02 0.137262915  0.4090051
96  7.192568e+02 0.137262915  0.4090051
97  7.192568e+02 0.137262915  0.4090051
98  7.192568e+02 0.137262915  0.4090051
99  7.192568e+02 0.137262915  0.4090051
100 7.192568e+02 0.137262915  0.4090051
101 7.192568e+02 0.137262915  0.4090051
102 7.192568e+02 0.137262915  0.4090051
103 7.192568e+02 0.137262915  0.4090051
104 6.195247e+02 0.167098512  0.0961163
105 6.390759e+02 0.157624265  0.2381694
106 6.390759e+02 0.157624265  0.2381694
107 6.390759e+02 0.157624265  0.2381694
108 6.390759e+02 0.157624265  0.2381694
109 6.390759e+02 0.157624265  0.2381694
110 6.800827e+02 0.055430269 -0.3566119
111 6.800827e+02 0.055430269 -0.3566119
112 5.941365e+02 0.167098512  0.0961163
113 5.941365e+02 0.167098512  0.0961163
114 5.941365e+02 0.167098512  0.0961163
115 5.668473e+02 0.102025734 -0.4301706
116 5.668473e+02 0.102025734 -0.4301706
117 5.668473e+02 0.102025734 -0.4301706
118 5.668473e+02 0.102025734 -0.3813205
119 4.512835e+02 0.202957845 -0.1678179
120 4.512835e+02 0.202957845 -0.1678179
121 4.512835e+02 0.202957845 -0.1678179
122 4.512835e+02 0.202957845 -0.1678179
123 4.512835e+02 0.202957845 -0.1678179
124 4.512835e+02 0.202957845 -0.1678179
125 4.512835e+02 0.202957845 -0.1678179
126 4.512835e+02 0.202957845 -0.1678179
127 4.512835e+02 0.202957845 -0.1678179
128 4.512835e+02 0.202957845 -0.1678179
129 4.512835e+02 0.202957845 -0.1678179
130 3.425245e+02 0.264205654 -0.1678179
131 3.425245e+02 0.264205654 -0.1678179
132 2.218888e+02 0.244662243 -0.8159113
133 2.111190e+02 0.280260156 -0.7617900
134 2.111190e+02 0.280260156 -0.7617900
135 2.111190e+02 0.280260156 -0.7617900
136 2.063562e+02 0.244662243 -0.8159113
137 2.063562e+02 0.244662243 -0.8159113
138 2.063562e+02 0.244662243 -0.8159113
139 2.063562e+02 0.244662243 -0.8940766
140 2.063562e+02 0.244662243 -0.8940766
141 2.063562e+02 0.244662243 -0.8940766
142 2.063562e+02 0.244662243 -0.8940766
143 2.063562e+02 0.244662243 -0.8940766
144 2.063562e+02 0.244662243 -0.8940766
145 2.063562e+02 0.244662243 -0.8940766
146 2.063562e+02 0.244662243 -0.8940766
147 2.063562e+02 0.244662243 -0.8940766
148 2.063562e+02 0.244662243 -0.8940766
149 2.063562e+02 0.244662243 -0.8940766
150 2.063562e+02 0.244662243 -0.8940766
151 2.063562e+02 0.244662243 -0.8940766
152 2.063562e+02 0.244662243 -0.8940766
153 1.600514e+02 0.262906782 -0.9985351
154 1.600514e+02 0.262906782 -0.9985351
155 1.600514e+02 0.262906782 -0.9985351
156 1.600514e+02 0.262906782 -0.9985351
157 1.600514e+02 0.262906782 -0.9985351
158 1.600514e+02 0.262906782 -0.9985351
159 1.600514e+02 0.262906782 -0.9985351
160 1.600514e+02 0.262906782 -0.9985351
161 1.600514e+02 0.262906782 -0.9985351
162 1.600514e+02 0.262906782 -0.9985351
163 1.600514e+02 0.262906782 -0.9985351
164 1.600514e+02 0.262906782 -0.9985351
165 1.600514e+02 0.262906782 -0.9985351
166 1.600514e+02 0.262906782 -0.9985351
167 1.600514e+02 0.262906782 -0.9985351
168 1.600514e+02 0.262906782 -0.9985351
169 1.600514e+02 0.262906782 -0.9985351
170 1.600514e+02 0.262906782 -0.9985351
171 1.534867e+02 0.262906782 -0.9985351
172 1.534867e+02 0.262906782 -0.9985351
173 1.534867e+02 0.262906782 -0.9985351
174 1.534867e+02 0.262906782 -0.9985351
175 1.382624e+02 0.330881607 -0.9985351
176 1.382624e+02 0.330881607 -0.9985351
177 1.382624e+02 0.330881607 -0.9985351
178 1.600514e+02 0.274341092 -0.9985351
179 1.600514e+02 0.274341092 -0.9985351
180 1.600514e+02 0.274341092 -0.9985351
181 1.600514e+02 0.274341092 -0.9985351
182 1.600514e+02 0.274341092 -0.9985351
183 1.600514e+02 0.274341092 -0.9985351
184 1.600514e+02 0.274341092 -0.9985351
185 1.600514e+02 0.274341092 -0.9985351
186 1.600514e+02 0.274341092 -0.9985351
187 1.600514e+02 0.274341092 -0.9985351
188 1.600514e+02 0.268782266 -0.9985351
189 1.600514e+02 0.268782266 -0.9985351
190 1.600514e+02 0.268782266 -0.9985351
191 1.600514e+02 0.268782266 -0.9985351
192 1.600514e+02 0.268782266 -0.9985351
193 1.600514e+02 0.268782266 -0.9985351
194 1.600514e+02 0.268782266 -0.9985351
195 1.600514e+02 0.268782266 -0.9985351
196 1.600514e+02 0.268782266 -0.9985351
197 1.600514e+02 0.268782266 -0.9985351
198 1.600514e+02 0.268782266 -0.9985351
199 1.600514e+02 0.268782266 -0.9985351
200 1.600514e+02 0.268782266 -0.9985351

$member$bestvalit
  [1] 3.079378e+19 1.155879e+19 5.325244e+18 4.775801e+18 3.428288e+17
  [6] 3.383515e+16 3.383515e+16 3.383515e+16 3.383515e+16 1.616614e+15
 [11] 1.616614e+15 1.574174e+15 1.574174e+15 4.486623e+13 4.486623e+13
 [16] 4.234306e+13 4.234306e+13 4.222849e+13 4.222849e+13 4.196034e+13
 [21] 4.195822e+13 4.135388e+13 4.135388e+13 4.135388e+13 3.679640e+13
 [26] 3.608293e+13 8.222440e+08 8.222440e+08 8.222440e+08 8.148265e+08
 [31] 8.148265e+08 7.400919e+08 6.300117e+08 6.300117e+08 2.369031e+07
 [36] 2.369031e+07 2.369031e+07 2.369031e+07 2.369031e+07 2.369031e+07
 [41] 2.217226e+07 2.217226e+07 2.217226e+07 2.217226e+07 2.217226e+07
 [46] 5.809869e+06 5.809869e+06 4.920770e+06 4.761604e+06 2.573618e+06
 [51] 2.573618e+06 1.392740e+06 1.392740e+06 1.086020e+06 1.086020e+06
 [56] 1.086020e+06 1.086020e+06 1.086020e+06 1.086020e+06 1.086020e+06
 [61] 1.086020e+06 1.075843e+06 1.075843e+06 1.072419e+06 1.072419e+06
 [66] 1.072419e+06 1.071623e+06 1.071374e+06 1.071374e+06 1.071374e+06
 [71] 1.071374e+06 1.071302e+06 1.071302e+06 1.071046e+06 1.071022e+06
 [76] 1.071022e+06 1.071013e+06 1.070996e+06 1.070996e+06 1.069559e+06
 [81] 1.068048e+06 1.068048e+06 1.056288e+06 1.056288e+06 1.056288e+06
 [86] 1.056288e+06 1.056288e+06 1.056288e+06 1.056288e+06 1.056288e+06
 [91] 1.056288e+06 1.056288e+06 1.056288e+06 1.056288e+06 1.008319e+06
 [96] 1.008319e+06 1.008319e+06 1.008319e+06 1.008319e+06 1.008319e+06
[101] 1.008319e+06 1.008319e+06 1.008319e+06 9.639620e+05 9.639620e+05
[106] 9.639620e+05 9.639620e+05 9.639620e+05 9.639620e+05 9.082874e+05
[111] 9.082874e+05 8.932867e+05 8.932867e+05 8.932867e+05 7.968940e+05
[116] 7.968940e+05 7.968940e+05 7.413269e+05 6.959625e+05 6.959625e+05
[121] 6.959625e+05 6.959625e+05 6.959625e+05 6.959625e+05 6.959625e+05
[126] 6.959625e+05 6.959625e+05 6.959625e+05 6.959625e+05 6.959625e+05
[131] 6.959625e+05 5.940391e+05 5.940391e+05 5.940391e+05 5.940391e+05
[136] 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05
[141] 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05
[146] 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05 2.726842e+05
[151] 2.726842e+05 2.726842e+05 2.313402e+05 2.313402e+05 2.313402e+05
[156] 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05
[161] 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05
[166] 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05
[171] 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05 2.313402e+05
[176] 2.313402e+05 2.313402e+05 2.276535e+05 2.276535e+05 2.276535e+05
[181] 2.276535e+05 2.276535e+05 2.276535e+05 2.276535e+05 2.276535e+05
[186] 2.276535e+05 2.276535e+05 2.165427e+05 2.165427e+05 2.165427e+05
[191] 2.165427e+05 2.165427e+05 2.165427e+05 2.165427e+05 2.165427e+05
[196] 2.165427e+05 2.165427e+05 2.165427e+05 2.165427e+05 2.165427e+05

$member$pop
          [,1]        [,2]        [,3]
 [1,] 217.4405 0.521467693  0.09126259
 [2,] 188.3781 0.271105791 -0.81955171
 [3,] 680.0827 0.055430269 -0.35661195
 [4,] 160.0514 0.272168701 -0.99853509
 [5,] 830.1305 0.513047098  7.40466566
 [6,] 137.4427 0.496000614 -0.59120424
 [7,] 875.0373 0.256292904  6.12320896
 [8,] 196.5313 0.255789993 -0.84411581
 [9,] 782.0685 0.652284444  6.63535374
[10,] 187.5209 0.244446479 -0.94383942
[11,] 873.8060 0.374298121  9.56011365
[12,] 129.2349 0.610334488 -0.09760428
[13,] 405.5506 0.459305231  0.57399149
[14,] 566.8473 0.102025734 -0.38132049
[15,] 292.5796 0.277922513 -0.37571896
[16,] 815.9194 0.593463611  7.64257759
[17,] 841.4982 0.456461893  7.09495164
[18,] 848.0660 0.439160547  7.32822873
[19,] 167.7357 0.545932208 -0.06022333
[20,] 737.7885 0.611725569  4.47438018
[21,] 799.0721 0.469900340  4.58682797
[22,] 719.2568 0.137262915  0.40900505
[23,] 200.1625 0.444538772 -0.12437006
[24,] 402.0049 0.254939048 -0.13080373
[25,] 850.0530 0.448154102  7.98954869
[26,] 162.7278 0.527595001 -0.13392027
[27,] 810.6337 0.612549854  7.66101943
[28,] 865.2167 0.435946073  9.97157203
[29,] 846.9394 0.451365924  7.48805362
[30,] 901.2909 0.100501247  6.23763945
[31,] 126.0599 0.510588513 -0.38965596
[32,] 457.8935 0.260435917  0.03807075
[33,] 687.3331 0.183903821  0.56375003
[34,] 177.3444 0.465715449 -0.36215499
[35,] 206.3562 0.244662243 -0.81591128
[36,] 814.5704 0.676486201  9.67548810
[37,] 157.2329 0.282581882 -0.99628051
[38,] 678.3565 0.252194439  0.84245023
[39,] 515.5020 0.201395534  0.02430054
[40,] 315.1277 0.118089280 -0.96886866
[41,] 679.1272 0.183081436  0.43723912
[42,] 727.5238 0.691480078  5.09897693
[43,] 241.2211 0.264928203 -0.63337692
[44,] 146.8082 0.448045143 -0.56636456
[45,] 910.1037 0.050413008  9.46240696
[46,] 476.5538 0.166614659 -0.22672190
[47,] 883.6832 0.269244833  8.43351359
[48,] 240.7369 0.422550570 -0.13620114
[49,] 926.2750 0.007594499  8.61830675
[50,] 160.0514 0.268782266 -0.99853509

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho 
160.0513531   0.2687823  -0.9985351 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1173.863 1209.393 1229.263 1243.404 1243.404 1255.973 1282.830 1290.099
 [9] 1254.999 1299.087 1329.149 1481.051 1535.476 1578.336 1547.216 1557.983
[17] 1630.443 1695.718 1792.341 1881.662

$residuals
 [1] -227.730411 -246.662701 -159.684159  -71.607605  -65.288038  -70.163460
 [7]  -43.471948   -1.538535  -47.293180  -20.678303   31.444035   59.733567
[13]   39.559030  117.623500   97.472772   68.048342   24.596425   59.881833
[19]   95.079643  110.231930

$rss
[1] 216542.7

$cov.unscaled
            gamma       delta         rho
gamma 1343.653492 -4.94327066 -8.43311802
delta   -4.943271  0.01818981  0.03103901
rho     -8.433118  0.03103901  0.05298063

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho 
160.0514   0.2688  -0.9985 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  160.0514  3814.1737   0.042    0.967
delta    0.2688    14.0337   0.019    0.985
rho     -0.9985    23.9505  -0.042    0.967

Residual standard error: 104.0535 
Multiple R-squared: 0.8776675 

> coef( cesLandLaborDe )
      gamma       delta         rho 
160.0513531   0.2687823  -0.9985351 
> vcov( cesLandLaborDe )
            gamma       delta         rho
gamma 14547920.78 -53521.4699 -91306.5263
delta   -53521.47    196.9436    336.0636
rho     -91306.53    336.0636    573.6286
> coef( summary( cesLandLaborDe ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 160.0513531 3814.17367  0.04196226 0.9665288
delta   0.2687823   14.03366  0.01915269 0.9847193
rho    -0.9985351   23.95054 -0.04169154 0.9667446
> fitted( cesLandLaborDe )
 [1] 1173.863 1209.393 1229.263 1243.404 1243.404 1255.973 1282.830 1290.099
 [9] 1254.999 1299.087 1329.149 1481.051 1535.476 1578.336 1547.216 1557.983
[17] 1630.443 1695.718 1792.341 1881.662
> residuals( cesLandLaborDe )
 [1] -227.730411 -246.662701 -159.684159  -71.607605  -65.288038  -70.163460
 [7]  -43.471948   -1.538535  -47.293180  -20.678303   31.444035   59.733567
[13]   39.559030  117.623500   97.472772   68.048342   24.596425   59.881833
[19]   95.079643  110.231930
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
        par1         par2         par3         par4 
263.91392055   0.05274986  -0.35916321   2.34370118 

$optim$bestval
[1] 342009.6

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1        par2       par3        par4
1   6.072057e+08 0.947726940  6.9265590 1.422942956
2   4.583117e+08 0.685992327  6.0785526 0.411167650
3   2.556264e+08 0.065290795  8.4599537 1.533992904
4   2.556264e+08 0.065290795  8.2684295 1.533992904
5   2.556264e+08 0.065290795  8.2684295 1.533992904
6   3.529718e+07 0.628404804  5.0584923 1.060386596
7   3.529718e+07 0.628404804  5.0584923 1.060386596
8   3.529718e+07 0.628404804  5.0584923 0.744169314
9   3.529718e+07 0.628404804  4.3333330 0.703392139
10  3.529718e+07 0.628404804  4.3333330 0.703392139
11  3.529718e+07 0.628404804  4.3333330 0.703392139
12  3.529718e+07 0.628404804  4.3333330 0.703392139
13  3.529718e+07 0.628404804  4.3333330 0.703392139
14  3.529718e+07 0.628404804  4.3333330 0.703392139
15  3.529718e+07 0.628404804  4.3333330 0.703392139
16  3.529718e+07 0.628404804  4.3333330 0.703392139
17  5.456608e+06 0.035310636  5.0584923 1.060386596
18  5.456608e+06 0.035310636  5.0584923 1.060386596
19  5.456608e+06 0.012018583  5.0584923 1.060386596
20  5.456608e+06 0.012018583  5.0584923 1.060386596
21  5.456608e+06 0.012018583  5.1666209 1.060386596
22  2.527640e+06 0.023623324  8.6218093 1.262233380
23  1.004282e+06 0.094343968  6.6696235 0.813936419
24  1.004282e+06 0.094343968  6.6696235 0.813936419
25  1.004282e+06 0.031166521  6.6696235 0.813936419
26  1.004282e+06 0.031166521  6.6696235 0.813936419
27  1.004282e+06 0.013403559  6.7068841 0.813936419
28  1.004282e+06 0.013403559  6.7068841 0.813936419
29  1.004282e+06 0.013403559  6.7068841 0.813936419
30  1.004282e+06 0.013403559  8.7880609 0.197809495
31  1.004282e+06 0.013403559  8.7880609 0.197809495
32  1.004282e+06 0.013403559  8.7880609 0.197809495
33  1.004282e+06 0.013403559  8.7880609 0.197809495
34  1.004282e+06 0.006230527  6.7068841 0.197809495
35  1.004282e+06 0.006230527  6.7068841 0.197809495
36  1.004282e+06 0.006230527  6.7068841 0.197809495
37  1.004282e+06 0.006230527  6.7068841 0.005642342
38  6.851386e+05 0.195976740  9.6451616 0.481158536
39  3.689705e+04 0.305404785  1.3068544 0.239760070
40  3.689705e+04 0.288376042  1.3068544 0.239760070
41  3.689705e+04 0.288376042  1.3068544 0.239760070
42  3.689705e+04 0.288376042  1.3068544 0.239760070
43  1.311654e+04 0.378363055  7.9600793 0.497283719
44  1.311654e+04 0.378363055  7.9600793 0.497283719
45  1.311654e+04 0.378363055  7.9600793 0.497283719
46  1.311654e+04 0.378363055  7.9600793 0.480163501
47  1.311654e+04 0.378363055  7.9600793 0.364429219
48  1.311654e+04 0.378363055  7.9600793 0.364429219
49  1.311654e+04 0.378363055  7.9600793 0.364429219
50  1.311654e+04 0.378363055  7.9600793 0.236847242
51  1.311654e+04 0.378363055  7.9600793 0.236847242
52  1.311654e+04 0.378363055  7.9600793 0.236847242
53  9.844702e+03 0.189372677  3.0070196 0.208585366
54  9.844702e+03 0.189372677  3.0070196 0.208585366
55  9.844702e+03 0.189372677  4.1645592 0.049194652
56  9.844702e+03 0.189372677  4.1645592 0.049194652
57  9.844702e+03 0.189372677  4.1645592 0.049194652
58  7.401120e+02 0.233353340  8.3916038 0.194438733
59  7.401120e+02 0.233353340  8.3916038 0.194438733
60  7.401120e+02 0.233353340  8.3916038 0.194438733
61  7.401120e+02 0.293869306  8.3916038 0.312035007
62  7.401120e+02 0.293869306  8.3916038 0.312035007
63  7.401120e+02 0.394510979  8.3916038 0.312035007
64  7.401120e+02 0.233353340  8.3916038 0.480302822
65  7.401120e+02 0.145784114  6.7605750 0.463333547
66  7.401120e+02 0.145784114  6.7605750 0.463333547
67  7.401120e+02 0.145784114  6.7605750 0.463333547
68  7.401120e+02 0.145784114  6.7605750 0.463333547
69  7.401120e+02 0.398585677  8.7322552 0.480302822
70  7.401120e+02 0.418378392  8.7322552 0.480302822
71  7.401120e+02 0.418378392  8.7322552 0.480302822
72  7.401120e+02 0.418378392  6.4349494 0.480302822
73  7.401120e+02 0.418378392  6.4349494 0.480302822
74  7.401120e+02 0.418378392  6.4349494 0.480302822
75  7.401120e+02 0.418378392  6.4349494 0.480302822
76  7.401120e+02 0.675800381  6.4349494 0.480302822
77  7.401120e+02 0.675800381  6.4349494 0.621251698
78  7.401120e+02 0.675800381  6.4349494 0.621251698
79  7.401120e+02 0.675800381  6.4349494 0.621251698
80  7.401120e+02 0.675800381  6.4349494 1.003470458
81  7.401120e+02 0.675800381  6.4349494 1.003470458
82  7.401120e+02 0.675800381  6.4349494 1.003470458
83  7.401120e+02 0.675800381  6.4349494 1.003470458
84  7.401120e+02 0.675800381  6.4349494 1.003470458
85  7.401120e+02 0.675800381  6.4349494 1.003470458
86  7.401120e+02 0.675800381  6.4349494 1.003470458
87  7.401120e+02 0.675800381  6.4349494 1.003470458
88  4.717553e+02 0.856536388  9.0358076 1.612672394
89  4.717553e+02 0.856536388  9.0358076 1.612672394
90  4.717553e+02 0.856536388  9.0358076 1.612672394
91  4.717553e+02 0.856536388  9.0358076 1.612672394
92  4.717553e+02 0.856536388  9.0358076 1.612672394
93  4.717553e+02 0.856536388  9.0358076 1.612672394
94  4.717553e+02 0.856536388  9.0358076 1.612672394
95  4.717553e+02 0.856536388  9.0358076 1.612672394
96  4.717553e+02 0.856536388  9.0358076 1.612672394
97  4.717553e+02 0.856536388  9.0358076 1.612672394
98  4.717553e+02 0.856536388  9.0358076 1.612672394
99  4.717553e+02 0.856536388  9.0358076 1.612672394
100 4.717553e+02 0.856536388  9.0358076 1.612672394
101 4.717553e+02 0.856536388  9.0358076 1.612672394
102 4.717553e+02 0.856536388  9.0358076 1.612672394
103 4.717553e+02 0.856536388  9.0358076 1.612672394
104 4.717553e+02 0.845633596  7.6098691 1.612672394
105 4.717553e+02 0.845633596  7.6098691 1.612672394
106 4.717553e+02 0.845633596  7.6098691 1.612672394
107 4.717553e+02 0.845633596  7.6098691 1.612672394
108 4.717553e+02 0.845633596  7.6098691 1.612672394
109 4.717553e+02 0.845633596  7.6098691 1.612672394
110 3.805148e+02 0.845633596  7.6098691 1.900338857
111 3.805148e+02 0.845633596  7.6098691 1.900338857
112 3.805148e+02 0.845633596  7.6098691 1.900338857
113 3.805148e+02 0.845633596  7.6098691 1.900338857
114 3.805148e+02 0.845633596  7.6098691 1.900338857
115 3.805148e+02 0.845633596  7.6098691 1.900338857
116 3.805148e+02 0.845633596  7.6098691 1.900338857
117 3.805148e+02 0.845633596  7.6098691 1.900338857
118 3.805148e+02 0.845633596  7.6098691 1.900338857
119 3.805148e+02 0.845633596  7.6098691 1.900338857
120 3.805148e+02 0.845633596  7.6098691 1.900338857
121 3.805148e+02 0.845633596  7.6098691 1.900338857
122 3.805148e+02 0.845633596  7.6098691 1.900338857
123 3.805148e+02 0.845633596  7.6098691 1.900338857
124 3.805148e+02 0.845633596  7.6098691 1.900338857
125 3.805148e+02 0.845633596  7.6098691 1.900338857
126 3.805148e+02 0.845633596  7.6098691 1.900338857
127 3.805148e+02 0.845633596  7.6098691 1.900338857
128 3.805148e+02 0.845633596  7.6098691 1.900338857
129 3.805148e+02 0.845633596  7.6098691 1.900338857
130 3.805148e+02 0.845633596  7.6098691 1.900338857
131 3.805148e+02 0.845633596  7.6098691 1.900338857
132 3.805148e+02 0.845633596  7.6098691 1.900338857
133 3.805148e+02 0.845633596  7.6098691 1.900338857
134 3.805148e+02 0.845633596  7.6098691 1.900338857
135 3.805148e+02 0.845633596  7.6098691 1.900338857
136 3.805148e+02 0.845633596  7.6098691 1.900338857
137 3.805148e+02 0.845633596  7.6098691 1.900338857
138 3.805148e+02 0.845633596  7.6098691 1.900338857
139 3.805148e+02 0.845633596  7.6098691 1.900338857
140 3.805148e+02 0.845633596  7.6098691 1.900338857
141 3.805148e+02 0.845633596  7.6098691 1.900338857
142 3.805148e+02 0.845633596  7.6098691 1.900338857
143 3.805148e+02 0.845633596  7.6098691 1.900338857
144 3.805148e+02 0.845633596  7.6098691 1.900338857
145 3.805148e+02 0.845633596  7.2806514 1.900338857
146 3.805148e+02 0.845633596  7.2806514 1.900338857
147 3.805148e+02 0.845633596  7.2806514 1.900338857
148 3.805148e+02 0.845633596  7.2806514 1.900338857
149 3.805148e+02 0.845633596  7.2806514 1.900338857
150 3.805148e+02 0.845633596  7.2806514 1.900338857
151 3.805148e+02 0.845633596  7.2806514 1.900338857
152 3.805148e+02 0.845633596  7.2806514 1.900338857
153 3.805148e+02 0.845633596  7.2806514 1.900338857
154 3.805148e+02 0.845633596  7.2806514 1.900338857
155 3.805148e+02 0.845633596  7.2806514 1.900338857
156 3.805148e+02 0.845633596  7.2806514 1.900338857
157 3.805148e+02 0.845633596  7.2806514 1.900338857
158 3.805148e+02 0.845633596  7.2806514 1.900338857
159 3.805148e+02 0.838598309  7.2806514 1.900338857
160 3.836115e+02 0.838598309  7.2806514 1.900338857
161 3.836115e+02 0.838598309  7.2806514 1.900338857
162 3.836115e+02 0.838598309  7.2806514 1.900338857
163 3.836115e+02 0.838598309  7.2806514 1.900338857
164 3.836115e+02 0.838598309  7.2806514 1.900338857
165 3.836115e+02 0.838598309  7.2806514 1.900338857
166 3.836115e+02 0.838598309  7.2806514 1.900338857
167 3.836115e+02 0.838598309  7.2806514 1.900338857
168 3.836115e+02 0.838598309  7.2806514 1.900338857
169 3.836115e+02 0.838598309  7.2806514 1.900338857
170 3.836115e+02 0.838598309  7.2806514 1.900338857
171 3.836115e+02 0.838598309  7.2806514 1.900338857
172 3.836115e+02 0.838598309  7.2806514 1.900338857
173 3.836115e+02 0.838598309  7.2806514 1.900338857
174 3.836115e+02 0.838598309  7.2806514 1.900338857
175 3.836115e+02 0.838598309  7.2806514 1.900338857
176 3.836115e+02 0.838598309  7.2806514 1.900338857
177 3.836115e+02 0.838598309  7.2806514 1.900338857
178 3.836115e+02 0.838598309  7.2806514 1.900338857
179 3.836115e+02 0.838598309  7.2806514 1.900338857
180 3.309680e+02 0.838598309  9.4092148 2.241115691
181 2.836755e+02 0.078421386 -0.2811054 2.003786725
182 2.836755e+02 0.078421386 -0.2811054 2.003786725
183 2.836755e+02 0.078421386 -0.2811054 2.003786725
184 2.836755e+02 0.078421386 -0.2811054 2.003996562
185 2.836755e+02 0.078421386 -0.2811054 2.003996562
186 2.836755e+02 0.078421386 -0.2811054 2.003996562
187 3.057659e+02 0.078421386 -0.2811054 1.978636170
188 3.057659e+02 0.078421386 -0.2811054 1.978636170
189 3.057659e+02 0.078421386 -0.2811054 1.978636170
190 3.057659e+02 0.078421386 -0.2811054 1.978636170
191 3.057659e+02 0.078421386 -0.2811054 1.978636170
192 3.057659e+02 0.078421386 -0.2811054 1.978636170
193 3.057659e+02 0.078421386 -0.2811054 1.978636170
194 3.057659e+02 0.078421386 -0.2811054 1.978636170
195 3.057659e+02 0.078421386 -0.2811054 1.978636170
196 3.057659e+02 0.078421386 -0.2811054 1.978636170
197 3.057659e+02 0.078421386 -0.2811054 1.978636170
198 3.057659e+02 0.078421386 -0.2811054 1.978636170
199 2.639139e+02 0.052749856 -0.3591632 2.343701177
200 2.639139e+02 0.052749856 -0.3591632 2.343701177

$member$bestvalit
  [1] 8.736589e+19 7.051451e+18 5.212893e+18 5.212893e+18 5.212893e+18
  [6] 5.935039e+16 5.711176e+16 4.584081e+16 4.584081e+16 4.584081e+16
 [11] 2.591315e+16 4.582741e+15 4.582741e+15 4.582741e+15 4.582741e+15
 [16] 4.582741e+15 1.541070e+15 1.541070e+15 1.525730e+15 1.525730e+15
 [21] 1.525568e+15 3.925374e+14 4.204023e+13 4.204023e+13 4.156429e+13
 [26] 4.156429e+13 4.137945e+13 4.137945e+13 4.137945e+13 2.394593e+13
 [31] 2.394593e+13 2.394593e+13 2.394593e+13 2.394020e+13 2.394020e+13
 [36] 2.394020e+13 2.021493e+13 1.459717e+13 3.583575e+10 3.551837e+10
 [41] 3.551837e+10 3.551837e+10 4.740356e+09 4.740356e+09 4.740356e+09
 [46] 4.652524e+09 4.098895e+09 4.098895e+09 4.098895e+09 3.562594e+09
 [51] 3.562594e+09 3.562594e+09 1.818019e+09 1.818019e+09 4.095267e+07
 [56] 4.095267e+07 4.095267e+07 8.930599e+06 8.930599e+06 8.930599e+06
 [61] 7.742148e+06 7.742148e+06 7.632670e+06 6.232729e+06 6.232729e+06
 [66] 6.232729e+06 6.232729e+06 6.232729e+06 6.001284e+06 5.968122e+06
 [71] 5.968122e+06 2.632630e+06 2.632630e+06 2.632630e+06 2.632630e+06
 [76] 2.220949e+06 2.109981e+06 2.109981e+06 1.203031e+06 1.122748e+06
 [81] 1.122748e+06 1.085360e+06 1.085360e+06 9.150452e+05 8.251930e+05
 [86] 8.251930e+05 8.135294e+05 8.057984e+05 8.057984e+05 5.569362e+05
 [91] 5.569362e+05 5.569362e+05 4.590132e+05 4.590132e+05 4.590132e+05
 [96] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[101] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[106] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[111] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[116] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[121] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[126] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[131] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[136] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[141] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[146] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[151] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[156] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[161] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[166] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[171] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[176] 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05 4.590132e+05
[181] 4.291111e+05 4.291111e+05 4.291111e+05 4.284204e+05 4.251338e+05
[186] 4.251338e+05 3.436822e+05 3.436822e+05 3.436822e+05 3.436822e+05
[191] 3.436822e+05 3.436822e+05 3.436822e+05 3.436822e+05 3.436822e+05
[196] 3.436822e+05 3.436822e+05 3.436822e+05 3.420096e+05 3.420096e+05

$member$pop
          [,1]       [,2]       [,3]     [,4]
 [1,] 342.8971 0.86446672  9.7352509 2.194064
 [2,] 409.2846 0.41189656  3.9077816 2.177857
 [3,] 395.7725 0.69207519  7.0254717 2.118802
 [4,] 345.4278 0.49220456  5.2026479 2.474907
 [5,] 442.0561 0.58140321  9.5217480 2.185719
 [6,] 358.8595 0.77386405  7.3102454 2.150502
 [7,] 349.4653 0.70331687  6.0175222 2.176128
 [8,] 324.9679 0.53075901  8.7693259 2.839571
 [9,] 309.9095 0.19569546  0.4335106 1.951242
[10,] 372.2001 0.60478488  6.7187599 2.300319
[11,] 252.6244 0.84443716  7.8190508 2.548359
[12,] 267.6964 0.73501708  5.8113307 2.487587
[13,] 480.3495 0.63311777  7.8113481 1.885787
[14,] 263.9139 0.05274986 -0.3591632 2.343701
[15,] 384.8435 0.72678867  6.4744524 2.055658
[16,] 336.4184 0.52998602  5.1798933 2.459899
[17,] 235.9154 0.14868043  0.1553098 2.302653
[18,] 322.8741 0.56428703  5.9033793 2.534108
[19,] 416.6858 0.91166239  7.8096822 1.677437
[20,] 440.7001 0.59673461  9.4641054 2.196653
[21,] 362.9952 0.40800522  9.1004452 2.722575
[22,] 337.6344 0.50770842  5.2568407 2.495647
[23,] 443.6260 0.44881633  5.8219529 2.148877
[24,] 343.8653 0.55959585  3.6100073 2.123340
[25,] 308.4679 0.91771713  9.1977914 2.127110
[26,] 283.6755 0.07842139 -0.2811054 2.003787
[27,] 485.7274 0.46693021  7.8647142 2.055695
[28,] 363.5166 0.20746037  0.3843683 1.622102
[29,] 263.9139 0.05274986 -0.3591632 2.343701
[30,] 411.4532 0.02794727  1.3788201 2.732209
[31,] 348.3615 0.88816755  8.7264220 2.017088
[32,] 352.2780 0.94133850  8.6974242 1.826736
[33,] 271.3482 0.54902948  4.7972277 2.747314
[34,] 316.9530 0.56995072  5.4118514 2.504397
[35,] 220.0052 0.42804548  1.5879816 2.373901
[36,] 257.2984 0.78926157  6.2207149 2.504548
[37,] 166.3064 0.47391238  0.2375928 1.344708
[38,] 341.0614 0.95384136  8.5405767 1.797377
[39,] 458.5854 0.69104287  8.8492291 1.965826
[40,] 343.9296 0.73723482  6.7621234 2.174985
[41,] 443.7386 0.42726583  8.3720115 2.297335
[42,] 314.1942 0.73001230  6.1224404 2.294383
[43,] 379.7173 0.70913228  7.8538198 2.206052
[44,] 429.4983 0.62917415  7.8627859 2.118539
[45,] 425.6273 0.45509215  9.4732095 2.398829
[46,] 299.1660 0.07386839 -0.1262071 2.291225
[47,] 307.2051 0.54235619  5.3420390 2.608545
[48,] 237.7774 0.93414283  8.1290546 2.311795
[49,] 368.8520 0.78619887  6.4472027 1.977578
[50,] 315.0743 0.11633656 -0.0952272 1.819376

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
       gamma        delta          rho           nu 
263.91392055   0.05274986  -0.35916321   2.34370118 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1094.000 1121.122 1112.416 1179.339 1179.339 1167.867 1145.449 1211.299
 [9] 1183.318 1279.751 1290.456 1634.439 1675.646 1634.322 1584.188 1513.258
[17] 1558.147 1581.444 1615.282 1645.933

$residuals
 [1] -147.866663 -158.391581  -42.837127   -7.542367   -1.222800   17.943280
 [7]   93.908930   77.261971   24.388497   -1.342604   70.136388  -93.654549
[13] -100.611224   61.636925   60.501475  112.773263   96.892950  174.156032
[19]  272.138176  345.960775

$rss
[1] 342009.6

$cov.unscaled
             gamma         delta           rho            nu
gamma 491.72682413 -3.858597e-01 -2.5535689725  5.888947e-02
delta  -0.38585969  3.029268e-04  0.0020049396 -4.690107e-05
rho    -2.55356897  2.004940e-03  0.0132749151 -3.051594e-04
nu      0.05888947 -4.690107e-05 -0.0003051594  1.862390e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
    gamma     delta       rho        nu 
263.91392   0.05275  -0.35916   2.34370 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  263.91392 2899.78690   0.091    0.927    
delta    0.05275    2.27600   0.023    0.982    
rho     -0.35916   15.06676  -0.024    0.981    
nu       2.34370    0.56434   4.153 3.28e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 130.7688 
Multiple R-squared: 0.806787 

> coef( cesLandLaborDeVrs )
       gamma        delta          rho           nu 
263.91392055   0.05274986  -0.35916321   2.34370118 
> vcov( cesLandLaborDeVrs )
            gamma         delta           rho           nu
gamma 8408764.046 -6598.3853586 -43667.251634 1007.0380386
delta   -6598.385     5.1801936     34.285428   -0.8020307
rho    -43667.252    34.2854276    227.007401   -5.2183723
nu       1007.038    -0.8020307     -5.218372    0.3184777
> coef( summary( cesLandLaborDeVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 263.91392055 2899.7868966  0.09101149 9.274835e-01
delta   0.05274986    2.2760039  0.02317652 9.815095e-01
rho    -0.35916321   15.0667648 -0.02383811 9.809817e-01
nu      2.34370118    0.5643383  4.15300782 3.281335e-05
> fitted( cesLandLaborDeVrs )
 [1] 1094.000 1121.122 1112.416 1179.339 1179.339 1167.867 1145.449 1211.299
 [9] 1183.318 1279.751 1290.456 1634.439 1675.646 1634.322 1584.188 1513.258
[17] 1558.147 1581.444 1615.282 1645.933
> residuals( cesLandLaborDeVrs )
 [1] -147.866663 -158.391581  -42.837127   -7.542367   -1.222800   17.943280
 [7]   93.908930   77.261971   24.388497   -1.342604   70.136388  -93.654549
[13] -100.611224   61.636925   60.501475  112.773263   96.892950  174.156032
[19]  272.138176  345.960775
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
49.6171406  0.9899995 -0.9899983 

$optim$bestval
[1] 166012.8

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2       par3
1   44.26785 0.9316579 -0.8082296
2   44.26785 0.9316579 -0.8082296
3   44.26785 0.9316579 -0.8082296
4   44.26785 0.9316579 -0.8082296
5   44.26785 0.9316579 -0.8082296
6   44.26785 0.9316579 -0.8082296
7   44.26785 0.9316579 -0.8082296
8   44.26785 0.9486873 -0.8082296
9   44.26785 0.9486873 -0.8082296
10  44.26785 0.9486873 -0.8082296
11  44.26785 0.9486873 -0.9396623
12  44.26785 0.9486873 -0.9396623
13  46.11245 0.9486873 -0.9283431
14  46.11245 0.9486873 -0.9283431
15  46.11245 0.9486873 -0.9283431
16  47.05165 0.9486873 -0.8741085
17  47.05165 0.9776225 -0.8741085
18  48.45827 0.9776225 -0.8741085
19  48.45827 0.9776225 -0.8741085
20  48.45827 0.9776225 -0.8741085
21  49.64200 0.9776225 -0.8741085
22  49.64200 0.9776225 -0.8741085
23  49.64200 0.9851744 -0.6491656
24  49.64200 0.9851744 -0.6491656
25  49.64200 0.9851744 -0.6491656
26  49.64200 0.9882265 -0.6491656
27  49.64200 0.9882265 -0.6491656
28  49.64200 0.9882265 -0.7252476
29  49.64200 0.9882265 -0.7252476
30  49.64200 0.9882265 -0.7252476
31  49.64200 0.9882265 -0.7252476
32  49.64200 0.9882265 -0.7885219
33  49.64200 0.9882265 -0.7885219
34  49.64200 0.9882265 -0.7889154
35  49.64200 0.9882265 -0.7889154
36  49.64200 0.9882265 -0.7889154
37  49.79611 0.9887212 -0.6777529
38  49.79611 0.9887212 -0.6777529
39  49.79611 0.9887212 -0.6777529
40  49.79611 0.9887212 -0.6777529
41  49.87762 0.9887212 -0.6777529
42  49.87762 0.9887212 -0.6777529
43  49.85375 0.9887212 -0.6777529
44  49.85375 0.9887212 -0.6777529
45  49.85375 0.9889484 -0.6777529
46  49.76137 0.9889484 -0.7586113
47  49.77005 0.9889484 -0.7586113
48  49.80044 0.9889484 -0.7648602
49  49.80044 0.9889484 -0.7648602
50  49.80044 0.9889484 -0.7648602
51  49.80044 0.9889484 -0.8538413
52  49.71643 0.9890586 -0.9185103
53  49.71643 0.9890586 -0.9185103
54  49.70496 0.9890586 -0.9802516
55  49.70496 0.9882704 -0.9802516
56  49.70496 0.9882704 -0.9802516
57  49.70496 0.9882704 -0.9802516
58  49.70496 0.9882704 -0.9802516
59  49.70496 0.9883158 -0.9802516
60  49.70496 0.9883158 -0.9802516
61  49.70496 0.9883158 -0.9802516
62  49.70496 0.9883158 -0.9802516
63  49.66588 0.9888711 -0.9855297
64  49.66588 0.9888711 -0.9855297
65  49.65150 0.9891723 -0.9855297
66  49.65150 0.9891723 -0.9855297
67  49.65150 0.9891723 -0.9855297
68  49.65150 0.9891723 -0.9855297
69  49.65150 0.9891723 -0.9855297
70  49.65150 0.9891723 -0.9855297
71  49.65150 0.9891723 -0.9855297
72  49.65150 0.9891723 -0.9855297
73  49.65150 0.9891723 -0.9855297
74  49.66060 0.9891723 -0.9855297
75  49.66060 0.9891723 -0.9855297
76  49.66060 0.9891723 -0.9855297
77  49.66060 0.9891723 -0.9855297
78  49.66060 0.9891723 -0.9877668
79  49.66060 0.9891723 -0.9877668
80  49.66060 0.9891723 -0.9877668
81  49.66060 0.9891723 -0.9877668
82  49.65464 0.9891723 -0.9887609
83  49.65464 0.9891723 -0.9887609
84  49.65464 0.9891723 -0.9887609
85  49.65464 0.9893623 -0.9887609
86  49.65464 0.9893623 -0.9887609
87  49.64979 0.9893623 -0.9887609
88  49.64979 0.9893623 -0.9887609
89  49.64979 0.9893623 -0.9887609
90  49.64979 0.9893623 -0.9887609
91  49.64979 0.9893623 -0.9887609
92  49.64979 0.9893623 -0.9887609
93  49.64979 0.9895720 -0.9887609
94  49.64979 0.9895720 -0.9887609
95  49.64979 0.9895720 -0.9887609
96  49.64979 0.9895720 -0.9887609
97  49.63928 0.9895720 -0.9887609
98  49.63928 0.9895720 -0.9887609
99  49.63928 0.9895720 -0.9887609
100 49.64066 0.9896858 -0.9890033
101 49.64066 0.9896858 -0.9890033
102 49.64066 0.9896858 -0.9890033
103 49.64066 0.9896858 -0.9890033
104 49.63647 0.9897100 -0.9896834
105 49.63647 0.9897516 -0.9896834
106 49.63647 0.9897516 -0.9896834
107 49.63647 0.9897516 -0.9896834
108 49.63647 0.9897516 -0.9896834
109 49.63647 0.9897516 -0.9896834
110 49.62960 0.9898059 -0.9896237
111 49.62960 0.9898059 -0.9898160
112 49.62960 0.9898178 -0.9898160
113 49.62420 0.9898394 -0.9898160
114 49.62420 0.9898394 -0.9898160
115 49.62420 0.9898400 -0.9899892
116 49.62420 0.9898400 -0.9899892
117 49.62420 0.9898400 -0.9899892
118 49.62420 0.9898400 -0.9899892
119 49.62420 0.9898400 -0.9899892
120 49.62420 0.9898400 -0.9899892
121 49.62420 0.9898400 -0.9899892
122 49.62420 0.9898400 -0.9899892
123 49.62372 0.9899304 -0.9899407
124 49.62372 0.9899813 -0.9899096
125 49.62372 0.9899813 -0.9899096
126 49.62372 0.9899813 -0.9899096
127 49.62372 0.9899813 -0.9899096
128 49.62372 0.9899813 -0.9899096
129 49.62372 0.9899813 -0.9899096
130 49.62372 0.9899813 -0.9899096
131 49.62372 0.9899813 -0.9899375
132 49.62372 0.9899813 -0.9899375
133 49.62372 0.9899813 -0.9899375
134 49.62340 0.9899884 -0.9899287
135 49.62142 0.9899884 -0.9899468
136 49.62142 0.9899884 -0.9899468
137 49.62142 0.9899884 -0.9899468
138 49.62040 0.9899884 -0.9899468
139 49.62040 0.9899884 -0.9899468
140 49.61922 0.9899913 -0.9898739
141 49.61922 0.9899913 -0.9898739
142 49.61922 0.9899913 -0.9898739
143 49.61796 0.9899930 -0.9897678
144 49.61796 0.9899930 -0.9898028
145 49.61796 0.9899930 -0.9898028
146 49.61796 0.9899977 -0.9898028
147 49.61796 0.9899977 -0.9898928
148 49.61796 0.9899981 -0.9898928
149 49.61796 0.9899981 -0.9898928
150 49.61758 0.9899981 -0.9898928
151 49.61758 0.9899981 -0.9898928
152 49.61758 0.9899981 -0.9898928
153 49.61758 0.9899981 -0.9898928
154 49.61758 0.9899981 -0.9898928
155 49.61758 0.9899981 -0.9898928
156 49.61736 0.9899981 -0.9898928
157 49.61736 0.9899981 -0.9898928
158 49.61736 0.9899981 -0.9898928
159 49.61736 0.9899981 -0.9898928
160 49.61736 0.9899981 -0.9898928
161 49.61736 0.9899981 -0.9898928
162 49.61775 0.9899989 -0.9898887
163 49.61775 0.9899989 -0.9898887
164 49.61775 0.9899989 -0.9898887
165 49.61775 0.9899989 -0.9898887
166 49.61775 0.9899989 -0.9899151
167 49.61775 0.9899989 -0.9899520
168 49.61777 0.9899989 -0.9899680
169 49.61777 0.9899989 -0.9899680
170 49.61777 0.9899989 -0.9899680
171 49.61777 0.9899989 -0.9899680
172 49.61777 0.9899989 -0.9899680
173 49.61777 0.9899989 -0.9899680
174 49.61777 0.9899989 -0.9899680
175 49.61777 0.9899989 -0.9899680
176 49.61777 0.9899987 -0.9899911
177 49.61777 0.9899987 -0.9899911
178 49.61765 0.9899987 -0.9899879
179 49.61765 0.9899987 -0.9899879
180 49.61777 0.9899989 -0.9899879
181 49.61777 0.9899989 -0.9899879
182 49.61777 0.9899989 -0.9899879
183 49.61763 0.9899989 -0.9899919
184 49.61763 0.9899989 -0.9899919
185 49.61763 0.9899989 -0.9899919
186 49.61763 0.9899989 -0.9899919
187 49.61763 0.9899989 -0.9899919
188 49.61751 0.9899989 -0.9899919
189 49.61751 0.9899989 -0.9899919
190 49.61714 0.9899989 -0.9899928
191 49.61714 0.9899989 -0.9899928
192 49.61709 0.9899992 -0.9899928
193 49.61716 0.9899994 -0.9899928
194 49.61716 0.9899994 -0.9899963
195 49.61719 0.9899995 -0.9899983
196 49.61719 0.9899995 -0.9899983
197 49.61719 0.9899995 -0.9899983
198 49.61719 0.9899995 -0.9899983
199 49.61719 0.9899995 -0.9899983
200 49.61719 0.9899995 -0.9899983

$member$bestvalit
  [1] 1337461.6 1337461.6  441839.8  441839.8  303341.7  303341.7  303341.7
  [8]  238150.4  238150.4  238150.4  238150.4  238150.4  238150.4  206790.6
 [15]  206790.6  206790.6  183325.9  168092.1  168092.1  168092.1  166446.3
 [22]  166146.5  166146.5  166146.5  166146.5  166061.7  166061.7  166061.7
 [29]  166061.7  166061.7  166061.7  166061.7  166061.7  166061.7  166061.7
 [36]  166061.7  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1
 [43]  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1
 [50]  166052.1  166052.1  166052.1  166036.8  166036.8  166036.8  166036.8
 [57]  166036.8  166036.8  166036.8  166036.8  166036.8  166036.8  166027.6
 [64]  166023.9  166023.9  166022.7  166022.7  166022.7  166018.1  166018.1
 [71]  166017.7  166017.2  166017.2  166017.2  166017.2  166014.6  166014.6
 [78]  166014.6  166014.6  166014.6  166014.6  166014.6  166014.4  166013.5
 [85]  166013.5  166013.5  166013.5  166013.5  166013.5  166013.5  166013.4
 [92]  166013.4  166013.4  166013.4  166013.4  166013.4  166013.4  166013.4
 [99]  166013.4  166013.4  166013.4  166013.1  166013.1  166013.1  166013.1
[106]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1
[113]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1
[120]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.0
[127]  166013.0  166013.0  166013.0  166013.0  166013.0  166012.9  166012.9
[134]  166012.9  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[141]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[148]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[155]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[162]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[169]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[176]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[183]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[190]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[197]  166012.8  166012.8  166012.8  166012.8

$member$pop
          [,1]      [,2]       [,3]
 [1,] 49.61707 0.9899999 -0.9899986
 [2,] 49.61714 0.9899995 -0.9899983
 [3,] 49.61723 0.9899996 -0.9899999
 [4,] 49.61726 0.9899997 -0.9899985
 [5,] 49.61708 0.9899995 -0.9899983
 [6,] 49.61725 0.9899998 -0.9899938
 [7,] 49.61708 0.9899998 -0.9899940
 [8,] 49.61687 0.9899996 -0.9899976
 [9,] 49.61712 0.9900000 -0.9899998
[10,] 49.61660 0.9899994 -0.9899984
[11,] 49.61667 0.9899995 -0.9899991
[12,] 49.61720 0.9899998 -0.9899937
[13,] 49.61691 0.9899997 -0.9899942
[14,] 49.61717 0.9899996 -0.9899981
[15,] 49.61719 0.9899997 -0.9899989
[16,] 49.61691 0.9899996 -0.9899965
[17,] 49.61712 0.9899999 -0.9899964
[18,] 49.61702 0.9899997 -0.9899935
[19,] 49.61695 0.9899996 -0.9899964
[20,] 49.61710 0.9899998 -0.9899989
[21,] 49.61697 0.9900000 -0.9899974
[22,] 49.61705 0.9899997 -0.9899974
[23,] 49.61697 0.9899997 -0.9899982
[24,] 49.61688 0.9899996 -0.9899996
[25,] 49.61679 0.9899999 -0.9899950
[26,] 49.61688 0.9899998 -0.9899990
[27,] 49.61705 0.9899997 -0.9899934
[28,] 49.61699 0.9899998 -0.9899973
[29,] 49.61708 0.9899999 -0.9899959
[30,] 49.61707 0.9899998 -0.9899988
[31,] 49.61693 0.9899998 -0.9899970
[32,] 49.61687 0.9900000 -0.9899864
[33,] 49.61676 0.9899997 -0.9899972
[34,] 49.61670 0.9899999 -0.9899924
[35,] 49.61688 0.9899998 -0.9899987
[36,] 49.61695 0.9899998 -0.9899964
[37,] 49.61696 0.9899998 -0.9899974
[38,] 49.61705 0.9899999 -0.9899998
[39,] 49.61691 0.9899997 -0.9899988
[40,] 49.61686 0.9899997 -0.9899989
[41,] 49.61696 0.9899997 -0.9900000
[42,] 49.61697 0.9899998 -0.9899999
[43,] 49.61706 0.9899998 -0.9899997
[44,] 49.61707 0.9899996 -0.9899980
[45,] 49.61685 0.9899999 -0.9899993
[46,] 49.61683 0.9900000 -0.9899975
[47,] 49.61707 0.9899997 -0.9899971
[48,] 49.61664 0.9899999 -0.9899986
[49,] 49.61760 0.9899998 -0.9899993
[50,] 49.61680 0.9899997 -0.9899988

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
49.6171406  0.9899995 -0.9899983 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150.056 1189.354 1213.416 1224.241 1224.241 1239.954 1273.342 1276.310
 [9] 1237.503 1281.242 1315.623 1467.965 1528.875 1581.905 1548.987 1566.648
[17] 1648.186 1722.843 1833.354 1935.516

$residuals
 [1] -203.922518 -226.623155 -143.836333  -52.445024  -46.125457  -54.143599
 [7]  -33.984609   12.251077  -29.796691   -2.833377   44.969346   72.818753
[13]   46.160076  114.054598   95.702409   59.383026    6.853733   32.757049
[19]   54.066079   56.378179

$rss
[1] 166012.8

$cov.unscaled
            gamma      delta         rho
gamma  2206.42030 -64.362577 -2181.04555
delta   -64.36258   1.877581    63.63279
rho   -2181.04555  63.632791  2157.20635

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error   t value Pr(>|t|)
gamma    49.62    4279.57     0.012    0.991
delta     0.99     124.84     0.008    0.994
rho      -0.99    4231.57 -0.000234    1.000

Residual standard error: 91.10784 
Multiple R-squared: 0.9062137 

> coef( cesLandLaborDe2 )
     gamma      delta        rho 
49.6171406  0.9899995 -0.9899983 
> vcov( cesLandLaborDe2 )
            gamma      delta         rho
gamma  18314697.1 -534250.48 -18104070.5
delta   -534250.5   15585.12    528192.8
rho   -18104070.5  528192.79  17906189.9
> coef( summary( cesLandLaborDe2 ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma 49.6171406  4279.5674  0.0115939617 0.9907496
delta  0.9899995   124.8404  0.0079301219 0.9936727
rho   -0.9899983  4231.5706 -0.0002339553 0.9998133
> fitted( cesLandLaborDe2 )
 [1] 1150.056 1189.354 1213.416 1224.241 1224.241 1239.954 1273.342 1276.310
 [9] 1237.503 1281.242 1315.623 1467.965 1528.875 1581.905 1548.987 1566.648
[17] 1648.186 1722.843 1833.354 1935.516
> residuals( cesLandLaborDe2 )
 [1] -203.922518 -226.623155 -143.836333  -52.445024  -46.125457  -54.143599
 [7]  -33.984609   12.251077  -29.796691   -2.833377   44.969346   72.818753
[13]   46.160076  114.054598   95.702409   59.383026    6.853733   32.757049
[19]   54.066079   56.378179
> 
> # Land & Labor with constant returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # Land & Labor with variable returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls", vrs = TRUE ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ## CES: Land & Intermediate Inputs (Nelder-Mead)
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "NM" )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$rss
[1] 165837.1

$cov.unscaled
          gamma      delta       rho
gamma 815214446 23296651.9 -46969864
delta  23296652   665758.5  -1342302
rho   -46969864 -1342301.7   2706578

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.221e+01  2.600e+06 1.24e-05        1
delta 2.008e-01  7.430e+04 2.70e-06        1
rho   3.800e+00  1.498e+05 2.54e-05        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2599930.74 1.238927e-05 0.9999901
delta  0.2007986   74299.21 2.702567e-06 0.9999978
rho    3.8002155  149808.37 2.536718e-05 0.9999798
> 
> # variable returns to scale (Nelder-Mead)
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854483   10.575677   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$rss
[1] 71996.09

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
nu    -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
  gamma   delta     rho      nu 
1.00222 0.02173 1.68396 1.31339 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
nu     1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.99837 
Multiple R-squared: 0.959327 

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
nu    1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$rss
[1] 257689.4

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN", random.seed = 234 )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

$method
[1] "SANN"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$rss
[1] 166684.4

$cov.unscaled
           gamma      delta        rho
gamma 5004.97903 41.3989754 -650.11586
delta   41.39898  0.3424519   -5.37812
rho   -650.11586 -5.3781200   84.46960

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.315e+01  6.459e+03    0.002    0.998
delta 2.101e-02  5.342e+01 0.000393    1.000
rho   2.925e+00  8.390e+02    0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.14842134 6458.52914 0.0020358229 0.9983756
delta  0.02100585   53.42349 0.0003931949 0.9996863
rho    2.92470954  839.04011 0.0034857804 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$optim$value
[1] 165834.5

$optim$counts
function gradient 
     352       82 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$iter
function gradient 
     352       82 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.939 1189.254 1213.334 1224.146 1224.146 1239.871 1273.288 1276.236
 [9] 1237.414 1281.151 1315.551 1467.893 1528.830 1581.904 1548.978 1566.668
[17] 1648.243 1722.938 1833.508 1935.725

$residuals
 [1] -203.806133 -226.523416 -143.754466  -52.349211  -46.029556  -54.061288
 [7]  -33.930502   12.324450  -29.707715   -2.742198   45.041725   72.890751
[13]   46.204207  114.055297   95.711563   59.362915    6.796772   32.661392
[19]   53.911931   56.169295

$rss
[1] 165834.5

$cov.unscaled
           gamma     delta        rho
gamma 3840584870 131166652 -222988593
delta  131166652   4479717   -7615811
rho   -222988593  -7615811   12948441

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
34.7896  0.2558  3.9468 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 352 function and 82 gradient calls

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.479e+01  5.643e+06 6.16e-06        1
delta 2.558e-01  1.927e+05 1.33e-06        1
rho   3.947e+00  3.277e+05 1.20e-05        1

Residual standard error: 91.05892 
Multiple R-squared: 0.9063144 

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.7896450  5643144.5 6.164940e-06 0.9999951
delta  0.2558192   192729.3 1.327350e-06 0.9999989
rho    3.9468447   327665.9 1.204533e-05 0.9999904
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B" )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      27       27 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      27       27 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  5.482972e-01  8.354371e-03 -4.811163e+10
delta  8.354371e-03  1.273117e-04 -7.445778e+08
rho   -4.811163e+10 -7.445778e+08  4.575469e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
 gamma  delta    rho 
49.143  1.000  0.651 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 27 function and 27 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.914e+01  6.743e+01    0.729    0.466
delta 1.000e+00  1.027e+00    0.973    0.330
rho   6.511e-01  1.948e+13 3.34e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.742604e+01 7.288423e-01 0.4660981
delta  1.0000000 1.027434e+00 9.732989e-01 0.3304048
rho    0.6510633 1.947769e+13 3.342611e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.017794                                  
2     17 0.107030 -3 -0.089235 23.402 1.020e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
              gamma         delta           rho
gamma  3.667607e+18  3.152675e+10 -9.754074e+07
delta  3.152675e+10  2.710399e+02 -8.384470e-01
rho   -9.754074e+07 -8.384470e-01  2.594122e-03

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$rss
[1] 41177199

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 1.019788e-05

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.093e-02   0.619    0.536

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.093252e-02 0.61903301 0.5358946
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho           nu 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho           nu
gamma  0.006287789  0.4447299 -0.07809453 -0.002344101
delta  0.444729932 31.5957949 -5.54483736 -0.124590619
rho   -0.078094527 -5.5448374  0.97320590  0.022743063
nu    -0.002344101 -0.1245906  0.02274306  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$rss
[1] 1708188016

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.231400e-07  2.790747e-05  3.716972e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
nu    -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho        nu 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.01444873

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.986512  -0.231    0.817    
nu     1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 
Multiple R-squared: -964.0144 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.98651199 -0.23077551 8.174892e-01
nu     1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347917481, 0.851862754325707, 4.36180424094534 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  47.3694         NA      NA       NA
delta   0.8519         NA      NA       NA
rho     4.3618         NA      NA       NA

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 47.3694348         NA      NA       NA
delta  0.8518628         NA      NA       NA
rho    4.3618042         NA      NA       NA
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166085.7

$nlm$estimate
[1] 13.87993876  0.01200905  3.49562057

$nlm$gradient
[1]    1965.848 -670064.125  -10608.430

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
      gamma       delta         rho 
13.87993876  0.01200905  3.49562057 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.389 1189.791 1213.858 1224.754 1224.743 1240.478 1273.909 1276.807
 [9] 1237.990 1281.719 1316.168 1468.581 1529.563 1582.600 1549.549 1567.165
[17] 1648.548 1723.100 1833.588 1935.797

$residuals
 [1] -204.256113 -227.060723 -144.279093  -52.957049  -46.626577  -54.667793
 [7]  -34.551201   11.754297  -30.284264   -3.310486   44.424952   72.203384
[13]   45.472058  113.359833   95.139757   58.865793    6.492140   32.500160
[19]   53.832430   56.096888

$rss
[1] 166085.7

$cov.unscaled
           gamma      delta         rho
gamma 47924.9262 247.287437 -6738.88728
delta   247.2874   1.276031   -34.77555
rho   -6738.8873 -34.775552   947.81696

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
   gamma    delta      rho 
13.87994  0.01201  3.49562 

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.388e+01  1.995e+04    0.001        1
delta 1.201e-02  1.029e+02 0.000117        1
rho   3.496e+00  2.806e+03    0.001        1

Residual standard error: 91.12785 
Multiple R-squared: 0.9061725 

> coef( summary( cesLandIntNewton ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.87993876 19949.4928 0.0006957540 0.9994449
delta  0.01200905   102.9394 0.0001166614 0.9999069
rho    3.49562057  2805.5200 0.0012459796 0.9990059
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
42.0332633  0.4058644  5.7702615 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 147

$nlminb$evaluations
function gradient 
     200      148 


$coefficients
     gamma      delta        rho 
42.0332633  0.4058644  5.7702615 

$iter
[1] 147

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.946 1189.260 1213.341 1224.152 1224.152 1239.878 1273.295 1276.244
 [9] 1237.421 1281.158 1315.558 1467.901 1528.839 1581.913 1548.987 1566.679
[17] 1648.256 1722.953 1833.525 1935.743

$residuals
 [1] -203.813088 -226.530002 -143.761382  -52.355539  -46.035972  -54.067772
 [7]  -33.937178   12.317328  -29.714423   -2.749381   45.034626   72.882823
[13]   46.196083  114.046376   95.701902   59.352439    6.783806   32.646401
[19]   53.895124   56.151444

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho 
42.0333  0.4059  5.7703 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 147 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  42.0333         NA      NA       NA
delta   0.4059         NA      NA       NA
rho     5.7703         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 42.0332633         NA      NA       NA
delta  0.4058644         NA      NA       NA
rho    5.7702615         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
36.6521302  0.2378403  4.8969550 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 


$coefficients
     gamma      delta        rho 
36.6521302  0.2378403  4.8969550 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.960 1189.275 1213.356 1224.167 1224.167 1239.893 1273.311 1276.259
 [9] 1237.436 1281.174 1315.574 1467.920 1528.858 1581.933 1549.006 1566.698
[17] 1648.276 1722.975 1833.548 1935.766

$residuals
 [1] -203.827347 -226.544780 -143.776449  -52.370772  -46.051201  -54.083198
 [7]  -33.953019   12.301472  -29.729806   -2.765296   45.018269   72.864573
[13]   46.177069  114.026727   95.682710   59.333067    6.763537   32.625301
[19]   53.872723   56.127801

$rss
[1] 165832.5

$cov.unscaled
            gamma      delta         rho
gamma 86065246140 3124710080 -5588582711
delta  3124710080  113448617  -202929056
rho   -5588582711 -202929056   363296648

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
36.6521  0.2378  4.8970 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.665e+01  2.671e+07 1.37e-06        1
delta 2.378e-01  9.699e+05 2.45e-07        1
rho   4.897e+00  1.736e+06 2.82e-06        1

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

> coef( summary( cesLandIntPortCon ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 36.6521302 26713680.3 1.372036e-06 0.9999989
delta  0.2378403   969883.2 2.452257e-07 0.9999998
rho    4.8969550  1735603.5 2.821471e-06 0.9999977
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.9164256  0.8392448 -0.3503008  1.5809530 

$nlminb$objective
[1] 50248.76

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 133

$nlminb$evaluations
function gradient 
     200      133 


$coefficients
     gamma      delta        rho         nu 
 1.9164256  0.8392448 -0.3503008  1.5809530 

$iter
[1] 133

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1004.196 1092.055 1115.411 1174.774 1168.010 1192.943 1242.817 1217.561
 [9] 1172.276 1222.856 1293.658 1537.822 1650.580 1703.072 1592.376 1587.573
[17] 1647.151 1724.770 1880.756 2046.450

$residuals
 [1]  -58.062631 -129.324055  -45.831431   -2.977095   10.106145   -7.132591
 [7]   -3.459454   71.000327   35.430360   55.552784   66.934800    2.962569
[13]  -75.545093   -7.112479   52.313381   38.458169    7.889133   30.830301
[19]    6.664378  -54.556216

$rss
[1] 50248.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0972311093  1.626783e-02 -0.0386174083 -1.145350e-04
delta  0.0162678337  2.732422e-03 -0.0064915900 -1.333839e-05
rho   -0.0386174083 -6.491590e-03  0.0154259251  2.912790e-05
nu    -0.0001145350 -1.333839e-05  0.0000291279  3.449628e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
 1.9164  0.8392 -0.3503  1.5810 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 133 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.9164    15.6297   0.123    0.902    
delta   0.8392     2.6201   0.320    0.749    
rho    -0.3503     6.2255  -0.056    0.955    
nu      1.5810     0.0931  16.982   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.12423 
Multiple R-squared: 0.9716127 

> coef( summary( cesLandIntPortVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  1.9164256 15.6296879  0.12261445 9.024124e-01
delta  0.8392448  2.6201222  0.32030751 7.487352e-01
rho   -0.3503008  6.2254865 -0.05626883 9.551277e-01
nu     1.5809530  0.0930966 16.98185474 1.118934e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.7447260  0.8080354 -0.2808868  1.5812800 

$nlminb$objective
[1] 50191.52

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 127

$nlminb$evaluations
function gradient 
     200      128 


$coefficients
     gamma      delta        rho         nu 
 1.7447260  0.8080354 -0.2808868  1.5812800 

$iter
[1] 127

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1004.359 1092.115 1115.533 1174.657 1167.940 1192.869 1242.760 1217.672
 [9] 1172.305 1222.980 1293.703 1537.934 1650.659 1703.378 1592.828 1588.069
[17] 1647.600 1725.100 1881.035 2046.774

$residuals
 [1]  -58.226224 -129.384057  -45.954243   -2.860747   10.176232   -7.058587
 [7]   -3.402067   70.888560   35.401182   55.428945   66.889287    2.850404
[13]  -75.624325   -7.419086   51.861568   37.962128    7.439939   30.499590
[19]    6.385463  -54.879730

$rss
[1] 50191.52

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0938509577  0.0183763550 -3.794524e-02 -1.099050e-04
delta  0.0183763550  0.0036106688 -7.461332e-03 -1.519930e-05
rho   -0.0379452415 -0.0074613318  1.542204e-02  2.884678e-05
nu    -0.0001099050 -0.0000151993  2.884678e-05  3.448975e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
 1.7447  0.8080 -0.2809  1.5813 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 127 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.74473   15.34686   0.114    0.909    
delta  0.80804    3.01019   0.268    0.788    
rho   -0.28089    6.22116  -0.045    0.964    
nu     1.58128    0.09303  16.997   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.09567 
Multiple R-squared: 0.971645 

> coef( summary( cesLandIntPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.7447260 15.34686020  0.11368619 9.094866e-01
delta  0.8080354  3.01019069  0.26843328 7.883658e-01
rho   -0.2808868  6.22115655 -0.04515026 9.639875e-01
nu     1.5812800  0.09303476 16.99665840 8.693646e-65
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
41.0240063  0.3392339  5.9875417 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2     par3
1   7.669117e+08 0.2457237 7.053487
2   2.503711e+08 0.9144382 3.671934
3   2.503711e+08 0.9144382 3.891170
4   2.307733e+07 0.4811951 4.490916
5   1.469075e+07 0.4514195 7.431383
6   1.469075e+07 0.4514195 8.139257
7   1.469075e+07 0.4514195 8.139257
8   1.469075e+07 0.4514195 8.139257
9   1.469075e+07 0.4514195 8.139257
10  5.607109e+06 0.4723849 8.340431
11  5.607109e+06 0.4723849 9.252709
12  5.607109e+06 0.4723849 9.252709
13  3.290593e+06 0.4723849 9.252709
14  3.290593e+06 0.4723849 9.252709
15  3.290593e+06 0.4723849 9.252709
16  1.092957e+06 0.3619343 8.188312
17  1.092957e+06 0.3619343 8.188312
18  1.092957e+06 0.3619343 8.188312
19  1.605786e+06 0.3545732 9.132592
20  1.092957e+06 0.3816415 8.201544
21  1.092957e+06 0.3816415 8.201544
22  2.496856e+05 0.7323415 9.175165
23  2.496856e+05 0.7323415 9.175165
24  2.496856e+05 0.7323415 9.175165
25  2.496856e+05 0.8993062 9.546200
26  1.422729e+04 0.9219938 7.210100
27  1.422729e+04 0.9219938 7.327696
28  1.422729e+04 0.9219938 7.327696
29  1.422729e+04 0.9219938 7.327696
30  1.422729e+04 0.9219938 7.327696
31  1.422729e+04 0.9219938 7.327696
32  1.422729e+04 0.9219938 9.820583
33  1.422729e+04 0.9369024 9.675089
34  1.422729e+04 0.9369024 9.675089
35  3.088614e+03 0.2101938 8.968435
36  3.088614e+03 0.2101938 8.968435
37  3.088614e+03 0.2101938 8.968435
38  3.088614e+03 0.2101938 8.968435
39  3.088614e+03 0.2595440 8.968435
40  3.088614e+03 0.2595440 8.968435
41  3.088614e+03 0.2595440 8.968435
42  3.088614e+03 0.2595440 8.968435
43  3.088614e+03 0.2595440 8.968435
44  3.088614e+03 0.3976512 7.288423
45  3.088614e+03 0.3976512 7.288423
46  3.088614e+03 0.3976512 7.288423
47  3.088614e+03 0.3976512 7.288423
48  1.311216e+03 0.1831827 9.106885
49  1.311216e+03 0.1831827 9.106885
50  1.311216e+03 0.2330276 8.332892
51  1.311216e+03 0.2330276 8.332892
52  1.275632e+02 0.1221691 8.905306
53  1.275632e+02 0.1221691 8.905306
54  1.275632e+02 0.1221691 8.905306
55  1.275632e+02 0.1221691 8.905306
56  1.275632e+02 0.1221691 9.636236
57  1.275632e+02 0.1221691 9.636236
58  1.042809e+02 0.6363794 8.478218
59  1.042809e+02 0.6363794 9.182289
60  1.042809e+02 0.6363794 9.182289
61  2.222229e+01 0.5674781 8.004252
62  2.222229e+01 0.3756190 8.004252
63  2.222229e+01 0.3756190 6.903374
64  2.222229e+01 0.3756190 6.792191
65  5.935347e+01 0.2629309 7.479854
66  5.935347e+01 0.2629309 7.479854
67  5.285646e+01 0.9154929 8.058091
68  4.907166e+01 0.8375886 8.587486
69  4.907166e+01 0.9385985 9.080035
70  4.907166e+01 0.9385985 9.080035
71  4.907166e+01 0.9385985 9.080035
72  4.907166e+01 0.9385985 9.080035
73  4.907166e+01 0.9385985 9.080035
74  4.907166e+01 0.9385985 9.080035
75  4.907166e+01 0.9385985 9.080035
76  4.907166e+01 0.9385985 9.080035
77  4.802890e+01 0.8157636 8.587486
78  4.802890e+01 0.8157636 8.587486
79  4.802890e+01 0.8157636 8.587486
80  4.802890e+01 0.8157636 8.587486
81  4.802890e+01 0.8157636 8.587486
82  4.154269e+01 0.3667080 5.971723
83  4.154269e+01 0.3667080 5.971723
84  4.154269e+01 0.3667080 5.971723
85  4.154269e+01 0.3667080 5.971723
86  4.154269e+01 0.3667080 5.971723
87  4.154269e+01 0.3667080 5.971723
88  4.154269e+01 0.3667080 5.971723
89  4.154269e+01 0.3667080 5.971723
90  4.154269e+01 0.3667080 5.971723
91  4.154269e+01 0.3667080 5.971723
92  4.154269e+01 0.3667080 5.971723
93  4.154269e+01 0.3667080 5.971723
94  4.154269e+01 0.3667080 5.971723
95  4.154269e+01 0.3667080 5.971723
96  4.154269e+01 0.3667080 5.971723
97  4.154269e+01 0.3667080 5.971723
98  4.154269e+01 0.3667080 5.971723
99  4.102401e+01 0.3392339 5.987542
100 4.102401e+01 0.3392339 5.987542
101 4.102401e+01 0.3392339 5.987542
102 4.102401e+01 0.3392339 5.987542
103 4.102401e+01 0.3392339 5.987542
104 4.102401e+01 0.3392339 5.987542
105 4.102401e+01 0.3392339 5.987542
106 4.102401e+01 0.3392339 5.987542
107 4.102401e+01 0.3392339 5.987542
108 4.102401e+01 0.3392339 5.987542
109 4.102401e+01 0.3392339 5.987542
110 4.102401e+01 0.3392339 5.987542
111 4.102401e+01 0.3392339 5.987542
112 4.102401e+01 0.3392339 5.987542
113 4.102401e+01 0.3392339 5.987542
114 4.102401e+01 0.3392339 5.987542
115 4.102401e+01 0.3392339 5.987542
116 4.102401e+01 0.3392339 5.987542
117 4.102401e+01 0.3392339 5.987542
118 4.102401e+01 0.3392339 5.987542
119 4.102401e+01 0.3392339 5.987542
120 4.102401e+01 0.3392339 5.987542
121 4.102401e+01 0.3392339 5.987542
122 4.102401e+01 0.3392339 5.987542
123 4.102401e+01 0.3392339 5.987542
124 4.102401e+01 0.3392339 5.987542
125 4.102401e+01 0.3392339 5.987542
126 4.102401e+01 0.3392339 5.987542
127 4.102401e+01 0.3392339 5.987542
128 4.102401e+01 0.3392339 5.987542
129 4.102401e+01 0.3392339 5.987542
130 4.102401e+01 0.3392339 5.987542
131 4.102401e+01 0.3392339 5.987542
132 4.102401e+01 0.3392339 5.987542
133 4.102401e+01 0.3392339 5.987542
134 4.102401e+01 0.3392339 5.987542
135 4.102401e+01 0.3392339 5.987542
136 4.102401e+01 0.3392339 5.987542
137 4.102401e+01 0.3392339 5.987542
138 4.102401e+01 0.3392339 5.987542
139 4.102401e+01 0.3392339 5.987542
140 4.102401e+01 0.3392339 5.987542
141 4.102401e+01 0.3392339 5.987542
142 4.102401e+01 0.3392339 5.987542
143 4.102401e+01 0.3392339 5.987542
144 4.102401e+01 0.3392339 5.987542
145 4.102401e+01 0.3392339 5.987542
146 4.102401e+01 0.3392339 5.987542
147 4.102401e+01 0.3392339 5.987542
148 4.102401e+01 0.3392339 5.987542
149 4.102401e+01 0.3392339 5.987542
150 4.102401e+01 0.3392339 5.987542
151 4.102401e+01 0.3392339 5.987542
152 4.102401e+01 0.3392339 5.987542
153 4.102401e+01 0.3392339 5.987542
154 4.102401e+01 0.3392339 5.987542
155 4.102401e+01 0.3392339 5.987542
156 4.102401e+01 0.3392339 5.987542
157 4.102401e+01 0.3392339 5.987542
158 4.102401e+01 0.3392339 5.987542
159 4.102401e+01 0.3392339 5.987542
160 4.102401e+01 0.3392339 5.987542
161 4.102401e+01 0.3392339 5.987542
162 4.102401e+01 0.3392339 5.987542
163 4.102401e+01 0.3392339 5.987542
164 4.102401e+01 0.3392339 5.987542
165 4.102401e+01 0.3392339 5.987542
166 4.102401e+01 0.3392339 5.987542
167 4.102401e+01 0.3392339 5.987542
168 4.102401e+01 0.3392339 5.987542
169 4.102401e+01 0.3392339 5.987542
170 4.102401e+01 0.3392339 5.987542
171 4.102401e+01 0.3392339 5.987542
172 4.102401e+01 0.3392339 5.987542
173 4.102401e+01 0.3392339 5.987542
174 4.102401e+01 0.3392339 5.987542
175 4.102401e+01 0.3392339 5.987542
176 4.102401e+01 0.3392339 5.987542
177 4.102401e+01 0.3392339 5.987542
178 4.102401e+01 0.3392339 5.987542
179 4.102401e+01 0.3392339 5.987542
180 4.102401e+01 0.3392339 5.987542
181 4.102401e+01 0.3392339 5.987542
182 4.102401e+01 0.3392339 5.987542
183 4.102401e+01 0.3392339 5.987542
184 4.102401e+01 0.3392339 5.987542
185 4.102401e+01 0.3392339 5.987542
186 4.102401e+01 0.3392339 5.987542
187 4.102401e+01 0.3392339 5.987542
188 4.102401e+01 0.3392339 5.987542
189 4.102401e+01 0.3392339 5.987542
190 4.102401e+01 0.3392339 5.987542
191 4.102401e+01 0.3392339 5.987542
192 4.102401e+01 0.3392339 5.987542
193 4.102401e+01 0.3392339 5.987542
194 4.102401e+01 0.3392339 5.987542
195 4.102401e+01 0.3392339 5.987542
196 4.102401e+01 0.3392339 5.987542
197 4.102401e+01 0.3392339 5.987542
198 4.102401e+01 0.3392339 5.987542
199 4.102401e+01 0.3392339 5.987542
200 4.102401e+01 0.3392339 5.987542

$member$bestvalit
  [1] 1.506133e+22 1.132040e+21 1.128937e+21 1.268765e+19 4.598151e+18
  [6] 4.513342e+18 4.513342e+18 4.513342e+18 4.513342e+18 6.384563e+17
 [11] 6.359286e+17 6.359286e+17 2.190150e+17 2.190150e+17 2.190150e+17
 [16] 2.633372e+16 2.633372e+16 2.633372e+16 2.633372e+16 2.598502e+16
 [21] 2.598502e+16 1.125253e+15 1.125253e+15 1.125253e+15 1.095998e+15
 [26] 3.516948e+12 3.516948e+12 3.516948e+12 3.516948e+12 3.516948e+12
 [31] 3.516948e+12 3.515465e+12 3.504662e+12 3.504662e+12 2.261671e+11
 [36] 2.261671e+11 2.261671e+11 2.261671e+11 2.156374e+11 2.156374e+11
 [41] 2.156374e+11 2.156374e+11 2.156374e+11 2.054467e+11 2.054467e+11
 [46] 2.054467e+11 2.054467e+11 3.741140e+10 3.741140e+10 3.741140e+10
 [51] 3.741140e+10 2.174196e+08 2.174196e+08 2.174196e+08 2.174196e+08
 [56] 2.064775e+08 2.064775e+08 6.384912e+07 6.291342e+07 6.291342e+07
 [61] 1.113006e+07 1.009705e+07 9.692303e+06 9.644171e+06 8.352305e+06
 [66] 8.352305e+06 4.832510e+05 1.814202e+05 1.671084e+05 1.671084e+05
 [71] 1.671084e+05 1.671084e+05 1.671084e+05 1.671084e+05 1.671084e+05
 [76] 1.671084e+05 1.658578e+05 1.658578e+05 1.658578e+05 1.658578e+05
 [81] 1.658578e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
 [86] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
 [91] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
 [96] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[101] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[106] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[111] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[116] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]     [,3]
 [1,] 40.28035 0.3038324 5.994801
 [2,] 39.95580 0.2695218 6.367706
 [3,] 40.21671 0.4459622 4.016717
 [4,] 40.99905 0.1936808 9.054941
 [5,] 47.36277 0.7473008 7.924199
 [6,] 40.43801 0.3357235 5.599399
 [7,] 43.54552 0.4440116 6.666937
 [8,] 46.26163 0.6668820 6.715118
 [9,] 47.84576 0.7854971 8.834129
[10,] 42.10844 0.3327551 7.109904
[11,] 44.85804 0.6821995 4.200486
[12,] 46.46450 0.6315292 8.121245
[13,] 46.81701 0.6645624 8.447157
[14,] 48.18004 0.8256740 9.557408
[15,] 41.67632 0.3547946 6.271039
[16,] 47.59301 0.8514457 5.227618
[17,] 41.12591 0.3242334 6.345382
[18,] 47.42420 0.7574101 7.930872
[19,] 41.26732 0.3771736 5.565927
[20,] 41.54269 0.3667080 5.971723
[21,] 43.02983 0.3609324 7.696742
[22,] 48.62491 0.9286264 6.881978
[23,] 47.87480 0.7952992 8.695281
[24,] 47.41515 0.7413368 8.328191
[25,] 43.50532 0.4176041 7.137026
[26,] 39.81328 0.2933158 5.830687
[27,] 42.01743 0.3855173 6.080662
[28,] 40.38974 0.2665260 6.725839
[29,] 47.42549 0.7579528 7.838526
[30,] 48.14451 0.8438007 8.458614
[31,] 46.69092 0.6336170 8.906361
[32,] 43.55453 0.4157947 7.272019
[33,] 41.21271 0.3553265 5.878384
[34,] 40.23438 0.3162236 5.764854
[35,] 47.84018 0.7827511 8.994486
[36,] 40.92512 0.2719577 7.076151
[37,] 41.21294 0.3094330 6.708668
[38,] 42.05435 0.3963059 5.934988
[39,] 41.43229 0.3489872 6.161055
[40,] 41.49887 0.3095991 6.923292
[41,] 41.69371 0.2959153 7.423666
[42,] 40.59476 0.2846447 6.559261
[43,] 40.82965 0.3292038 6.028517
[44,] 41.76193 0.4443506 4.980968
[45,] 46.95198 0.6839257 8.289150
[46,] 44.60423 0.4589007 8.026712
[47,] 44.46126 0.5832076 5.462762
[48,] 46.46689 0.6014869 8.975207
[49,] 41.13335 0.3428036 6.002436
[50,] 41.02401 0.3392339 5.987542

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
41.0240063  0.3392339  5.9875417 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1149.918 1189.231 1213.311 1224.122 1224.122 1239.847 1273.264 1276.212
 [9] 1237.390 1281.127 1315.526 1467.865 1528.801 1581.874 1548.949 1566.640
[17] 1648.216 1722.911 1833.480 1935.695

$residuals
 [1] -203.784994 -226.500947 -143.731739  -52.325631  -46.006064  -54.037481
 [7]  -33.906070   12.348508  -29.684192   -2.718081   45.066766   72.918685
[13]   46.233434  114.085023   95.739744   59.390713    6.824072   32.688492
[19]   53.939914   56.198731

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
41.0240  0.3392  5.9875 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  41.0240         NA      NA       NA
delta   0.3392         NA      NA       NA
rho     5.9875         NA      NA       NA

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntDe ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 41.0240063         NA      NA       NA
delta  0.3392339         NA      NA       NA
rho    5.9875417         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3        par4 
121.6980625   0.9452253   8.8862946   0.7389210 

$optim$bestval
[1] 361439.7

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2     par3       par4
1   6.072057e+08 0.94772694 6.926559 1.42294296
2   2.445252e+09 0.44052809 5.275870 0.45831167
3   2.445252e+09 0.44052809 5.275870 0.45831167
4   2.445252e+09 0.44052809 6.266588 0.45831167
5   1.753284e+09 0.24692013 5.461413 0.45571975
6   1.753284e+09 0.67437600 5.461413 0.45571975
7   1.753284e+09 0.67437600 5.461413 0.45571975
8   1.753284e+09 0.67437600 5.461413 0.45571975
9   1.753284e+09 0.67437600 5.461413 0.45571975
10  1.753284e+09 0.67437600 5.461413 0.45571975
11  1.753284e+09 0.67437600 5.461413 0.45571975
12  1.753284e+09 0.67437600 5.461413 0.45571975
13  1.753284e+09 0.79875094 5.461413 0.45571975
14  1.103815e+09 0.46486835 5.461413 0.45571975
15  7.047891e+06 0.45487201 6.080617 0.40010304
16  7.047891e+06 0.45487201 6.080617 0.40010304
17  7.047891e+06 0.45487201 6.080617 0.40010304
18  7.047891e+06 0.45487201 6.080617 0.40010304
19  7.047891e+06 0.45487201 6.080617 0.40010304
20  7.047891e+06 0.45487201 6.080617 0.40010304
21  7.047891e+06 0.45487201 8.339573 0.40010304
22  7.047891e+06 0.45487201 8.339573 0.40010304
23  7.047891e+06 0.61637942 7.486975 0.40010304
24  8.800270e+06 0.88992617 5.907933 0.07478250
25  8.800270e+06 0.94808064 5.907933 0.07478250
26  8.800270e+06 0.94808064 5.907933 0.07478250
27  8.800270e+06 0.94808064 5.907933 0.07478250
28  8.800270e+06 0.94808064 5.907933 0.07478250
29  9.849726e+05 0.94808064 5.907933 0.03819841
30  9.849726e+05 0.94808064 7.448231 0.03819841
31  9.849726e+05 0.94808064 7.448231 0.03819841
32  5.471853e+05 0.92252906 6.827254 0.08093761
33  5.471853e+05 0.92252906 6.827254 0.08093761
34  5.471853e+05 0.92252906 6.827254 0.08093761
35  5.471853e+05 0.76912523 6.951151 0.03304062
36  5.471853e+05 0.76912523 6.951151 0.03304062
37  5.471853e+05 0.76912523 6.951151 0.03304062
38  5.471853e+05 0.92252906 7.779139 0.03304062
39  5.471853e+05 0.76478816 7.779139 0.03304062
40  5.471853e+05 0.76478816 7.779139 0.03304062
41  5.471853e+05 0.76877526 7.779139 0.03304062
42  5.471853e+05 0.76877526 7.779139 0.03304062
43  5.471853e+05 0.76877526 9.360659 0.03304062
44  5.471853e+05 0.76877526 9.360659 0.03304062
45  5.471853e+05 0.77905111 9.360659 0.03304062
46  5.471853e+05 0.77905111 9.360659 0.03304062
47  5.471853e+05 0.77905111 9.360659 0.03304062
48  5.471853e+05 0.77905111 9.360659 0.03304062
49  5.471853e+05 0.77905111 9.360659 0.03304062
50  5.471853e+05 0.77905111 9.360659 0.03304062
51  5.030985e+03 0.63092152 7.258281 0.02111761
52  5.030985e+03 0.63092152 4.788539 0.02111761
53  5.030985e+03 0.63092152 7.667576 0.02111761
54  5.030985e+03 0.63092152 7.667576 0.02111761
55  5.030985e+03 0.63092152 7.296001 0.02131079
56  5.030985e+03 0.63092152 7.296001 0.02131079
57  5.030985e+03 0.63092152 7.296001 0.02131079
58  5.030985e+03 0.63092152 7.296001 0.02131079
59  4.236881e+03 0.74812651 7.463225 0.02914793
60  4.236881e+03 0.74812651 7.463225 0.02914793
61  4.236881e+03 0.76610460 7.463225 0.02914793
62  4.236881e+03 0.76610460 7.463225 0.02914793
63  4.236881e+03 0.89565078 7.463225 0.02914793
64  4.236881e+03 0.89565078 7.463225 0.02914793
65  4.236881e+03 0.89565078 7.463225 0.02914793
66  4.236881e+03 0.89565078 7.463225 0.02914793
67  4.236881e+03 0.89565078 7.463225 0.02914793
68  4.236881e+03 0.89565078 7.463225 0.02059944
69  4.236881e+03 0.89565078 7.463225 0.02059944
70  4.236881e+03 0.89565078 7.463225 0.02059944
71  4.236881e+03 0.89565078 7.463225 0.02059944
72  4.236881e+03 0.89565078 7.463225 0.02059944
73  4.236881e+03 0.89565078 7.463225 0.01691471
74  1.358663e+03 0.86387107 7.661139 0.01561605
75  1.358663e+03 0.86387107 7.661139 0.01561605
76  1.358663e+03 0.68174260 7.661139 0.01561605
77  1.358663e+03 0.68174260 7.661139 0.01561605
78  1.358663e+03 0.68174260 7.661139 0.01561605
79  1.358663e+03 0.68174260 7.661139 0.01561605
80  1.358663e+03 0.68174260 7.661139 0.01561605
81  1.358663e+03 0.68174260 7.433137 0.01491327
82  1.358663e+03 0.68174260 7.433137 0.01491327
83  1.358663e+03 0.68174260 7.433137 0.01491327
84  1.358663e+03 0.68174260 7.433137 0.01491327
85  1.358663e+03 0.68174260 7.433137 0.01491327
86  1.358663e+03 0.68174260 7.433137 0.01491327
87  1.358663e+03 0.68174260 7.433137 0.01491327
88  1.358663e+03 0.68174260 9.805578 0.01491327
89  1.358663e+03 0.68174260 9.805578 0.01491327
90  1.209186e+03 0.54622803 8.286871 0.04218162
91  1.219443e+03 0.62541983 3.351848 0.04689658
92  1.219443e+03 0.43723667 3.351848 0.04689658
93  1.219443e+03 0.43723667 3.351848 0.04689658
94  1.219443e+03 0.43723667 3.351848 0.04689658
95  1.219443e+03 0.43723667 3.351848 0.04689658
96  1.219443e+03 0.43723667 3.351848 0.04689658
97  1.219443e+03 0.43723667 3.351848 0.04689658
98  1.219443e+03 0.53054930 3.351848 0.04689658
99  1.219443e+03 0.53054930 3.351848 0.04689658
100 1.037421e+03 0.61378711 3.351848 0.09452253
101 8.324057e+02 0.46179727 5.652605 0.14779104
102 8.324057e+02 0.46179727 5.652605 0.14779104
103 8.324057e+02 0.46179727 5.652605 0.14779104
104 8.324057e+02 0.57067330 2.495198 0.14779104
105 8.324057e+02 0.57067330 2.495198 0.14779104
106 8.324057e+02 0.57067330 2.495198 0.14779104
107 8.324057e+02 0.55279550 2.495198 0.14779104
108 6.527329e+02 0.34745768 5.485622 0.22044281
109 6.246735e+02 0.02979137 8.615785 0.23352802
110 6.953768e+02 0.02979137 8.615785 0.19262268
111 6.953768e+02 0.02979137 8.615785 0.19262268
112 6.953768e+02 0.02979137 8.615785 0.19262268
113 6.953768e+02 0.02979137 8.615785 0.19262268
114 6.953768e+02 0.02979137 8.615785 0.19262268
115 6.953768e+02 0.02979137 8.615785 0.19262268
116 6.953768e+02 0.02979137 8.615785 0.19262268
117 6.953768e+02 0.02979137 8.615785 0.19262268
118 6.953768e+02 0.02979137 8.615785 0.19262268
119 6.953768e+02 0.02979137 8.615785 0.19262268
120 6.953768e+02 0.02979137 8.615785 0.19262268
121 6.756452e+02 0.02979137 8.615785 0.20458216
122 6.756452e+02 0.02979137 8.615785 0.20458216
123 6.756452e+02 0.02979137 8.615785 0.20458216
124 6.756452e+02 0.02979137 8.615785 0.20458216
125 6.756452e+02 0.02979137 8.615785 0.20458216
126 6.756452e+02 0.02979137 8.615785 0.20458216
127 6.756452e+02 0.02979137 8.615785 0.20458216
128 6.756452e+02 0.12021239 9.111540 0.20458216
129 6.756452e+02 0.12021239 9.111540 0.20458216
130 6.756452e+02 0.12021239 9.111540 0.20458216
131 6.581543e+02 0.50599890 9.111540 0.21746917
132 6.581543e+02 0.50599890 9.111540 0.23185332
133 6.581543e+02 0.50599890 9.111540 0.23185332
134 6.581543e+02 0.50599890 9.111540 0.23001156
135 6.581543e+02 0.50599890 9.111540 0.23001156
136 6.581543e+02 0.50599890 9.111540 0.23001156
137 6.581543e+02 0.50599890 9.111540 0.23001156
138 6.581543e+02 0.50599890 9.111540 0.23001156
139 6.581543e+02 0.50599890 9.111540 0.23001156
140 6.581543e+02 0.50599890 9.111540 0.23001156
141 6.581543e+02 0.50599890 9.111540 0.23001156
142 6.581543e+02 0.50599890 9.111540 0.23001156
143 6.581543e+02 0.50599890 9.111540 0.23001156
144 5.896395e+02 0.27809625 9.763186 0.25980129
145 5.896395e+02 0.27809625 9.763186 0.25980129
146 5.751961e+02 0.27809625 9.763186 0.26279861
147 5.751961e+02 0.27809625 9.763186 0.26279861
148 5.751961e+02 0.27809625 9.763186 0.26279861
149 5.751961e+02 0.27809625 9.763186 0.26279861
150 5.751961e+02 0.27809625 9.763186 0.26279861
151 5.751961e+02 0.27809625 9.763186 0.26279861
152 5.211186e+02 0.27809625 9.763186 0.29679682
153 5.211186e+02 0.27809625 9.763186 0.29679682
154 5.211186e+02 0.27809625 9.763186 0.29679682
155 5.211186e+02 0.27809625 9.763186 0.29679682
156 5.211186e+02 0.27809625 9.763186 0.29679682
157 5.211186e+02 0.27809625 9.763186 0.29679682
158 5.211186e+02 0.27809625 9.763186 0.29679682
159 5.211186e+02 0.27809625 9.763186 0.29679682
160 5.211186e+02 0.27809625 9.763186 0.29679682
161 5.211186e+02 0.27809625 9.763186 0.29679682
162 5.211186e+02 0.27809625 9.763186 0.29679682
163 3.916458e+02 0.09588028 8.420032 0.36352711
164 3.566473e+02 0.52999525 2.877605 0.38163329
165 3.566473e+02 0.52999525 1.970781 0.38163329
166 3.800863e+02 0.70513572 4.608017 0.38652483
167 3.440056e+02 0.99119938 6.157990 0.42421091
168 2.767851e+02 0.37712003 5.018136 0.46720175
169 2.568119e+02 0.37806956 4.082498 0.48464182
170 2.050418e+02 0.60182417 4.894945 0.54799168
171 2.050418e+02 0.60182417 4.894945 0.54799168
172 2.272438e+02 0.69648608 5.645586 0.53980877
173 2.272438e+02 0.69648608 5.645586 0.53980877
174 2.272438e+02 0.69648608 5.645586 0.53980877
175 2.272438e+02 0.69648608 5.645586 0.53980877
176 2.272438e+02 0.69648608 5.645586 0.53980877
177 2.272438e+02 0.69648608 5.645586 0.53980877
178 2.272438e+02 0.69648608 5.645586 0.53980877
179 2.272438e+02 0.69648608 5.645586 0.53980877
180 2.272438e+02 0.69648608 5.645586 0.53980877
181 2.272438e+02 0.69648608 5.645586 0.53980877
182 2.272438e+02 0.69648608 6.107536 0.53980877
183 2.272438e+02 0.69648608 6.107536 0.53980877
184 1.451780e+02 0.41640930 7.220881 0.66918993
185 1.451780e+02 0.41640930 7.220881 0.66918993
186 1.451780e+02 0.41640930 7.220881 0.66918993
187 1.451780e+02 0.41640930 7.220881 0.66918993
188 1.451780e+02 0.41640930 7.220881 0.66918993
189 1.451780e+02 0.41640930 8.090304 0.66918993
190 1.451780e+02 0.41640930 8.090304 0.66918993
191 1.451780e+02 0.41640930 8.090304 0.66918993
192 1.451780e+02 0.41640930 8.090304 0.66918993
193 1.451780e+02 0.41640930 8.090304 0.66918993
194 1.451780e+02 0.67950578 7.146719 0.66918993
195 1.451780e+02 0.67950578 7.146719 0.66918993
196 1.451780e+02 0.67950578 7.146719 0.66918993
197 1.451780e+02 0.67950578 7.146719 0.66918993
198 1.451780e+02 0.67950578 7.146719 0.66918993
199 1.451780e+02 0.67950578 7.146719 0.66918993
200 1.190438e+02 0.94522529 8.886295 0.73892096

$member$bestvalit
  [1] 1.165488e+23 2.877268e+20 1.652065e+20 1.652065e+20 2.769027e+19
  [6] 1.814567e+17 1.814567e+17 1.814567e+17 1.814567e+17 1.293273e+17
 [11] 1.293273e+17 1.293273e+17 1.293273e+17 1.293273e+17 1.625356e+16
 [16] 1.625356e+16 1.625356e+16 1.625356e+16 1.625356e+16 1.625356e+16
 [21] 1.580349e+16 1.580349e+16 1.543074e+16 2.482121e+15 1.126038e+15
 [26] 1.126038e+15 6.979356e+14 6.978881e+14 2.502514e+13 2.502157e+13
 [31] 2.502157e+13 1.028717e+13 1.028717e+13 1.028717e+13 7.445359e+12
 [36] 7.445359e+12 7.445359e+12 1.611198e+12 1.611198e+12 1.611198e+12
 [41] 1.611198e+12 1.611169e+12 5.166508e+11 5.164042e+11 4.275446e+11
 [46] 4.275446e+11 4.275446e+11 3.877132e+11 3.874841e+11 5.894503e+10
 [51] 3.206746e+08 3.206746e+08 3.206129e+08 3.206129e+08 2.976360e+08
 [56] 2.976360e+08 2.976360e+08 2.976360e+08 2.146368e+08 1.884874e+06
 [61] 1.884874e+06 1.884874e+06 1.874434e+06 1.874434e+06 1.873494e+06
 [66] 1.873494e+06 1.873494e+06 1.800005e+06 1.800005e+06 1.800005e+06
 [71] 1.751896e+06 1.751896e+06 1.751896e+06 1.737226e+06 1.737226e+06
 [76] 1.737226e+06 1.737226e+06 1.737226e+06 1.737226e+06 1.737226e+06
 [81] 1.737182e+06 1.737182e+06 1.737182e+06 1.679836e+06 1.679836e+06
 [86] 1.679836e+06 1.679836e+06 1.679836e+06 1.679836e+06 1.670185e+06
 [91] 1.640543e+06 1.610833e+06 1.599754e+06 1.549152e+06 1.457320e+06
 [96] 1.457320e+06 1.457320e+06 1.457320e+06 1.457320e+06 1.457320e+06
[101] 1.386435e+06 1.341498e+06 1.266709e+06 1.252363e+06 1.252363e+06
[106] 1.252218e+06 1.252218e+06 1.249643e+06 1.159085e+06 1.159085e+06
[111] 1.159085e+06 1.159085e+06 1.135677e+06 1.135677e+06 1.135677e+06
[116] 1.124882e+06 1.123860e+06 1.123860e+06 1.123860e+06 1.123860e+06
[121] 1.123860e+06 1.123860e+06 1.123860e+06 1.123860e+06 1.123860e+06
[126] 1.123860e+06 1.123860e+06 1.123860e+06 1.119786e+06 1.119786e+06
[131] 1.119786e+06 1.119786e+06 1.119786e+06 1.109470e+06 1.109470e+06
[136] 1.109470e+06 1.065153e+06 1.065153e+06 1.065153e+06 1.037730e+06
[141] 9.919205e+05 9.919205e+05 9.919205e+05 9.919205e+05 9.919205e+05
[146] 9.919205e+05 9.919093e+05 9.919093e+05 9.919093e+05 9.919093e+05
[151] 9.919093e+05 9.919093e+05 9.919093e+05 9.919093e+05 9.919093e+05
[156] 9.919093e+05 9.919093e+05 9.919093e+05 9.919093e+05 9.919093e+05
[161] 9.919093e+05 9.904896e+05 9.405445e+05 9.294829e+05 9.294829e+05
[166] 9.144721e+05 8.463126e+05 7.882677e+05 7.586927e+05 7.112063e+05
[171] 7.112063e+05 6.580252e+05 6.580252e+05 6.580252e+05 6.580252e+05
[176] 5.884514e+05 5.884514e+05 5.884514e+05 5.884514e+05 5.884514e+05
[181] 5.884514e+05 5.876619e+05 5.671248e+05 4.944094e+05 4.944094e+05
[186] 4.944094e+05 3.950307e+05 3.950307e+05 3.950307e+05 3.950307e+05
[191] 3.950307e+05 3.950307e+05 3.950307e+05 3.950307e+05 3.950307e+05
[196] 3.950307e+05 3.950307e+05 3.950307e+05 3.950307e+05 3.614397e+05

$member$pop
           [,1]      [,2]     [,3]      [,4]
 [1,] 115.22342 0.6399175 7.328136 0.7435487
 [2,] 104.62860 0.4068123 6.875791 0.7418700
 [3,] 152.87065 0.9963921 6.632030 0.6634954
 [4,] 256.98826 0.8206708 5.587409 0.5049008
 [5,] 159.97313 0.8614730 5.728708 0.6528100
 [6,] 159.77247 0.5757060 8.146518 0.6433589
 [7,] 586.81124 0.5619746 8.485703 0.2586266
 [8,] 150.17491 0.3258769 8.213946 0.6368834
 [9,] 157.69132 0.4394420 7.841468 0.6366474
[10,] 145.17797 0.3019316 7.538382 0.6495127
[11,] 113.86425 0.8559306 8.974811 0.7383524
[12,] 100.59321 0.4231825 8.834059 0.7822531
[13,] 139.70949 0.4028993 3.582470 0.6452825
[14,] 138.07252 0.6182952 4.894945 0.6837098
[15,] 196.94004 0.5299863 8.130966 0.5881096
[16,] 149.72138 0.2781517 7.392174 0.6389338
[17,] 155.90065 0.6315040 7.990375 0.6539752
[18,]  92.91681 0.1641328 6.043767 0.7566796
[19,] 127.27682 0.6788313 8.029992 0.7068877
[20,] 331.83734 0.3264129 7.166794 0.4119142
[21,] 158.93175 0.9209284 7.257291 0.6532298
[22,] 154.37350 0.6417917 8.989513 0.6572279
[23,] 127.49715 0.3795836 5.877552 0.6842650
[24,] 127.77595 0.9356802 8.444109 0.7240021
[25,] 120.00867 0.1570427 6.658852 0.6730238
[26,] 150.99776 0.5477716 8.410842 0.6499524
[27,] 141.80336 0.8042314 6.906888 0.6786197
[28,] 119.04381 0.9452253 8.886295 0.7389210
[29,] 121.69806 0.9452253 8.886295 0.7389210
[30,] 136.44263 0.5600751 9.375428 0.6871722
[31,] 227.64901 0.9063539 8.490911 0.5437949
[32,] 215.38570 0.7372909 6.102354 0.5537816
[33,] 176.91207 0.4234329 5.613931 0.5920794
[34,] 389.47070 0.2002887 5.483854 0.3551714
[35,] 161.75353 0.3793192 7.412062 0.6276439
[36,] 145.49776 0.5794692 8.832487 0.6728640
[37,] 143.14909 0.7731072 7.005179 0.6777515
[38,] 160.85707 0.5751910 7.827459 0.6362285
[39,] 542.03022 0.2434138 9.615805 0.2755088
[40,] 159.28295 0.2920533 9.293090 0.6285634
[41,] 144.97739 0.4961689 3.789683 0.6384797
[42,] 104.37817 0.9405974 6.075614 0.7821246
[43,] 139.98781 0.4454054 5.501694 0.6507587
[44,] 114.22664 0.5226004 8.797068 0.7393139
[45,] 179.91260 0.7591218 8.645870 0.6074702
[46,] 138.46674 0.2506344 8.338297 0.6572952
[47,] 217.82808 0.9019956 4.968908 0.5521162
[48,] 188.77857 0.8359943 5.361049 0.6218700
[49,] 166.99685 0.7641003 6.106012 0.6293021
[50,] 104.28109 0.2792607 6.859150 0.7422415

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho          nu 
121.6980625   0.9452253   8.8862946   0.7389210 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1256.204 1287.799 1307.016 1315.612 1315.612 1328.079 1354.437 1356.753
 [9] 1326.134 1360.612 1387.514 1504.528 1550.433 1590.027 1565.506 1578.698
[17] 1639.036 1693.604 1773.261 1845.789

$residuals
 [1] -310.07129 -325.06873 -237.43711 -143.81542 -137.49585 -142.26933
 [7] -115.07875  -68.19257 -118.42783  -82.20340  -26.92110   36.25634
[13]   24.60137  105.93199   79.18311   47.33271   16.00385   61.99578
[19]  114.15952  146.10474

$rss
[1] 417549.7

$cov.unscaled
      gamma delta rho nu
gamma    NA    NA  NA NA
delta    NA    NA  NA NA
rho      NA    NA  NA NA
nu       NA    NA  NA NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho       nu 
121.6981   0.9452   8.8863   0.7389 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 121.6981         NA      NA       NA
delta   0.9452         NA      NA       NA
rho     8.8863         NA      NA       NA
nu      0.7389         NA      NA       NA

Residual standard error: 144.4904 
Multiple R-squared: 0.7641117 

> coef( summary( cesLandIntDeVrs ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 121.6980625         NA      NA       NA
delta   0.9452253         NA      NA       NA
rho     8.8862946         NA      NA       NA
nu      0.7389210         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
49.6171406  0.9899995 -0.9899983 

$optim$bestval
[1] 166012.8

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2       par3
1   44.26785 0.9316579 -0.8082296
2   44.26785 0.9316579 -0.8082296
3   44.26785 0.9316579 -0.8082296
4   44.26785 0.9316579 -0.8082296
5   44.26785 0.9316579 -0.8082296
6   44.26785 0.9316579 -0.8082296
7   44.26785 0.9316579 -0.8082296
8   44.26785 0.9486873 -0.8082296
9   44.26785 0.9486873 -0.8082296
10  44.26785 0.9486873 -0.8082296
11  44.26785 0.9486873 -0.9396623
12  44.26785 0.9486873 -0.9396623
13  46.11245 0.9486873 -0.9283431
14  46.11245 0.9486873 -0.9283431
15  46.11245 0.9486873 -0.9283431
16  47.05165 0.9486873 -0.8741085
17  47.05165 0.9776225 -0.8741085
18  48.45827 0.9776225 -0.8741085
19  48.45827 0.9776225 -0.8741085
20  48.45827 0.9776225 -0.8741085
21  49.64200 0.9776225 -0.8741085
22  49.64200 0.9776225 -0.8741085
23  49.64200 0.9851744 -0.6491656
24  49.64200 0.9851744 -0.6491656
25  49.64200 0.9851744 -0.6491656
26  49.64200 0.9882265 -0.6491656
27  49.64200 0.9882265 -0.6491656
28  49.64200 0.9882265 -0.7252476
29  49.64200 0.9882265 -0.7252476
30  49.64200 0.9882265 -0.7252476
31  49.64200 0.9882265 -0.7252476
32  49.64200 0.9882265 -0.7885219
33  49.64200 0.9882265 -0.7885219
34  49.64200 0.9882265 -0.7889154
35  49.64200 0.9882265 -0.7889154
36  49.64200 0.9882265 -0.7889154
37  49.79611 0.9887212 -0.6777529
38  49.79611 0.9887212 -0.6777529
39  49.79611 0.9887212 -0.6777529
40  49.79611 0.9887212 -0.6777529
41  49.87762 0.9887212 -0.6777529
42  49.87762 0.9887212 -0.6777529
43  49.85375 0.9887212 -0.6777529
44  49.85375 0.9887212 -0.6777529
45  49.85375 0.9889484 -0.6777529
46  49.76137 0.9889484 -0.7586113
47  49.77005 0.9889484 -0.7586113
48  49.80044 0.9889484 -0.7648602
49  49.80044 0.9889484 -0.7648602
50  49.80044 0.9889484 -0.7648602
51  49.80044 0.9889484 -0.8538413
52  49.71643 0.9890586 -0.9185103
53  49.71643 0.9890586 -0.9185103
54  49.70496 0.9890586 -0.9802516
55  49.70496 0.9882704 -0.9802516
56  49.70496 0.9882704 -0.9802516
57  49.70496 0.9882704 -0.9802516
58  49.70496 0.9882704 -0.9802516
59  49.70496 0.9883158 -0.9802516
60  49.70496 0.9883158 -0.9802516
61  49.70496 0.9883158 -0.9802516
62  49.70496 0.9883158 -0.9802516
63  49.66588 0.9888711 -0.9855297
64  49.66588 0.9888711 -0.9855297
65  49.65150 0.9891723 -0.9855297
66  49.65150 0.9891723 -0.9855297
67  49.65150 0.9891723 -0.9855297
68  49.65150 0.9891723 -0.9855297
69  49.65150 0.9891723 -0.9855297
70  49.65150 0.9891723 -0.9855297
71  49.65150 0.9891723 -0.9855297
72  49.65150 0.9891723 -0.9855297
73  49.65150 0.9891723 -0.9855297
74  49.66060 0.9891723 -0.9855297
75  49.66060 0.9891723 -0.9855297
76  49.66060 0.9891723 -0.9855297
77  49.66060 0.9891723 -0.9855297
78  49.66060 0.9891723 -0.9877668
79  49.66060 0.9891723 -0.9877668
80  49.66060 0.9891723 -0.9877668
81  49.66060 0.9891723 -0.9877668
82  49.65464 0.9891723 -0.9887609
83  49.65464 0.9891723 -0.9887609
84  49.65464 0.9891723 -0.9887609
85  49.65464 0.9893623 -0.9887609
86  49.65464 0.9893623 -0.9887609
87  49.64979 0.9893623 -0.9887609
88  49.64979 0.9893623 -0.9887609
89  49.64979 0.9893623 -0.9887609
90  49.64979 0.9893623 -0.9887609
91  49.64979 0.9893623 -0.9887609
92  49.64979 0.9893623 -0.9887609
93  49.64979 0.9895720 -0.9887609
94  49.64979 0.9895720 -0.9887609
95  49.64979 0.9895720 -0.9887609
96  49.64979 0.9895720 -0.9887609
97  49.63928 0.9895720 -0.9887609
98  49.63928 0.9895720 -0.9887609
99  49.63928 0.9895720 -0.9887609
100 49.64066 0.9896858 -0.9890033
101 49.64066 0.9896858 -0.9890033
102 49.64066 0.9896858 -0.9890033
103 49.64066 0.9896858 -0.9890033
104 49.63647 0.9897100 -0.9896834
105 49.63647 0.9897516 -0.9896834
106 49.63647 0.9897516 -0.9896834
107 49.63647 0.9897516 -0.9896834
108 49.63647 0.9897516 -0.9896834
109 49.63647 0.9897516 -0.9896834
110 49.62960 0.9898059 -0.9896237
111 49.62960 0.9898059 -0.9898160
112 49.62960 0.9898178 -0.9898160
113 49.62420 0.9898394 -0.9898160
114 49.62420 0.9898394 -0.9898160
115 49.62420 0.9898400 -0.9899892
116 49.62420 0.9898400 -0.9899892
117 49.62420 0.9898400 -0.9899892
118 49.62420 0.9898400 -0.9899892
119 49.62420 0.9898400 -0.9899892
120 49.62420 0.9898400 -0.9899892
121 49.62420 0.9898400 -0.9899892
122 49.62420 0.9898400 -0.9899892
123 49.62372 0.9899304 -0.9899407
124 49.62372 0.9899813 -0.9899096
125 49.62372 0.9899813 -0.9899096
126 49.62372 0.9899813 -0.9899096
127 49.62372 0.9899813 -0.9899096
128 49.62372 0.9899813 -0.9899096
129 49.62372 0.9899813 -0.9899096
130 49.62372 0.9899813 -0.9899096
131 49.62372 0.9899813 -0.9899375
132 49.62372 0.9899813 -0.9899375
133 49.62372 0.9899813 -0.9899375
134 49.62340 0.9899884 -0.9899287
135 49.62142 0.9899884 -0.9899468
136 49.62142 0.9899884 -0.9899468
137 49.62142 0.9899884 -0.9899468
138 49.62040 0.9899884 -0.9899468
139 49.62040 0.9899884 -0.9899468
140 49.61922 0.9899913 -0.9898739
141 49.61922 0.9899913 -0.9898739
142 49.61922 0.9899913 -0.9898739
143 49.61796 0.9899930 -0.9897678
144 49.61796 0.9899930 -0.9898028
145 49.61796 0.9899930 -0.9898028
146 49.61796 0.9899977 -0.9898028
147 49.61796 0.9899977 -0.9898928
148 49.61796 0.9899981 -0.9898928
149 49.61796 0.9899981 -0.9898928
150 49.61758 0.9899981 -0.9898928
151 49.61758 0.9899981 -0.9898928
152 49.61758 0.9899981 -0.9898928
153 49.61758 0.9899981 -0.9898928
154 49.61758 0.9899981 -0.9898928
155 49.61758 0.9899981 -0.9898928
156 49.61736 0.9899981 -0.9898928
157 49.61736 0.9899981 -0.9898928
158 49.61736 0.9899981 -0.9898928
159 49.61736 0.9899981 -0.9898928
160 49.61736 0.9899981 -0.9898928
161 49.61736 0.9899981 -0.9898928
162 49.61775 0.9899989 -0.9898887
163 49.61775 0.9899989 -0.9898887
164 49.61775 0.9899989 -0.9898887
165 49.61775 0.9899989 -0.9898887
166 49.61775 0.9899989 -0.9899151
167 49.61775 0.9899989 -0.9899520
168 49.61777 0.9899989 -0.9899680
169 49.61777 0.9899989 -0.9899680
170 49.61777 0.9899989 -0.9899680
171 49.61777 0.9899989 -0.9899680
172 49.61777 0.9899989 -0.9899680
173 49.61777 0.9899989 -0.9899680
174 49.61777 0.9899989 -0.9899680
175 49.61777 0.9899989 -0.9899680
176 49.61777 0.9899987 -0.9899911
177 49.61777 0.9899987 -0.9899911
178 49.61765 0.9899987 -0.9899879
179 49.61765 0.9899987 -0.9899879
180 49.61777 0.9899989 -0.9899879
181 49.61777 0.9899989 -0.9899879
182 49.61777 0.9899989 -0.9899879
183 49.61763 0.9899989 -0.9899919
184 49.61763 0.9899989 -0.9899919
185 49.61763 0.9899989 -0.9899919
186 49.61763 0.9899989 -0.9899919
187 49.61763 0.9899989 -0.9899919
188 49.61751 0.9899989 -0.9899919
189 49.61751 0.9899989 -0.9899919
190 49.61714 0.9899989 -0.9899928
191 49.61714 0.9899989 -0.9899928
192 49.61709 0.9899992 -0.9899928
193 49.61716 0.9899994 -0.9899928
194 49.61716 0.9899994 -0.9899963
195 49.61719 0.9899995 -0.9899983
196 49.61719 0.9899995 -0.9899983
197 49.61719 0.9899995 -0.9899983
198 49.61719 0.9899995 -0.9899983
199 49.61719 0.9899995 -0.9899983
200 49.61719 0.9899995 -0.9899983

$member$bestvalit
  [1] 1337461.6 1337461.6  441839.8  441839.8  303341.7  303341.7  303341.7
  [8]  238150.4  238150.4  238150.4  238150.4  238150.4  238150.4  206790.6
 [15]  206790.6  206790.6  183325.9  168092.1  168092.1  168092.1  166446.3
 [22]  166146.5  166146.5  166146.5  166146.5  166061.7  166061.7  166061.7
 [29]  166061.7  166061.7  166061.7  166061.7  166061.7  166061.7  166061.7
 [36]  166061.7  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1
 [43]  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1  166052.1
 [50]  166052.1  166052.1  166052.1  166036.8  166036.8  166036.8  166036.8
 [57]  166036.8  166036.8  166036.8  166036.8  166036.8  166036.8  166027.6
 [64]  166023.9  166023.9  166022.7  166022.7  166022.7  166018.1  166018.1
 [71]  166017.7  166017.2  166017.2  166017.2  166017.2  166014.6  166014.6
 [78]  166014.6  166014.6  166014.6  166014.6  166014.6  166014.4  166013.5
 [85]  166013.5  166013.5  166013.5  166013.5  166013.5  166013.5  166013.4
 [92]  166013.4  166013.4  166013.4  166013.4  166013.4  166013.4  166013.4
 [99]  166013.4  166013.4  166013.4  166013.1  166013.1  166013.1  166013.1
[106]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1
[113]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1
[120]  166013.1  166013.1  166013.1  166013.1  166013.1  166013.1  166013.0
[127]  166013.0  166013.0  166013.0  166013.0  166013.0  166012.9  166012.9
[134]  166012.9  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[141]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[148]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[155]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[162]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[169]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[176]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[183]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[190]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[197]  166012.8  166012.8  166012.8  166012.8

$member$pop
          [,1]      [,2]       [,3]
 [1,] 49.61707 0.9899999 -0.9899986
 [2,] 49.61714 0.9899995 -0.9899983
 [3,] 49.61723 0.9899996 -0.9899999
 [4,] 49.61726 0.9899997 -0.9899985
 [5,] 49.61708 0.9899995 -0.9899983
 [6,] 49.61725 0.9899998 -0.9899938
 [7,] 49.61708 0.9899998 -0.9899940
 [8,] 49.61687 0.9899996 -0.9899976
 [9,] 49.61712 0.9900000 -0.9899998
[10,] 49.61660 0.9899994 -0.9899984
[11,] 49.61667 0.9899995 -0.9899991
[12,] 49.61720 0.9899998 -0.9899937
[13,] 49.61691 0.9899997 -0.9899942
[14,] 49.61717 0.9899996 -0.9899981
[15,] 49.61719 0.9899997 -0.9899989
[16,] 49.61691 0.9899996 -0.9899965
[17,] 49.61712 0.9899999 -0.9899964
[18,] 49.61702 0.9899997 -0.9899935
[19,] 49.61695 0.9899996 -0.9899964
[20,] 49.61710 0.9899998 -0.9899989
[21,] 49.61697 0.9900000 -0.9899974
[22,] 49.61705 0.9899997 -0.9899974
[23,] 49.61697 0.9899997 -0.9899982
[24,] 49.61688 0.9899996 -0.9899996
[25,] 49.61679 0.9899999 -0.9899950
[26,] 49.61688 0.9899998 -0.9899990
[27,] 49.61705 0.9899997 -0.9899934
[28,] 49.61699 0.9899998 -0.9899973
[29,] 49.61708 0.9899999 -0.9899959
[30,] 49.61707 0.9899998 -0.9899988
[31,] 49.61693 0.9899998 -0.9899970
[32,] 49.61687 0.9900000 -0.9899864
[33,] 49.61676 0.9899997 -0.9899972
[34,] 49.61670 0.9899999 -0.9899924
[35,] 49.61688 0.9899998 -0.9899987
[36,] 49.61695 0.9899998 -0.9899964
[37,] 49.61696 0.9899998 -0.9899974
[38,] 49.61705 0.9899999 -0.9899998
[39,] 49.61691 0.9899997 -0.9899988
[40,] 49.61686 0.9899997 -0.9899989
[41,] 49.61696 0.9899997 -0.9900000
[42,] 49.61697 0.9899998 -0.9899999
[43,] 49.61706 0.9899998 -0.9899997
[44,] 49.61707 0.9899996 -0.9899980
[45,] 49.61685 0.9899999 -0.9899993
[46,] 49.61683 0.9900000 -0.9899975
[47,] 49.61707 0.9899997 -0.9899971
[48,] 49.61664 0.9899999 -0.9899986
[49,] 49.61760 0.9899998 -0.9899993
[50,] 49.61680 0.9899997 -0.9899988

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
49.6171406  0.9899995 -0.9899983 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150.056 1189.354 1213.416 1224.241 1224.241 1239.954 1273.342 1276.310
 [9] 1237.503 1281.242 1315.623 1467.965 1528.875 1581.905 1548.987 1566.648
[17] 1648.186 1722.843 1833.354 1935.516

$residuals
 [1] -203.922518 -226.623155 -143.836333  -52.445024  -46.125457  -54.143599
 [7]  -33.984609   12.251077  -29.796691   -2.833377   44.969346   72.818753
[13]   46.160076  114.054598   95.702409   59.383026    6.853733   32.757049
[19]   54.066079   56.378179

$rss
[1] 166012.8

$cov.unscaled
            gamma      delta         rho
gamma  2206.42030 -64.362577 -2181.04555
delta   -64.36258   1.877581    63.63279
rho   -2181.04555  63.632791  2157.20635

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error   t value Pr(>|t|)
gamma    49.62    4279.57     0.012    0.991
delta     0.99     124.84     0.008    0.994
rho      -0.99    4231.57 -0.000234    1.000

Residual standard error: 91.10784 
Multiple R-squared: 0.9062137 

> coef( cesLandLaborDe2 )
     gamma      delta        rho 
49.6171406  0.9899995 -0.9899983 
> vcov( cesLandLaborDe2 )
            gamma      delta         rho
gamma  18314697.1 -534250.48 -18104070.5
delta   -534250.5   15585.12    528192.8
rho   -18104070.5  528192.79  17906189.9
> coef( summary( cesLandLaborDe2 ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma 49.6171406  4279.5674  0.0115939617 0.9907496
delta  0.9899995   124.8404  0.0079301219 0.9936727
rho   -0.9899983  4231.5706 -0.0002339553 0.9998133
> fitted( cesLandLaborDe2 )
 [1] 1150.056 1189.354 1213.416 1224.241 1224.241 1239.954 1273.342 1276.310
 [9] 1237.503 1281.242 1315.623 1467.965 1528.875 1581.905 1548.987 1566.648
[17] 1648.186 1722.843 1833.354 1935.516
> residuals( cesLandLaborDe2 )
 [1] -203.922518 -226.623155 -143.836333  -52.445024  -46.125457  -54.143599
 [7]  -33.984609   12.251077  -29.796691   -2.833377   44.969346   72.818753
[13]   46.160076  114.054598   95.702409   59.383026    6.853733   32.757049
[19]   54.066079   56.378179
> 
> # constant returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # variable returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 


R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-7)
Loading required package: minpack.lm
Loading required package: DEoptim
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor (Nelder-Mead)
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "NM" )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$rss
[1] 165914.1

$cov.unscaled
           gamma        delta         rho
gamma 51681024.1 -180250.3889 -949936.086
delta  -180250.4     628.6881    3313.548
rho    -949936.1    3313.5476   17468.864

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  1.003e+02  6.548e+05  1.53e-04        1
delta  6.909e-02  2.284e+03  3.03e-05        1
rho   -3.746e+00  1.204e+04 -3.11e-04        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428730578760 -1495304223 -7880390441
delta  -1495304223     5215412    27488217
rho    -7880390441    27488217   144916561
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654775.212  1.531062e-04 0.9998778
delta   0.06909165   2283.728  3.025389e-05 0.9999759
rho    -3.74630543  12038.129 -3.112033e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale (Nelder-Mead)
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180

$rss
[1] 83794.05

$cov.unscaled
             gamma         delta           rho            nu
gamma 343.31007871 -1.045707e-01 -2.2492500342  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
nu      0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
    gamma     delta       rho        nu 
233.84853   0.01535  -1.86100   1.43203 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
nu       1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

> coef( cesLandLaborVrs )
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho           nu
gamma 1438367.1567 -438.12004121 -9423.688895 188.41146051
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
nu        188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194557  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
nu      1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$rss
[1] 610748.6

$cov.unscaled
            gamma        delta          rho
gamma 1034.396377 -2.569522629 -3.466063908
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.70 -78466.6193 -105844.6864
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$rss
[1] 177510.9

$cov.unscaled
             gamma         delta          rho
gamma 11108.427498 -2.1880051887 -92.89635405
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896354  0.0183133367   0.77803366

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.899718 

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593373.54 -19419.743516 -824505.9831
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540886    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419597  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099185 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939

$rss
[1] 165843.9

$cov.unscaled
           gamma       delta         rho
gamma 1713990506 -7740272.06 -39478894.2
delta   -7740272    34955.27    178300.3
rho    -39478894   178300.28    909704.6

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47345  0.07176 -4.39599 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.947e+01  3.770e+06  2.37e-05        1
delta  7.176e-02  1.703e+04  4.21e-06        1
rho   -4.396e+00  8.685e+04 -5.06e-05        1

Residual standard error: 91.06148 
Multiple R-squared: 0.906309 

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.421274e+13 -64183833425 -327366628335
delta -6.418383e+10    289855849    1478500402
rho   -3.273666e+11   1478500402    7543446583
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47345267 3769978.90  2.373314e-05 0.9999811
delta  0.07175508   17025.15  4.214651e-06 0.9999966
rho   -4.39599297   86853.02 -5.061417e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B" )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      66       66 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$iter
function gradient 
      66       66 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.800580e+00 -3.879189e-02 -2.783350e+11
delta -3.879189e-02  8.357862e-04  6.048757e+09
rho   -2.783350e+11  6.048757e+09  1.636011e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 66 function and 66 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.222e+02     0.402    0.688
delta  1.000e+00  2.632e+00     0.380    0.704
rho   -9.999e-01  3.683e+13 -2.71e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborBfgsCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.492972e+04 -3.216476e+02 -2.307848e+15
delta -3.216476e+02  6.930020e+00  5.015399e+13
rho   -2.307848e+15  5.015399e+13  1.356518e+27
> coef( summary( cesLandLaborBfgsCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.221872e+02  4.021938e-01 0.6875414
delta  1.0000000 2.632493e+00  3.798680e-01 0.7040434
rho   -0.9999222 3.683094e+13 -2.714897e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.015804                                  
2     17 0.051750 -3 -0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$rss
[1] 2.128614e+18

$cov.unscaled
              gamma         delta           rho
gamma  5.725090e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.0006662873

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.448e-03  -3.486 0.000490 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.448074e-03 -3.4860859 0.0004901436
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$rss
[1] 3.337947e+13

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
nu     3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho         nu 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.001270271

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  3.626e-02  -1.296    0.195    
nu     1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 
Multiple R-squared: -18857212 

> coef( cesLandLaborKmenta )
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 3.626408e-02 -1.29648715 1.948077e-01
nu     1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.61969669587125, 4.8555657017719, -0.461292104597317 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$rss
[1] 122985.2

$cov.unscaled
            gamma       delta          rho
gamma  13.9283784 -15.9958960  0.286083732
delta -15.9958960  18.3706647 -0.328580667
rho     0.2860837  -0.3285807  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.237 -98362.943  1759.20360
delta -98362.943 112966.016 -2020.52836
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658910  0.008951365 0.9928579
delta  4.8555657 336.104174  0.014446609 0.9884737
rho   -0.4612921   6.012499 -0.076722194 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168475.9

$nlm$estimate
[1] 274.353181715   0.000952076  -4.038093245

$nlm$gradient
[1] -3.539155e+02 -2.778149e+07  4.836406e+04

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967

$residuals
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101

$rss
[1] 168475.9

$cov.unscaled
              gamma         delta           rho
gamma 116890.897642 -3.9407087159 -1.405139e+03
delta     -3.940709  0.0001329177  4.741141e-02
rho    -1405.139376  0.0474114129  1.691587e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
     gamma      delta        rho 
274.353182   0.000952  -4.038093 

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.744e+02  3.138e+04   0.009    0.993
delta  9.521e-04  1.058e+00   0.001    0.999
rho   -4.038e+00  3.775e+02  -0.011    0.991

Residual standard error: 91.78123 
Multiple R-squared: 0.9048222 

> coef( cesLandLaborNewton )
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 
> vcov( cesLandLaborNewton )
             gamma         delta           rho
gamma 984664868.80 -33195.719333 -11836604.964
delta    -33195.72      1.119672       399.384
rho   -11836604.96    399.383986    142495.827
> coef( summary( cesLandLaborNewton ) )
           Estimate   Std. Error       t value Pr(>|t|)
gamma 274.353181715 31379.370115  0.0087431067 0.993024
delta   0.000952076     1.058145  0.0008997592 0.999282
rho    -4.038093245   377.486195 -0.0106973270 0.991465
> fitted( cesLandLaborNewton )
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967
> residuals( cesLandLaborNewton )
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "iteration limit reached without convergence (9)"

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     197      151 


$coefficients
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725

$residuals
 [1] -203.802738 -226.519270 -143.750409  -52.344484  -46.024917  -54.056558
 [7]  -33.925631   12.328883  -29.703239   -2.737800   45.046540   72.896126
[13]   46.209965  114.060771   95.715991   59.366706    6.798830   32.662118
[19]   53.911863   56.169127

$rss
[1] 165832.5

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
   gamma    delta      rho 
79.48222  0.05599 -5.99521 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.48222         NA      NA       NA
delta  0.05599         NA      NA       NA
rho   -5.99521         NA      NA       NA

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

> coef( cesLandLaborPort )
      gamma       delta         rho 
79.48222273  0.05599207 -5.99520773 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 79.48222273         NA      NA       NA
delta  0.05599207         NA      NA       NA
rho   -5.99520773         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725
> residuals( cesLandLaborPort )
 [1] -203.802738 -226.519270 -143.750409  -52.344484  -46.024917  -54.056558
 [7]  -33.925631   12.328883  -29.703239   -2.737800   45.046540   72.896126
[13]   46.209965  114.060771   95.715991   59.366706    6.798830   32.662118
[19]   53.911863   56.169127
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$message
[1] "both X-convergence and relative convergence (5)"

$nlminb$iterations
[1] 68

$nlminb$evaluations
function gradient 
     109       68 


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$iter
[1] 68

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.329859e+00 -2.856661e-02  3.089893e+10
delta -2.856661e-02  6.136682e-04 -7.059028e+08
rho    3.089893e+10 -7.059028e+08  4.030348e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence achieved after 68 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.050e+02     0.468    0.640
delta  1.000e+00  2.256e+00     0.443    0.658
rho   -1.000e+00  5.781e+13 -1.73e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborPortCon )
   gamma    delta      rho 
49.14295  1.00000 -1.00000 
> vcov( cesLandLaborPortCon )
              gamma         delta           rho
gamma  1.102669e+04 -2.368634e+02  2.562021e+14
delta -2.368634e+02  5.088303e+00 -5.853076e+12
rho    2.562021e+14 -5.853076e+12  3.341811e+27
> coef( summary( cesLandLaborPortCon ) )
      Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.14295 1.050080e+02  4.679923e-01 0.6397901
delta  1.00000 2.255727e+00  4.433161e-01 0.6575371
rho   -1.00000 5.780840e+13 -1.729853e-14 1.0000000
> fitted( cesLandLaborPortCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborPortCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained by hand
> cesLandLaborPortCon2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0.1, 0.1, -0.5 ), upper = c( 300, 0.9, 4 ) )
> print.default( cesLandLaborPortCon2 )
$nlminb
$nlminb$par
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$nlminb$objective
[1] 174341.5

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 37

$nlminb$evaluations
function gradient 
      71       38 


$coefficients
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

$method
[1] "PORT"

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0.1  0.1 -0.5

$upper
[1] 300.0   0.9   4.0

$fitted.values
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552

$residuals
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776

$rss
[1] 174341.5

$cov.unscaled
           gamma       delta        rho
gamma 261.317656 -4.43884282 -16.513536
delta  -4.438843  0.07540909   0.280593
rho   -16.513536  0.28059303   1.044383

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Coefficients:
gamma delta   rho 
57.69  0.90 -0.50 

> summary( cesLandLaborPortCon2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence achieved after 37 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    57.69    1509.28   0.038    0.970
delta     0.90      25.64   0.035    0.972
rho      -0.50      95.41  -0.005    0.996

Residual standard error: 93.36527 
Multiple R-squared: 0.9015085 

> coef( cesLandLaborPortCon2 )
   gamma    delta      rho 
57.69045  0.90000 -0.50000 
> vcov( cesLandLaborPortCon2 )
           gamma       delta         rho
gamma 2277925.28 -38693.7203 -143949.714
delta  -38693.72    657.3466    2445.950
rho   -143949.71   2445.9501    9103.968
> coef( summary( cesLandLaborPortCon2 ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 57.69045 1509.27972  0.038223827 0.9695092
delta  0.90000   25.63877  0.035103086 0.9719975
rho   -0.50000   95.41471 -0.005240282 0.9958189
> fitted( cesLandLaborPortCon2 )
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552
> residuals( cesLandLaborPortCon2 )
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 

$nlminb$objective
[1] 63124.96

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 112

$nlminb$evaluations
function gradient 
     200      113 


$coefficients
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 

$iter
[1] 112

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1060.701 1103.177 1118.125 1156.391 1156.391 1163.854 1180.336 1212.395
 [9] 1168.744 1246.564 1279.700 1560.776 1634.139 1664.915 1612.570 1596.515
[17] 1690.939 1770.388 1889.620 2001.560

$residuals
 [1] -114.568258 -140.446314  -48.546123   15.405042   21.724608   21.956020
 [7]   59.021761   76.166321   38.962195   31.844934   80.892399  -19.992192
[13]  -59.104303   31.043896   32.118626   29.515669  -35.899308  -14.788462
[19]   -2.199407   -9.665539

$rss
[1] 63124.96

$cov.unscaled
            gamma         delta           rho            nu
gamma 84.91805761 -3.078676e-01 -0.5866017859  2.459042e-02
delta -0.30786760  1.116635e-03  0.0021272016 -9.074794e-05
rho   -0.58660179  2.127202e-03  0.0040565995 -1.665438e-04
nu     0.02459042 -9.074794e-05 -0.0001665438  1.892731e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
80.0678  0.2195 -0.4769  1.8953 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 112 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  80.0678   517.7088   0.155    0.877    
delta   0.2195     1.8773   0.117    0.907    
rho    -0.4769     3.5782  -0.133    0.894    
nu      1.8953     0.2444   7.754 8.89e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 56.18049 
Multiple R-squared: 0.9643385 

> coef( cesLandLaborPortVrs )
     gamma      delta        rho         nu 
80.0677761  0.2194690 -0.4768859  1.8952546 
> vcov( cesLandLaborPortVrs )
             gamma       delta           rho          nu
gamma 268022.44453 -971.706488 -1851.4606793 77.61345522
delta   -971.70649    3.524378     6.7139757 -0.28642301
rho    -1851.46068    6.713976    12.8036339 -0.52565360
nu        77.61346   -0.286423    -0.5256536  0.05973928
> coef( summary( cesLandLaborPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma 80.0677761 517.7088415  0.1546579 8.770910e-01
delta  0.2194690   1.8773326  0.1169047 9.069356e-01
rho   -0.4768859   3.5782166 -0.1332747 8.939761e-01
nu     1.8952546   0.2444162  7.7542098 8.889523e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060.701 1103.177 1118.125 1156.391 1156.391 1163.854 1180.336 1212.395
 [9] 1168.744 1246.564 1279.700 1560.776 1634.139 1664.915 1612.570 1596.515
[17] 1690.939 1770.388 1889.620 2001.560
> residuals( cesLandLaborPortVrs )
 [1] -114.568258 -140.446314  -48.546123   15.405042   21.724608   21.956020
 [7]   59.021761   76.166321   38.962195   31.844934   80.892399  -19.992192
[13]  -59.104303   31.043896   32.118626   29.515669  -35.899308  -14.788462
[19]   -2.199407   -9.665539
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 

$nlminb$objective
[1] 62517.76

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 134

$nlminb$evaluations
function gradient 
     200      134 


$coefficients
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 

$iter
[1] 134

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1059.048 1102.140 1117.825 1155.308 1155.308 1163.336 1180.830 1212.065
 [9] 1167.930 1245.339 1279.118 1558.854 1632.880 1664.747 1612.493 1597.120
[17] 1691.510 1770.592 1888.489 1998.352

$residuals
 [1] -112.914638 -139.409985  -48.245965   16.488941   22.808508   22.474488
 [7]   58.527815   76.496178   39.775818   33.069720   81.475039  -18.069687
[13]  -57.845352   31.212481   32.196168   28.910862  -36.469896  -14.992671
[19]   -1.068487   -6.458481

$rss
[1] 62517.76

$cov.unscaled
            gamma         delta           rho            nu
gamma 42.01676500 -0.3023356595 -0.4179123283  1.740919e-02
delta -0.30233566  0.0021765420  0.0030076549 -1.280465e-04
rho   -0.41791233  0.0030076549  0.0041604290 -1.706208e-04
nu     0.01740919 -0.0001280465 -0.0001706208  1.894048e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
48.2939  0.3821 -0.2189  1.8856 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 134 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  48.2939   362.4082   0.133    0.894    
delta   0.3821     2.6084   0.146    0.884    
rho    -0.2189     3.6062  -0.061    0.952    
nu      1.8856     0.2433   7.750 9.22e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 55.90964 
Multiple R-squared: 0.9646816 

> coef( cesLandLaborPortVrsCon )
     gamma      delta        rho         nu 
48.2938824  0.3820741 -0.2189011  1.8856453 
> vcov( cesLandLaborPortVrsCon )
             gamma        delta           rho          nu
gamma 131339.69760 -945.0673818 -1306.3470929 54.41918430
delta   -945.06738    6.8036263     9.4015920 -0.40025892
rho    -1306.34709    9.4015920    13.0050348 -0.53334161
nu        54.41918   -0.4002589    -0.5333416  0.05920582
> coef( summary( cesLandLaborPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 48.2938824 362.4081920  0.13325825 8.939891e-01
delta  0.3820741   2.6083762  0.14647969 8.835427e-01
rho   -0.2189011   3.6062494 -0.06070048 9.515977e-01
nu     1.8856453   0.2433225  7.74957346 9.220173e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1059.048 1102.140 1117.825 1155.308 1155.308 1163.336 1180.830 1212.065
 [9] 1167.930 1245.339 1279.118 1558.854 1632.880 1664.747 1612.493 1597.120
[17] 1691.510 1770.592 1888.489 1998.352
> residuals( cesLandLaborPortVrsCon )
 [1] -112.914638 -139.409985  -48.245965   16.488941   22.808508   22.474488
 [7]   58.527815   76.496178   39.775818   33.069720   81.475039  -18.069687
[13]  -57.845352   31.212481   32.196168   28.910862  -36.469896  -14.992671
[19]   -1.068487   -6.458481
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3 
154.2711422   0.2976129  -0.9279231 

$optim$bestval
[1] 222382.8

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2        par3
1   7.669117e+08 0.24572368  7.05348726
2   2.503711e+08 0.91443819  3.67193441
3   2.649192e+08 0.82180546  7.64909707
4   2.649192e+08 0.72974776  7.64909707
5   2.876997e+07 0.88411722  6.93792338
6   1.151756e+07 0.64619627  7.09025424
7   1.151756e+07 0.64619627  7.09025424
8   1.151756e+07 0.58106725  7.09025424
9   1.151756e+07 0.58106725  7.09025424
10  2.610700e+06 0.05004371  4.79683624
11  2.610700e+06 0.05004371  4.79683624
12  2.610700e+06 0.05004371  4.79683624
13  2.610700e+06 0.05004371  8.50533377
14  1.407404e+06 0.08683469  7.75253755
15  4.831857e+05 0.29722685  8.60351108
16  4.831857e+05 0.29722685  8.60351108
17  4.831857e+05 0.29722685  8.60351108
18  4.831857e+05 0.29722685  8.60351108
19  4.831857e+05 0.29722685  8.60351108
20  4.831857e+05 0.29722685  8.60351108
21  2.561433e+04 0.10398354  6.31377179
22  2.561433e+04 0.10398354  6.31377179
23  2.561433e+04 0.10398354  6.31377179
24  2.561433e+04 0.01269444  6.31377179
25  2.561433e+04 0.01269444  6.31377179
26  2.561433e+04 0.01269444  6.31377179
27  2.561433e+04 0.01269444  6.31377179
28  2.561433e+04 0.01269444  6.31377179
29  5.418516e+03 0.17777392  5.43010670
30  5.418516e+03 0.17777392  5.43010670
31  5.418516e+03 0.17777392  5.43010670
32  5.418516e+03 0.17777392  5.43010670
33  5.418516e+03 0.17777392  5.43010670
34  5.418516e+03 0.17777392  5.43010670
35  5.418516e+03 0.17777392  5.43010670
36  5.418516e+03 0.17777392  5.43010670
37  2.152877e+03 0.16251412  9.95361402
38  2.152877e+03 0.16251412  9.95361402
39  1.009445e+03 0.03033606  7.09632960
40  1.009445e+03 0.03033606  7.09632960
41  1.009445e+03 0.03033606  7.09632960
42  1.009445e+03 0.03033606  7.09632960
43  1.009445e+03 0.03033606  7.09632960
44  1.009445e+03 0.03033606  7.09632960
45  1.009445e+03 0.03033606  7.09632960
46  1.009445e+03 0.03033606  8.90010058
47  1.009445e+03 0.03033606  8.90010058
48  1.009445e+03 0.03033606  8.90010058
49  1.009445e+03 0.03033606  8.90010058
50  1.009445e+03 0.03033606  8.90010058
51  1.009445e+03 0.03033606  8.90010058
52  9.427130e+02 0.01920091  1.40274703
53  9.427130e+02 0.01920091  1.40274703
54  8.521670e+02 0.14638384  2.97700779
55  8.521670e+02 0.14638384  2.97700779
56  9.078941e+02 0.02941725  9.74007064
57  8.985505e+02 0.15041446  8.69904065
58  8.985505e+02 0.15041446  8.69904065
59  8.985505e+02 0.15041446  8.69904065
60  8.985505e+02 0.15041446  8.69904065
61  8.093986e+02 0.12222592  0.92414608
62  8.093986e+02 0.12222592  0.92414608
63  8.093986e+02 0.12222592  0.92414608
64  8.093986e+02 0.12222592  0.92414608
65  7.379246e+02 0.15470155  0.59184726
66  6.471390e+02 0.28674314  0.85296519
67  6.471390e+02 0.28674314  0.85296519
68  6.193595e+02 0.14557769 -0.02175921
69  6.193595e+02 0.14557769 -0.02175921
70  5.184553e+02 0.19982633  0.01809002
71  5.184553e+02 0.19982633  0.01809002
72  5.184553e+02 0.19982633  0.01809002
73  5.184553e+02 0.19982633  0.01809002
74  5.184553e+02 0.19982633  0.01809002
75  5.184553e+02 0.19982633  0.01809002
76  5.184553e+02 0.19982633  0.01809002
77  5.184553e+02 0.19982633  0.01809002
78  4.661546e+02 0.13265397 -0.43415818
79  4.661546e+02 0.13265397 -0.43415818
80  4.661546e+02 0.13265397 -0.43415818
81  3.303027e+02 0.12997562 -0.90508869
82  3.303027e+02 0.12997562 -0.90508869
83  3.303027e+02 0.12997562 -0.90508869
84  3.303027e+02 0.12997562 -0.90508869
85  3.652382e+02 0.09733351 -0.99396588
86  3.652382e+02 0.09733351 -0.99396588
87  3.652382e+02 0.09733351 -0.99396588
88  3.652382e+02 0.09733351 -0.99396588
89  3.652382e+02 0.09733351 -0.99396588
90  3.652382e+02 0.09733351 -0.99396588
91  3.652382e+02 0.09733351 -0.99396588
92  3.652382e+02 0.09733351 -0.99396588
93  3.652382e+02 0.09733351 -0.99396588
94  3.652382e+02 0.09733351 -0.99396588
95  3.652382e+02 0.09733351 -0.99396588
96  3.652382e+02 0.09733351 -0.99396588
97  3.165726e+02 0.14677603 -0.83196141
98  3.165726e+02 0.14677603 -0.83196141
99  3.165726e+02 0.14677603 -0.83196141
100 3.165726e+02 0.14677603 -0.83196141
101 3.165726e+02 0.14677603 -0.83196141
102 3.165726e+02 0.14677603 -0.83196141
103 3.165726e+02 0.14677603 -0.83196141
104 3.206459e+02 0.12997562 -0.90508869
105 2.844360e+02 0.14621845 -0.92394409
106 2.844360e+02 0.14621845 -0.92394409
107 2.844360e+02 0.14621845 -0.92394409
108 2.844360e+02 0.14621845 -0.92394409
109 2.844360e+02 0.14621845 -0.92394409
110 2.844360e+02 0.14621845 -0.92394409
111 2.844360e+02 0.14621845 -0.92394409
112 2.952033e+02 0.12136547 -0.98824269
113 2.952033e+02 0.12136547 -0.98824269
114 2.952033e+02 0.12136547 -0.98824269
115 2.952033e+02 0.12136547 -0.98824269
116 2.952033e+02 0.12136547 -0.98824269
117 2.952033e+02 0.12136547 -0.98824269
118 2.952033e+02 0.12136547 -0.98824269
119 2.774924e+02 0.14621845 -0.92394409
120 2.774924e+02 0.14621845 -0.92394409
121 2.774924e+02 0.14621845 -0.92394409
122 2.774924e+02 0.14621845 -0.92394409
123 2.774924e+02 0.14621845 -0.92394409
124 2.774924e+02 0.14621845 -0.92394409
125 2.774924e+02 0.14621845 -0.92394409
126 2.774924e+02 0.14621845 -0.92394409
127 2.774924e+02 0.14621845 -0.92394409
128 2.780058e+02 0.14179700 -0.94629523
129 2.780058e+02 0.14179700 -0.94629523
130 2.780058e+02 0.14179700 -0.94629523
131 2.780058e+02 0.14179700 -0.94629523
132 2.780058e+02 0.14179700 -0.94629523
133 2.780058e+02 0.14179700 -0.94629523
134 2.780058e+02 0.14179700 -0.94629523
135 2.780058e+02 0.14179700 -0.94629523
136 2.780058e+02 0.14179700 -0.94629523
137 2.780058e+02 0.14179700 -0.94629523
138 2.780058e+02 0.14179700 -0.94629523
139 2.780058e+02 0.14179700 -0.94629523
140 2.780058e+02 0.14179700 -0.94629523
141 2.780058e+02 0.14179700 -0.94629523
142 2.780058e+02 0.14179700 -0.94629523
143 2.780058e+02 0.14179700 -0.94629523
144 2.780058e+02 0.14179700 -0.94629523
145 2.780058e+02 0.14179700 -0.94629523
146 2.780058e+02 0.14179700 -0.94629523
147 2.780058e+02 0.14179700 -0.94629523
148 1.736334e+02 0.24254722 -0.99396588
149 1.736334e+02 0.24254722 -0.99396588
150 1.736334e+02 0.24254722 -0.99396588
151 1.736334e+02 0.24254722 -0.99396588
152 1.736334e+02 0.24254722 -0.99396588
153 1.736334e+02 0.24254722 -0.99396588
154 1.736334e+02 0.24254722 -0.99396588
155 1.736334e+02 0.24254722 -0.99396588
156 1.736334e+02 0.24254722 -0.99396588
157 1.736334e+02 0.24254722 -0.99396588
158 1.736334e+02 0.24254722 -0.99396588
159 1.736334e+02 0.24254722 -0.99396588
160 1.736334e+02 0.24254722 -0.99396588
161 1.736334e+02 0.24254722 -0.99396588
162 1.736334e+02 0.24254722 -0.99396588
163 1.736334e+02 0.24254722 -0.99396588
164 1.736334e+02 0.24254722 -0.99396588
165 1.736334e+02 0.24254722 -0.99396588
166 1.736334e+02 0.24254722 -0.99396588
167 1.736334e+02 0.24254722 -0.99396588
168 1.736334e+02 0.24254722 -0.99396588
169 1.736334e+02 0.24254722 -0.99396588
170 1.736334e+02 0.24254722 -0.99396588
171 1.736334e+02 0.24254722 -0.99396588
172 1.736334e+02 0.24254722 -0.99396588
173 1.736334e+02 0.24254722 -0.99396588
174 1.736334e+02 0.24254722 -0.99396588
175 1.736334e+02 0.24254722 -0.99396588
176 1.736334e+02 0.24254722 -0.99396588
177 1.736334e+02 0.24254722 -0.99396588
178 1.736334e+02 0.24254722 -0.99396588
179 1.736334e+02 0.24254722 -0.99396588
180 1.736334e+02 0.24254722 -0.99396588
181 1.736334e+02 0.24254722 -0.99396588
182 1.736334e+02 0.24254722 -0.99396588
183 1.736334e+02 0.24254722 -0.99396588
184 1.736334e+02 0.24254722 -0.99396588
185 1.736334e+02 0.24254722 -0.99396588
186 1.736334e+02 0.24254722 -0.99396588
187 1.736334e+02 0.24254722 -0.99396588
188 1.736334e+02 0.24254722 -0.99396588
189 1.736334e+02 0.24254722 -0.99396588
190 1.736334e+02 0.24254722 -0.99396588
191 1.736334e+02 0.24254722 -0.99396588
192 1.736334e+02 0.24254722 -0.99396588
193 1.736334e+02 0.24254722 -0.99396588
194 1.736334e+02 0.24254722 -0.99396588
195 1.736334e+02 0.24254722 -0.99396588
196 1.736334e+02 0.24254722 -0.99396588
197 1.736334e+02 0.24254722 -0.99396588
198 1.736334e+02 0.24254722 -0.99396588
199 1.621682e+02 0.27778898 -0.95672810
200 1.542711e+02 0.29761287 -0.92792314

$member$bestvalit
  [1] 3.079378e+19 1.155879e+19 5.325244e+18 4.775801e+18 7.445979e+16
  [6] 8.593944e+15 8.593944e+15 8.193920e+15 8.193920e+15 3.363223e+14
 [11] 3.363223e+14 3.363223e+14 3.331969e+14 9.788197e+13 1.220399e+13
 [16] 1.220399e+13 1.220399e+13 1.220399e+13 1.220399e+13 1.220399e+13
 [21] 3.056517e+10 3.056517e+10 3.056517e+10 2.960667e+10 2.960667e+10
 [26] 2.960667e+10 2.960667e+10 2.960667e+10 1.068984e+09 1.068984e+09
 [31] 1.068984e+09 1.068984e+09 1.068984e+09 1.068984e+09 1.068984e+09
 [36] 1.068984e+09 7.960380e+07 7.960380e+07 1.525205e+06 1.525205e+06
 [41] 1.525205e+06 1.525205e+06 1.525205e+06 1.525205e+06 1.525205e+06
 [46] 1.516889e+06 1.516889e+06 1.516889e+06 1.516889e+06 1.516889e+06
 [51] 1.516889e+06 1.142992e+06 1.142992e+06 1.087002e+06 1.087002e+06
 [56] 1.072880e+06 1.071101e+06 1.071101e+06 1.071101e+06 1.071101e+06
 [61] 1.059976e+06 1.059976e+06 1.059976e+06 1.059976e+06 1.034274e+06
 [66] 1.030697e+06 1.030697e+06 9.421661e+05 9.421661e+05 8.167290e+05
 [71] 8.167290e+05 8.167290e+05 8.167290e+05 8.167290e+05 8.167290e+05
 [76] 8.167290e+05 8.167290e+05 6.265454e+05 6.265454e+05 6.265454e+05
 [81] 5.883479e+05 5.883479e+05 5.883479e+05 5.883479e+05 5.623221e+05
 [86] 5.623221e+05 5.623221e+05 5.623221e+05 5.623221e+05 5.623221e+05
 [91] 5.623221e+05 5.623221e+05 5.623221e+05 5.623221e+05 5.623221e+05
 [96] 5.623221e+05 4.413330e+05 4.413330e+05 4.413330e+05 4.413330e+05
[101] 4.413330e+05 4.413330e+05 4.413330e+05 4.232325e+05 3.386798e+05
[106] 3.386798e+05 3.386798e+05 3.386798e+05 3.386798e+05 3.386798e+05
[111] 3.386798e+05 3.062120e+05 3.062120e+05 3.062120e+05 3.062120e+05
[116] 3.062120e+05 3.062120e+05 3.062120e+05 3.034659e+05 3.034659e+05
[121] 3.034659e+05 3.034659e+05 3.034659e+05 3.034659e+05 3.034659e+05
[126] 3.034659e+05 3.034659e+05 3.001802e+05 3.001802e+05 3.001802e+05
[131] 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05
[136] 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05
[141] 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05 3.001802e+05
[146] 3.001802e+05 3.001802e+05 2.268288e+05 2.268288e+05 2.268288e+05
[151] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[156] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[161] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[166] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[171] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[176] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[181] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[186] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[191] 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05 2.268288e+05
[196] 2.268288e+05 2.268288e+05 2.268288e+05 2.227463e+05 2.223828e+05

$member$pop
          [,1]        [,2]       [,3]
 [1,] 186.3306 0.271605898 -0.8222639
 [2,] 257.8722 0.233968201 -0.6685874
 [3,] 303.4577 0.249105198 -0.4461089
 [4,] 177.2787 0.250060116 -0.9335545
 [5,] 884.0356 0.175784149  5.3693696
 [6,] 277.4924 0.146218450 -0.9239441
 [7,] 173.6334 0.242547220 -0.9939659
 [8,] 628.2288 0.917566522  6.8532947
 [9,] 196.4478 0.257020670 -0.8202760
[10,] 884.3873 0.160262188  4.6483663
[11,] 198.5027 0.229256627 -0.9211372
[12,] 208.3540 0.246642270 -0.8313536
[13,] 274.4280 0.180694332 -0.7843874
[14,] 172.0926 0.257186057 -0.9644782
[15,] 931.6408 0.015458440  8.3230598
[16,] 882.1866 0.224259495  6.5044981
[17,] 233.1856 0.215293494 -0.8107881
[18,] 187.5401 0.247618407 -0.9064001
[19,] 224.7271 0.180117203 -0.9854412
[20,] 225.6033 0.191100346 -0.9171410
[21,] 188.1033 0.225740307 -0.9595775
[22,] 167.2074 0.289103798 -0.8695607
[23,] 214.4858 0.196474168 -0.9202426
[24,] 172.7370 0.278194840 -0.8896696
[25,] 167.8888 0.309707669 -0.8128924
[26,] 858.5966 0.147105979  2.5565704
[27,] 181.7780 0.242790493 -0.9234831
[28,] 911.8985 0.003969606  0.7756287
[29,] 239.9115 0.183901249 -0.9006293
[30,] 878.9914 0.247539300  6.7338255
[31,] 163.0520 0.261436547 -0.9505624
[32,] 162.1682 0.277788981 -0.9567281
[33,] 917.1784 0.011816169  8.9570295
[34,] 932.7217 0.012543893  9.5161673
[35,] 187.1530 0.231444581 -0.9695916
[36,] 910.1504 0.027824767  4.0062789
[37,] 248.6212 0.186647795 -0.8504033
[38,] 271.7610 0.145130607 -0.9316653
[39,] 890.3231 0.181142787  6.7050791
[40,] 274.9529 0.139629705 -0.9717008
[41,] 165.1609 0.293017845 -0.8594845
[42,] 154.5731 0.322332858 -0.8619032
[43,] 154.1412 0.283615241 -0.9339759
[44,] 199.0088 0.225944205 -0.9572970
[45,] 910.4580 0.075962561  8.9802907
[46,] 154.2711 0.297612869 -0.9279231
[47,] 236.8932 0.216293539 -0.7795867
[48,] 193.1438 0.237205052 -0.9135218
[49,] 162.1075 0.295975397 -0.8912579
[50,] 846.6873 0.185572093  2.5508154

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho 
154.2711422   0.2976129  -0.9279231 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1166.178 1201.253 1220.757 1234.961 1234.961 1247.274 1273.576 1281.023
 [9] 1246.383 1290.154 1319.761 1470.483 1524.136 1566.079 1535.304 1545.573
[17] 1616.911 1681.074 1776.008 1863.728

$residuals
 [1] -220.044701 -238.522016 -151.178016  -63.165008  -56.845441  -61.463505
 [7]  -34.218334    7.538222  -38.677259  -11.745954   40.831861   70.301012
[13]   50.899163  129.880429  109.385436   80.458467   38.128789   74.525866
[19]  111.411980  128.166155

$rss
[1] 222382.8

$cov.unscaled
            gamma       delta         rho
gamma 1176.331873 -4.70755946 -7.54893209
delta   -4.707559  0.01884289  0.03022336
rho     -7.548932  0.03022336  0.04849175

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho 
154.2711   0.2976  -0.9279 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  154.2711  3616.6003   0.043    0.966
delta    0.2976    14.4747   0.021    0.984
rho     -0.9279    23.2204  -0.040    0.968

Residual standard error: 105.4473 
Multiple R-squared: 0.8743683 

> coef( cesLandLaborDe )
      gamma       delta         rho 
154.2711422   0.2976129  -0.9279231 
> vcov( cesLandLaborDe )
            gamma       delta         rho
gamma 13079797.69 -52344.0083 -83937.6257
delta   -52344.01    209.5167    336.0578
rho     -83937.63    336.0578    539.1865
> coef( summary( cesLandLaborDe ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 154.2711422 3616.60029  0.04265640 0.9659754
delta   0.2976129   14.47469  0.02056091 0.9835959
rho    -0.9279231   23.22039 -0.03996156 0.9681238
> fitted( cesLandLaborDe )
 [1] 1166.178 1201.253 1220.757 1234.961 1234.961 1247.274 1273.576 1281.023
 [9] 1246.383 1290.154 1319.761 1470.483 1524.136 1566.079 1535.304 1545.573
[17] 1616.911 1681.074 1776.008 1863.728
> residuals( cesLandLaborDe )
 [1] -220.044701 -238.522016 -151.178016  -63.165008  -56.845441  -61.463505
 [7]  -34.218334    7.538222  -38.677259  -11.745954   40.831861   70.301012
[13]   50.899163  129.880429  109.385436   80.458467   38.128789   74.525866
[19]  111.411980  128.166155
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
59.8246404  0.5412677 -0.4306679  1.3065732 

$optim$bestval
[1] 125513.1

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2       par3        par4
1   6.072057e+08 0.94772694  6.9265590 1.422942956
2   4.583117e+08 0.68599233  6.0785526 0.411167650
3   4.583117e+08 0.68599233  6.0785526 0.411167650
4   2.358772e+08 0.61277100  2.8697770 1.111354243
5   2.358772e+08 0.61277100  2.8697770 1.111354243
6   1.520383e+08 0.69000710  7.5678677 1.503178483
7   7.852499e+07 0.73681625  7.6719870 0.181818857
8   7.852499e+07 0.73681625  7.6719870 0.181818857
9   6.371286e+07 0.15671249  6.9411948 0.031054249
10  6.371286e+07 0.15671249  6.9411948 0.031054249
11  1.716852e+07 0.11708724  7.0921919 0.265292770
12  1.716852e+07 0.11708724  7.0921919 0.265292770
13  1.164674e+06 0.10847279  1.8530061 0.436412927
14  1.164674e+06 0.10847279  1.8530061 0.436412927
15  1.164674e+06 0.10847279  1.8530061 0.436412927
16  1.164674e+06 0.10847279  1.8530061 0.436412927
17  1.164674e+06 0.10847279  1.8530061 0.436412927
18  1.164674e+06 0.10847279  1.8530061 0.436412927
19  1.164674e+06 0.10847279  1.8530061 0.436412927
20  1.025830e+05 0.52161128  4.9176001 3.448026888
21  1.025830e+05 0.52161128  4.9176001 2.906264628
22  1.025830e+05 0.36852360  4.9176001 2.906264628
23  1.025830e+05 0.36852360  4.9176001 2.906264628
24  1.025830e+05 0.36852360  4.9176001 2.906264628
25  1.025830e+05 0.36852360  5.8057218 2.923695590
26  1.025830e+05 0.36852360  5.8057218 2.923695590
27  4.779582e+04 0.49566931  9.3512273 0.006107385
28  4.779582e+04 0.39772983  9.3512273 0.006107385
29  3.893413e+04 0.23348760  7.1774660 0.188342978
30  3.893413e+04 0.23348760  7.1774660 0.188342978
31  3.893413e+04 0.23348760  7.1774660 0.188342978
32  3.893413e+04 0.23348760  7.1774660 0.188342978
33  3.893413e+04 0.23348760  7.1774660 0.188342978
34  3.893413e+04 0.23348760  7.1774660 0.188342978
35  3.893413e+04 0.12027258  7.1774660 0.188342978
36  3.893413e+04 0.12027258  7.1774660 0.188342978
37  3.883788e+04 0.44216374  7.0148597 0.139959147
38  3.883788e+04 0.41313457  7.0148597 0.139959147
39  3.883788e+04 0.41313457  7.0148597 0.139959147
40  3.883788e+04 0.29889750  5.9688020 0.136302452
41  3.883788e+04 0.29889750  5.9688020 0.136302452
42  3.883788e+04 0.29889750  5.9688020 0.136302452
43  3.883788e+04 0.29884971  5.9688020 0.136302452
44  3.235564e+04 0.04800869  5.7914666 0.284440686
45  3.235564e+04 0.04800869  5.7914666 0.284440686
46  3.235564e+04 0.04800869  5.7914666 0.284440686
47  3.235564e+04 0.04800869  5.7914666 0.284440686
48  3.235564e+04 0.04800869  5.7914666 0.284440686
49  3.235564e+04 0.04800869  5.7914666 0.284440686
50  3.235564e+04 0.04800869  5.7914666 0.284440686
51  3.235564e+04 0.04800869  5.7914666 0.284440686
52  3.585476e+03 0.01972311  9.1724295 0.085483957
53  3.585476e+03 0.01972311  9.1724295 0.085483957
54  3.585476e+03 0.01972311  9.1724295 0.085483957
55  3.585476e+03 0.01972311  9.1724295 0.085483957
56  3.585476e+03 0.01972311  9.1724295 0.085483957
57  3.585476e+03 0.01972311  9.1724295 0.085483957
58  3.585476e+03 0.01972311  9.1724295 0.085483957
59  2.359615e+03 0.78834886  7.0760416 0.145706685
60  1.615768e+03 0.28418726  2.9998266 0.041169376
61  1.615768e+03 0.28418726  2.9998266 0.041169376
62  1.615768e+03 0.28418726  2.9998266 0.041169376
63  1.615768e+03 0.28418726  2.9998266 0.002599799
64  1.615768e+03 0.28418726  2.9998266 0.002599799
65  1.615768e+03 0.28418726  2.9998266 0.002599799
66  1.615768e+03 0.28418726  2.9998266 0.002599799
67  1.615768e+03 0.28418726  7.7900220 0.002599799
68  1.586600e+03 0.24668951  7.5613902 0.025929113
69  1.586600e+03 0.24668951  7.5613902 0.025929113
70  1.586600e+03 0.24668951  7.5613902 0.025929113
71  1.586600e+03 0.24668951  7.5613902 0.025929113
72  1.395134e+03 0.88108659  6.3289590 0.109011065
73  1.395134e+03 0.88108659  6.3289590 0.109011065
74  1.427402e+03 0.17675559  6.1783851 0.118256460
75  1.285646e+03 0.16899236  6.6159192 0.196370704
76  1.285646e+03 0.16899236  6.6159192 0.196370704
77  1.285646e+03 0.16899236  6.6159192 0.196370704
78  1.070315e+03 0.82171093  3.0671935 0.260948422
79  1.070315e+03 0.82171093  3.0671935 0.260948422
80  1.070315e+03 0.82171093  3.0671935 0.260948422
81  1.070149e+03 0.17606051  9.2870604 0.485490110
82  1.070149e+03 0.17606051  9.2870604 0.485490110
83  1.070149e+03 0.17606051  6.0620664 0.485490110
84  1.024875e+03 0.13629183  7.3675651 0.739096341
85  8.666623e+02 0.12778382  2.0623086 0.973555896
86  7.759423e+02 0.22168724  3.6688543 1.162130484
87  1.396882e+02 0.33754462 -0.9746293 0.954076483
88  1.396882e+02 0.33754462 -0.9746293 0.954076483
89  1.396882e+02 0.33754462 -0.9746293 0.954076483
90  1.396882e+02 0.33754462 -0.9746293 0.954076483
91  1.396882e+02 0.33754462 -0.9746293 0.954076483
92  1.396882e+02 0.33754462 -0.9746293 0.954076483
93  1.396882e+02 0.33754462 -0.9746293 0.954076483
94  1.396882e+02 0.33754462 -0.9746293 0.954076483
95  1.396882e+02 0.33754462 -0.9746293 0.954076483
96  1.396882e+02 0.33754462 -0.9746293 0.954076483
97  1.396882e+02 0.33754462 -0.9746293 0.954076483
98  1.396882e+02 0.33754462 -0.9746293 0.954076483
99  1.396882e+02 0.33754462 -0.9746293 0.954076483
100 1.396882e+02 0.33754462 -0.9746293 0.954076483
101 1.396882e+02 0.33754462 -0.9746293 0.954076483
102 1.396882e+02 0.33754462 -0.9746293 0.954076483
103 1.396882e+02 0.33754462 -0.9746293 0.954076483
104 1.396882e+02 0.33754462 -0.9746293 0.954076483
105 5.982464e+01 0.54195798 -0.4306679 1.319057924
106 5.982464e+01 0.54195798 -0.4306679 1.319057924
107 5.982464e+01 0.54195798 -0.4306679 1.319057924
108 5.982464e+01 0.54195798 -0.4306679 1.319057924
109 5.982464e+01 0.54195798 -0.4306679 1.319057924
110 5.982464e+01 0.54195798 -0.4306679 1.319057924
111 5.982464e+01 0.54195798 -0.4306679 1.319057924
112 5.982464e+01 0.54195798 -0.4306679 1.319057924
113 5.982464e+01 0.54195798 -0.4306679 1.319057924
114 5.982464e+01 0.54195798 -0.4306679 1.319057924
115 5.982464e+01 0.54195798 -0.4306679 1.319057924
116 5.982464e+01 0.54195798 -0.4306679 1.319057924
117 5.982464e+01 0.54195798 -0.4306679 1.319057924
118 5.982464e+01 0.54195798 -0.4306679 1.319057924
119 5.982464e+01 0.54195798 -0.4306679 1.319057924
120 5.982464e+01 0.54195798 -0.4306679 1.319057924
121 5.982464e+01 0.54195798 -0.4306679 1.319057924
122 5.982464e+01 0.54195798 -0.4306679 1.319057924
123 5.982464e+01 0.54195798 -0.4306679 1.319057924
124 5.982464e+01 0.54195798 -0.4306679 1.319057924
125 5.982464e+01 0.54195798 -0.4306679 1.319057924
126 5.982464e+01 0.54195798 -0.4306679 1.319057924
127 5.982464e+01 0.54195798 -0.4306679 1.319057924
128 5.982464e+01 0.54195798 -0.4306679 1.319057924
129 5.982464e+01 0.54195798 -0.4306679 1.319057924
130 5.982464e+01 0.54195798 -0.4306679 1.319057924
131 5.982464e+01 0.54195798 -0.4306679 1.319057924
132 5.982464e+01 0.54195798 -0.4306679 1.319057924
133 5.982464e+01 0.54195798 -0.4306679 1.319057924
134 5.982464e+01 0.54195798 -0.4306679 1.319057924
135 5.982464e+01 0.54195798 -0.4306679 1.319057924
136 5.982464e+01 0.54195798 -0.4306679 1.319057924
137 5.982464e+01 0.54195798 -0.4306679 1.319057924
138 5.982464e+01 0.54195798 -0.4306679 1.319057924
139 5.982464e+01 0.54195798 -0.4306679 1.319057924
140 5.982464e+01 0.54195798 -0.4306679 1.319057924
141 5.982464e+01 0.54195798 -0.4306679 1.319057924
142 5.982464e+01 0.54195798 -0.4306679 1.319057924
143 5.982464e+01 0.54195798 -0.4306679 1.319057924
144 5.982464e+01 0.54195798 -0.4306679 1.319057924
145 5.982464e+01 0.54195798 -0.4306679 1.319057924
146 5.982464e+01 0.54195798 -0.4306679 1.319057924
147 5.982464e+01 0.54195798 -0.4306679 1.319057924
148 5.982464e+01 0.54195798 -0.4306679 1.319057924
149 5.982464e+01 0.54195798 -0.4306679 1.319057924
150 5.982464e+01 0.54195798 -0.4306679 1.319057924
151 5.982464e+01 0.54195798 -0.4306679 1.319057924
152 5.982464e+01 0.54195798 -0.4306679 1.319057924
153 5.982464e+01 0.54195798 -0.4306679 1.319057924
154 5.982464e+01 0.54195798 -0.4306679 1.319057924
155 5.982464e+01 0.54195798 -0.4306679 1.319057924
156 5.982464e+01 0.54195798 -0.4306679 1.319057924
157 5.982464e+01 0.54195798 -0.4306679 1.306573162
158 5.982464e+01 0.54195798 -0.4306679 1.306573162
159 5.982464e+01 0.54195798 -0.4306679 1.306573162
160 5.982464e+01 0.54195798 -0.4306679 1.306573162
161 5.982464e+01 0.54195798 -0.4306679 1.306573162
162 5.982464e+01 0.54195798 -0.4306679 1.306573162
163 5.982464e+01 0.54195798 -0.4306679 1.306573162
164 5.982464e+01 0.54195798 -0.4306679 1.306573162
165 5.982464e+01 0.54195798 -0.4306679 1.306573162
166 5.982464e+01 0.54195798 -0.4306679 1.306573162
167 5.982464e+01 0.54195798 -0.4306679 1.306573162
168 5.982464e+01 0.54195798 -0.4306679 1.306573162
169 5.982464e+01 0.54195798 -0.4306679 1.306573162
170 5.982464e+01 0.54195798 -0.4306679 1.306573162
171 5.982464e+01 0.54195798 -0.4306679 1.306573162
172 5.982464e+01 0.54195798 -0.4306679 1.306573162
173 5.982464e+01 0.54195798 -0.4306679 1.306573162
174 5.982464e+01 0.54195798 -0.4306679 1.306573162
175 5.982464e+01 0.54195798 -0.4306679 1.306573162
176 5.982464e+01 0.54195798 -0.4306679 1.306573162
177 5.982464e+01 0.54195798 -0.4306679 1.306573162
178 5.982464e+01 0.54195798 -0.4306679 1.306573162
179 5.982464e+01 0.54195798 -0.4306679 1.306573162
180 5.982464e+01 0.54195798 -0.4306679 1.306573162
181 5.982464e+01 0.54195798 -0.4306679 1.306573162
182 5.982464e+01 0.54195798 -0.4306679 1.306573162
183 5.982464e+01 0.54195798 -0.4306679 1.306573162
184 5.982464e+01 0.54195798 -0.4306679 1.306573162
185 5.982464e+01 0.54195798 -0.4306679 1.306573162
186 5.982464e+01 0.54195798 -0.4306679 1.306573162
187 5.982464e+01 0.54195798 -0.4306679 1.306573162
188 5.982464e+01 0.54195798 -0.4306679 1.306573162
189 5.982464e+01 0.54195798 -0.4306679 1.306573162
190 5.982464e+01 0.54195798 -0.4306679 1.306573162
191 5.982464e+01 0.54195798 -0.4306679 1.306573162
192 5.982464e+01 0.54195798 -0.4306679 1.306573162
193 5.982464e+01 0.54195798 -0.4306679 1.306573162
194 5.982464e+01 0.54195798 -0.4306679 1.306573162
195 5.982464e+01 0.54195798 -0.4306679 1.306573162
196 5.982464e+01 0.54126768 -0.4306679 1.306573162
197 5.982464e+01 0.54126768 -0.4306679 1.306573162
198 5.982464e+01 0.54126768 -0.4306679 1.306573162
199 5.982464e+01 0.54126768 -0.4306679 1.306573162
200 5.982464e+01 0.54126768 -0.4306679 1.306573162

$member$bestvalit
  [1] 8.736589e+19 7.051451e+18 7.051451e+18 6.189385e+18 6.189385e+18
  [6] 2.787476e+18 1.540850e+17 1.540850e+17 8.354914e+16 8.354914e+16
 [11] 7.509040e+15 7.509040e+15 4.192743e+13 4.192743e+13 4.192743e+13
 [16] 4.192743e+13 4.192743e+13 4.192743e+13 4.192743e+13 1.306523e+13
 [21] 6.747121e+12 4.855307e+12 4.855307e+12 4.855307e+12 4.551498e+12
 [26] 4.551498e+12 4.330650e+10 4.329616e+10 3.389546e+10 3.389546e+10
 [31] 3.389546e+10 3.389546e+10 3.389546e+10 3.389546e+10 3.364291e+10
 [36] 3.364291e+10 3.258661e+10 3.251840e+10 3.251840e+10 3.224170e+10
 [41] 3.224170e+10 3.224170e+10 3.224160e+10 2.496411e+10 2.496411e+10
 [46] 2.496411e+10 2.496411e+10 2.496411e+10 2.496411e+10 2.496411e+10
 [51] 2.496411e+10 1.083032e+08 1.083032e+08 1.083032e+08 1.083032e+08
 [56] 1.083032e+08 1.083032e+08 1.083032e+08 2.958574e+07 2.879200e+06
 [61] 2.879200e+06 2.879200e+06 2.608262e+06 2.608262e+06 2.608262e+06
 [66] 2.608262e+06 2.605901e+06 2.492384e+06 2.492384e+06 2.492384e+06
 [71] 2.492384e+06 1.894992e+06 1.894992e+06 1.850975e+06 1.612776e+06
 [76] 1.612776e+06 1.612776e+06 1.576357e+06 1.576357e+06 1.576357e+06
 [81] 1.529990e+06 1.529990e+06 1.507480e+06 1.233465e+06 1.086059e+06
 [86] 9.942146e+05 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05
 [91] 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05
 [96] 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05
[101] 4.288342e+05 4.288342e+05 4.288342e+05 4.288342e+05 2.464557e+05
[106] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[111] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[116] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[121] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[126] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[131] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[136] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[141] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[146] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[151] 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05 2.464557e+05
[156] 2.464557e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[161] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[166] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[171] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[176] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[181] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[186] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[191] 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05 1.305924e+05
[196] 1.255131e+05 1.255131e+05 1.255131e+05 1.255131e+05 1.255131e+05

$member$pop
            [,1]         [,2]        [,3]       [,4]
 [1,]  135.67426 0.8700427152 -0.55764611 0.73533383
 [2,]  547.34875 0.1215871305  1.45729402 1.77182503
 [3,]  828.62000 0.3980777084  7.13237569 1.11380060
 [4,]  511.19213 0.6544516100  8.99472110 1.90139458
 [5,]  681.35503 0.3564567225  8.50301838 1.49936894
 [6,]  139.68818 0.3825132110 -0.97462932 0.95407648
 [7,] 1206.77638 0.3553952459  1.68357265 0.23651424
 [8,]  612.38033 0.4867163070  7.32216609 1.59128585
 [9,] 1145.11934 0.1856278473  1.15542505 0.34106881
[10,]  346.04815 0.5412842870  0.87607479 1.11312312
[11,]  718.90285 0.3813751935  8.39684727 1.36655688
[12,]   28.85692 0.9868961546  0.66429609 1.18782626
[13,]  516.99586 0.1971414659  5.72088062 2.14763363
[14,]  744.59466 0.2911517730  4.92324147 1.27868863
[15,]  511.83017 0.7846857635  0.90855430 0.54444058
[16,]  527.92469 0.3024044476  2.88275504 1.77633097
[17,]   59.82464 0.5412676778 -0.43066793 1.30657316
[18,]  494.18754 0.8233605666  9.69734676 1.68629168
[19,]  957.54153 0.2779800350  8.87136782 0.82846588
[20,]  788.27574 0.6213389167  8.06445701 1.04795046
[21,]  179.85030 0.8093563724  1.20034512 1.23104305
[22,]  583.07851 0.7855486445  8.96482577 1.47340715
[23,]  347.46897 0.3971162302  2.33580739 2.13776608
[24,]  134.15252 0.5491517442 -0.46251252 0.95241633
[25,]  246.74165 0.4868053975 -0.56940235 0.74722720
[26,]  519.01755 0.9028644032 -0.04572206 0.33532630
[27,]  729.63525 0.0132614286  7.33197616 1.62721819
[28,] 1427.40186 0.0006263601  9.19459901 0.09270552
[29,]  624.85747 0.0413993514  1.22945179 1.72514778
[30,] 1032.75900 0.5222358037  2.73401475 0.44128551
[31,]  642.49931 0.5127215584  5.91834954 1.34381111
[32,]  521.74308 0.3672240041  8.16331676 2.08002975
[33,]  502.12345 0.2167286662  7.09548097 2.18890644
[34,]  530.16673 0.3538312151  2.62759682 1.65302661
[35,]  308.06337 0.2401681793  0.05060884 1.33090630
[36,]  866.66225 0.1277838165  2.06230863 0.97355590
[37,]  237.78714 0.2277981220 -0.50957355 1.13645834
[38,]  522.29047 0.2858432938  5.87073933 2.04168254
[39,]  775.94228 0.2375246655  3.11682323 1.16453437
[40,]  894.84702 0.0162263625  9.99991533 1.09098926
[41,]  542.35612 0.0736662278 -0.46360204 1.20729239
[42,]  622.61166 0.0177630091 -0.33998205 1.53819404
[43,]  595.33318 0.7568083991  8.82501041 1.45361286
[44,]  904.09849 0.2413518032  8.39724684 0.99639306
[45,]  637.15749 0.2149958104  0.20593665 0.85699950
[46,]  657.89801 0.1298096746  6.37678566 1.66866927
[47,]  268.43639 0.3501501223  1.04698353 1.94693943
[48,]  565.08668 0.5252566385  8.84619693 1.79479864
[49,]  736.34000 0.1252469834  8.01225103 1.48056613
[50,]  540.11394 0.5122235060  7.40477135 1.78348471

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
59.8246404  0.5412677 -0.4306679  1.3065732 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1138.748 1181.513 1204.331 1224.289 1224.289 1238.533 1269.025 1281.072
 [9] 1238.156 1295.132 1331.547 1532.489 1601.788 1653.000 1611.818 1621.324
[17] 1713.602 1796.374 1919.855 2034.999

$residuals
 [1] -192.615255 -218.782273 -134.751901  -52.492656  -46.173089  -52.723156
 [7]  -29.666781    7.488716  -30.449593  -16.723490   29.045190    8.294720
[13]  -26.753829   42.959206   32.871058    4.707487  -58.562359  -40.773933
[19]  -32.435136  -43.105080

$rss
[1] 125513.1

$cov.unscaled
             gamma         delta           rho            nu
gamma 135.37279966 -1.2858555523 -1.6771854986  3.078103e-02
delta  -1.28585555  0.0122165181  0.0159309065 -2.958879e-04
rho    -1.67718550  0.0159309065  0.0208144939 -3.656058e-04
nu      0.03078103 -0.0002958879 -0.0003656058  1.862924e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
59.8246  0.5413 -0.4307  1.3066 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  59.8246   921.7120   0.065 0.948249    
delta   0.5413     8.7560   0.062 0.950708    
rho    -0.4307    11.4291  -0.038 0.969941    
nu      1.3066     0.3419   3.821 0.000133 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 79.21904 
Multiple R-squared: 0.9290933 

> coef( cesLandLaborDeVrs )
     gamma      delta        rho         nu 
59.8246404  0.5412677 -0.4306679  1.3065732 
> vcov( cesLandLaborDeVrs )
            gamma        delta           rho          nu
gamma 849553.0717 -8069.586630 -10525.438608 193.1711190
delta  -8069.5866    76.666661     99.976883  -1.8568906
rho   -10525.4386    99.976883    130.624596  -2.2944159
nu       193.1711    -1.856891     -2.294416   0.1169107
> coef( summary( cesLandLaborDeVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 59.8246404 921.7120329  0.06490600 0.9482488441
delta  0.5412677   8.7559500  0.06181713 0.9507084639
rho   -0.4306679  11.4291118 -0.03768166 0.9699414970
nu     1.3065732   0.3419220  3.82126048 0.0001327713
> fitted( cesLandLaborDeVrs )
 [1] 1138.748 1181.513 1204.331 1224.289 1224.289 1238.533 1269.025 1281.072
 [9] 1238.156 1295.132 1331.547 1532.489 1601.788 1653.000 1611.818 1621.324
[17] 1713.602 1796.374 1919.855 2034.999
> residuals( cesLandLaborDeVrs )
 [1] -192.615255 -218.782273 -134.751901  -52.492656  -46.173089  -52.723156
 [7]  -29.666781    7.488716  -30.449593  -16.723490   29.045190    8.294720
[13]  -26.753829   42.959206   32.871058    4.707487  -58.562359  -40.773933
[19]  -32.435136  -43.105080
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
    par1     par2     par3 
49.61683  0.99000 -0.99000 

$optim$bestval
[1] 166012.8

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2        par3
1   44.26785 0.9316579 -0.80822957
2   44.26785 0.9316579 -0.80822957
3   47.38437 0.9815126 -0.09195733
4   47.38437 0.9815126 -0.09195733
5   49.08677 0.9873075 -0.14337748
6   49.08677 0.9873075 -0.14337748
7   49.08677 0.9873075 -0.14337748
8   49.08677 0.9873075 -0.14337748
9   49.08677 0.9873075 -0.14337748
10  49.25383 0.9753362 -0.93286664
11  49.25383 0.9753362 -0.93286664
12  49.92670 0.9888133 -0.14668688
13  49.92670 0.9888133 -0.14668688
14  49.92670 0.9888133 -0.30594214
15  49.57537 0.9847503 -0.87030161
16  49.80378 0.9847503 -0.87030161
17  49.80378 0.9847503 -0.87030161
18  49.85012 0.9885584 -0.67514970
19  49.77343 0.9861753 -0.87791997
20  49.94911 0.9852491 -0.87564114
21  49.94911 0.9852491 -0.87564114
22  49.82683 0.9862351 -0.87738870
23  49.71306 0.9890805 -0.81977799
24  49.71306 0.9890805 -0.81977799
25  49.74606 0.9881756 -0.91608720
26  49.74606 0.9881756 -0.91608720
27  49.74606 0.9881756 -0.91608720
28  49.74606 0.9881756 -0.91608720
29  49.74606 0.9881756 -0.91608720
30  49.69903 0.9888146 -0.97988507
31  49.65814 0.9892017 -0.96933212
32  49.64179 0.9896482 -0.97996475
33  49.64050 0.9896482 -0.97996475
34  49.64050 0.9896482 -0.97996475
35  49.64050 0.9896482 -0.97996475
36  49.64050 0.9896482 -0.97996475
37  49.64050 0.9896482 -0.97996475
38  49.64050 0.9896482 -0.97996475
39  49.64050 0.9896482 -0.97996475
40  49.63803 0.9894813 -0.98624900
41  49.63803 0.9894813 -0.98624900
42  49.63803 0.9894813 -0.98624900
43  49.63803 0.9894813 -0.98624900
44  49.63803 0.9894813 -0.98624900
45  49.60190 0.9899589 -0.98817705
46  49.60190 0.9899589 -0.98817705
47  49.62138 0.9898881 -0.98534002
48  49.62138 0.9898881 -0.98534002
49  49.62138 0.9898881 -0.98534002
50  49.62138 0.9898881 -0.98534002
51  49.62138 0.9898881 -0.98534002
52  49.62138 0.9898665 -0.98853217
53  49.62138 0.9898665 -0.98853217
54  49.62646 0.9898845 -0.98808753
55  49.62646 0.9898845 -0.98808753
56  49.62568 0.9899815 -0.98571640
57  49.62568 0.9899815 -0.98571640
58  49.62568 0.9899815 -0.98571640
59  49.62568 0.9899815 -0.98571640
60  49.62138 0.9899636 -0.98868722
61  49.62138 0.9899691 -0.98868722
62  49.62138 0.9899691 -0.98868722
63  49.62138 0.9899691 -0.98868722
64  49.61827 0.9899963 -0.98784584
65  49.61344 0.9899907 -0.98983337
66  49.62000 0.9899773 -0.98998423
67  49.61852 0.9899971 -0.98985730
68  49.61852 0.9899971 -0.98985730
69  49.61852 0.9899971 -0.98985730
70  49.61852 0.9899971 -0.98985730
71  49.61852 0.9899971 -0.98985730
72  49.61660 0.9899973 -0.98985645
73  49.61660 0.9899973 -0.98985645
74  49.61738 0.9899977 -0.98991690
75  49.61738 0.9899977 -0.98991690
76  49.61738 0.9899977 -0.98991690
77  49.61738 0.9899977 -0.98991690
78  49.61738 0.9899977 -0.98991690
79  49.61738 0.9899977 -0.98991690
80  49.61660 0.9899973 -0.98994717
81  49.61754 0.9899992 -0.98990863
82  49.61754 0.9899992 -0.98990863
83  49.61579 0.9899987 -0.98995907
84  49.61610 0.9899999 -0.98997261
85  49.61610 0.9899999 -0.98997261
86  49.61695 0.9899998 -0.98999149
87  49.61695 0.9899998 -0.98999149
88  49.61695 0.9899998 -0.98999149
89  49.61695 0.9899998 -0.98999149
90  49.61695 0.9899998 -0.98999149
91  49.61695 0.9899998 -0.98999149
92  49.61695 0.9899998 -0.98999149
93  49.61695 0.9899998 -0.98999149
94  49.61695 0.9899998 -0.98999149
95  49.61695 0.9899998 -0.98999149
96  49.61695 0.9899998 -0.98999149
97  49.61658 0.9899999 -0.98999939
98  49.61658 0.9899999 -0.98999939
99  49.61658 0.9899999 -0.98999939
100 49.61658 0.9899999 -0.98999939
101 49.61660 0.9899999 -0.98999939
102 49.61690 0.9900000 -0.98999968
103 49.61690 0.9900000 -0.98999968
104 49.61690 0.9900000 -0.98999968
105 49.61690 0.9900000 -0.98999968
106 49.61690 0.9900000 -0.98999968
107 49.61690 0.9900000 -0.98999968
108 49.61690 0.9900000 -0.98999968
109 49.61690 0.9900000 -0.98999968
110 49.61690 0.9900000 -0.98999968
111 49.61690 0.9900000 -0.98999968
112 49.61681 0.9900000 -0.98999911
113 49.61681 0.9900000 -0.98999911
114 49.61681 0.9900000 -0.98999911
115 49.61688 0.9900000 -0.98999999
116 49.61684 0.9900000 -0.98999991
117 49.61684 0.9900000 -0.98999991
118 49.61684 0.9900000 -0.98999991
119 49.61686 0.9900000 -0.99000000
120 49.61686 0.9900000 -0.99000000
121 49.61686 0.9900000 -0.99000000
122 49.61684 0.9900000 -0.98999994
123 49.61684 0.9900000 -0.98999994
124 49.61684 0.9900000 -0.98999997
125 49.61684 0.9900000 -0.98999997
126 49.61684 0.9900000 -0.98999997
127 49.61684 0.9900000 -0.98999997
128 49.61684 0.9900000 -0.98999997
129 49.61682 0.9900000 -0.99000000
130 49.61682 0.9900000 -0.99000000
131 49.61684 0.9900000 -0.99000000
132 49.61684 0.9900000 -0.99000000
133 49.61684 0.9900000 -0.99000000
134 49.61684 0.9900000 -0.99000000
135 49.61684 0.9900000 -0.99000000
136 49.61684 0.9900000 -0.99000000
137 49.61684 0.9900000 -0.99000000
138 49.61684 0.9900000 -0.99000000
139 49.61684 0.9900000 -0.99000000
140 49.61684 0.9900000 -0.99000000
141 49.61684 0.9900000 -0.99000000
142 49.61684 0.9900000 -0.99000000
143 49.61684 0.9900000 -0.99000000
144 49.61684 0.9900000 -0.99000000
145 49.61684 0.9900000 -0.99000000
146 49.61684 0.9900000 -0.99000000
147 49.61684 0.9900000 -0.99000000
148 49.61684 0.9900000 -0.99000000
149 49.61683 0.9900000 -0.99000000
150 49.61683 0.9900000 -0.99000000
151 49.61683 0.9900000 -0.99000000
152 49.61683 0.9900000 -0.99000000
153 49.61683 0.9900000 -0.99000000
154 49.61683 0.9900000 -0.99000000
155 49.61684 0.9900000 -0.99000000
156 49.61683 0.9900000 -0.99000000
157 49.61683 0.9900000 -0.99000000
158 49.61684 0.9900000 -0.99000000
159 49.61684 0.9900000 -0.99000000
160 49.61684 0.9900000 -0.99000000
161 49.61684 0.9900000 -0.99000000
162 49.61683 0.9900000 -0.99000000
163 49.61683 0.9900000 -0.99000000
164 49.61683 0.9900000 -0.99000000
165 49.61683 0.9900000 -0.99000000
166 49.61683 0.9900000 -0.99000000
167 49.61683 0.9900000 -0.99000000
168 49.61683 0.9900000 -0.99000000
169 49.61683 0.9900000 -0.99000000
170 49.61683 0.9900000 -0.99000000
171 49.61683 0.9900000 -0.99000000
172 49.61683 0.9900000 -0.99000000
173 49.61683 0.9900000 -0.99000000
174 49.61683 0.9900000 -0.99000000
175 49.61683 0.9900000 -0.99000000
176 49.61683 0.9900000 -0.99000000
177 49.61683 0.9900000 -0.99000000
178 49.61683 0.9900000 -0.99000000
179 49.61683 0.9900000 -0.99000000
180 49.61683 0.9900000 -0.99000000
181 49.61683 0.9900000 -0.99000000
182 49.61683 0.9900000 -0.99000000
183 49.61683 0.9900000 -0.99000000
184 49.61683 0.9900000 -0.99000000
185 49.61683 0.9900000 -0.99000000
186 49.61683 0.9900000 -0.99000000
187 49.61683 0.9900000 -0.99000000
188 49.61683 0.9900000 -0.99000000
189 49.61683 0.9900000 -0.99000000
190 49.61683 0.9900000 -0.99000000
191 49.61683 0.9900000 -0.99000000
192 49.61683 0.9900000 -0.99000000
193 49.61683 0.9900000 -0.99000000
194 49.61683 0.9900000 -0.99000000
195 49.61683 0.9900000 -0.99000000
196 49.61683 0.9900000 -0.99000000
197 49.61683 0.9900000 -0.99000000
198 49.61683 0.9900000 -0.99000000
199 49.61683 0.9900000 -0.99000000
200 49.61683 0.9900000 -0.99000000

$member$bestvalit
  [1] 1337461.6 1337461.6  441839.8  441839.8  209076.9  209076.9  209076.9
  [8]  209076.9  209076.9  187426.1  187426.1  173207.1  173207.1  168807.7
 [15]  168557.7  166579.6  166579.6  166359.6  166330.2  166221.3  166221.3
 [22]  166204.0  166174.7  166174.7  166098.1  166098.1  166098.1  166098.1
 [29]  166098.1  166047.8  166040.1  166025.0  166024.9  166024.9  166024.9
 [36]  166024.9  166024.9  166024.9  166024.9  166024.8  166024.8  166024.8
 [43]  166024.8  166024.8  166019.7  166019.7  166017.4  166017.4  166017.4
 [50]  166017.4  166017.4  166016.1  166016.1  166016.1  166016.1  166016.0
 [57]  166016.0  166016.0  166016.0  166014.2  166014.1  166014.1  166014.1
 [64]  166014.0  166013.3  166013.3  166012.9  166012.9  166012.9  166012.9
 [71]  166012.9  166012.9  166012.9  166012.8  166012.8  166012.8  166012.8
 [78]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [85]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [92]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [99]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[106]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[113]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[120]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[127]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[134]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[141]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[148]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[155]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[162]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[169]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[176]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[183]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[190]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[197]  166012.8  166012.8  166012.8  166012.8

$member$pop
          [,1] [,2]  [,3]
 [1,] 49.61683 0.99 -0.99
 [2,] 49.61683 0.99 -0.99
 [3,] 49.61683 0.99 -0.99
 [4,] 49.61683 0.99 -0.99
 [5,] 49.61683 0.99 -0.99
 [6,] 49.61683 0.99 -0.99
 [7,] 49.61683 0.99 -0.99
 [8,] 49.61683 0.99 -0.99
 [9,] 49.61683 0.99 -0.99
[10,] 49.61683 0.99 -0.99
[11,] 49.61683 0.99 -0.99
[12,] 49.61683 0.99 -0.99
[13,] 49.61683 0.99 -0.99
[14,] 49.61683 0.99 -0.99
[15,] 49.61683 0.99 -0.99
[16,] 49.61683 0.99 -0.99
[17,] 49.61683 0.99 -0.99
[18,] 49.61683 0.99 -0.99
[19,] 49.61683 0.99 -0.99
[20,] 49.61683 0.99 -0.99
[21,] 49.61683 0.99 -0.99
[22,] 49.61683 0.99 -0.99
[23,] 49.61683 0.99 -0.99
[24,] 49.61683 0.99 -0.99
[25,] 49.61683 0.99 -0.99
[26,] 49.61683 0.99 -0.99
[27,] 49.61683 0.99 -0.99
[28,] 49.61683 0.99 -0.99
[29,] 49.61683 0.99 -0.99
[30,] 49.61683 0.99 -0.99
[31,] 49.61683 0.99 -0.99
[32,] 49.61683 0.99 -0.99
[33,] 49.61683 0.99 -0.99
[34,] 49.61683 0.99 -0.99
[35,] 49.61683 0.99 -0.99
[36,] 49.61683 0.99 -0.99
[37,] 49.61683 0.99 -0.99
[38,] 49.61683 0.99 -0.99
[39,] 49.61683 0.99 -0.99
[40,] 49.61683 0.99 -0.99
[41,] 49.61683 0.99 -0.99
[42,] 49.61683 0.99 -0.99
[43,] 49.61683 0.99 -0.99
[44,] 49.61683 0.99 -0.99
[45,] 49.61683 0.99 -0.99
[46,] 49.61683 0.99 -0.99
[47,] 49.61683 0.99 -0.99
[48,] 49.61683 0.99 -0.99
[49,] 49.61683 0.99 -0.99
[50,] 49.61683 0.99 -0.99

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.61683  0.99000 -0.99000 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505

$residuals
 [1] -203.915911 -226.616323 -143.829364  -52.437992  -46.118426  -54.136478
 [7]  -33.977298   12.258406  -29.789584   -2.826019   44.976901   72.827182
[13]   46.168853  114.063677   95.711300   59.392017    6.863189   32.766932
[19]   54.076593   56.389277

$rss
[1] 166012.8

$cov.unscaled
            gamma      delta         rho
gamma  2206.43825 -64.363587 -2181.17774
delta   -64.36359   1.877625    63.63713
rho   -2181.17774  63.637130  2157.45031

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error   t value Pr(>|t|)
gamma    49.62    4279.58     0.012    0.991
delta     0.99     124.84     0.008    0.994
rho      -0.99    4231.81 -0.000234    1.000

Residual standard error: 91.10784 
Multiple R-squared: 0.9062137 

> coef( cesLandLaborDe2 )
   gamma    delta      rho 
49.61683  0.99000 -0.99000 
> vcov( cesLandLaborDe2 )
            gamma      delta         rho
gamma  18314845.0 -534258.83 -18105166.6
delta   -534258.8   15585.49    528228.8
rho   -18105166.6  528228.77  17908213.8
> coef( summary( cesLandLaborDe2 ) )
      Estimate Std. Error       t value  Pr(>|t|)
gamma 49.61683  4279.5847  0.0115938431 0.9907497
delta  0.99000   124.8418  0.0079300335 0.9936728
rho   -0.99000  4231.8098 -0.0002339425 0.9998133
> fitted( cesLandLaborDe2 )
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505
> residuals( cesLandLaborDe2 )
 [1] -203.915911 -226.616323 -143.829364  -52.437992  -46.118426  -54.136478
 [7]  -33.977298   12.258406  -29.789584   -2.826019   44.976901   72.827182
[13]   46.168853  114.063677   95.711300   59.392017    6.863189   32.766932
[19]   54.076593   56.389277
> 
> # Land & Labor with constant returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # Land & Labor with variable returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls", vrs = TRUE ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ## CES: Land & Intermediate Inputs (Nelder-Mead)
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "NM" )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$rss
[1] 165837.1

$cov.unscaled
          gamma      delta       rho
gamma 815214446 23296651.9 -46969864
delta  23296652   665758.5  -1342302
rho   -46969864 -1342301.7   2706578

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.221e+01  2.600e+06 1.24e-05        1
delta 2.008e-01  7.430e+04 2.70e-06        1
rho   3.800e+00  1.498e+05 2.54e-05        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2599930.74 1.238927e-05 0.9999901
delta  0.2007986   74299.21 2.702567e-06 0.9999978
rho    3.8002155  149808.37 2.536718e-05 0.9999798
> 
> # variable returns to scale (Nelder-Mead)
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854483   10.575677   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$rss
[1] 71996.09

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
nu    -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
  gamma   delta     rho      nu 
1.00222 0.02173 1.68396 1.31339 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
nu     1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.99837 
Multiple R-squared: 0.959327 

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
nu    1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$rss
[1] 257689.4

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN", random.seed = 234 )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

$method
[1] "SANN"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$rss
[1] 166684.4

$cov.unscaled
           gamma      delta        rho
gamma 5004.97903 41.3989754 -650.11586
delta   41.39898  0.3424519   -5.37812
rho   -650.11586 -5.3781200   84.46960

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.315e+01  6.459e+03    0.002    0.998
delta 2.101e-02  5.342e+01 0.000393    1.000
rho   2.925e+00  8.390e+02    0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.14842134 6458.52914 0.0020358229 0.9983756
delta  0.02100585   53.42349 0.0003931949 0.9996863
rho    2.92470954  839.04011 0.0034857804 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$optim$value
[1] 165834.5

$optim$counts
function gradient 
     352       82 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$iter
function gradient 
     352       82 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.939 1189.254 1213.334 1224.146 1224.146 1239.871 1273.288 1276.236
 [9] 1237.414 1281.151 1315.551 1467.893 1528.830 1581.904 1548.978 1566.668
[17] 1648.243 1722.938 1833.508 1935.725

$residuals
 [1] -203.806133 -226.523416 -143.754466  -52.349211  -46.029556  -54.061288
 [7]  -33.930502   12.324450  -29.707715   -2.742198   45.041725   72.890751
[13]   46.204207  114.055297   95.711563   59.362915    6.796772   32.661392
[19]   53.911931   56.169295

$rss
[1] 165834.5

$cov.unscaled
           gamma     delta        rho
gamma 3840584870 131166652 -222988593
delta  131166652   4479717   -7615811
rho   -222988593  -7615811   12948441

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
34.7896  0.2558  3.9468 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 352 function and 82 gradient calls

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.479e+01  5.643e+06 6.16e-06        1
delta 2.558e-01  1.927e+05 1.33e-06        1
rho   3.947e+00  3.277e+05 1.20e-05        1

Residual standard error: 91.05892 
Multiple R-squared: 0.9063144 

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.7896450  5643144.5 6.164940e-06 0.9999951
delta  0.2558192   192729.3 1.327350e-06 0.9999989
rho    3.9468447   327665.9 1.204533e-05 0.9999904
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B" )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      27       27 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      27       27 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  5.482972e-01  8.354371e-03 -4.811163e+10
delta  8.354371e-03  1.273117e-04 -7.445778e+08
rho   -4.811163e+10 -7.445778e+08  4.575469e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
 gamma  delta    rho 
49.143  1.000  0.651 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 27 function and 27 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.914e+01  6.743e+01    0.729    0.466
delta 1.000e+00  1.027e+00    0.973    0.330
rho   6.511e-01  1.948e+13 3.34e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.742604e+01 7.288423e-01 0.4660981
delta  1.0000000 1.027434e+00 9.732989e-01 0.3304048
rho    0.6510633 1.947769e+13 3.342611e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.017794                                  
2     17 0.107030 -3 -0.089235 23.402 1.020e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
              gamma         delta           rho
gamma  3.667607e+18  3.152675e+10 -9.754074e+07
delta  3.152675e+10  2.710399e+02 -8.384470e-01
rho   -9.754074e+07 -8.384470e-01  2.594122e-03

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$rss
[1] 41177199

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 1.019788e-05

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.093e-02   0.619    0.536

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.093252e-02 0.61903301 0.5358946
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho           nu 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho           nu
gamma  0.006287789  0.4447299 -0.07809453 -0.002344101
delta  0.444729932 31.5957949 -5.54483736 -0.124590619
rho   -0.078094527 -5.5448374  0.97320590  0.022743063
nu    -0.002344101 -0.1245906  0.02274306  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$rss
[1] 1708188016

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.231400e-07  2.790747e-05  3.716972e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
nu    -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho        nu 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.01444873

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.986512  -0.231    0.817    
nu     1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 
Multiple R-squared: -964.0144 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.98651199 -0.23077551 8.174892e-01
nu     1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347917481, 0.851862754325707, 4.36180424094534 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  47.3694         NA      NA       NA
delta   0.8519         NA      NA       NA
rho     4.3618         NA      NA       NA

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 47.3694348         NA      NA       NA
delta  0.8518628         NA      NA       NA
rho    4.3618042         NA      NA       NA
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166085.7

$nlm$estimate
[1] 13.87993876  0.01200905  3.49562057

$nlm$gradient
[1]    1965.848 -670064.125  -10608.430

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
      gamma       delta         rho 
13.87993876  0.01200905  3.49562057 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.389 1189.791 1213.858 1224.754 1224.743 1240.478 1273.909 1276.807
 [9] 1237.990 1281.719 1316.168 1468.581 1529.563 1582.600 1549.549 1567.165
[17] 1648.548 1723.100 1833.588 1935.797

$residuals
 [1] -204.256113 -227.060723 -144.279093  -52.957049  -46.626577  -54.667793
 [7]  -34.551201   11.754297  -30.284264   -3.310486   44.424952   72.203384
[13]   45.472058  113.359833   95.139757   58.865793    6.492140   32.500160
[19]   53.832430   56.096888

$rss
[1] 166085.7

$cov.unscaled
           gamma      delta         rho
gamma 47924.9262 247.287437 -6738.88728
delta   247.2874   1.276031   -34.77555
rho   -6738.8873 -34.775552   947.81696

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
   gamma    delta      rho 
13.87994  0.01201  3.49562 

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.388e+01  1.995e+04    0.001        1
delta 1.201e-02  1.029e+02 0.000117        1
rho   3.496e+00  2.806e+03    0.001        1

Residual standard error: 91.12785 
Multiple R-squared: 0.9061725 

> coef( summary( cesLandIntNewton ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.87993876 19949.4928 0.0006957540 0.9994449
delta  0.01200905   102.9394 0.0001166614 0.9999069
rho    3.49562057  2805.5200 0.0012459796 0.9990059
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
42.0332633  0.4058644  5.7702615 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 147

$nlminb$evaluations
function gradient 
     200      148 


$coefficients
     gamma      delta        rho 
42.0332633  0.4058644  5.7702615 

$iter
[1] 147

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.946 1189.260 1213.341 1224.152 1224.152 1239.878 1273.295 1276.244
 [9] 1237.421 1281.158 1315.558 1467.901 1528.839 1581.913 1548.987 1566.679
[17] 1648.256 1722.953 1833.525 1935.743

$residuals
 [1] -203.813088 -226.530002 -143.761382  -52.355539  -46.035972  -54.067772
 [7]  -33.937178   12.317328  -29.714423   -2.749381   45.034626   72.882823
[13]   46.196083  114.046376   95.701902   59.352439    6.783806   32.646401
[19]   53.895124   56.151444

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho 
42.0333  0.4059  5.7703 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 147 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  42.0333         NA      NA       NA
delta   0.4059         NA      NA       NA
rho     5.7703         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 42.0332633         NA      NA       NA
delta  0.4058644         NA      NA       NA
rho    5.7702615         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
36.6521302  0.2378403  4.8969550 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 


$coefficients
     gamma      delta        rho 
36.6521302  0.2378403  4.8969550 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.960 1189.275 1213.356 1224.167 1224.167 1239.893 1273.311 1276.259
 [9] 1237.436 1281.174 1315.574 1467.920 1528.858 1581.933 1549.006 1566.698
[17] 1648.276 1722.975 1833.548 1935.766

$residuals
 [1] -203.827347 -226.544780 -143.776449  -52.370772  -46.051201  -54.083198
 [7]  -33.953019   12.301472  -29.729806   -2.765296   45.018269   72.864573
[13]   46.177069  114.026727   95.682710   59.333067    6.763537   32.625301
[19]   53.872723   56.127801

$rss
[1] 165832.5

$cov.unscaled
            gamma      delta         rho
gamma 86065246140 3124710080 -5588582711
delta  3124710080  113448617  -202929056
rho   -5588582711 -202929056   363296648

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
36.6521  0.2378  4.8970 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.665e+01  2.671e+07 1.37e-06        1
delta 2.378e-01  9.699e+05 2.45e-07        1
rho   4.897e+00  1.736e+06 2.82e-06        1

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

> coef( summary( cesLandIntPortCon ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 36.6521302 26713680.3 1.372036e-06 0.9999989
delta  0.2378403   969883.2 2.452257e-07 0.9999998
rho    4.8969550  1735603.5 2.821471e-06 0.9999977
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.9164256  0.8392448 -0.3503008  1.5809530 

$nlminb$objective
[1] 50248.76

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 133

$nlminb$evaluations
function gradient 
     200      133 


$coefficients
     gamma      delta        rho         nu 
 1.9164256  0.8392448 -0.3503008  1.5809530 

$iter
[1] 133

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1004.196 1092.055 1115.411 1174.774 1168.010 1192.943 1242.817 1217.561
 [9] 1172.276 1222.856 1293.658 1537.822 1650.580 1703.072 1592.376 1587.573
[17] 1647.151 1724.770 1880.756 2046.450

$residuals
 [1]  -58.062631 -129.324055  -45.831431   -2.977095   10.106145   -7.132591
 [7]   -3.459454   71.000327   35.430360   55.552784   66.934800    2.962569
[13]  -75.545093   -7.112479   52.313381   38.458169    7.889133   30.830301
[19]    6.664378  -54.556216

$rss
[1] 50248.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0972311093  1.626783e-02 -0.0386174083 -1.145350e-04
delta  0.0162678337  2.732422e-03 -0.0064915900 -1.333839e-05
rho   -0.0386174083 -6.491590e-03  0.0154259251  2.912790e-05
nu    -0.0001145350 -1.333839e-05  0.0000291279  3.449628e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
 1.9164  0.8392 -0.3503  1.5810 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 133 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.9164    15.6297   0.123    0.902    
delta   0.8392     2.6201   0.320    0.749    
rho    -0.3503     6.2255  -0.056    0.955    
nu      1.5810     0.0931  16.982   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.12423 
Multiple R-squared: 0.9716127 

> coef( summary( cesLandIntPortVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  1.9164256 15.6296879  0.12261445 9.024124e-01
delta  0.8392448  2.6201222  0.32030751 7.487352e-01
rho   -0.3503008  6.2254865 -0.05626883 9.551277e-01
nu     1.5809530  0.0930966 16.98185474 1.118934e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.7447260  0.8080354 -0.2808868  1.5812800 

$nlminb$objective
[1] 50191.52

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 127

$nlminb$evaluations
function gradient 
     200      128 


$coefficients
     gamma      delta        rho         nu 
 1.7447260  0.8080354 -0.2808868  1.5812800 

$iter
[1] 127

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1004.359 1092.115 1115.533 1174.657 1167.940 1192.869 1242.760 1217.672
 [9] 1172.305 1222.980 1293.703 1537.934 1650.659 1703.378 1592.828 1588.069
[17] 1647.600 1725.100 1881.035 2046.774

$residuals
 [1]  -58.226224 -129.384057  -45.954243   -2.860747   10.176232   -7.058587
 [7]   -3.402067   70.888560   35.401182   55.428945   66.889287    2.850404
[13]  -75.624325   -7.419086   51.861568   37.962128    7.439939   30.499590
[19]    6.385463  -54.879730

$rss
[1] 50191.52

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0938509577  0.0183763550 -3.794524e-02 -1.099050e-04
delta  0.0183763550  0.0036106688 -7.461332e-03 -1.519930e-05
rho   -0.0379452415 -0.0074613318  1.542204e-02  2.884678e-05
nu    -0.0001099050 -0.0000151993  2.884678e-05  3.448975e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
 1.7447  0.8080 -0.2809  1.5813 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 127 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.74473   15.34686   0.114    0.909    
delta  0.80804    3.01019   0.268    0.788    
rho   -0.28089    6.22116  -0.045    0.964    
nu     1.58128    0.09303  16.997   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.09567 
Multiple R-squared: 0.971645 

> coef( summary( cesLandIntPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.7447260 15.34686020  0.11368619 9.094866e-01
delta  0.8080354  3.01019069  0.26843328 7.883658e-01
rho   -0.2808868  6.22115655 -0.04515026 9.639875e-01
nu     1.5812800  0.09303476 16.99665840 8.693646e-65
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
47.6945636  0.8754505  4.4425762 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2     par3
1   7.669117e+08 0.24572368 7.053487
2   2.503711e+08 0.91443819 3.671934
3   2.503711e+08 0.91443819 3.891170
4   4.560658e+07 0.58749479 7.455393
5   2.307733e+07 0.48119508 9.018146
6   2.307733e+07 0.58556558 9.018146
7   2.307733e+07 0.58556558 9.018146
8   2.307733e+07 0.58556558 9.018146
9   8.032539e+06 0.25604248 4.578900
10  8.032539e+06 0.25604248 4.578900
11  8.032539e+06 0.25604248 4.578900
12  8.032539e+06 0.25604248 4.578900
13  8.032539e+06 0.25604248 4.578900
14  6.009215e+06 0.34430878 5.548046
15  3.651901e+06 0.49289423 9.987324
16  3.651901e+06 0.49289423 9.987324
17  3.651901e+06 0.49289423 9.987324
18  3.651901e+06 0.49289423 9.987324
19  3.651901e+06 0.49289423 9.987324
20  2.012143e+06 0.03840025 6.096753
21  1.238558e+04 0.55592048 2.387176
22  1.238558e+04 0.55592048 2.387176
23  1.238558e+04 0.67028487 2.387176
24  1.238558e+04 0.67028487 2.387176
25  1.238558e+04 0.67028487 2.387176
26  1.238558e+04 0.67028487 2.387176
27  1.238558e+04 0.67028487 2.387176
28  1.238558e+04 0.67028487 2.387176
29  1.238558e+04 0.67028487 2.658048
30  1.238558e+04 0.67028487 2.658048
31  1.238558e+04 0.67028487 2.658048
32  1.238558e+04 0.67028487 2.658048
33  1.238558e+04 0.67028487 2.658048
34  1.457171e+03 0.42992688 3.536760
35  1.457171e+03 0.42992688 3.536760
36  1.457171e+03 0.42992688 4.269640
37  1.457171e+03 0.42992688 4.269640
38  1.457171e+03 0.42992688 4.269640
39  1.457171e+03 0.42992688 4.269640
40  1.457171e+03 0.42992688 4.269640
41  1.457171e+03 0.42992688 4.269640
42  1.457171e+03 0.42992688 9.566034
43  5.317033e+02 0.13671946 6.683060
44  5.317033e+02 0.13671946 6.683060
45  5.317033e+02 0.13671946 6.683060
46  5.317033e+02 0.13671946 6.683060
47  5.317033e+02 0.13671946 6.683060
48  5.317033e+02 0.13671946 6.683060
49  5.317033e+02 0.13671946 6.683060
50  5.317033e+02 0.13671946 6.683060
51  5.317033e+02 0.13671946 6.683060
52  2.428734e+02 0.06427556 7.981982
53  2.428734e+02 0.06427556 7.981982
54  2.428734e+02 0.06427556 7.981982
55  1.986774e+02 0.10745989 8.386926
56  1.321415e+02 0.25438531 7.584797
57  1.321415e+02 0.36036335 7.584797
58  1.321415e+02 0.36036335 7.584797
59  4.051482e+01 0.52335723 8.739336
60  4.051482e+01 0.52335723 8.739336
61  4.051482e+01 0.52335723 8.739336
62  4.051482e+01 0.40008213 4.083814
63  4.051482e+01 0.40008213 4.083814
64  4.051482e+01 0.40008213 4.083814
65  4.051482e+01 0.40008213 4.083814
66  4.051482e+01 0.40008213 4.083814
67  4.051482e+01 0.40008213 4.083814
68  4.051482e+01 0.40008213 4.083814
69  4.051482e+01 0.40008213 4.083814
70  4.051482e+01 0.40008213 4.083814
71  4.591155e+01 0.72157865 5.576353
72  4.064016e+01 0.67313646 2.064259
73  4.064016e+01 0.67313646 2.064259
74  4.833888e+01 0.97907998 1.424365
75  4.833888e+01 0.97907998 1.424365
76  4.833888e+01 0.97907998 1.424365
77  4.833888e+01 0.97907998 1.424365
78  4.833888e+01 0.97907998 1.424365
79  4.064016e+01 0.67593366 2.064259
80  4.064016e+01 0.67593366 2.064259
81  4.064016e+01 0.67593366 2.064259
82  4.064016e+01 0.67593366 2.064259
83  4.064016e+01 0.67593366 2.064259
84  4.064016e+01 0.67593366 2.064259
85  4.064016e+01 0.67593366 2.064259
86  4.155350e+01 0.50352549 4.055894
87  4.770867e+01 0.80451830 7.322895
88  4.770867e+01 0.80451830 7.322895
89  4.770867e+01 0.80451830 7.322895
90  4.770867e+01 0.80451830 7.322895
91  4.770867e+01 0.80451830 7.322895
92  4.770867e+01 0.80451830 7.322895
93  4.770867e+01 0.80451830 7.322895
94  4.770867e+01 0.80451830 7.322895
95  4.770867e+01 0.80451830 7.322895
96  4.770867e+01 0.80451830 7.322895
97  4.770867e+01 0.80451830 7.322895
98  4.770867e+01 0.80451830 7.322895
99  4.770867e+01 0.80451830 7.322895
100 4.770867e+01 0.80451830 7.322895
101 4.770867e+01 0.80451830 7.322895
102 4.770867e+01 0.80451830 7.322895
103 4.770867e+01 0.80451830 7.322895
104 4.770867e+01 0.80451830 7.322895
105 4.770867e+01 0.80451830 7.322895
106 4.770867e+01 0.80451830 7.322895
107 4.770867e+01 0.80451830 7.322895
108 4.770867e+01 0.80451830 7.322895
109 4.770867e+01 0.80451830 7.322895
110 4.770867e+01 0.80451830 7.322895
111 4.770867e+01 0.80451830 7.322895
112 4.770867e+01 0.80451830 7.322895
113 4.770867e+01 0.80451830 7.322895
114 4.770867e+01 0.80451830 7.322895
115 4.770867e+01 0.80451830 7.322895
116 4.770867e+01 0.80451830 7.322895
117 4.770867e+01 0.80451830 7.322895
118 4.770867e+01 0.80451830 7.322895
119 4.770867e+01 0.80451830 7.322895
120 4.770867e+01 0.80451830 7.322895
121 4.770867e+01 0.80451830 7.322895
122 4.770867e+01 0.80451830 7.322895
123 4.770867e+01 0.80451830 7.322895
124 4.770867e+01 0.80451830 7.322895
125 4.770867e+01 0.80451830 7.322895
126 4.770867e+01 0.80451830 7.322895
127 4.770867e+01 0.80451830 7.322895
128 4.770867e+01 0.80451830 7.322895
129 4.770867e+01 0.80451830 7.322895
130 4.770867e+01 0.80451830 7.322895
131 4.770867e+01 0.80451830 7.322895
132 4.770867e+01 0.80451830 7.322895
133 4.770867e+01 0.80451830 7.322895
134 4.770867e+01 0.80451830 7.322895
135 4.770867e+01 0.80451830 7.322895
136 4.770867e+01 0.80451830 7.322895
137 4.770867e+01 0.80451830 7.322895
138 4.770867e+01 0.80451830 7.322895
139 4.770867e+01 0.80451830 7.322895
140 4.770867e+01 0.80451830 7.322895
141 4.426427e+01 0.58015698 5.204792
142 4.604636e+01 0.59306439 8.032065
143 4.604636e+01 0.59306439 8.032065
144 4.825942e+01 0.88611612 6.650642
145 4.825942e+01 0.88611612 6.650642
146 4.825942e+01 0.88611612 6.650642
147 4.825942e+01 0.88611612 6.650642
148 4.825942e+01 0.88611612 6.650642
149 4.825942e+01 0.88611612 6.650642
150 4.825942e+01 0.88611612 6.650642
151 4.825942e+01 0.88611612 6.650642
152 4.825942e+01 0.88611612 6.650642
153 4.825942e+01 0.88611612 6.650642
154 4.825942e+01 0.88611612 6.650642
155 4.825942e+01 0.88611612 6.650642
156 4.825942e+01 0.88611612 6.650642
157 4.825942e+01 0.88611612 6.650642
158 4.825942e+01 0.88611612 6.650642
159 4.825942e+01 0.88611612 6.650642
160 4.825942e+01 0.88611612 6.650642
161 4.825942e+01 0.88611612 6.650642
162 4.825942e+01 0.88611612 6.650642
163 4.769456e+01 0.87545047 4.442576
164 4.769456e+01 0.87545047 4.442576
165 4.769456e+01 0.87545047 4.442576
166 4.769456e+01 0.87545047 4.442576
167 4.769456e+01 0.87545047 4.442576
168 4.769456e+01 0.87545047 4.442576
169 4.769456e+01 0.87545047 4.442576
170 4.769456e+01 0.87545047 4.442576
171 4.769456e+01 0.87545047 4.442576
172 4.769456e+01 0.87545047 4.442576
173 4.769456e+01 0.87545047 4.442576
174 4.769456e+01 0.87545047 4.442576
175 4.769456e+01 0.87545047 4.442576
176 4.769456e+01 0.87545047 4.442576
177 4.769456e+01 0.87545047 4.442576
178 4.769456e+01 0.87545047 4.442576
179 4.769456e+01 0.87545047 4.442576
180 4.769456e+01 0.87545047 4.442576
181 4.769456e+01 0.87545047 4.442576
182 4.769456e+01 0.87545047 4.442576
183 4.769456e+01 0.87545047 4.442576
184 4.769456e+01 0.87545047 4.442576
185 4.769456e+01 0.87545047 4.442576
186 4.769456e+01 0.87545047 4.442576
187 4.769456e+01 0.87545047 4.442576
188 4.769456e+01 0.87545047 4.442576
189 4.769456e+01 0.87545047 4.442576
190 4.769456e+01 0.87545047 4.442576
191 4.769456e+01 0.87545047 4.442576
192 4.769456e+01 0.87545047 4.442576
193 4.769456e+01 0.87545047 4.442576
194 4.769456e+01 0.87545047 4.442576
195 4.769456e+01 0.87545047 4.442576
196 4.769456e+01 0.87545047 4.442576
197 4.769456e+01 0.87545047 4.442576
198 4.769456e+01 0.87545047 4.442576
199 4.769456e+01 0.87545047 4.442576
200 4.769456e+01 0.87545047 4.442576

$member$bestvalit
  [1] 1.506133e+22 1.132040e+21 1.128937e+21 4.126264e+19 1.077354e+19
  [6] 1.031457e+19 1.031457e+19 1.031457e+19 2.012232e+18 2.012232e+18
 [11] 2.012232e+18 2.012232e+18 2.012232e+18 9.121985e+17 2.642955e+17
 [16] 2.642955e+17 2.642955e+17 2.642955e+17 2.642955e+17 2.028807e+17
 [21] 4.286817e+12 4.286817e+12 3.663604e+12 3.663604e+12 3.663604e+12
 [26] 3.663604e+12 3.663604e+12 3.663604e+12 3.540682e+12 3.540682e+12
 [31] 3.540682e+12 3.540682e+12 3.540682e+12 5.578003e+10 5.578003e+10
 [36] 5.127517e+10 5.127517e+10 5.127517e+10 5.127517e+10 5.127517e+10
 [41] 5.127517e+10 4.092267e+10 7.651514e+09 7.651514e+09 7.651514e+09
 [46] 7.651514e+09 7.651514e+09 7.651514e+09 7.651514e+09 7.651514e+09
 [51] 7.651514e+09 1.480791e+09 1.480791e+09 1.480791e+09 7.592009e+08
 [56] 2.050294e+08 1.792297e+08 1.792297e+08 6.884931e+05 6.884931e+05
 [61] 6.884931e+05 2.077020e+05 2.077020e+05 2.077020e+05 2.077020e+05
 [66] 2.077020e+05 2.077020e+05 2.077020e+05 2.077020e+05 2.077020e+05
 [71] 1.695453e+05 1.660380e+05 1.660380e+05 1.660102e+05 1.660102e+05
 [76] 1.660102e+05 1.660102e+05 1.660102e+05 1.659696e+05 1.659696e+05
 [81] 1.659696e+05 1.659696e+05 1.659696e+05 1.659696e+05 1.659696e+05
 [86] 1.659160e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
 [91] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
 [96] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[101] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[106] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[111] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[116] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[121] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[126] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[131] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[136] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[141] 1.658325e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]     [,3]
 [1,] 48.71926 0.9582823 5.394463
 [2,] 43.52671 0.5657162 4.675507
 [3,] 42.01902 0.6535664 2.706306
 [4,] 47.95024 0.8985023 4.314745
 [5,] 47.00424 0.7200845 7.298187
 [6,] 38.77490 0.3655310 4.184947
 [7,] 48.50427 0.9236834 6.456827
 [8,] 49.02071 0.9803202 8.199310
 [9,] 46.79784 0.7256533 6.600585
[10,] 48.48670 0.9165694 6.605733
[11,] 48.00545 0.8756980 5.723600
[12,] 31.24788 0.3461549 2.330986
[13,] 43.85464 0.6775491 3.449635
[14,] 46.67290 0.6829526 7.446023
[15,] 47.12249 0.7284628 7.536461
[16,] 47.43992 0.7711322 7.255882
[17,] 47.70867 0.8045183 7.322895
[18,] 48.49397 0.9076947 7.573530
[19,] 48.34461 0.9000402 6.570622
[20,] 42.31046 0.7394929 2.026624
[21,] 47.05546 0.6605019 9.541149
[22,] 48.25942 0.8861161 6.650642
[23,] 48.37909 0.9222798 5.149157
[24,] 45.54964 0.7095295 4.540278
[25,] 45.98768 0.5622329 8.613380
[26,] 46.80128 0.7075936 7.145331
[27,] 46.64024 0.6652534 7.774940
[28,] 46.04636 0.5930644 8.032065
[29,] 48.24683 0.8565223 8.365653
[30,] 48.92145 0.9512048 9.178676
[31,] 47.69456 0.8754505 4.442576
[32,] 46.23393 0.5373617 9.972948
[33,] 44.47022 0.7963198 2.282678
[34,] 47.39112 0.7922160 6.397450
[35,] 48.09258 0.8693897 6.491686
[36,] 47.43461 0.7085936 9.701558
[37,] 44.26427 0.5801570 5.204792
[38,] 48.97575 0.9750597 7.674651
[39,] 44.11088 0.6425334 4.055894
[40,] 46.87113 0.7967883 4.862458
[41,] 47.64725 0.7319201 9.800736
[42,] 48.56352 0.9163901 7.620927
[43,] 44.65851 0.5262469 6.702250
[44,] 48.38025 0.9118870 5.869812
[45,] 47.16544 0.8169943 4.951991
[46,] 48.11930 0.8855479 5.427817
[47,] 48.12936 0.8385899 8.467246
[48,] 43.36730 0.7528119 2.260781
[49,] 47.91994 0.9131018 3.554229
[50,] 46.18255 0.7579417 4.472236

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
47.6945636  0.8754505  4.4425762 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1149.974 1189.290 1213.370 1224.182 1224.182 1239.908 1273.326 1276.275
 [9] 1237.451 1281.189 1315.590 1467.937 1528.876 1581.952 1549.025 1566.717
[17] 1648.296 1722.995 1833.570 1935.790

$residuals
 [1] -203.841171 -226.559051 -143.791017  -52.385444  -46.065876  -54.098061
 [7]  -33.968283   12.286155  -29.744649   -2.780674   45.002490   72.846966
[13]   46.158737  114.007737   95.664075   59.314187    6.743579   32.604364
[19]   53.850396   56.104224

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
47.6946  0.8755  4.4426 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  47.6946         NA      NA       NA
delta   0.8755         NA      NA       NA
rho     4.4426         NA      NA       NA

Residual standard error: 91.05834 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntDe ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 47.6945636         NA      NA       NA
delta  0.8754505         NA      NA       NA
rho    4.4425762         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
30.5003997  0.9611446  6.7600180  1.1314457 

$optim$bestval
[1] 134013.1

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2      par3        par4
1   6.072057e+08 0.94772694 6.9265590 1.422942956
2   4.583117e+08 0.68599233 6.0785526 0.411167650
3   4.583117e+08 0.68599233 6.0785526 0.411167650
4   4.583117e+08 0.68599233 6.0785526 0.411167650
5   6.760108e+07 0.86599048 5.8781465 0.779509957
6   6.760108e+07 0.86599048 5.8781465 0.779509957
7   6.760108e+07 0.86599048 5.8781465 0.779509957
8   3.425640e+08 0.64089664 5.9232061 0.104071251
9   3.099870e+08 0.33061147 5.9232061 0.104071251
10  2.183214e+07 0.84719798 9.2931619 0.246084487
11  2.183214e+07 0.84719798 9.2931619 0.246084487
12  1.706982e+07 0.72975690 6.4998811 0.254439259
13  1.706982e+07 0.72975690 6.4998811 0.254439259
14  1.706982e+07 0.72975690 6.4998811 0.254439259
15  1.706982e+07 0.72975690 6.4998811 0.254439259
16  1.685518e+06 0.05298474 4.0632752 0.599066331
17  1.685518e+06 0.05298474 4.0632752 0.599066331
18  1.685518e+06 0.05298474 4.0632752 0.599066331
19  1.685518e+06 0.05298474 4.0632752 0.599066331
20  1.685518e+06 0.05298474 4.0632752 0.599066331
21  1.685518e+06 0.05298474 4.0632752 0.599066331
22  1.144250e+07 0.32859956 7.6104776 0.081763925
23  1.144250e+07 0.32859956 7.6104776 0.081763925
24  1.144250e+07 0.32859956 7.6104776 0.081763925
25  4.426410e+06 0.83693663 6.7936311 0.299968968
26  4.426410e+06 0.83693663 6.7936311 0.299968968
27  4.426410e+06 0.83693663 6.0172728 0.294865096
28  6.821024e+05 0.46618209 7.4901143 0.211683926
29  6.821024e+05 0.46618209 7.4901143 0.178287303
30  6.821024e+05 0.46618209 7.4901143 0.178287303
31  6.821024e+05 0.51894294 7.4901143 0.178287303
32  3.979130e+05 0.51894294 7.4901143 0.178287303
33  3.979130e+05 0.63190715 7.4901143 0.178287303
34  3.979130e+05 0.63190715 7.4901143 0.178287303
35  3.979130e+05 0.63190715 7.4901143 0.178287303
36  3.979130e+05 0.63190715 7.4901143 0.178287303
37  4.805321e+05 0.63897121 9.4246921 0.116728031
38  4.805321e+05 0.63897121 9.4246921 0.116728031
39  4.163744e+05 0.47649717 4.8046690 0.003878788
40  4.163744e+05 0.48869051 6.6219587 0.003878788
41  4.163744e+05 0.48869051 6.6219587 0.003878788
42  3.534145e+05 0.68380411 6.1235175 0.021076291
43  3.534145e+05 0.68380411 6.1235175 0.021076291
44  3.534145e+05 0.88259737 6.1235175 0.021076291
45  3.534145e+05 0.89880190 6.1235175 0.021076291
46  2.753770e+05 0.85873647 6.2498681 0.041266970
47  2.805398e+05 0.61447661 6.9749245 0.021990169
48  2.805398e+05 0.61447661 6.9749245 0.021990169
49  6.942507e+04 0.98411448 6.1929786 0.083166767
50  6.942507e+04 0.98411448 6.1929786 0.068105452
51  3.463516e+03 0.85131201 8.3451249 0.279623527
52  3.463516e+03 0.85131201 8.3451249 0.257378523
53  3.463516e+03 0.85131201 8.3451249 0.257378523
54  3.463516e+03 0.87633806 8.3451249 0.257378523
55  3.463516e+03 0.97580381 4.3966620 0.257378523
56  3.463516e+03 0.97580381 4.3966620 0.257378523
57  3.463516e+03 0.97580381 4.3966620 0.257378523
58  3.463516e+03 0.97580381 4.3966620 0.127617548
59  3.463516e+03 0.97580381 4.3966620 0.127617548
60  2.813277e+03 0.27398230 6.6108560 0.004128116
61  2.813277e+03 0.27398230 6.6108560 0.004128116
62  2.813277e+03 0.27398230 6.6108560 0.004128116
63  2.813277e+03 0.27398230 6.6108560 0.004128116
64  2.335145e+03 0.74007464 3.6585292 0.036577265
65  1.361972e+03 0.38363024 5.8747103 0.071545830
66  1.361972e+03 0.38363024 5.8747103 0.071545830
67  1.361972e+03 0.38363024 5.8747103 0.071545830
68  1.108289e+03 0.93741992 0.7173180 0.106072914
69  1.108289e+03 0.93741992 0.8341747 0.097929287
70  1.108289e+03 0.93741992 0.8341747 0.097929287
71  1.108289e+03 0.93741992 0.8341747 0.097929287
72  1.108289e+03 0.93741992 0.8341747 0.097929287
73  1.108289e+03 0.93741992 0.8341747 0.097929287
74  1.072906e+03 0.27398230 5.1381220 0.061619440
75  1.072906e+03 0.27398230 9.9518813 0.073302162
76  1.072906e+03 0.27398230 9.9518813 0.073302162
77  1.072906e+03 0.27398230 9.9518813 0.073302162
78  1.072906e+03 0.27398230 9.9518813 0.073302162
79  1.072906e+03 0.27398230 9.9518813 0.073302162
80  1.072906e+03 0.27398230 9.9518813 0.073302162
81  8.436062e+02 0.26854322 9.1640805 0.156044388
82  8.343237e+02 0.71935169 9.3360792 0.155668017
83  8.343237e+02 0.71935169 9.3360792 0.155668017
84  8.343237e+02 0.71935169 9.3360792 0.155668017
85  8.412300e+02 0.82778235 9.1949401 0.156167557
86  8.412300e+02 0.82778235 9.1949401 0.156167557
87  6.537213e+02 0.29452958 9.2578582 0.210203041
88  6.565320e+02 0.38150542 6.2272681 0.213271129
89  3.191812e+02 0.11790302 1.4071697 0.307789508
90  2.611324e+02 0.11790302 1.4071697 0.360413371
91  2.630409e+02 0.31685103 3.8074769 0.450542992
92  2.630409e+02 0.31685103 3.8074769 0.450542992
93  2.630409e+02 0.13471601 4.2319391 0.450542992
94  3.177246e+02 0.61822490 2.3267119 0.421567712
95  2.676095e+02 0.80150908 9.4087317 0.510357162
96  2.676095e+02 0.80150908 9.4087317 0.510357162
97  2.676095e+02 0.80150908 9.4087317 0.510357162
98  3.068723e+02 0.68892183 3.2847086 0.447090669
99  3.068723e+02 0.68892183 3.2847086 0.447090669
100 3.068723e+02 0.68892183 3.2847086 0.447090669
101 2.676095e+02 0.82469466 9.4087317 0.510357162
102 1.871457e+02 0.90168325 2.0684060 0.606190144
103 1.871457e+02 0.90168325 2.0684060 0.606190144
104 1.927877e+02 0.82817377 2.0290991 0.581820634
105 1.927877e+02 0.82817377 2.0290991 0.581820634
106 1.927877e+02 0.82817377 2.0290991 0.581820634
107 1.927877e+02 0.82817377 2.0290991 0.581820634
108 1.927877e+02 0.82817377 2.0290991 0.581820634
109 1.927877e+02 0.82817377 2.0290991 0.581820634
110 1.927877e+02 0.82817377 2.0290991 0.581820634
111 1.871457e+02 0.90168325 5.9487269 0.606190144
112 1.871457e+02 0.90168325 5.9487269 0.606190144
113 1.871457e+02 0.90168325 5.9487269 0.606190144
114 1.871457e+02 0.90168325 5.9487269 0.606190144
115 1.871457e+02 0.90168325 5.9487269 0.606190144
116 1.871457e+02 0.97673640 6.0107208 0.606190144
117 1.871457e+02 0.97673640 6.0107208 0.606190144
118 1.871457e+02 0.97673640 6.0107208 0.606190144
119 1.871457e+02 0.97673640 6.0107208 0.606190144
120 1.871457e+02 0.97673640 6.0107208 0.606190144
121 1.871457e+02 0.98673522 5.1170624 0.606190144
122 1.871457e+02 0.98673522 5.1170624 0.606190144
123 1.871457e+02 0.98673522 5.1170624 0.606190144
124 1.871457e+02 0.98673522 5.1170624 0.606190144
125 1.871457e+02 0.98673522 5.2035760 0.606190144
126 1.871457e+02 0.98673522 5.2035760 0.606190144
127 1.475930e+02 0.95825798 6.3767467 0.687502057
128 1.453661e+02 0.80963325 3.7729362 0.678230551
129 1.453661e+02 0.80963325 3.7729362 0.678230551
130 1.453661e+02 0.80963325 3.7729362 0.678230551
131 1.453661e+02 0.80963325 3.7729362 0.678230551
132 8.434433e+01 0.90800587 3.6799077 0.826265437
133 8.434433e+01 0.90800587 3.6799077 0.826265437
134 8.434433e+01 0.90800587 3.6799077 0.826265437
135 8.434433e+01 0.90800587 3.6799077 0.826265437
136 8.434433e+01 0.90800587 3.6799077 0.826265437
137 7.469064e+01 0.65727653 2.9117493 0.835040058
138 7.469064e+01 0.65727653 2.9117493 0.835040058
139 7.469064e+01 0.65727653 2.9117493 0.835040058
140 7.469064e+01 0.65727653 2.9117493 0.835040058
141 7.469064e+01 0.65727653 2.9117493 0.835040058
142 7.469064e+01 0.65727653 2.9117493 0.835040058
143 7.469064e+01 0.65727653 2.9117493 0.835040058
144 7.469064e+01 0.65727653 2.9117493 0.835040058
145 7.469064e+01 0.65727653 2.9117493 0.835040058
146 7.469064e+01 0.65727653 2.8968506 0.835040058
147 7.469064e+01 0.65727653 2.8968506 0.835040058
148 7.469064e+01 0.65727653 2.8968506 0.835040058
149 7.469064e+01 0.65727653 2.8968506 0.835040058
150 7.469064e+01 0.65727653 2.8968506 0.835040058
151 7.469064e+01 0.65727653 2.8968506 0.835040058
152 7.469064e+01 0.65727653 2.8968506 0.835040058
153 7.469064e+01 0.65727653 2.8968506 0.835040058
154 7.469064e+01 0.65727653 2.8968506 0.835040058
155 7.683428e+01 0.60602065 4.4185731 0.840696473
156 6.546419e+01 0.67743688 4.7866549 0.899431920
157 6.546419e+01 0.67743688 4.7866549 0.899431920
158 6.546419e+01 0.67743688 4.7866549 0.899431920
159 6.546419e+01 0.67743688 4.7866549 0.899431920
160 6.546419e+01 0.67743688 4.7866549 0.899431920
161 6.546419e+01 0.67743688 4.7866549 0.899431920
162 6.546419e+01 0.67743688 4.7866549 0.899431920
163 6.546419e+01 0.67743688 4.7866549 0.899431920
164 6.546419e+01 0.67743688 4.7866549 0.899431920
165 6.546419e+01 0.67743688 4.7866549 0.899431920
166 6.546419e+01 0.67743688 4.7866549 0.899431920
167 6.546419e+01 0.67743688 4.7866549 0.899431920
168 6.546419e+01 0.67743688 4.7866549 0.899431920
169 6.332923e+01 0.59201691 7.7977220 0.910522583
170 6.332923e+01 0.59201691 7.7977220 0.910522583
171 6.332923e+01 0.59201691 9.9035934 0.910522583
172 6.332923e+01 0.59201691 9.9035934 0.910522583
173 6.332923e+01 0.59201691 9.9035934 0.910522583
174 6.332923e+01 0.59201691 9.9035934 0.910522583
175 6.332923e+01 0.59201691 9.9035934 0.910522583
176 6.332923e+01 0.59201691 9.7129335 0.910522583
177 6.332923e+01 0.59201691 9.7129335 0.910522583
178 6.332923e+01 0.59201691 9.7129335 0.910522583
179 6.332923e+01 0.59201691 9.7129335 0.910522583
180 6.332923e+01 0.59201691 9.7129335 0.910522583
181 6.332923e+01 0.59201691 9.7129335 0.910522583
182 6.332923e+01 0.59201691 9.7129335 0.910522583
183 6.332923e+01 0.59201691 9.7129335 0.910522583
184 6.332923e+01 0.59201691 9.7129335 0.910522583
185 6.332923e+01 0.59201691 9.7129335 0.910522583
186 6.332923e+01 0.59201691 9.7129335 0.910522583
187 6.332923e+01 0.59201691 9.7129335 0.910522583
188 6.332923e+01 0.59201691 9.7129335 0.910522583
189 6.332923e+01 0.59201691 9.7129335 0.910522583
190 6.332923e+01 0.59201691 9.7129335 0.910522583
191 6.332923e+01 0.59201691 9.7129335 0.910522583
192 4.873393e+01 0.34380080 9.7335275 0.963556007
193 4.873393e+01 0.34380080 9.7335275 0.963556007
194 5.115039e+01 0.62979780 8.5095673 0.974296572
195 5.115039e+01 0.62979780 8.5095673 0.974296572
196 5.115039e+01 0.62979780 8.5095673 0.974296572
197 5.115039e+01 0.62979780 8.5095673 0.974296572
198 4.882148e+01 0.95914094 8.6416739 0.998797430
199 4.882148e+01 0.95914094 8.6416739 0.998797430
200 4.882148e+01 0.95914094 8.6416739 0.998797430

$member$bestvalit
  [1] 1.165488e+23 7.026481e+19 7.026481e+19 7.026481e+19 1.824549e+19
  [6] 1.824549e+19 1.824549e+19 4.793691e+18 4.017677e+18 5.024455e+16
 [11] 5.024455e+16 3.301195e+16 3.301195e+16 3.301195e+16 3.301195e+16
 [16] 7.643204e+15 7.643204e+15 7.643204e+15 7.643204e+15 7.643204e+15
 [21] 7.643204e+15 4.641754e+15 4.641754e+15 4.641754e+15 2.988928e+15
 [26] 2.988928e+15 2.892893e+15 4.019153e+13 3.188011e+13 3.188011e+13
 [31] 3.171762e+13 1.077650e+13 1.067573e+13 1.067573e+13 1.067573e+13
 [36] 1.067573e+13 1.018272e+13 1.018272e+13 3.539187e+12 3.537916e+12
 [41] 3.537916e+12 2.863498e+12 2.863498e+12 2.858453e+12 2.858094e+12
 [46] 1.986591e+12 1.812789e+12 1.812789e+12 1.633578e+11 1.473965e+11
 [51] 1.122125e+09 9.371407e+08 9.371407e+08 9.351219e+08 9.291865e+08
 [56] 9.291865e+08 9.291865e+08 3.057848e+08 3.057848e+08 4.332116e+07
 [61] 4.332116e+07 4.332116e+07 4.332116e+07 3.209546e+07 3.844459e+06
 [66] 3.844459e+06 3.844459e+06 2.144049e+06 1.882727e+06 1.882727e+06
 [71] 1.882727e+06 1.882727e+06 1.882727e+06 1.731044e+06 1.606832e+06
 [76] 1.606832e+06 1.606832e+06 1.606832e+06 1.606832e+06 1.606832e+06
 [81] 1.419835e+06 1.393775e+06 1.393775e+06 1.393775e+06 1.392846e+06
 [86] 1.392846e+06 1.343870e+06 1.286423e+06 1.097650e+06 1.057888e+06
 [91] 8.667481e+05 8.667481e+05 8.548066e+05 8.508193e+05 8.196776e+05
 [96] 8.196776e+05 8.196776e+05 8.161451e+05 8.161451e+05 8.161451e+05
[101] 8.125613e+05 6.090296e+05 6.090296e+05 5.921447e+05 5.921447e+05
[106] 5.921447e+05 5.921447e+05 5.921447e+05 5.921447e+05 5.921447e+05
[111] 5.654773e+05 5.654773e+05 5.654773e+05 5.654773e+05 5.654773e+05
[116] 5.574267e+05 5.574267e+05 5.574267e+05 5.574267e+05 5.574267e+05
[121] 5.569476e+05 5.569476e+05 5.569476e+05 5.569476e+05 5.569326e+05
[126] 5.569326e+05 5.404572e+05 5.061844e+05 5.061844e+05 5.061844e+05
[131] 5.061844e+05 3.256958e+05 3.256958e+05 3.256958e+05 3.256958e+05
[136] 3.256958e+05 3.045940e+05 3.045940e+05 3.045940e+05 3.045940e+05
[141] 3.045940e+05 3.045940e+05 3.045940e+05 3.045940e+05 3.045940e+05
[146] 3.035953e+05 3.035953e+05 3.035953e+05 3.035953e+05 3.035953e+05
[151] 3.035953e+05 3.035953e+05 3.035953e+05 3.035953e+05 2.826257e+05
[156] 2.476204e+05 2.476204e+05 2.476204e+05 2.476204e+05 2.476204e+05
[161] 2.476204e+05 2.476204e+05 2.476204e+05 2.476204e+05 2.476204e+05
[166] 2.476204e+05 2.476204e+05 2.476204e+05 2.296074e+05 2.296074e+05
[171] 2.245513e+05 2.245513e+05 2.245513e+05 2.245513e+05 2.245513e+05
[176] 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05
[181] 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05
[186] 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05 2.244411e+05
[191] 2.244411e+05 2.157834e+05 2.157834e+05 1.821703e+05 1.821703e+05
[196] 1.821703e+05 1.821703e+05 1.679032e+05 1.679032e+05 1.679032e+05

$member$pop
            [,1]       [,2]     [,3]       [,4]
 [1,]   66.85896 0.95210555 6.705123 0.90556710
 [2,]  168.27728 0.52925051 9.372604 0.62169413
 [3,]  437.96865 0.94654351 8.809513 0.35580705
 [4,]  302.90085 0.92909255 5.697571 0.47838096
 [5,] 1378.43375 0.99068245 8.742521 0.02991490
 [6,]  133.48434 0.10464337 8.447482 0.64999140
 [7,]  566.29935 0.20725435 3.953055 0.24547958
 [8,]   30.50040 0.96114461 6.760018 1.13144568
 [9,]  145.36615 0.98390514 3.230074 0.67823055
[10,]   74.69064 0.46110733 5.003903 0.83504006
[11,]   43.30462 0.54212966 7.822057 0.99781058
[12,]  114.75478 0.99769615 9.504005 0.76558274
[13,]  978.54103 0.98723724 9.321206 0.11419916
[14,]   47.16857 0.53049502 5.078607 1.00437959
[15,]   63.32923 0.59201691 9.712934 0.91052258
[16,]   93.92097 0.14309104 6.110182 0.74091989
[17,]   79.37277 0.55930406 4.399198 0.82626502
[18,]  263.08722 0.94636250 9.785097 0.50433539
[19,]   40.25168 0.15887788 4.783285 0.94063128
[20,]  177.81087 0.30978276 9.675856 0.59960805
[21,]  231.27115 0.73309526 9.392493 0.54345488
[22,]  870.22539 0.51473221 2.430072 0.13377019
[23,]  263.04093 0.58436048 2.657745 0.47637107
[24,]   65.46419 0.59745831 7.957838 0.89943192
[25,]  173.47220 0.61309591 3.752726 0.60171062
[26,]   48.82148 0.95914094 8.641674 0.99879743
[27,]   51.15039 0.62979780 8.509567 0.97429657
[28,]   78.83834 0.25113449 9.925171 0.83219374
[29,]   94.98563 0.59996925 7.151447 0.79658878
[30,]  664.95833 0.97398401 9.859594 0.23011482
[31,]  602.00534 0.97836561 9.910433 0.25939108
[32,]  316.19916 0.95538471 9.122347 0.45040320
[33,]  345.12807 0.73128902 9.336079 0.42485519
[34,]   55.11561 0.40305977 4.333058 0.92063067
[35,]   46.08721 0.97601171 3.944520 1.03086189
[36,]  609.33034 0.06686080 9.788436 0.23296820
[37,]  219.87958 0.92791089 9.421939 0.55576346
[38,]  754.81406 0.97710883 9.365421 0.20969383
[39,]  831.25141 0.99334258 9.207417 0.16602084
[40,] 1029.09952 0.98474598 9.935681 0.09662428
[41,]  147.59302 0.95825798 9.850649 0.68750206
[42,]  297.58679 0.12977892 5.929299 0.41106924
[43,]   86.56690 0.28327900 6.752150 0.79434382
[44,]  218.63973 0.91860458 8.032408 0.56065697
[45,]   50.60271 0.05074987 5.004774 0.82922811
[46,]   76.83428 0.60602065 4.418573 0.84069647
[47,]  119.20232 0.64077525 5.222199 0.72036234
[48,] 1194.75049 0.85031326 9.837763 0.05618560
[49,] 1021.64400 0.93275008 9.060753 0.09811606
[50,]  653.72134 0.11258214 7.243190 0.21282854

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
30.5003997  0.9611446  6.7600180  1.1314457 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1087.376 1129.531 1155.442 1167.098 1167.098 1184.076 1220.247 1223.445
 [9] 1181.421 1228.776 1266.172 1433.292 1500.795 1559.878 1523.194 1542.892
[17] 1634.098 1718.134 1843.407 1960.103

$residuals
 [1] -141.242661 -166.800528  -85.862996    4.698640   11.018207    1.734327
 [7]   19.110574   65.116005   26.285189   49.632016   94.420264  107.491813
[13]   74.239197  136.081412  121.495414   83.139074   20.942329   37.465909
[19]   44.013699   31.791353

$rss
[1] 134013.1

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.871232e+11  4.471755e+09  8.800311e+12 -6.028928e+02
delta  4.471755e+09  3.512778e+09 -4.740018e+11  3.024357e+01
rho    8.800311e+12 -4.740018e+11  3.781754e+14 -2.551243e+04
nu    -6.028928e+02  3.024357e+01 -2.551243e+04  2.672472e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
30.5004  0.9611  6.7600  1.1314 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)    
gamma 3.050e+01  4.386e+07 6.95e-07        1    
delta 9.611e-01  4.852e+06 1.98e-07        1    
rho   6.760e+00  1.592e+09 4.25e-09        1    
nu    1.131e+00  1.338e-01    8.455   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 81.85753 
Multiple R-squared: 0.9242914 

> coef( summary( cesLandIntDeVrs ) )
        Estimate   Std. Error      t value     Pr(>|t|)
gamma 30.5003997 4.386244e+07 6.953649e-07 9.999994e-01
delta  0.9611446 4.851589e+06 1.981092e-07 9.999998e-01
rho    6.7600180 1.591862e+09 4.246612e-09 1.000000e+00
nu     1.1314457 1.338182e-01 8.455095e+00 2.788609e-17
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
48.9761881  0.9898265  2.9994325 

$optim$bestval
[1] 165832.5

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2     par3
1   33.73472 0.4192938 2.154901
2   34.20096 0.5711807 1.573923
3   34.20096 0.5711807 1.573923
4   34.20096 0.5711807 1.573923
5   41.60178 0.6157318 2.904399
6   41.60178 0.6157318 2.904399
7   41.60178 0.6157318 2.904399
8   41.60178 0.6157318 2.904399
9   41.60178 0.6157318 2.904399
10  41.60178 0.6157318 2.904399
11  41.60178 0.6157318 2.904399
12  41.60178 0.6157318 2.904399
13  41.60178 0.6157318 2.904399
14  41.60178 0.6157318 2.904399
15  41.60178 0.6157318 2.904399
16  41.60178 0.6157318 2.904399
17  41.60178 0.6157318 2.904399
18  41.60178 0.6157318 2.904399
19  41.60178 0.6157318 2.904399
20  41.60178 0.6157318 2.904399
21  41.60178 0.6157318 2.904399
22  41.60178 0.6157318 2.904399
23  41.60178 0.6157318 2.904399
24  41.60178 0.6157318 2.904399
25  41.60178 0.6157318 2.904399
26  47.85772 0.9314013 2.728210
27  47.85772 0.9314013 2.728210
28  47.85772 0.9314013 2.728210
29  47.85772 0.9314013 2.728210
30  47.85772 0.9314013 2.728210
31  47.85772 0.9314013 2.728210
32  48.50434 0.9656766 2.651267
33  48.50434 0.9656766 2.651267
34  48.50434 0.9656766 2.651267
35  48.50434 0.9656766 2.651267
36  48.50434 0.9656766 2.651267
37  48.50434 0.9656766 2.651267
38  48.50434 0.9656766 2.651267
39  48.50434 0.9656766 2.651267
40  48.50434 0.9656766 2.651267
41  48.50434 0.9656766 2.651267
42  48.50434 0.9656766 2.651267
43  48.50434 0.9656766 2.651267
44  48.50434 0.9656766 2.651267
45  48.50434 0.9656766 2.651267
46  48.50434 0.9656766 2.651267
47  48.50434 0.9656766 2.651267
48  48.50434 0.9656766 2.651267
49  48.50434 0.9656766 2.651267
50  48.50434 0.9656766 2.651267
51  48.50434 0.9656766 2.651267
52  48.50434 0.9656766 2.651267
53  48.50434 0.9656766 2.651267
54  48.50434 0.9656766 2.679048
55  48.50434 0.9656766 2.679048
56  48.50434 0.9656766 2.679048
57  48.50434 0.9656766 2.679048
58  48.50434 0.9656766 2.679048
59  48.50434 0.9656766 2.679048
60  48.50434 0.9656766 2.679048
61  48.50434 0.9656766 2.679048
62  48.50434 0.9656766 2.679048
63  48.50434 0.9656766 2.679048
64  48.50434 0.9656766 2.679048
65  48.50434 0.9656766 2.679048
66  48.50434 0.9656766 2.679048
67  48.50434 0.9656766 2.679048
68  48.50434 0.9656766 2.679048
69  48.19654 0.9460169 2.862197
70  48.19654 0.9460169 2.862197
71  48.19654 0.9460169 2.862197
72  48.19654 0.9460169 2.862197
73  48.19654 0.9460169 2.862197
74  48.19654 0.9460169 2.862197
75  48.19654 0.9460169 2.862197
76  48.19654 0.9460169 2.862197
77  48.17013 0.9429018 2.930117
78  48.17013 0.9429018 2.930117
79  48.81838 0.9820929 2.729324
80  48.81838 0.9820929 2.729324
81  48.81838 0.9820929 2.729324
82  48.81838 0.9820929 2.729324
83  48.81838 0.9820929 2.729324
84  48.81838 0.9820929 2.729324
85  48.81838 0.9820929 2.729324
86  48.81838 0.9820929 2.729324
87  48.81838 0.9820929 2.729324
88  48.81838 0.9820929 2.729324
89  48.81838 0.9820929 2.729324
90  48.81838 0.9820929 2.729324
91  48.81838 0.9820929 2.729324
92  48.81838 0.9820929 2.729324
93  48.81838 0.9820929 2.729324
94  48.81838 0.9820929 2.729324
95  48.81838 0.9820929 2.729324
96  48.81838 0.9820929 2.729324
97  48.81838 0.9820929 2.729324
98  48.81838 0.9820929 2.729324
99  48.81838 0.9820929 2.729324
100 48.81838 0.9820929 2.729324
101 48.81838 0.9820929 2.729324
102 48.81838 0.9820929 2.729324
103 48.81838 0.9820929 2.729324
104 48.81838 0.9820929 2.729324
105 48.81838 0.9820929 2.729324
106 48.81838 0.9820929 2.729324
107 48.81838 0.9820929 2.729324
108 48.81838 0.9820929 2.729324
109 48.81838 0.9820929 2.729324
110 48.81838 0.9820929 2.729324
111 48.81838 0.9820929 2.729324
112 48.75557 0.9778884 2.826513
113 48.75557 0.9778884 2.826513
114 48.93739 0.9885612 2.727589
115 48.93739 0.9885612 2.727589
116 48.93739 0.9885612 2.727589
117 48.93739 0.9885612 2.727589
118 48.93739 0.9885612 2.727589
119 48.93739 0.9885612 2.727589
120 48.93739 0.9885612 2.727589
121 48.93739 0.9885612 2.727589
122 48.89084 0.9848772 2.978676
123 48.89084 0.9848772 2.978676
124 48.89084 0.9848772 2.978676
125 48.89084 0.9848772 2.978676
126 48.89084 0.9848772 2.978676
127 48.89084 0.9848772 2.978676
128 48.89084 0.9848772 2.978676
129 48.89084 0.9848772 2.978676
130 48.89084 0.9848772 2.978676
131 48.89084 0.9848772 2.978676
132 48.89084 0.9848772 2.978676
133 48.89084 0.9848772 2.978676
134 48.89084 0.9848772 2.978676
135 48.87278 0.9836670 2.979147
136 48.89515 0.9850859 2.966908
137 48.89515 0.9850859 2.966908
138 48.89515 0.9850859 2.966908
139 48.89515 0.9850859 2.966908
140 48.89515 0.9850859 2.966908
141 48.89515 0.9850859 2.966908
142 48.89515 0.9850859 2.966908
143 48.89515 0.9850859 2.966908
144 48.89515 0.9850859 2.966908
145 48.89515 0.9850859 2.966908
146 48.89515 0.9850859 2.966908
147 48.89515 0.9850859 2.966908
148 48.89515 0.9850859 2.966908
149 48.89515 0.9850859 2.966908
150 48.89515 0.9850859 2.966908
151 48.89515 0.9850859 2.966908
152 48.89515 0.9850859 2.966908
153 48.89515 0.9850859 2.966908
154 48.89515 0.9850859 2.966908
155 48.89515 0.9850859 2.966908
156 48.89515 0.9850859 2.966908
157 48.89515 0.9850859 2.966908
158 48.89515 0.9850859 2.966908
159 48.89515 0.9850859 2.966908
160 48.95441 0.9886625 2.948808
161 48.95441 0.9886625 2.948808
162 48.95441 0.9886625 2.948808
163 48.95441 0.9886625 2.948808
164 48.95441 0.9886625 2.948808
165 48.95441 0.9886625 2.948808
166 48.96812 0.9895263 2.938584
167 48.95481 0.9887300 2.966739
168 48.95481 0.9887300 2.966739
169 48.95481 0.9887300 2.966739
170 48.95481 0.9887300 2.966739
171 48.94050 0.9877470 2.988122
172 48.94050 0.9877470 2.988122
173 48.94050 0.9877470 2.988122
174 48.93666 0.9874649 2.998480
175 48.93666 0.9874649 2.998480
176 48.93666 0.9874649 2.998480
177 48.93666 0.9874649 2.998480
178 48.93666 0.9874649 2.998480
179 48.93666 0.9874649 2.998480
180 48.97619 0.9898265 2.997774
181 48.97619 0.9898265 2.997774
182 48.97619 0.9898265 2.997774
183 48.97619 0.9898265 2.997774
184 48.97619 0.9898265 2.997774
185 48.97619 0.9898265 2.997774
186 48.97619 0.9898265 2.997774
187 48.97063 0.9895275 2.998338
188 48.97063 0.9895275 2.998338
189 48.97063 0.9895275 2.998338
190 48.97063 0.9895275 2.998338
191 48.97063 0.9895275 2.998338
192 48.97619 0.9898265 2.999432
193 48.97619 0.9898265 2.999432
194 48.97619 0.9898265 2.999432
195 48.97619 0.9898265 2.999432
196 48.97619 0.9898265 2.999432
197 48.97619 0.9898265 2.999432
198 48.97619 0.9898265 2.999432
199 48.97619 0.9898265 2.999432
200 48.97619 0.9898265 2.999432

$member$bestvalit
  [1] 195824.3 170871.6 170871.6 170871.6 165849.3 165849.3 165849.3 165849.3
  [9] 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3
 [17] 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3 165849.3
 [25] 165849.3 165843.5 165843.5 165843.5 165843.5 165843.5 165843.5 165834.2
 [33] 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2
 [41] 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2 165834.2
 [49] 165834.2 165834.2 165834.2 165834.2 165834.2 165833.8 165833.8 165833.8
 [57] 165833.8 165833.8 165833.8 165833.8 165833.8 165833.8 165833.8 165833.8
 [65] 165833.8 165833.8 165833.8 165833.8 165833.7 165833.7 165833.7 165833.7
 [73] 165833.7 165833.7 165833.7 165833.7 165833.6 165833.6 165833.0 165833.0
 [81] 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0
 [89] 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0
 [97] 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0
[105] 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165833.0 165832.9
[113] 165832.9 165832.8 165832.8 165832.8 165832.8 165832.8 165832.8 165832.8
[121] 165832.8 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[129] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[137] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[145] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[153] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[161] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.5 165832.5
[169] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5
[177] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5
[185] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5
[193] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5

$member$pop
          [,1]      [,2]     [,3]
 [1,] 48.93024 0.9873320 2.972918
 [2,] 48.96238 0.9891783 2.962963
 [3,] 48.97255 0.9897950 2.952705
 [4,] 48.97457 0.9898805 2.950129
 [5,] 48.97647 0.9899588 2.971164
 [6,] 48.97619 0.9898265 2.999432
 [7,] 48.97327 0.9897527 2.972782
 [8,] 48.96932 0.9894646 2.982576
 [9,] 48.97397 0.9899549 2.936355
[10,] 48.95206 0.9884522 2.990114
[11,] 48.91969 0.9869249 2.911502
[12,] 48.96509 0.9892534 2.974637
[13,] 48.93112 0.9873343 2.934918
[14,] 48.96283 0.9891140 2.982958
[15,] 48.96115 0.9890078 2.981548
[16,] 48.96534 0.9894783 2.932802
[17,] 48.95741 0.9886545 2.998904
[18,] 48.96524 0.9892764 2.979197
[19,] 48.96951 0.9895605 2.966739
[20,] 48.96034 0.9891778 2.932564
[21,] 48.88628 0.9847010 2.939607
[22,] 47.76797 0.9380312 2.280264
[23,] 48.95499 0.9888532 2.980899
[24,] 48.95838 0.9889884 2.957987
[25,] 48.90548 0.9858377 2.949267
[26,] 48.97495 0.9897669 2.987242
[27,] 48.96362 0.9891260 2.987894
[28,] 48.95677 0.9888120 2.967906
[29,] 40.74089 0.5971725 2.749744
[30,] 48.97690 0.9899506 2.989417
[31,] 48.97589 0.9899317 2.972754
[32,] 48.94046 0.9876993 2.982961
[33,] 45.24310 0.8322929 2.217265
[34,] 48.94822 0.9881958 2.975187
[35,] 48.95323 0.9884501 2.994369
[36,] 48.95229 0.9884201 2.988773
[37,] 48.93821 0.9878386 2.943694
[38,] 48.97434 0.9897762 2.996727
[39,] 48.96285 0.9890820 2.993883
[40,] 48.96822 0.9894320 2.983624
[41,] 48.94050 0.9877470 2.988122
[42,] 48.97566 0.9898595 2.987100
[43,] 48.95117 0.9884199 2.982407
[44,] 48.91232 0.9860991 2.972934
[45,] 48.96503 0.9893685 2.954038
[46,] 47.72139 0.9368086 2.256857
[47,] 48.96051 0.9890707 2.966932
[48,] 48.96558 0.9895285 2.911914
[49,] 48.97063 0.9895275 2.998338
[50,] 48.93928 0.9877175 2.986612

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
48.9761881  0.9898265  2.9994325 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1149.956 1189.271 1213.351 1224.163 1224.163 1239.889 1273.306 1276.255
 [9] 1237.432 1281.169 1315.570 1467.914 1528.852 1581.927 1549.001 1566.692
[17] 1648.270 1722.968 1833.541 1935.759

$residuals
 [1] -203.823235 -226.540539 -143.772119  -52.366419  -46.046846  -54.078787
 [7]  -33.948488   12.306024  -29.725398   -2.760726   45.022955   72.869802
[13]   46.182511  114.032371   95.688253   59.338682    6.769456   32.631487
[19]   53.879301   56.134746

$rss
[1] 165832.5

$cov.unscaled
            gamma     delta         rho
gamma   572606509  38924325 -1248634822
delta    38924325   2645979   -84880029
rho   -1248634822 -84880029  2723098232

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
48.9762  0.9898  2.9994 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.898e+01  2.179e+06 2.25e-05        1
delta 9.898e-01  1.481e+05 6.68e-06        1
rho   2.999e+00  4.752e+06 6.31e-07        1

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

> coef( cesLandLaborDe2 )
     gamma      delta        rho 
48.9761881  0.9898265  2.9994325 
> vcov( cesLandLaborDe2 )
              gamma         delta           rho
gamma  4.747839e+12  322745917321 -1.035321e+13
delta  3.227459e+11   21939470081 -7.037934e+11
rho   -1.035321e+13 -703793396032  2.257891e+13
> coef( summary( cesLandLaborDe2 ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 48.9761881  2178953.6 2.247693e-05 0.9999821
delta  0.9898265   148119.8 6.682608e-06 0.9999947
rho    2.9994325  4751727.1 6.312300e-07 0.9999995
> fitted( cesLandLaborDe2 )
 [1] 1149.956 1189.271 1213.351 1224.163 1224.163 1239.889 1273.306 1276.255
 [9] 1237.432 1281.169 1315.570 1467.914 1528.852 1581.927 1549.001 1566.692
[17] 1648.270 1722.968 1833.541 1935.759
> residuals( cesLandLaborDe2 )
 [1] -203.823235 -226.540539 -143.772119  -52.366419  -46.046846  -54.078787
 [7]  -33.948488   12.306024  -29.725398   -2.760726   45.022955   72.869802
[13]   46.182511  114.032371   95.688253   59.338682    6.769456   32.631487
[19]   53.879301   56.134746
> 
> # constant returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # variable returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

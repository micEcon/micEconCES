
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
Loading required package: minpack.lm
Loading required package: DEoptim
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

$method
[1] "Nelder-Mead"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$cov.unscaled
           gamma       delta         rho
gamma 51681510.2 -180252.085 -949945.025
delta  -180252.1     628.694    3313.579
rho    -949945.0    3313.579   17469.029

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  1.003e+02  6.548e+05  1.53e-04        1
delta  6.909e-02  2.284e+03  3.03e-05        1
rho   -3.746e+00  1.204e+04 -3.11e-04        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428734611992 -1495318291 -7880464593
delta  -1495318291     5215461    27488476
rho    -7880464593    27488476   144917925
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654778.292  1.531055e-04 0.9998778
delta   0.06909165   2283.738  3.025375e-05 0.9999759
rho    -3.74630543  12038.186 -3.112018e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$startVal
   gamma    delta      rho      phi 
274.3737   0.5000   0.2500   1.0000 

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180

$cov.unscaled
             gamma         delta           rho           phi
gamma 343.31007875 -1.045707e-01 -2.2492500344  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
phi     0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
    gamma     delta       rho       phi 
233.84853   0.01535  -1.86100   1.43203 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
phi      1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

> coef( cesLandLaborVrs )
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho          phi
gamma 1438367.1569 -438.12004126 -9423.688897 188.41146053
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
phi       188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194557  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
phi     1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$cov.unscaled
            gamma        delta          rho
gamma 1034.396377 -2.569522630 -3.466063908
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.70 -78466.6193 -105844.6864
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> set.seed( 123 )
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$cov.unscaled
             gamma         delta          rho
gamma 11108.427441 -2.1880051775 -92.89635357
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896354  0.0183133366   0.77803365

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.899718 

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593373.04 -19419.743417 -824505.9789
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540885    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419572  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099185 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973091
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939

$cov.unscaled
           gamma       delta         rho
gamma 1716793187 -7752928.47 -39543448.1
delta   -7752928    35012.42    178591.8
rho    -39543448   178591.79    911191.5

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47345  0.07176 -4.39599 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.947e+01  3.773e+06  2.37e-05        1
delta  7.176e-02  1.704e+04  4.21e-06        1
rho   -4.396e+00  8.692e+04 -5.06e-05        1

Residual standard error: 91.06148 
Multiple R-squared: 0.906309 

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.423598e+13 -64288782785 -327901922293
delta -6.428878e+10    290329782    1480917693
rho   -3.279019e+11   1480917693    7555775973
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47345330 3773059.93  2.371376e-05 0.9999811
delta  0.07175508   17039.07  4.211209e-06 0.9999966
rho   -4.39599297   86923.97 -5.057285e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973091
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( 0, 0, -1 ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      60       60 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 

$iter
function gradient 
      60       60 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
              gamma         delta           rho
gamma  1.363269e+00 -2.927712e-02  5.039476e+10
delta -2.927712e-02  6.287732e-04 -1.077020e+09
rho    5.039476e+10 -1.077020e+09  7.098080e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 60 function and 60 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.063e+02     0.462    0.644
delta  1.000e+00  2.283e+00     0.438    0.661
rho   -1.000e+00  2.426e+13 -4.12e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborBfgsCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.130370e+04 -2.427547e+02  4.178541e+14
delta -2.427547e+02  5.213547e+00 -8.930238e+12
rho    4.178541e+14 -8.930238e+12  5.885457e+26
> coef( summary( cesLandLaborBfgsCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.063189e+02  4.622223e-01 0.6439219
delta  1.0000000 2.283319e+00  4.379589e-01 0.6614161
rho   -0.9999998 2.425996e+13 -4.122018e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.015804                                  
2     17 0.051750 -3 -0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$cov.unscaled
              gamma         delta           rho
gamma  5.725091e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.821e-03  -3.217 0.001297 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.820700e-03 -3.2166220 0.0012970936
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$cov.unscaled
              gamma         delta           rho           phi
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
phi    3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho        phi 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  1.028e+00  -0.046    0.964    
phi    1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 
Multiple R-squared: -18857212 

> coef( cesLandLaborKmenta )
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 1.027944e+00 -0.04573784 9.635192e-01
phi    1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = startVal, fn = residFun, data = estData, jac = jac,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.61969670133496, 4.85556569552491, -0.461292104488485 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$cov.unscaled
            gamma       delta          rho
gamma  13.9283785 -15.9958961  0.286083734
delta -15.9958961  18.3706647 -0.328580669
rho     0.2860837  -0.3285807  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.238 -98362.944  1759.20361
delta -98362.944 112966.016 -2020.52837
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658911  0.008951365 0.9928579
delta  4.8555657 336.104175  0.014446609 0.9884737
rho   -0.4612921   6.012499 -0.076722194 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168298.4

$nlm$estimate
[1]  2.743530e+02  8.909107e-04 -4.078588e+00

$nlm$gradient
[1]      -139.796 -13241371.147     23126.403

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1]  2.743530e+02  8.909107e-04 -4.078588e+00

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1150.916 1189.880 1213.617 1224.673 1224.673 1240.147 1273.088 1276.326
 [9] 1237.803 1281.533 1315.595 1467.805 1528.288 1580.758 1547.947 1565.280
[17] 1646.399 1720.678 1830.702 1932.469

$residuals
 [1] -204.783315 -227.149238 -144.037955  -52.876573  -46.557006  -54.337474
 [7]  -33.729742   12.234620  -30.096544   -3.124567   44.997666   72.979248
[13]   46.747075  115.201068   96.741946   60.751335    8.640617   34.921515
[19]   56.718628   59.424534

$cov.unscaled
              [,1]          [,2]          [,3]
[1,] 127464.641054 -4.0595028906 -1.547007e+03
[2,]     -4.059503  0.0001293511  4.931104e-02
[3,]  -1547.006879  0.0493110359  1.880309e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1]  2.744e+02  8.909e-04 -4.079e+00

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
[1,]  2.744e+02  3.275e+04   0.008    0.993
[2,]  8.909e-04  1.043e+00   0.001    0.999
[3,] -4.079e+00  3.978e+02  -0.010    0.992

Residual standard error: 91.73288 
Multiple R-squared: 0.9049224 

> coef( cesLandLaborNewton )
[1]  2.743530e+02  8.909107e-04 -4.078588e+00
> vcov( cesLandLaborNewton )
             [,1]          [,2]          [,3]
[1,] 1072604912.1 -34160.396995 -1.301794e+07
[2,]     -34160.4      1.088480  4.149485e+02
[3,]  -13017941.0    414.948483  1.582265e+05
> coef( summary( cesLandLaborNewton ) )
          Estimate   Std. Error       t value  Pr(>|t|)
[1,]  2.743530e+02 32750.647507  0.0083770245 0.9933162
[2,]  8.909107e-04     1.043302  0.0008539334 0.9993187
[3,] -4.078588e+00   397.776961 -0.0102534536 0.9918191
> fitted( cesLandLaborNewton )
 [1] 1150.916 1189.880 1213.617 1224.673 1224.673 1240.147 1273.088 1276.326
 [9] 1237.803 1281.533 1315.595 1467.805 1528.288 1580.758 1547.947 1565.280
[17] 1646.399 1720.678 1830.702 1932.469
> residuals( cesLandLaborNewton )
 [1] -204.783315 -227.149238 -144.037955  -52.876573  -46.557006  -54.337474
 [7]  -33.729742   12.234620  -30.096544   -3.124567   44.997666   72.979248
[13]   46.747075  115.201068   96.741946   60.751335    8.640617   34.921515
[19]   56.718628   59.424534
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 

$nlminb$objective
[1] 165832.6

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      143 


$coefficients
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.876 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.911 1548.985 1566.677
[17] 1648.254 1722.951 1833.523 1935.740

$residuals
 [1] -203.811952 -226.528786 -143.760107  -52.354275  -46.034708  -54.066467
 [7]  -33.935792   12.318690  -29.713132   -2.748042   45.036034   72.884407
[13]   46.197774  114.048173   95.703653   59.354236    6.785721   32.648423
[19]   53.897297   56.153754

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
   gamma    delta      rho 
79.98449  0.05813 -5.84102 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.98449         NA      NA       NA
delta  0.05813         NA      NA       NA
rho   -5.84102         NA      NA       NA

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

> coef( cesLandLaborPort )
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 79.98449297         NA      NA       NA
delta  0.05812501         NA      NA       NA
rho   -5.84102067         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.876 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.911 1548.985 1566.677
[17] 1648.254 1722.951 1833.523 1935.740
> residuals( cesLandLaborPort )
 [1] -203.811952 -226.528786 -143.760107  -52.354275  -46.034708  -54.066467
 [7]  -33.935792   12.318690  -29.713132   -2.748042   45.036034   72.884407
[13]   46.197774  114.048173   95.703653   59.354236    6.785721   32.648423
[19]   53.897297   56.153754
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0, 0, -1 ), upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 65

$nlminb$evaluations
function gradient 
     103       66 


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$iter
[1] 65

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

$method
[1] "PORT"

$startVal
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
              gamma         delta           rho
gamma  1.479241e+00 -3.181138e-02  1.150953e+11
delta -3.181138e-02  6.841466e-04 -2.502058e+09
rho    1.150953e+11 -2.502058e+09  8.729444e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence achieved after 65 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.107e+02     0.444    0.657
delta  1.000e+00  2.382e+00     0.420    0.675
rho   -1.000e+00  2.690e+13 -3.72e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborPortCon )
   gamma    delta      rho 
49.14295  1.00000 -1.00000 
> vcov( cesLandLaborPortCon )
              gamma         delta           rho
gamma  1.226530e+04 -2.637678e+02  9.543263e+14
delta -2.637678e+02  5.672682e+00 -2.074611e+13
rho    9.543263e+14 -2.074611e+13  7.238122e+26
> coef( summary( cesLandLaborPortCon ) )
      Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.14295 1.107488e+02  4.437335e-01 0.6572353
delta  1.00000 2.381739e+00  4.198612e-01 0.6745868
rho   -1.00000 2.690376e+13 -3.716953e-14 1.0000000
> fitted( cesLandLaborPortCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborPortCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho        phi 
77.7432211  0.2278510 -0.4614595  1.8946189 

$nlminb$objective
[1] 63086.05

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 117

$nlminb$evaluations
function gradient 
     200      117 


$coefficients
     gamma      delta        rho        phi 
77.7432211  0.2278510 -0.4614595  1.8946189 

$iter
[1] 117

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$startVal
   gamma    delta      rho      phi 
274.3737   0.5000   0.2500   1.0000 

$fitted.values
 [1] 1060.437 1102.958 1117.965 1156.166 1156.166 1163.674 1180.240 1212.228
 [9] 1168.539 1246.322 1279.511 1560.472 1633.894 1664.779 1612.437 1596.456
[17] 1690.911 1770.375 1889.584 2001.457

$residuals
 [1] -114.303932 -140.227386  -48.385437   15.630696   21.950263   22.136446
 [7]   59.117877   76.332910   39.166770   32.086033   81.081753  -19.687502
[13]  -58.859474   31.180030   32.251660   29.574644  -35.870722  -14.775089
[19]   -2.164079   -9.562600

$cov.unscaled
            gamma         delta           rho           phi
gamma 82.18709721 -3.113535e-01 -0.5776111008  2.420604e-02
delta -0.31135349  1.180014e-03  0.0021886900 -9.335687e-05
rho   -0.57761110  2.188690e-03  0.0040638486 -1.668226e-04
phi    0.02420604 -9.335687e-05 -0.0001668226  1.893237e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho     phi 
77.7432  0.2279 -0.4615  1.8946 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 117 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  77.7432   509.1591   0.153    0.879    
delta   0.2279     1.9293   0.118    0.906    
rho    -0.4615     3.5803  -0.129    0.897    
phi     1.8946     0.2444   7.753 8.98e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 56.16318 
Multiple R-squared: 0.9643605 

> coef( cesLandLaborPortVrs )
     gamma      delta        rho        phi 
77.7432211  0.2278510 -0.4614595  1.8946189 
> vcov( cesLandLaborPortVrs )
             gamma        delta          rho         phi
gamma 259242.95822 -982.1030759 -1821.960083 76.35317042
delta   -982.10308    3.7221202     6.903790 -0.29447579
rho    -1821.96008    6.9037900    12.818607 -0.52620900
phi       76.35317   -0.2944758    -0.526209  0.05971843
> coef( summary( cesLandLaborPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma 77.7432211 509.1590697  0.1526895 8.786432e-01
delta  0.2278510   1.9292797  0.1181016 9.059872e-01
rho   -0.4614595   3.5803083 -0.1288882 8.974461e-01
phi    1.8946189   0.2443736  7.7529619 8.977358e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060.437 1102.958 1117.965 1156.166 1156.166 1163.674 1180.240 1212.228
 [9] 1168.539 1246.322 1279.511 1560.472 1633.894 1664.779 1612.437 1596.456
[17] 1690.911 1770.375 1889.584 2001.457
> residuals( cesLandLaborPortVrs )
 [1] -114.303932 -140.227386  -48.385437   15.630696   21.950263   22.136446
 [7]   59.117877   76.332910   39.166770   32.086033   81.081753  -19.687502
[13]  -58.859474   31.180030   32.251660   29.574644  -35.870722  -14.775089
[19]   -2.164079   -9.562600
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE,
+    lower = c( 0, 0, -1, 0 ), upper = c( Inf, 1, Inf, Inf ) )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho        phi 
41.8964071  0.4317150 -0.1515595  1.8839140 

$nlminb$objective
[1] 62350.11

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 139

$nlminb$evaluations
function gradient 
     200      139 


$coefficients
     gamma      delta        rho        phi 
41.8964071  0.4317150 -0.1515595  1.8839140 

$iter
[1] 139

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

$method
[1] "PORT"

$startVal
   gamma    delta      rho      phi 
274.3737   0.5000   0.2500   1.0000 

$fitted.values
 [1] 1059.204 1102.500 1118.394 1155.708 1155.708 1163.892 1181.671 1212.721
 [9] 1168.415 1245.795 1279.778 1559.470 1633.757 1665.951 1613.659 1598.451
[17] 1692.948 1772.036 1889.738 1999.208

$residuals
 [1] -113.070606 -139.769745  -48.814406   16.088437   22.408003   21.917519
 [7]   57.686560   75.839675   39.291647   32.613649   80.814830  -18.685770
[13]  -58.721902   30.008773   31.030090   27.579810  -37.907790  -16.435848
[19]   -2.317805   -7.314350

$cov.unscaled
            gamma         delta           rho           phi
gamma 32.68569962 -0.2777575323 -0.3694621413  1.535906e-02
delta -0.27775753  0.0023615941  0.0031401874 -1.336478e-04
rho   -0.36946214  0.0031401874  0.0041797772 -1.714046e-04
phi    0.01535906 -0.0001336478 -0.0001714046  1.891636e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

Coefficients:
  gamma   delta     rho     phi 
41.8964  0.4317 -0.1516  1.8839 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 139 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  41.8964   319.2144   0.131    0.896    
delta   0.4317     2.7134   0.159    0.874    
rho    -0.1516     3.6098  -0.042    0.967    
phi     1.8839     0.2428   7.758 8.64e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 55.83463 
Multiple R-squared: 0.9647763 

> coef( cesLandLaborPortVrsCon )
     gamma      delta        rho        phi 
41.8964071  0.4317150 -0.1515595  1.8839140 
> vcov( cesLandLaborPortVrsCon )
             gamma        delta           rho         phi
gamma 101897.84530 -865.9106089 -1151.8002231 47.88196433
delta   -865.91061    7.3622824     9.7895511 -0.41664779
rho    -1151.80022    9.7895511    13.0304780 -0.53435470
phi       47.88196   -0.4166478    -0.5343547  0.05897186
> coef( summary( cesLandLaborPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 41.8964071 319.2144190  0.13124848 8.955787e-01
delta  0.4317150   2.7133526  0.15910759 8.735841e-01
rho   -0.1515595   3.6097753 -0.04198585 9.665100e-01
phi    1.8839140   0.2428412  7.75780172 8.641412e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1059.204 1102.500 1118.394 1155.708 1155.708 1163.892 1181.671 1212.721
 [9] 1168.415 1245.795 1279.778 1559.470 1633.757 1665.951 1613.659 1598.451
[17] 1692.948 1772.036 1889.738 1999.208
> residuals( cesLandLaborPortVrsCon )
 [1] -113.070606 -139.769745  -48.814406   16.088437   22.408003   21.917519
 [7]   57.686560   75.839675   39.291647   32.613649   80.814830  -18.685770
[13]  -58.721902   30.008773   31.030090   27.579810  -37.907790  -16.435848
[19]   -2.317805   -7.314350
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3 
264.8556160   0.1747568  -0.8468598 

$optim$bestval
[1] 239460.9

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2        par3
1   5.155595e+08 0.55941262  9.11440209
2   3.502871e+08 0.94110613  8.12892960
3   2.408298e+06 0.62653670  7.51699128
4   2.408298e+06 0.62653670  7.51699128
5   2.408298e+06 0.43295759  9.09999243
6   2.408298e+06 0.43295759  9.09999243
7   2.408298e+06 0.43295759  9.09999243
8   2.408298e+06 0.36096495  7.51699128
9   2.408298e+06 0.14691229  8.87494186
10  2.408298e+06 0.14691229  8.87494186
11  2.408298e+06 0.14691229  8.87494186
12  2.408298e+06 0.34672596  8.87494186
13  2.408298e+06 0.34672596  8.87494186
14  2.408298e+06 0.34672596  8.87494186
15  2.408298e+06 0.34672596  8.87494186
16  2.408298e+06 0.34672596  8.87494186
17  2.408298e+06 0.14691229  9.06585660
18  2.408298e+06 0.14691229  9.06585660
19  2.408298e+06 0.14691229  9.06585660
20  2.408298e+06 0.14691229  9.06585660
21  8.945056e+05 0.26550431  8.51892031
22  3.528786e+05 0.25432413  8.42257699
23  3.528786e+05 0.25432413  8.42257699
24  3.528786e+05 0.25432413  8.42257699
25  3.528786e+05 0.25432413  8.42257699
26  3.528786e+05 0.25432413  8.42257699
27  3.528786e+05 0.25432413  8.42257699
28  3.528786e+05 0.25432413  8.42257699
29  3.528786e+05 0.25432413  8.42257699
30  3.528786e+05 0.23989311  8.42257699
31  3.528786e+05 0.23989311  8.42257699
32  3.528786e+05 0.23989311  8.42257699
33  3.528786e+05 0.23989311  8.42257699
34  3.528786e+05 0.23989311  8.42257699
35  3.528786e+05 0.23989311  8.42257699
36  3.528786e+05 0.23989311  8.42257699
37  3.528786e+05 0.23989311  8.42257699
38  3.528786e+05 0.23989311  9.16928179
39  2.596857e+04 0.22414559  7.76485036
40  2.596857e+04 0.20655129  9.86701378
41  2.596857e+04 0.20655129  9.86701378
42  2.596857e+04 0.20655129  9.86701378
43  4.256779e+03 0.20404115  4.58465535
44  4.256779e+03 0.20404115  4.58465535
45  4.256779e+03 0.20404115  9.04682089
46  4.256779e+03 0.20404115  9.04682089
47  4.256779e+03 0.20404115  9.04682089
48  1.691736e+03 0.20404115  9.04682089
49  1.691736e+03 0.20404115  9.04682089
50  1.691736e+03 0.20404115  9.04682089
51  1.691736e+03 0.20404115  9.04682089
52  1.691736e+03 0.20404115  9.04682089
53  1.691736e+03 0.20404115  9.04682089
54  1.691736e+03 0.20404115  9.04682089
55  9.389141e+02 0.07066258  6.27588505
56  9.389141e+02 0.07066258  6.00087547
57  9.389141e+02 0.07066258  6.00087547
58  9.389141e+02 0.07066258  6.00087547
59  9.389141e+02 0.07066258  6.00087547
60  9.389141e+02 0.07066258  6.00087547
61  9.389141e+02 0.07066258  6.00087547
62  9.176633e+02 0.11976375  9.22975288
63  9.176633e+02 0.15368962  9.57259817
64  7.853733e+02 0.25422282  1.97571593
65  9.055291e+02 0.11976375  9.22975288
66  9.055291e+02 0.09759044  9.22975288
67  8.955865e+02 0.16703623  8.10068477
68  8.955865e+02 0.16703623  8.10068477
69  8.028924e+02 0.23040704  1.95768623
70  8.028924e+02 0.23040704  1.95768623
71  8.028924e+02 0.23040704  1.95768623
72  8.028924e+02 0.23040704  1.95768623
73  8.028924e+02 0.23040704  1.95768623
74  8.028924e+02 0.23040704  1.95768623
75  8.028924e+02 0.23040704  1.95768623
76  8.028924e+02 0.23040704  1.95768623
77  8.028924e+02 0.23336504  1.95768623
78  8.028924e+02 0.23336504  1.95768623
79  8.028924e+02 0.23336504  1.95768623
80  8.028924e+02 0.23336504  1.95768623
81  8.028924e+02 0.23336504  1.95768623
82  8.028924e+02 0.23336504  1.95768623
83  8.028924e+02 0.23336504  1.95768623
84  8.028924e+02 0.23336504  1.95768623
85  8.028924e+02 0.23336504  1.95768623
86  7.208598e+02 0.37881688  1.95768623
87  7.208598e+02 0.37881688  1.95768623
88  7.208598e+02 0.37881688  1.95768623
89  7.208598e+02 0.37881688  1.95768623
90  7.208598e+02 0.37881688  1.95768623
91  7.208598e+02 0.37881688  1.95768623
92  7.208598e+02 0.37881688  1.95768623
93  7.208598e+02 0.37881688  1.95768623
94  7.192668e+02 0.13861708  0.42954738
95  7.192668e+02 0.13861708  0.42954738
96  7.192668e+02 0.13861708  0.42954738
97  7.192668e+02 0.13861708  0.42954738
98  7.192668e+02 0.13861708  0.42954738
99  7.192668e+02 0.13861708  0.42954738
100 7.411177e+02 0.07197958 -0.00967931
101 7.411177e+02 0.07197958 -0.00967931
102 7.380741e+02 0.07197958 -0.00967931
103 7.380741e+02 0.07197958 -0.00967931
104 7.380741e+02 0.07197958 -0.00967931
105 7.380741e+02 0.07197958 -0.00967931
106 7.380741e+02 0.07197958 -0.00967931
107 7.380741e+02 0.07197958 -0.00967931
108 7.380741e+02 0.07197958 -0.00967931
109 7.380741e+02 0.07197958 -0.00967931
110 7.380741e+02 0.07197958 -0.00967931
111 7.380741e+02 0.07197958 -0.00967931
112 7.380741e+02 0.07197958 -0.00967931
113 7.380741e+02 0.07197958 -0.00967931
114 7.380741e+02 0.07197958 -0.00967931
115 7.380741e+02 0.07197958 -0.00967931
116 7.380741e+02 0.07197958 -0.00967931
117 7.380741e+02 0.07197958 -0.00967931
118 7.380741e+02 0.07197958 -0.00967931
119 7.380741e+02 0.07197958 -0.00967931
120 6.782852e+02 0.02537350 -0.88325459
121 6.782852e+02 0.02537350 -0.88325459
122 6.782852e+02 0.02537350 -0.88325459
123 6.782852e+02 0.02537350 -0.80971236
124 6.782852e+02 0.02537350 -0.80971236
125 6.782852e+02 0.02537350 -0.80971236
126 6.782852e+02 0.02537350 -0.80971236
127 6.782852e+02 0.02537350 -0.80971236
128 6.782852e+02 0.02537350 -0.80971236
129 6.782852e+02 0.02537350 -0.80971236
130 6.782852e+02 0.02537350 -0.80971236
131 6.782852e+02 0.02537350 -0.80971236
132 6.782852e+02 0.02537350 -0.80971236
133 6.782852e+02 0.02537350 -0.80971236
134 6.782852e+02 0.02537350 -0.80971236
135 6.782852e+02 0.02537350 -0.80971236
136 5.380007e+02 0.11481254 -0.37526125
137 5.062182e+02 0.11481254 -0.37526125
138 5.062182e+02 0.11481254 -0.37526125
139 5.062182e+02 0.11481254 -0.37526125
140 5.062182e+02 0.11481254 -0.37526125
141 5.062182e+02 0.11481254 -0.37526125
142 5.062182e+02 0.11481254 -0.37526125
143 4.107890e+02 0.16436176 -0.50774183
144 4.107890e+02 0.16436176 -0.50774183
145 4.107890e+02 0.16436176 -0.50774183
146 4.107890e+02 0.16436176 -0.50774183
147 4.107890e+02 0.16436176 -0.50774183
148 4.107890e+02 0.16436176 -0.50774183
149 4.107890e+02 0.16436176 -0.50774183
150 4.107890e+02 0.16436176 -0.50774183
151 4.107890e+02 0.16436176 -0.50774183
152 4.107890e+02 0.16436176 -0.50774183
153 4.107890e+02 0.16436176 -0.50774183
154 4.107890e+02 0.16436176 -0.50774183
155 4.107890e+02 0.16436176 -0.50774183
156 4.107890e+02 0.16436176 -0.50774183
157 4.107890e+02 0.16436176 -0.50774183
158 2.573090e+02 0.22684873 -0.63635316
159 2.573090e+02 0.22684873 -0.63635316
160 2.573090e+02 0.22684873 -0.63635316
161 2.573090e+02 0.22684873 -0.63635316
162 2.201893e+02 0.18282511 -0.99934669
163 2.201893e+02 0.18282511 -0.99934669
164 2.201893e+02 0.18282511 -0.99934669
165 2.201893e+02 0.18282511 -0.99934669
166 2.201893e+02 0.18282511 -0.99934669
167 2.643561e+02 0.19023400 -0.85299459
168 2.643561e+02 0.19023400 -0.85299459
169 2.643561e+02 0.19023400 -0.85299459
170 2.643561e+02 0.19023400 -0.85299459
171 2.643561e+02 0.19023400 -0.85299459
172 2.643561e+02 0.19023400 -0.85299459
173 2.166985e+02 0.20709810 -0.96924059
174 2.166985e+02 0.20709810 -0.96924059
175 2.166985e+02 0.20709810 -0.96924059
176 2.166985e+02 0.20709810 -0.96924059
177 2.166985e+02 0.20709810 -0.96924059
178 2.166985e+02 0.20709810 -0.96924059
179 2.166985e+02 0.20709810 -0.96924059
180 2.166985e+02 0.20709810 -0.96924059
181 2.166985e+02 0.20709810 -0.96924059
182 2.166985e+02 0.20709810 -0.96924059
183 2.166985e+02 0.20709810 -0.96924059
184 2.166985e+02 0.20709810 -0.96924059
185 2.166985e+02 0.20709810 -0.96924059
186 2.166985e+02 0.20709810 -0.96924059
187 2.648556e+02 0.17475678 -0.84685981
188 2.648556e+02 0.17475678 -0.84685981
189 2.648556e+02 0.17475678 -0.84685981
190 2.648556e+02 0.17475678 -0.84685981
191 2.648556e+02 0.17475678 -0.84685981
192 2.648556e+02 0.17475678 -0.84685981
193 2.648556e+02 0.17475678 -0.84685981
194 2.648556e+02 0.17475678 -0.84685981
195 2.648556e+02 0.17475678 -0.84685981
196 2.648556e+02 0.17475678 -0.84685981
197 2.648556e+02 0.17475678 -0.84685981
198 2.648556e+02 0.17475678 -0.84685981
199 2.648556e+02 0.17475678 -0.84685981
200 2.648556e+02 0.17475678 -0.84685981

$member$bestvalit
  [1] 1.537852e+19 1.190419e+19 3.640717e+14 3.640717e+14 3.173273e+14
  [6] 3.173273e+14 3.173273e+14 3.155723e+14 2.903312e+14 2.903312e+14
 [11] 2.903312e+14 2.903312e+14 2.903312e+14 2.903312e+14 2.903312e+14
 [16] 2.903312e+14 1.550343e+14 1.550343e+14 1.546803e+14 1.518879e+14
 [21] 4.149697e+13 6.375003e+12 6.375003e+12 6.375003e+12 6.375003e+12
 [26] 6.375003e+12 4.509200e+12 5.827618e+11 5.756753e+11 8.418504e+10
 [31] 8.418504e+10 8.418504e+10 8.418504e+10 8.418504e+10 8.418504e+10
 [36] 8.418504e+10 8.418504e+10 8.418504e+10 3.084389e+10 3.084389e+10
 [41] 3.084389e+10 3.084389e+10 5.516236e+08 5.516236e+08 5.516236e+08
 [46] 4.091334e+06 3.798375e+06 1.473082e+06 1.157309e+06 1.157309e+06
 [51] 1.157309e+06 1.157309e+06 1.157309e+06 1.157309e+06 1.123787e+06
 [56] 1.119336e+06 1.119336e+06 1.119336e+06 1.119336e+06 1.119336e+06
 [61] 1.119336e+06 1.079868e+06 1.079868e+06 1.071568e+06 1.071086e+06
 [66] 1.071086e+06 1.071026e+06 1.071026e+06 1.069738e+06 1.069738e+06
 [71] 1.062515e+06 1.062515e+06 1.062515e+06 1.031607e+06 1.031607e+06
 [76] 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06
 [81] 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06
 [86] 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06 1.031607e+06
 [91] 1.031607e+06 1.031607e+06 1.031607e+06 1.010962e+06 1.010962e+06
 [96] 1.010962e+06 1.010962e+06 1.010962e+06 1.010962e+06 9.688388e+05
[101] 9.688388e+05 9.688388e+05 9.688388e+05 9.688388e+05 9.688388e+05
[106] 9.688388e+05 9.688388e+05 9.688388e+05 9.688388e+05 9.688388e+05
[111] 9.688388e+05 9.688388e+05 7.962666e+05 7.962666e+05 7.962666e+05
[116] 7.962666e+05 7.962666e+05 7.962666e+05 7.962666e+05 7.289642e+05
[121] 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05
[126] 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05
[131] 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05 7.289642e+05
[136] 7.144788e+05 7.144788e+05 7.144788e+05 7.144788e+05 7.144788e+05
[141] 7.144788e+05 3.730974e+05 3.730974e+05 3.730974e+05 3.730974e+05
[146] 3.730974e+05 3.730974e+05 3.730974e+05 3.730974e+05 3.730974e+05
[151] 3.730974e+05 3.730974e+05 3.730974e+05 3.730974e+05 3.730974e+05
[156] 3.730974e+05 3.730974e+05 3.548040e+05 3.548040e+05 3.548040e+05
[161] 3.548040e+05 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05
[166] 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05
[171] 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05
[176] 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05 2.565863e+05
[181] 2.565863e+05 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05
[186] 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05
[191] 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05
[196] 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05 2.394609e+05

$member$pop
          [,1]       [,2]       [,3]
 [1,] 895.5865 0.16892905  7.7437523
 [2,] 247.0484 0.26314458 -0.5596392
 [3,] 210.6558 0.20682145 -0.9650226
 [4,] 910.7792 0.06054390  9.4663188
 [5,] 228.3173 0.17798788 -0.9751667
 [6,] 277.9582 0.13500040 -0.9810679
 [7,] 225.5287 0.23677607 -0.7422548
 [8,] 899.8336 0.10681754  6.4865907
 [9,] 172.7474 0.31213314 -0.7108802
[10,] 267.2920 0.16629293 -0.8659902
[11,] 240.8956 0.16427892 -0.9271703
[12,] 912.4964 0.02217628  4.4542929
[13,] 386.1185 0.09766836 -0.8978427
[14,] 270.6053 0.18619365 -0.7762305
[15,] 359.2282 0.10882376 -0.8613496
[16,] 220.1893 0.18282511 -0.9993467
[17,] 482.1354 0.08714317 -0.6917394
[18,] 226.3661 0.23063313 -0.7727231
[19,] 278.7487 0.24681801 -0.4782211
[20,] 248.6946 0.20878623 -0.7788111
[21,] 293.2200 0.14309141 -0.8228603
[22,] 307.7027 0.14535329 -0.8435437
[23,] 280.8066 0.19102828 -0.7285791
[24,] 912.8042 0.03819746  8.5987773
[25,] 204.5840 0.28821985 -0.6679013
[26,] 312.5175 0.23001740 -0.4534130
[27,] 912.3388 0.02440908  5.0693774
[28,] 173.9641 0.23964756 -0.9586027
[29,] 264.8556 0.17475678 -0.8468598
[30,] 221.8893 0.19476675 -0.9044939
[31,] 238.4209 0.18647999 -0.9175156
[32,] 285.9710 0.18010894 -0.7155107
[33,] 407.3323 0.13243814 -0.6159357
[34,] 257.1832 0.20003270 -0.7478792
[35,] 284.4152 0.16121700 -0.8341050
[36,] 259.4115 0.28071156 -0.4522667
[37,] 348.0464 0.09481996 -0.9962723
[38,] 256.5528 0.18591005 -0.8064941
[39,] 165.3323 0.27720272 -0.8952308
[40,] 278.1038 0.14736670 -0.8866883
[41,] 897.8401 0.16161229  8.4846369
[42,] 433.0128 0.11703201 -0.6482448
[43,] 307.0161 0.20492203 -0.6271914
[44,] 189.1225 0.22986635 -0.9492149
[45,] 270.0849 0.18661578 -0.7662288
[46,] 239.1562 0.17211495 -0.9855951
[47,] 229.6000 0.24002356 -0.7180876
[48,] 316.4007 0.16960511 -0.7034340
[49,] 249.6805 0.20145393 -0.8335576
[50,] 911.5766 0.03768766  6.7701075

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho 
264.8556160   0.1747568  -0.8468598 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$fitted.values
 [1] 1220.608 1252.077 1267.104 1285.525 1285.525 1294.425 1313.615 1326.313
 [9] 1295.250 1340.425 1365.617 1519.232 1566.416 1597.179 1567.861 1570.096
[17] 1632.099 1686.326 1766.426 1840.310

$residuals
 [1] -274.474707 -289.346204 -197.525101 -113.728225 -107.408658 -108.614747
 [7]  -74.257265  -37.751652  -87.544248  -62.016514   -5.024014   21.551612
[13]    8.618352   98.780034   76.828356   55.935308   22.940523   69.274071
[19]  120.994388  151.584249

$cov.unscaled
           gamma        delta          rho
gamma 888.509500 -1.567881813 -3.641497925
delta  -1.567882  0.002767704  0.006430265
rho    -3.641498  0.006430265  0.014944103

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho 
264.8556   0.1748  -0.8469 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  264.8556  3741.3721   0.071    0.944
delta    0.1748     6.6033   0.026    0.979
rho     -0.8469    15.3439  -0.055    0.956

Residual standard error: 125.5162 
Multiple R-squared: 0.8219968 

> coef( cesLandLaborDe )
      gamma       delta         rho 
264.8556160   0.1747568  -0.8468598 
> vcov( cesLandLaborDe )
            gamma       delta         rho
gamma 13997865.21 -24700.9157 -57369.3327
delta   -24700.92     43.6033    101.3045
rho     -57369.33    101.3045    235.4342
> coef( summary( cesLandLaborDe ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 264.8556160 3741.37210  0.07079104 0.9435641
delta   0.1747568    6.60328  0.02646515 0.9788863
rho    -0.8468598   15.34387 -0.05519208 0.9559854
> fitted( cesLandLaborDe )
 [1] 1220.608 1252.077 1267.104 1285.525 1285.525 1294.425 1313.615 1326.313
 [9] 1295.250 1340.425 1365.617 1519.232 1566.416 1597.179 1567.861 1570.096
[17] 1632.099 1686.326 1766.426 1840.310
> residuals( cesLandLaborDe )
 [1] -274.474707 -289.346204 -197.525101 -113.728225 -107.408658 -108.614747
 [7]  -74.257265  -37.751652  -87.544248  -62.016514   -5.024014   21.551612
[13]    8.618352   98.780034   76.828356   55.935308   22.940523   69.274071
[19]  120.994388  151.584249
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3        par4 
274.5229250   0.4340394   4.8990694   2.9638031 

$optim$bestval
[1] 510800.2

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1         par2      par3        par4
1   2.450099e+09 0.8058115379 3.7063763 0.642525919
2   4.898911e+08 0.2023561866 5.6616956 4.098145314
3   4.786854e+07 0.0002912779 5.7364529 3.651717913
4   4.786854e+07 0.0002912779 5.7364529 3.378473076
5   4.786854e+07 0.0002912779 5.7364529 3.378473076
6   1.637954e+07 0.1445471021 5.2229332 3.933156344
7   1.637954e+07 0.1445471021 5.8823149 3.933156344
8   1.637954e+07 0.1445471021 5.8823149 3.933156344
9   1.637954e+07 0.1445471021 5.8823149 3.933156344
10  1.637954e+07 0.1445471021 5.8823149 3.933156344
11  1.637954e+07 0.1445471021 5.8823149 3.933156344
12  1.637954e+07 0.1445471021 5.8823149 3.933156344
13  1.637954e+07 0.1445471021 5.8823149 3.874495295
14  1.637954e+07 0.1445471021 5.8823149 3.874495295
15  7.868600e+06 0.0810606080 3.7030230 1.489025492
16  7.868600e+06 0.0810606080 3.7030230 1.489025492
17  1.116101e+06 0.3631096352 3.5869191 1.077546584
18  1.116101e+06 0.3185024843 8.7785833 1.077546584
19  1.116101e+06 0.3185024843 8.7785833 1.077546584
20  1.116101e+06 0.3185024843 8.7785833 1.077546584
21  1.116101e+06 0.3185024843 6.6307682 0.940388264
22  1.116101e+06 0.3185024843 6.6307682 0.940388264
23  1.116101e+06 0.3185024843 6.6307682 0.940388264
24  1.116101e+06 0.3185024843 6.6307682 0.940388264
25  1.116101e+06 0.3185024843 6.6307682 0.940388264
26  1.116101e+06 0.3376155885 5.7331631 0.905747634
27  1.116101e+06 0.3494523820 5.7331631 0.905747634
28  1.116101e+06 0.3376155885 6.8592124 0.905747634
29  1.116101e+06 0.3376155885 6.8592124 0.905747634
30  9.095071e+05 0.3741844727 7.9501980 0.860595877
31  9.095071e+05 0.3741844727 7.9501980 0.378037250
32  9.095071e+05 0.3741844727 7.9501980 0.378037250
33  9.095071e+05 0.3741844727 8.8589489 0.378037250
34  9.095071e+05 0.3741844727 8.8589489 0.378037250
35  9.095071e+05 0.3741844727 8.8589489 0.378037250
36  9.095071e+05 0.3741844727 8.8589489 0.378037250
37  6.773505e+05 0.3724267217 8.8589489 0.378037250
38  6.773505e+05 0.3852583181 9.4671371 0.378037250
39  1.106467e+04 0.4325345223 8.5756959 0.014935809
40  1.106467e+04 0.4325345223 8.5756959 4.635987976
41  1.106467e+04 0.3883901158 9.0755955 0.014935809
42  1.106467e+04 0.3883901158 9.0755955 0.014935809
43  1.106467e+04 0.3883901158 9.0755955 0.014935809
44  4.394731e+03 0.0625863634 7.2439105 0.163284752
45  4.394731e+03 0.0625863634 7.2439105 0.064557963
46  4.394731e+03 0.0437845874 5.0950067 0.064557963
47  4.394731e+03 0.1969810636 7.2910097 0.053287432
48  4.394731e+03 0.1969810636 7.2910097 0.026471019
49  4.394731e+03 0.1969810636 7.2910097 0.026471019
50  4.394731e+03 0.1969810636 7.2910097 0.026471019
51  4.394731e+03 0.1969810636 7.2910097 0.026471019
52  4.394731e+03 0.1969810636 7.2910097 0.026471019
53  4.394731e+03 0.1969810636 7.2910097 0.026471019
54  4.394731e+03 0.1969810636 7.2910097 0.026471019
55  4.394731e+03 0.1969810636 7.2910097 0.026471019
56  4.394731e+03 0.1969810636 7.2910097 0.001108277
57  4.394731e+03 0.1969810636 7.2910097 0.001108277
58  4.394731e+03 0.1969810636 7.2910097 0.001108277
59  4.394731e+03 0.1969810636 7.2910097 0.001108277
60  4.394731e+03 0.1969810636 7.2910097 0.001108277
61  4.394731e+03 0.1969810636 7.2910097 0.001108277
62  4.394731e+03 0.1969810636 7.2910097 0.001108277
63  2.289221e+03 0.3079873176 9.0457008 0.209316278
64  2.289221e+03 0.3079873176 9.0457008 0.209316278
65  2.289221e+03 0.3079873176 9.0457008 0.209316278
66  2.289221e+03 0.3079873176 9.0457008 0.209316278
67  2.289221e+03 0.3079873176 9.0457008 0.209316278
68  1.672785e+03 0.2764218212 8.8944550 0.033198128
69  1.529969e+03 0.3683031698 7.1037421 0.038373396
70  1.529969e+03 0.3683031698 7.1037421 0.038373396
71  1.529969e+03 0.3683031698 7.1037421 0.038373396
72  1.529969e+03 0.3683031698 7.1037421 0.038373396
73  1.529969e+03 0.3683031698 7.1037421 0.038373396
74  1.529969e+03 0.3683031698 7.1037421 0.038373396
75  1.529969e+03 0.3683031698 7.1037421 0.038373396
76  1.529969e+03 0.3683031698 7.1037421 0.038373396
77  1.529969e+03 0.3683031698 7.1037421 0.038373396
78  1.529969e+03 0.3683031698 7.1037421 0.038373396
79  1.529969e+03 0.3683031698 7.1037421 0.038373396
80  1.529969e+03 0.5748079847 9.2835227 0.014453029
81  1.529969e+03 0.5748079847 9.2835227 0.014453029
82  1.529969e+03 0.5748079847 9.2835227 0.014453029
83  1.529969e+03 0.5748079847 9.2835227 0.014453029
84  1.529969e+03 0.5748079847 9.2835227 0.014453029
85  1.529969e+03 0.5748079847 9.2835227 0.014453029
86  1.529969e+03 0.5748079847 9.2835227 0.014453029
87  1.529969e+03 0.5748079847 9.2835227 0.014453029
88  1.529969e+03 0.5748079847 9.2835227 0.014453029
89  1.529969e+03 0.5748079847 9.2835227 0.014453029
90  1.529969e+03 0.5748079847 9.6078020 0.014453029
91  1.529969e+03 0.2503561906 7.4957430 0.014453029
92  1.529969e+03 0.2503561906 7.4957430 0.014453029
93  1.529969e+03 0.2503561906 7.4957430 0.014453029
94  1.529969e+03 0.2503561906 7.4957430 0.014453029
95  1.529969e+03 0.2503561906 7.4957430 0.014453029
96  1.529969e+03 0.2503561906 7.4957430 0.014453029
97  1.529969e+03 0.0521006889 7.4957430 0.014453029
98  1.529969e+03 0.0521006889 7.4957430 0.014453029
99  1.313437e+03 0.3936653132 4.5450677 0.024443704
100 1.313437e+03 0.3936653132 4.5450677 0.024443704
101 1.313437e+03 0.3936653132 4.5450677 0.024443704
102 1.313437e+03 0.6924942177 9.1193512 0.024443704
103 1.313437e+03 0.6924942177 9.1193512 0.024443704
104 1.430735e+03 0.4813235516 9.3706118 0.007313894
105 1.398829e+03 0.8391035932 6.8337774 0.042731692
106 1.398829e+03 0.8391035932 6.8337774 0.042731692
107 1.398829e+03 0.8391035932 8.4089482 0.042731692
108 1.398829e+03 0.8391035932 8.4089482 0.042731692
109 1.398829e+03 0.8391035932 8.4089482 0.042731692
110 1.398829e+03 0.8391035932 8.4089482 0.042731692
111 1.398829e+03 0.8391035932 8.4089482 0.042731692
112 1.398829e+03 0.8391035932 8.4089482 0.042731692
113 1.398829e+03 0.8391035932 8.4089482 0.042731692
114 1.398829e+03 0.8391035932 8.4089482 0.042731692
115 1.398829e+03 0.8391035932 8.4089482 0.042731692
116 1.398829e+03 0.8391035932 8.4089482 0.042731692
117 1.398829e+03 0.8391035932 8.4089482 0.042731692
118 1.398829e+03 0.8391035932 8.4089482 0.042731692
119 1.398829e+03 0.8391035932 8.4089482 0.042731692
120 1.398829e+03 0.8391035932 8.4089482 0.042731692
121 1.398829e+03 0.8391035932 8.4089482 0.042731692
122 1.398829e+03 0.8391035932 8.4089482 0.042731692
123 1.398829e+03 0.8391035932 8.4089482 0.042731692
124 1.398829e+03 0.8391035932 9.0338535 0.042731692
125 1.398829e+03 0.8391035932 9.0338535 0.042731692
126 1.398829e+03 0.8391035932 9.0338535 0.042731692
127 1.398829e+03 0.8391035932 9.0338535 0.042731692
128 1.271867e+03 0.8391035932 9.0338535 0.256213474
129 1.271867e+03 0.8391035932 9.0338535 0.256213474
130 1.107894e+03 0.7394291663 6.4158970 0.393770105
131 1.107894e+03 0.7394291663 6.4158970 0.393770105
132 1.107894e+03 0.7394291663 6.4158970 0.393770105
133 1.107894e+03 0.7394291663 6.4158970 0.393770105
134 1.107894e+03 0.7394291663 6.4158970 0.393770105
135 1.107894e+03 0.7394291663 6.4158970 0.393770105
136 1.107894e+03 0.7394291663 6.4158970 0.393770105
137 1.107894e+03 0.7394291663 6.4158970 0.393770105
138 1.107894e+03 0.7394291663 6.4158970 0.393770105
139 1.107894e+03 0.7394291663 7.8356859 0.393770105
140 1.107894e+03 0.7394291663 7.8356859 0.393770105
141 1.107894e+03 0.7394291663 7.8356859 0.393770105
142 1.107894e+03 0.7394291663 7.8356859 0.393770105
143 1.107894e+03 0.7394291663 7.8356859 0.393770105
144 1.107894e+03 0.7394291663 7.8356859 0.393770105
145 1.107894e+03 0.7394291663 7.8356859 0.393770105
146 1.107894e+03 0.7394291663 7.8356859 0.393770105
147 1.107894e+03 0.7394291663 7.8356859 0.393770105
148 1.107894e+03 0.7394291663 7.8356859 0.442871197
149 1.016639e+03 0.7394291663 7.8356859 0.619213225
150 1.016639e+03 0.7394291663 7.8356859 0.619213225
151 1.016639e+03 0.7394291663 7.8356859 0.619213225
152 1.016639e+03 0.7394291663 7.8356859 0.619213225
153 1.016639e+03 0.7394291663 7.8356859 0.619213225
154 1.016639e+03 0.7394291663 7.8356859 0.619213225
155 1.016639e+03 0.7394291663 9.9923550 0.619213225
156 1.016639e+03 0.7394291663 9.9923550 0.619213225
157 7.531773e+02 0.7394291663 9.9923550 1.042795190
158 7.531773e+02 0.7394291663 9.9923550 1.042795190
159 7.531773e+02 0.7394291663 9.9923550 1.042795190
160 7.531773e+02 0.7394291663 9.9923550 1.042795190
161 7.531773e+02 0.7394291663 9.9923550 1.042795190
162 7.531773e+02 0.7394291663 9.9923550 1.042795190
163 7.531773e+02 0.7394291663 9.9923550 1.042795190
164 5.130409e+02 0.8579239623 7.2416767 1.462385764
165 4.273955e+02 0.8462734656 5.7638082 1.597858652
166 4.551186e+02 0.7881312878 5.7638082 1.597858652
167 4.551186e+02 0.7881312878 5.7638082 1.597858652
168 5.315400e+02 0.5640937686 6.5390203 1.715060751
169 4.348844e+02 0.4349561852 3.1733319 1.998710478
170 4.348844e+02 0.4349561852 3.1733319 1.998710478
171 4.348844e+02 0.4349561852 3.2894678 1.922455274
172 4.348844e+02 0.4349561852 3.2894678 1.922455274
173 4.348844e+02 0.4349561852 3.2894678 1.922455274
174 4.348844e+02 0.4349561852 3.2894678 1.922455274
175 4.348844e+02 0.4691179222 4.4183934 2.118680092
176 3.652121e+02 0.1418308220 1.6564413 2.512051226
177 3.652121e+02 0.1418308220 1.6564413 2.512051226
178 3.652121e+02 0.1418308220 1.6564413 2.512051226
179 3.652121e+02 0.1418308220 1.6564413 2.512051226
180 3.652121e+02 0.1418308220 1.6564413 2.512051226
181 3.652121e+02 0.1418308220 1.6564413 2.512051226
182 2.669289e+02 0.4266766608 2.5703988 2.518922430
183 3.237621e+02 0.3042137465 5.9740903 2.877885212
184 2.397034e+02 0.6747589586 8.6698707 3.125741224
185 2.728715e+02 0.6747589586 8.6698707 2.854363600
186 2.728715e+02 0.6747589586 8.6698707 2.854363600
187 2.728715e+02 0.6747589586 9.4583805 2.854363600
188 2.728715e+02 0.6747589586 9.4583805 2.854363600
189 2.728715e+02 0.6747589586 9.6262110 2.989506499
190 2.728715e+02 0.6747589586 9.6262110 2.989506499
191 2.728715e+02 0.6747589586 9.6262110 2.989506499
192 3.620428e+02 0.0516817645 0.7989625 2.749028210
193 3.620428e+02 0.0516817645 0.7989625 2.749028210
194 3.620428e+02 0.0516817645 8.2553738 3.084880610
195 3.620428e+02 0.0516817645 8.2553738 3.084880610
196 3.620428e+02 0.0516817645 8.2553738 3.084880610
197 3.620428e+02 0.0516817645 8.2553738 3.084880610
198 2.745229e+02 0.4340393561 4.8990694 2.937791909
199 2.745229e+02 0.4340393561 4.8990694 2.937791909
200 2.745229e+02 0.4340393561 4.8990694 2.963803066

$member$bestvalit
  [1] 3.730220e+20 2.690944e+20 1.225400e+18 9.525790e+17 9.525790e+17
  [6] 5.155178e+16 3.634981e+16 3.634981e+16 3.634981e+16 3.634981e+16
 [11] 3.634981e+16 3.634981e+16 3.634981e+16 3.634981e+16 4.954306e+15
 [16] 4.954306e+15 8.447461e+13 7.076795e+13 7.076795e+13 7.076795e+13
 [21] 6.356117e+13 6.356117e+13 6.356117e+13 6.356117e+13 6.356117e+13
 [26] 6.296749e+13 6.296749e+13 6.163532e+13 6.163532e+13 3.901905e+13
 [31] 2.404773e+13 2.404773e+13 2.393788e+13 2.393788e+13 2.393788e+13
 [36] 2.393788e+13 1.326204e+13 1.325003e+13 1.897163e+09 1.897163e+09
 [41] 1.896145e+09 1.896145e+09 1.896145e+09 2.210732e+08 1.950852e+08
 [46] 1.950803e+08 1.929240e+08 1.861029e+08 1.861029e+08 1.861029e+08
 [51] 1.861029e+08 1.861029e+08 1.861029e+08 1.861029e+08 1.861029e+08
 [56] 1.798462e+08 1.798462e+08 1.798462e+08 1.798462e+08 1.798462e+08
 [61] 1.798462e+08 1.798462e+08 2.466578e+07 2.466578e+07 2.466578e+07
 [66] 2.466578e+07 2.466578e+07 3.376174e+06 2.165571e+06 2.165571e+06
 [71] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
 [76] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
 [81] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
 [86] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
 [91] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
 [96] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
[101] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
[106] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
[111] 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06 1.208384e+06
[116] 1.208384e+06 1.009928e+06 1.009928e+06 1.009928e+06 1.009928e+06
[121] 1.009928e+06 1.009928e+06 1.009928e+06 1.009928e+06 1.009928e+06
[126] 1.009928e+06 1.009928e+06 1.009928e+06 1.009928e+06 1.009928e+06
[131] 1.009928e+06 9.852005e+05 9.852005e+05 9.852005e+05 9.852005e+05
[136] 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05
[141] 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05
[146] 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05
[151] 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05 8.231770e+05
[156] 8.231770e+05 8.231770e+05 8.100577e+05 8.100577e+05 8.100577e+05
[161] 8.100577e+05 8.100577e+05 8.100577e+05 8.100577e+05 7.999442e+05
[166] 7.863762e+05 7.863762e+05 7.459507e+05 6.737179e+05 6.737179e+05
[171] 6.720114e+05 6.720114e+05 6.492034e+05 6.492034e+05 6.492034e+05
[176] 5.518916e+05 5.518916e+05 5.518916e+05 5.518916e+05 5.518916e+05
[181] 5.518916e+05 5.475820e+05 5.407563e+05 5.236244e+05 5.202098e+05
[186] 5.202098e+05 5.202098e+05 5.202098e+05 5.202098e+05 5.202098e+05
[191] 5.202098e+05 5.170297e+05 5.170297e+05 5.170297e+05 5.170297e+05
[196] 5.168378e+05 5.168378e+05 5.108002e+05 5.108002e+05 5.108002e+05

$member$pop
          [,1]       [,2]      [,3]     [,4]
 [1,] 574.4271 0.33130623 9.0369568 1.826578
 [2,] 531.1138 0.74823332 7.6765992 1.584042
 [3,] 342.3748 0.17790251 9.3153718 3.109128
 [4,] 266.9289 0.42667666 2.5703988 2.518922
 [5,] 377.6488 0.28271935 5.9334154 2.686464
 [6,] 467.5774 0.59106380 9.7221432 2.069321
 [7,] 441.8071 0.50837775 8.9125291 2.296488
 [8,] 455.4968 0.59568920 6.1891505 1.944521
 [9,] 340.7759 0.15601007 4.7184533 2.870876
[10,] 525.2124 0.12716216 6.7833681 2.213633
[11,] 283.6468 0.76651531 9.1440765 2.687851
[12,] 272.8715 0.67475896 8.6698707 2.854364
[13,] 362.0428 0.05168176 0.7989625 2.749028
[14,] 548.2763 0.38478982 6.5719059 1.890844
[15,] 285.5081 0.59839779 3.8824768 2.330775
[16,] 402.2090 0.92759962 9.2019883 1.739959
[17,] 622.7116 0.33279441 6.4105653 1.602380
[18,] 519.1702 0.72800366 5.0381816 1.520575
[19,] 332.1895 0.63921281 9.9604727 2.678781
[20,] 430.8409 0.63857903 4.6110472 1.786697
[21,] 197.8273 0.49864315 2.8379950 2.825345
[22,] 239.7484 0.05552775 8.5729192 4.063192
[23,] 323.7621 0.30421375 5.9740903 2.877885
[24,] 596.8005 0.60643260 6.1525637 1.466875
[25,] 332.7176 0.55847402 6.2975238 2.631302
[26,] 649.2792 0.04576506 5.9360799 1.746056
[27,] 365.2121 0.14183082 1.6564413 2.512051
[28,] 355.9922 0.18510001 5.2485821 2.879149
[29,] 434.8844 0.43495619 3.2894678 1.922455
[30,] 560.9208 0.91488953 8.4137249 1.270879
[31,] 274.5229 0.43403936 4.8990694 2.937792
[32,] 556.7068 0.87424777 5.6247490 1.182667
[33,] 473.2602 0.18833530 5.0221064 2.307807
[34,] 343.5056 0.07342129 4.8542581 3.116580
[35,] 377.1023 0.26653291 2.9171607 2.493198
[36,] 407.9898 0.32604508 3.6415326 2.358379
[37,] 402.9799 0.72707851 7.8223798 2.068155
[38,] 361.8664 0.64138181 4.6654006 2.038670
[39,] 341.2487 0.10013500 5.2326582 3.004242
[40,] 491.4743 0.31785803 6.2842582 2.071184
[41,] 683.0833 0.25660053 7.6961865 1.584412
[42,] 296.0522 0.65001391 7.6975818 2.693292
[43,] 274.5229 0.43403936 4.8990694 2.963803
[44,] 153.1218 0.52153097 3.1445381 3.286581
[45,] 661.5115 0.25884583 5.2227945 1.549709
[46,] 359.8355 0.36174804 9.7364216 2.778837
[47,] 505.6831 0.54234811 8.8948246 1.918735
[48,] 393.4243 0.62740015 7.7824037 2.261677
[49,] 237.9967 0.70428402 9.2907872 3.081982
[50,] 270.6890 0.85602007 8.1927746 2.457241

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho         phi 
274.5229250   0.4340394   4.8990694   2.9638031 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$fitted.values
 [1] 1141.540 1165.196 1141.540 1238.107 1238.107 1213.477 1165.196 1263.066
 [9] 1238.107 1366.234 1366.234 1834.625 1866.987 1771.022 1708.896 1589.012
[17] 1618.443 1618.443 1618.443 1618.443

$residuals
 [1] -195.40715 -202.46545  -71.96113  -66.31054  -59.99098  -27.66725
 [7]   74.16173   25.49500  -30.40085  -87.82531   -5.64128 -293.84107
[13] -291.95226  -75.06216  -64.20701   37.01880   36.59704  137.15694
[19]  268.97734  373.45105

$cov.unscaled
      gamma delta rho phi
gamma    NA    NA  NA  NA
delta    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho     phi 
274.523   0.434   4.899   2.964 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  274.523         NA      NA       NA
delta    0.434         NA      NA       NA
rho      4.899         NA      NA       NA
phi      2.964         NA      NA       NA

Residual standard error: 161.6489 
Multiple R-squared: 0.7047612 

> coef( cesLandLaborDeVrs )
      gamma       delta         rho         phi 
274.5229250   0.4340394   4.8990694   2.9638031 
> vcov( cesLandLaborDeVrs )
      gamma delta rho phi
gamma    NA    NA  NA  NA
delta    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA
> coef( summary( cesLandLaborDeVrs ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 274.5229250         NA      NA       NA
delta   0.4340394         NA      NA       NA
rho     4.8990694         NA      NA       NA
phi     2.9638031         NA      NA       NA
> fitted( cesLandLaborDeVrs )
 [1] 1141.540 1165.196 1141.540 1238.107 1238.107 1213.477 1165.196 1263.066
 [9] 1238.107 1366.234 1366.234 1834.625 1866.987 1771.022 1708.896 1589.012
[17] 1618.443 1618.443 1618.443 1618.443
> residuals( cesLandLaborDeVrs )
 [1] -195.40715 -202.46545  -71.96113  -66.31054  -59.99098  -27.66725
 [7]   74.16173   25.49500  -30.40085  -87.82531   -5.64128 -293.84107
[13] -291.95226  -75.06216  -64.20701   37.01880   36.59704  137.15694
[19]  268.97734  373.45105
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

$method
[1] "Nelder-Mead"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$cov.unscaled
          gamma    delta       rho
gamma 815381640 23301430 -46979498
delta  23301430   665895  -1342577
rho   -46979498 -1342577   2707133

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.221e+01  2.600e+06 1.24e-05        1
delta 2.008e-01  7.431e+04 2.70e-06        1
rho   3.800e+00  1.498e+05 2.54e-05        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2600197.34 1.238800e-05 0.9999901
delta  0.2007986   74306.83 2.702290e-06 0.9999978
rho    3.8002155  149823.74 2.536458e-05 0.9999798
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho        phi 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho        phi 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$startVal
   gamma    delta      rho      phi 
13.61709  0.50000  0.25000  1.00000 

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854483   10.575677   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$cov.unscaled
              gamma         delta           rho           phi
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
phi   -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
  gamma   delta     rho     phi 
1.00222 0.02173 1.68396 1.31339 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
phi    1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.99837 
Multiple R-squared: 0.959327 

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
phi   1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> set.seed( 234 )
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$cov.unscaled
           gamma      delta         rho
gamma 5004.97608 41.3989510 -650.115474
delta   41.39895  0.3424517   -5.378117
rho   -650.11547 -5.3781168   84.469555

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.315e+01  6.459e+03    0.002    0.998
delta 2.101e-02  5.342e+01 0.000393    1.000
rho   2.925e+00  8.390e+02    0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 13.14842134 6458.52724 0.002035823 0.9983756
delta  0.02100585   53.42348 0.000393195 0.9996863
rho    2.92470954  839.03986 0.003485781 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
34.7911440  0.2558348  3.9471595 

$optim$value
[1] 165834.5

$optim$counts
function gradient 
     352       82 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.7911440  0.2558348  3.9471595 

$iter
function gradient 
     352       82 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.939 1189.254 1213.334 1224.146 1224.146 1239.871 1273.288 1276.237
 [9] 1237.414 1281.151 1315.551 1467.893 1528.831 1581.904 1548.978 1566.668
[17] 1648.243 1722.939 1833.508 1935.725

$residuals
 [1] -203.806209 -226.523494 -143.754546  -52.349291  -46.029636  -54.061369
 [7]  -33.930585   12.324366  -29.707796   -2.742282   45.041639   72.890655
[13]   46.204107  114.055193   95.711461   59.362810    6.796659   32.661273
[19]   53.911803   56.169161

$cov.unscaled
           gamma     delta        rho
gamma 4046787004 138220035 -234970455
delta  138220035   4720986   -8025664
rho   -234970455  -8025664   13644678

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
34.7911  0.2558  3.9472 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 352 function and 82 gradient calls

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.479e+01  5.793e+06 6.01e-06        1
delta 2.558e-01  1.979e+05 1.29e-06        1
rho   3.947e+00  3.364e+05 1.17e-05        1

Residual standard error: 91.05892 
Multiple R-squared: 0.9063144 

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.7911440  5792654.9 6.006079e-06 0.9999952
delta  0.2558348   197851.3 1.293066e-06 0.9999990
rho    3.9471595   336359.8 1.173493e-05 0.9999906
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( 0, 0, -1 ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      34       34 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      34       34 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
             gamma        delta          rho
gamma 4.991855e-01 7.597528e-03 7.332675e+09
delta 7.597528e-03 1.156554e-04 1.294089e+08
rho   7.332675e+09 1.294089e+08 3.637099e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Coefficients:
 gamma  delta    rho 
49.143  1.000  0.651 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 34 function and 34 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.914e+01  6.434e+01    0.764    0.445
delta 1.000e+00  9.793e-01    1.021    0.307
rho   6.511e-01  1.737e+13 3.75e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.433549e+01 7.638544e-01 0.4449540
delta  1.0000000 9.792705e-01 1.021168e+00 0.3071747
rho    0.6510633 1.736590e+13 3.749091e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.017794                                  
2     17 0.107030 -3 -0.089235 23.402 1.020e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
             gamma        delta          rho
gamma 3.667607e+18 3.152675e+10 1.111310e+08
delta 3.152675e+10 2.710399e+02 9.555328e-01
rho   1.111310e+08 9.555328e-01 3.369099e-03

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.804e-02   0.543    0.587

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.804394e-02 0.54319046 0.5869987
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho          phi 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho          phi
gamma  0.006287789  0.4447299  0.04356957 -0.002344101
delta  0.444729932 31.5957949  3.02153597 -0.124590619
rho    0.043569573  3.0215360  0.32935388 -0.034664500
phi   -0.002344101 -0.1245906 -0.03466450  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$cov.unscaled
              gamma         delta           rho           phi
gamma  2.231400e-07  2.790747e-05  3.716972e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
phi   -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho       phi 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.573894  -0.397    0.692    
phi    1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 
Multiple R-squared: -964.0144 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.57389361 -0.39669863 6.915897e-01
phi    1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347898132, 0.851862754188495, 4.36180424047568 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$cov.unscaled
             gamma       delta          rho
gamma 362120013302 30887171595 -79280788128
delta  30887171595  2634538173  -6762430246
rho   -79280788128 -6762430246  17361936920

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.737e+01  5.480e+07 8.64e-07        1
delta 8.519e-01  4.674e+06 1.82e-07        1
rho   4.362e+00  1.200e+07 3.64e-07        1

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 47.3694348   54795634 8.644746e-07 0.9999993
delta  0.8518628    4673820 1.822627e-07 0.9999999
rho    4.3618042   11998274 3.635360e-07 0.9999997
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166082.8

$nlm$estimate
[1] 13.88019000  0.01195882  3.49913110

$nlm$gradient
[1]    1666.269 -572878.026   -9095.965

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1] 13.88019000  0.01195882  3.49913110

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1150.331 1189.731 1213.797 1224.691 1224.680 1240.414 1273.844 1276.742
 [9] 1237.927 1281.654 1316.101 1468.506 1529.485 1582.519 1549.472 1567.087
[17] 1648.467 1723.016 1833.500 1935.704

$residuals
 [1] -204.198183 -227.000305 -144.217619  -52.894463  -46.564071  -54.604470
 [7]  -34.486186   11.819087  -30.221274   -3.245475   44.491947   72.278130
[13]   45.550025  113.440061   95.217551   58.943921    6.572888   32.583558
[19]   53.920599   56.189900

$cov.unscaled
           [,1]       [,2]       [,3]
[1,] 48491.5245 249.393052 -6824.5161
[2,]   249.3931   1.282689   -35.1023
[3,] -6824.5161 -35.102302   960.6991

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1] 13.88019  0.01196  3.49913

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error  t value Pr(>|t|)
[1,] 1.388e+01  2.007e+04    0.001        1
[2,] 1.196e-02  1.032e+02 0.000116        1
[3,] 3.499e+00  2.824e+03    0.001        1

Residual standard error: 91.12705 
Multiple R-squared: 0.9061741 

> coef( summary( cesLandIntNewton ) )
        Estimate Std. Error      t value  Pr(>|t|)
[1,] 13.88019000 20066.8982 0.0006916958 0.9994481
[2,]  0.01195882   103.2067 0.0001158725 0.9999075
[3,]  3.49913110  2824.4964 0.0012388513 0.9990115
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
42.0395028  0.4068374  5.7603719 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 


$coefficients
     gamma      delta        rho 
42.0395028  0.4068374  5.7603719 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.947 1189.262 1213.342 1224.153 1224.153 1239.879 1273.296 1276.245
 [9] 1237.422 1281.159 1315.559 1467.903 1528.840 1581.915 1548.989 1566.680
[17] 1648.258 1722.955 1833.527 1935.745

$residuals
 [1] -203.814262 -226.531216 -143.762621  -52.356789  -46.037222  -54.069039
 [7]  -33.938479   12.316025  -29.715687   -2.750689   45.033282   72.881324
[13]   46.194522  114.044760   95.700320   59.350839    6.782123   32.644642
[19]   53.893251   56.149467

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
42.0395  0.4068  5.7604 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  42.0395         NA      NA       NA
delta   0.4068         NA      NA       NA
rho     5.7604         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 42.0395028         NA      NA       NA
delta  0.4068374         NA      NA       NA
rho    5.7603719         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = c( 0, 0, -1 ), upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
36.3335844  0.2220242  4.9834355 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 141

$nlminb$evaluations
function gradient 
     200      141 


$coefficients
     gamma      delta        rho 
36.3335844  0.2220242  4.9834355 

$iter
[1] 141

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

$method
[1] "PORT"

$startVal
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$fitted.values
 [1] 1149.949 1189.263 1213.343 1224.155 1224.155 1239.881 1273.298 1276.247
 [9] 1237.424 1281.161 1315.561 1467.905 1528.842 1581.917 1548.991 1566.682
[17] 1648.260 1722.957 1833.529 1935.747

$residuals
 [1] -203.815764 -226.532795 -143.764224  -52.358432  -46.038862  -54.070700
 [7]  -33.940184   12.314333  -29.717335   -2.752386   45.031528   72.879367
[13]   46.192478  114.042667   95.698310   59.348838    6.780110   32.642612
[19]   53.891135   56.147239

$cov.unscaled
             gamma      delta         rho
gamma 131627060745 4585581592 -8608903434
delta   4585581592  159753641  -299953174
rho    -8608903434 -299953174   563635334

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

Coefficients:
  gamma   delta     rho 
36.3336  0.2220  4.9834 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = c(0, 0, -1), upper = c(Inf, 1, Inf))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 141 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.633e+01  3.304e+07 1.10e-06        1
delta 2.220e-01  1.151e+06 1.93e-07        1
rho   4.983e+00  2.162e+06 2.31e-06        1

Residual standard error: 91.05835 
Multiple R-squared: 0.9063155 

> coef( summary( cesLandIntPortCon ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 36.3335844   33036374 1.099805e-06 0.9999991
delta  0.2220242    1150920 1.929102e-07 0.9999998
rho    4.9834355    2161817 2.305207e-06 0.9999982
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
    gamma     delta       rho       phi 
 2.053008  0.860477 -0.403142  1.580769 

$nlminb$objective
[1] 50293.22

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 128

$nlminb$evaluations
function gradient 
     200      128 


$coefficients
    gamma     delta       rho       phi 
 2.053008  0.860477 -0.403142  1.580769 

$iter
[1] 128

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$startVal
   gamma    delta      rho      phi 
13.61709  0.50000  0.25000  1.00000 

$fitted.values
 [1] 1004.076 1091.961 1115.289 1174.759 1167.972 1192.905 1242.767 1217.433
 [9] 1172.189 1222.723 1293.553 1537.665 1650.430 1702.814 1592.097 1587.318
[17] 1647.063 1724.859 1880.961 2046.671

$residuals
 [1]  -57.943068 -129.230080  -45.709653   -2.962809   10.143928   -7.094985
 [7]   -3.409668   71.127936   35.517207   55.685921   67.039287    3.119088
[13]  -75.395163   -6.854518   52.591850   38.713136    7.977025   30.740417
[19]    6.458792  -54.776596

$cov.unscaled
              gamma         delta           rho           phi
gamma  0.0985197045  1.458086e-02 -3.889284e-02 -1.176025e-04
delta  0.0145808647  2.167254e-03 -5.785798e-03 -1.196193e-05
rho   -0.0388928385 -5.785798e-03  1.544947e-02  2.937023e-05
phi   -0.0001176025 -1.196193e-05  2.937023e-05  3.450246e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho     phi 
 2.0530  0.8605 -0.4031  1.5808 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 128 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  2.05301   15.73987   0.130    0.896    
delta  0.86048    2.33450   0.369    0.712    
rho   -0.40314    6.23299  -0.065    0.948    
phi    1.58077    0.09315  16.971   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.1464 
Multiple R-squared: 0.9715876 

> coef( summary( cesLandIntPortVrs ) )
       Estimate  Std. Error     t value     Pr(>|t|)
gamma  2.053008 15.73987499  0.13043354 8.962234e-01
delta  0.860477  2.33450402  0.36859092 7.124327e-01
rho   -0.403142  6.23299077 -0.06467874 9.484298e-01
phi    1.580769  0.09314611 16.97085786 1.349462e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE,
+    lower = c( 0, 0, -1, 0 ), upper = c( Inf, 1, Inf, Inf ) )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho        phi 
 1.7563460  0.8099737 -0.2847773  1.5810535 

$nlminb$objective
[1] 50196.63

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 129

$nlminb$evaluations
function gradient 
     200      129 


$coefficients
     gamma      delta        rho        phi 
 1.7563460  0.8099737 -0.2847773  1.5810535 

$iter
[1] 129

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

$method
[1] "PORT"

$startVal
   gamma    delta      rho      phi 
13.61709  0.50000  0.25000  1.00000 

$fitted.values
 [1] 1004.234 1091.962 1115.375 1174.483 1167.767 1192.688 1242.565 1217.484
 [9] 1172.130 1222.789 1293.492 1537.644 1650.332 1703.033 1592.526 1587.776
[17] 1647.313 1724.810 1880.709 2046.396

$residuals
 [1]  -58.100588 -129.231941  -45.795816   -2.686447   10.349204   -6.878408
 [7]   -3.206945   71.077103   35.576275   55.619024   67.100706    3.139851
[13]  -75.297420   -7.073605   52.163558   38.255071    7.726370   30.789355
[19]    6.711434  -54.502006

$cov.unscaled
              gamma         delta           rho           phi
gamma  0.0943354860  1.828922e-02 -3.805902e-02 -1.103548e-04
delta  0.0182892227  3.558219e-03 -7.410146e-03 -1.509977e-05
rho   -0.0380590198 -7.410146e-03  1.543540e-02  2.888203e-05
phi   -0.0001103548 -1.509977e-05  2.888203e-05  3.450143e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

Coefficients:
  gamma   delta     rho     phi 
 1.7563  0.8100 -0.2848  1.5811 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = c(0, 0, -1, 0), upper = c(Inf, 
        1, Inf, Inf))

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 129 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.75635   15.38721   0.114    0.909    
delta  0.80997    2.98840   0.271    0.786    
rho   -0.28478    6.22417  -0.046    0.964    
phi    1.58105    0.09306  16.990   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.09822 
Multiple R-squared: 0.9716422 

> coef( summary( cesLandIntPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.7563460 15.38720855  0.11414325 9.091242e-01
delta  0.8099737  2.98839914  0.27103933 7.863608e-01
rho   -0.2847773  6.22416638 -0.04575348 9.635067e-01
phi    1.5810535  0.09305524 16.99048242 9.659146e-65
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
44.7778910  0.4688016  8.1442960 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2     par3
1   1.476980e+08 0.9756156 9.170617
2   1.476980e+08 0.9756156 9.170617
3   1.476980e+08 0.9756156 9.170617
4   1.476980e+08 0.9756156 9.170617
5   1.476980e+08 0.9756156 9.170617
6   1.476980e+08 0.9756156 9.170617
7   1.067262e+07 0.7055167 6.102435
8   1.067262e+07 0.8073552 9.238675
9   1.067262e+07 0.8073552 9.238675
10  1.067262e+07 0.8073552 9.238675
11  1.067262e+07 0.8073552 9.238675
12  8.799804e+06 0.5337672 9.642162
13  8.799804e+06 0.7523714 9.642162
14  8.799804e+06 0.7523714 9.642162
15  8.799804e+06 0.7523714 9.642162
16  8.799804e+06 0.7523714 9.642162
17  8.799804e+06 0.8875451 9.642162
18  8.799804e+06 0.8875451 9.642162
19  8.799804e+06 0.8875451 9.642162
20  8.799804e+06 0.8875451 9.642162
21  8.799804e+06 0.8875451 9.642162
22  6.794217e+05 0.8865358 5.973629
23  6.794217e+05 0.8865358 5.973629
24  6.794217e+05 0.8865358 5.973629
25  6.794217e+05 0.8865358 5.973629
26  6.794217e+05 0.8865358 5.973629
27  6.794217e+05 0.8865358 5.973629
28  6.794217e+05 0.8865358 5.973629
29  6.794217e+05 0.8865358 5.973629
30  6.491832e+04 0.1688244 4.894113
31  6.491832e+04 0.1688244 4.894113
32  6.491832e+04 0.1688244 4.894113
33  6.491832e+04 0.1688244 4.894113
34  6.491832e+04 0.2573581 4.894113
35  1.389886e+04 0.9122105 9.686516
36  1.389886e+04 0.9122105 9.686516
37  5.091576e+03 0.7889539 2.657713
38  5.091576e+03 0.7889539 2.657713
39  8.422351e+02 0.9886557 9.631464
40  8.422351e+02 0.9886557 9.631464
41  4.109734e+02 0.2629179 6.119561
42  4.109734e+02 0.2629179 6.119561
43  4.109734e+02 0.2629179 6.119561
44  4.109734e+02 0.2629179 6.119561
45  4.109734e+02 0.9154409 8.162089
46  4.109734e+02 0.9154409 8.403939
47  4.109734e+02 0.9154409 8.403939
48  4.109734e+02 0.9154409 8.403939
49  4.109734e+02 0.9154409 8.403939
50  4.109734e+02 0.9154409 8.546688
51  4.109734e+02 0.9154409 8.546688
52  4.109734e+02 0.9497841 8.546688
53  4.109734e+02 0.9497841 8.546688
54  4.109734e+02 0.9497841 8.546688
55  4.109734e+02 0.9497841 8.546688
56  4.109734e+02 0.9497841 8.546688
57  4.109734e+02 0.9497841 9.110154
58  4.109734e+02 0.9497841 9.110154
59  4.109734e+02 0.9497841 9.110154
60  4.109734e+02 0.9497841 9.110154
61  4.109734e+02 0.9497841 9.110154
62  4.109734e+02 0.9497841 9.110154
63  4.109734e+02 0.9497841 9.110154
64  4.109734e+02 0.9497841 9.110154
65  4.109734e+02 0.9687614 9.110154
66  4.109734e+02 0.9687614 9.110154
67  4.109734e+02 0.9687614 9.110154
68  4.109734e+02 0.9687614 9.110154
69  4.109734e+02 0.9687614 9.110154
70  4.109734e+02 0.9687614 9.110154
71  4.109734e+02 0.9687614 9.110154
72  4.109734e+02 0.9687614 9.110154
73  3.367872e+02 0.8661205 9.812716
74  3.367872e+02 0.8661205 9.812716
75  3.367872e+02 0.8661205 9.812716
76  3.367872e+02 0.8661205 9.812716
77  1.344683e+02 0.8398469 8.953994
78  1.344683e+02 0.8398469 9.292798
79  1.344683e+02 0.8398469 9.292798
80  1.344683e+02 0.8398469 9.292798
81  8.285509e+01 0.6460304 5.875290
82  8.285509e+01 0.6460304 5.875290
83  8.285509e+01 0.6460304 7.810636
84  8.285509e+01 0.6460304 7.810636
85  8.285509e+01 0.6460304 7.810636
86  8.285509e+01 0.6460304 7.810636
87  8.285509e+01 0.6460304 7.810636
88  8.285509e+01 0.6460304 7.810636
89  8.285509e+01 0.6460304 7.894067
90  8.285509e+01 0.6460304 7.894067
91  8.197444e+01 0.6460304 7.894067
92  8.197444e+01 0.6460304 7.894067
93  8.197444e+01 0.6460304 7.894067
94  6.223568e+01 0.1771134 6.076748
95  6.223568e+01 0.1771134 6.076748
96  6.223568e+01 0.6151759 6.076748
97  6.223568e+01 0.6151759 6.076748
98  6.223568e+01 0.6151759 6.076748
99  6.223568e+01 0.8555088 6.076748
100 5.518967e+01 0.8555088 1.656279
101 4.468164e+01 0.3900329 9.643130
102 4.468164e+01 0.3900329 9.643130
103 4.468164e+01 0.3900329 9.643130
104 4.468164e+01 0.3900329 9.643130
105 4.468164e+01 0.3900329 9.643130
106 4.468164e+01 0.3900329 9.643130
107 4.468164e+01 0.3900329 9.643130
108 4.468164e+01 0.3900329 9.643130
109 4.537424e+01 0.4843004 9.078162
110 4.537424e+01 0.4843004 9.078162
111 4.537424e+01 0.4843004 9.078162
112 4.537424e+01 0.4843004 9.078162
113 4.537424e+01 0.4843004 9.078162
114 4.537424e+01 0.4843004 9.146209
115 4.537424e+01 0.4843004 9.146209
116 4.537424e+01 0.4843004 9.146209
117 4.537424e+01 0.4843004 9.146209
118 4.537424e+01 0.4843004 9.146209
119 4.537424e+01 0.4843004 9.146209
120 4.537424e+01 0.4843004 9.146209
121 4.537424e+01 0.4843004 9.146209
122 4.537424e+01 0.4843004 9.146209
123 4.537424e+01 0.4843004 9.146209
124 4.537424e+01 0.4843004 9.146209
125 4.537424e+01 0.4843004 9.146209
126 4.537424e+01 0.4843004 9.146209
127 4.537424e+01 0.4843004 9.146209
128 4.537424e+01 0.4843004 9.146209
129 4.537424e+01 0.4843004 9.146209
130 4.537424e+01 0.4843004 9.146209
131 4.537424e+01 0.4843004 9.146209
132 4.537424e+01 0.4843004 9.146209
133 4.467480e+01 0.4076264 9.391475
134 4.467480e+01 0.4076264 9.391475
135 4.467480e+01 0.4076264 9.391475
136 4.467480e+01 0.4076264 9.391475
137 4.467480e+01 0.4076264 9.391475
138 4.467480e+01 0.4076264 9.391475
139 4.467480e+01 0.4076264 9.391475
140 4.467480e+01 0.4076264 9.391475
141 4.467480e+01 0.4076264 9.391475
142 4.467480e+01 0.4076264 9.391475
143 4.467480e+01 0.4076264 9.391475
144 4.467480e+01 0.4076264 9.391475
145 4.467480e+01 0.4076264 9.391475
146 4.467480e+01 0.4076264 9.391475
147 4.467480e+01 0.4076264 9.391475
148 4.467480e+01 0.4076264 9.391475
149 4.467480e+01 0.4076264 9.391475
150 4.467480e+01 0.4076264 9.391475
151 4.467480e+01 0.4076264 9.391475
152 4.467480e+01 0.4076264 9.391475
153 4.467480e+01 0.4076264 9.391475
154 4.467480e+01 0.4076264 9.391475
155 4.467480e+01 0.4076264 9.391475
156 4.467480e+01 0.4076264 9.391475
157 4.467480e+01 0.4076264 9.391475
158 4.467480e+01 0.4076264 9.391475
159 4.467480e+01 0.4076264 9.391475
160 4.467480e+01 0.4076264 9.391475
161 4.467480e+01 0.4076264 9.391475
162 4.467480e+01 0.4076264 9.391475
163 4.467480e+01 0.4076264 9.391475
164 4.467480e+01 0.4076264 9.391475
165 4.467480e+01 0.4076264 9.391475
166 4.467480e+01 0.4076264 9.391475
167 4.467480e+01 0.4076264 9.391475
168 4.467480e+01 0.4076264 9.391475
169 4.467480e+01 0.4076264 9.391475
170 4.467480e+01 0.4076264 9.391475
171 4.467480e+01 0.4076264 9.391475
172 4.467480e+01 0.4076264 9.391475
173 4.467480e+01 0.4076264 9.391475
174 4.467480e+01 0.4076264 9.391475
175 4.467480e+01 0.4076264 9.391475
176 4.467480e+01 0.4076264 9.391475
177 4.467480e+01 0.4076264 9.391475
178 4.467480e+01 0.4076264 9.391475
179 4.467480e+01 0.4076264 9.391475
180 4.467480e+01 0.4076264 9.391475
181 4.467480e+01 0.4076264 9.391475
182 4.467480e+01 0.4076264 9.391475
183 4.467480e+01 0.4076264 9.391475
184 4.467480e+01 0.4076264 9.391475
185 4.467480e+01 0.4076264 9.391475
186 4.467480e+01 0.4076264 9.391475
187 4.467480e+01 0.4076264 9.391475
188 4.467480e+01 0.4076264 9.391475
189 4.467480e+01 0.4076264 9.391475
190 4.467480e+01 0.4076264 9.391475
191 4.467480e+01 0.4076264 9.391475
192 4.467480e+01 0.4076264 9.391475
193 4.467480e+01 0.4076264 9.391475
194 4.467480e+01 0.4076264 9.391475
195 4.467480e+01 0.4076264 9.391475
196 4.467480e+01 0.4076264 9.391475
197 4.467480e+01 0.4076264 9.391475
198 4.467480e+01 0.4076264 9.391475
199 4.467480e+01 0.4076264 9.391475
200 4.477789e+01 0.4688016 8.144296

$member$bestvalit
  [1] 3.772442e+20 3.591544e+20 1.460075e+20 1.460075e+20 1.587143e+19
  [6] 1.298615e+19 2.196463e+18 2.052072e+18 2.052072e+18 2.052072e+18
 [11] 2.052072e+18 1.517156e+18 2.754993e+16 2.706708e+16 2.706708e+16
 [16] 2.706708e+16 2.706708e+16 2.706708e+16 2.706708e+16 2.706708e+16
 [21] 2.706708e+16 8.172176e+15 2.615332e+15 2.615332e+15 1.422613e+15
 [26] 1.422613e+15 1.422613e+15 1.422613e+15 1.422613e+15 7.355096e+13
 [31] 7.355096e+13 7.355096e+13 1.696659e+13 1.696659e+13 3.362682e+12
 [36] 3.362682e+12 5.235857e+11 5.235857e+11 1.084631e+10 1.084631e+10
 [41] 2.310199e+09 2.310199e+09 2.310199e+09 2.310199e+09 2.308065e+09
 [46] 2.306435e+09 6.951987e+06 6.951987e+06 6.951987e+06 6.951987e+06
 [51] 6.951987e+06 6.951987e+06 6.951987e+06 6.951987e+06 6.951987e+06
 [56] 6.951987e+06 2.410772e+05 2.410772e+05 2.410772e+05 2.410772e+05
 [61] 2.410772e+05 2.410772e+05 1.757774e+05 1.757774e+05 1.757774e+05
 [66] 1.757774e+05 1.757774e+05 1.757774e+05 1.757774e+05 1.757774e+05
 [71] 1.757774e+05 1.757774e+05 1.757774e+05 1.757774e+05 1.757774e+05
 [76] 1.757774e+05 1.757774e+05 1.757774e+05 1.757774e+05 1.740202e+05
 [81] 1.740202e+05 1.705678e+05 1.673093e+05 1.673093e+05 1.659093e+05
 [86] 1.659093e+05 1.659093e+05 1.659093e+05 1.659093e+05 1.659093e+05
 [91] 1.659093e+05 1.659093e+05 1.659093e+05 1.659093e+05 1.659093e+05
 [96] 1.658410e+05 1.658410e+05 1.658410e+05 1.658410e+05 1.658410e+05
[101] 1.658410e+05 1.658410e+05 1.658410e+05 1.658410e+05 1.658410e+05
[106] 1.658410e+05 1.658410e+05 1.658410e+05 1.658326e+05 1.658326e+05
[111] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[116] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[121] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]     [,3]
 [1,] 42.95442 0.3478620 7.854392
 [2,] 47.53754 0.7555449 8.469008
 [3,] 43.01593 0.3088705 8.809815
 [4,] 45.60116 0.5491205 8.023373
 [5,] 45.25107 0.4549110 9.548367
 [6,] 48.23610 0.8421147 9.241057
 [7,] 45.37424 0.4843004 9.078162
 [8,] 42.79244 0.3163640 8.300897
 [9,] 45.29443 0.4746211 9.141782
[10,] 48.57474 0.9071516 8.498227
[11,] 44.47935 0.3982217 9.222655
[12,] 43.58821 0.4690186 6.335113
[13,] 45.47857 0.6261022 6.056662
[14,] 44.77789 0.4688016 8.144296
[15,] 44.77789 0.4688016 8.144296
[16,] 45.33997 0.4599261 9.653312
[17,] 44.82104 0.5569324 6.344370
[18,] 45.12703 0.4571468 9.183756
[19,] 47.61287 0.7556425 8.852569
[20,] 48.43139 0.9033404 6.900846
[21,] 45.63272 0.6572457 5.669250
[22,] 47.60146 0.7468657 9.241738
[23,] 45.43395 0.4648114 9.764077
[24,] 45.33947 0.5547010 7.267254
[25,] 44.42526 0.3786962 9.611794
[26,] 46.53036 0.6332861 8.383170
[27,] 47.50599 0.7755051 7.434257
[28,] 46.28092 0.5623790 9.547695
[29,] 45.03205 0.5256824 7.358970
[30,] 44.86038 0.4194004 9.548301
[31,] 45.46003 0.4859860 9.216107
[32,] 48.19025 0.8245808 9.898041
[33,] 44.64229 0.3986790 9.581555
[34,] 45.10314 0.4516011 9.246010
[35,] 43.93044 0.3508847 9.496114
[36,] 46.05426 0.7143651 5.183390
[37,] 45.48628 0.5554765 7.605202
[38,] 40.60573 0.2579248 7.138373
[39,] 42.71856 0.2544670 9.762095
[40,] 46.30137 0.5962066 8.689819
[41,] 45.25284 0.4975769 8.465535
[42,] 48.69231 0.9336381 7.452698
[43,] 42.89662 0.4130141 6.533385
[44,] 44.56681 0.4035372 9.286569
[45,] 45.20992 0.4497957 9.573586
[46,] 44.92700 0.4744804 8.308381
[47,] 45.25107 0.4507621 9.683075
[48,] 45.32876 0.4568906 9.661617
[49,] 48.29807 0.8500240 9.352118
[50,] 48.61380 0.9583496 3.957894

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
44.7778910  0.4688016  8.1442960 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$fitted.values
 [1] 1149.945 1189.260 1213.340 1224.151 1224.151 1239.877 1273.294 1276.243
 [9] 1237.420 1281.157 1315.557 1467.900 1528.838 1581.912 1548.986 1566.678
[17] 1648.255 1722.952 1833.524 1935.741

$residuals
 [1] -203.812357 -226.529245 -143.760610  -52.354759  -46.035192  -54.066983
 [7]  -33.936367   12.318140  -29.713635   -2.748566   45.035463   72.883757
[13]   46.197057  114.047382   95.702886   59.353433    6.784848   32.647488
[19]   53.896278   56.152662

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
44.7779  0.4688  8.1443 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  44.7779         NA      NA       NA
delta   0.4688         NA      NA       NA
rho     8.1443         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntDe ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 44.7778910         NA      NA       NA
delta  0.4688016         NA      NA       NA
rho    8.1442960         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3        par4 
714.9493824   0.7126136   8.5071287   0.2012858 

$optim$bestval
[1] 1055342

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1      par2      par3         par4
1   2.287886e+09 0.2577158 0.8896528 0.1718415320
2   2.287886e+09 0.2577158 0.8896528 0.1718415320
3   2.287886e+09 0.2577158 0.8896528 0.1718415320
4   3.017041e+08 0.3299908 8.9805694 0.5827208515
5   8.921608e+08 0.4695857 3.3028801 0.0799199971
6   3.227593e+08 0.3849004 5.9657083 0.1108600101
7   3.227593e+08 0.3849004 5.9657083 0.1108600101
8   3.227593e+08 0.3849004 5.9657083 0.1108600101
9   3.227593e+08 0.5614006 5.2976070 0.1108600101
10  3.227593e+08 0.5614006 5.7659686 0.1108600101
11  2.712780e+08 0.7268000 6.0260412 0.1214701141
12  4.164570e+07 0.9304240 4.8600119 0.2425125657
13  4.164570e+07 0.9274244 8.0116000 0.2425125657
14  4.164570e+07 0.9274244 8.0116000 0.2425125657
15  4.164570e+07 0.9274244 8.0116000 0.2425125657
16  4.164570e+07 0.9274244 8.7012345 0.2425125657
17  4.164570e+07 0.9274244 8.7012345 0.2425125657
18  4.164570e+07 0.9274244 8.7012345 0.2425125657
19  4.164570e+07 0.9274244 8.7012345 0.2425125657
20  4.164570e+07 0.9274244 8.7012345 0.2425125657
21  4.164570e+07 0.9274244 8.7012345 0.2425125657
22  4.164570e+07 0.9274244 8.7012345 0.2425125657
23  4.164570e+07 0.9274244 8.7012345 0.2425125657
24  4.164570e+07 0.9274244 8.7012345 0.2425125657
25  4.164570e+07 0.9274244 8.7012345 0.2425125657
26  1.967192e+06 0.8309859 7.3056171 0.2987074950
27  1.967192e+06 0.8309859 7.3056171 0.2987074950
28  1.967192e+06 0.8309859 7.3056171 0.2385004527
29  1.967192e+06 0.8520832 6.4952584 0.1538977019
30  2.458281e+06 0.8145566 9.5519006 0.0799199971
31  2.458281e+06 0.8636646 9.1905796 0.0799199971
32  2.458281e+06 0.8636646 9.1905796 0.0799199971
33  2.813991e+05 0.8499744 6.8504748 0.0516413147
34  2.813991e+05 0.8499744 6.8504748 0.0516413147
35  2.813991e+05 0.8499744 6.8504748 0.0516413147
36  2.813991e+05 0.8499744 5.0588206 0.0516413147
37  2.813991e+05 0.8499744 5.0588206 0.0516413147
38  2.813991e+05 0.8499744 5.0588206 0.0516413147
39  2.813991e+05 0.8499744 5.0588206 0.0516413147
40  2.813991e+05 0.8499744 5.4487183 0.0516413147
41  2.813991e+05 0.8499744 5.4487183 0.0516413147
42  2.813991e+05 0.9283314 5.4487183 0.0516413147
43  2.813991e+05 0.8204265 6.2913023 0.0224262193
44  2.240882e+05 0.7816754 7.2571746 0.0004752539
45  2.240882e+05 0.7816754 7.2571746 0.0004752539
46  6.118760e+04 0.9411026 9.0560995 0.0092301160
47  6.118760e+04 0.9411026 5.6410031 0.0288765955
48  6.118760e+04 0.9565784 4.2366753 0.0092301160
49  6.118760e+04 0.9565784 7.7933100 0.0092301160
50  3.376841e+04 0.9633900 9.2162038 0.0004256156
51  3.376841e+04 0.9633900 9.2162038 0.0004256156
52  3.376841e+04 0.9633900 8.1639785 0.0004256156
53  3.376841e+04 0.9633900 8.1639785 0.0004256156
54  3.376841e+04 0.9633900 8.1639785 0.0004256156
55  3.376841e+04 0.9633900 8.1639785 0.0004256156
56  3.376841e+04 0.9633900 8.1639785 0.0004256156
57  3.376841e+04 0.9633900 8.1639785 0.0004256156
58  3.376841e+04 0.9633900 8.1639785 0.0004256156
59  3.376841e+04 0.9633900 8.1639785 0.0004256156
60  3.376841e+04 0.9633900 8.1639785 0.0004256156
61  1.265045e+03 0.9402751 7.4125167 0.0064067997
62  1.265045e+03 0.9402751 7.4125167 0.0064067997
63  1.265045e+03 0.9025771 7.4125167 0.0064067997
64  1.265045e+03 0.9025771 7.4125167 0.0111029225
65  1.265045e+03 0.3260247 6.4662270 0.0123582566
66  1.265045e+03 0.3260247 6.4662270 0.0136142613
67  1.265045e+03 0.3863564 4.0559068 0.0136142613
68  1.265045e+03 0.9402751 7.2575193 0.0153850454
69  1.265045e+03 0.9402751 7.2575193 0.0153850454
70  1.265045e+03 0.9402751 7.2575193 0.0153850454
71  1.265045e+03 0.9402751 7.2575193 0.0153850454
72  1.265045e+03 0.9402751 7.2575193 0.0153850454
73  1.265045e+03 0.4497961 6.2258424 0.0164403512
74  1.265045e+03 0.3993202 6.7868216 0.0164403512
75  1.265045e+03 0.3993202 6.7868216 0.0164403512
76  1.265045e+03 0.3993202 6.7868216 0.0164403512
77  1.265045e+03 0.3993202 6.7868216 0.0164403512
78  1.265045e+03 0.1821185 4.6014451 0.0190448372
79  1.245371e+03 0.1194314 0.9167499 0.0305135393
80  1.245371e+03 0.1194314 0.9167499 0.0305135393
81  1.265045e+03 0.3993202 1.9741221 0.0390129745
82  1.265045e+03 0.6397906 1.9741221 0.0276316029
83  1.265045e+03 0.6397906 7.1407067 0.0414845209
84  1.265045e+03 0.6397906 7.1407067 0.0414845209
85  1.265045e+03 0.6397906 7.1407067 0.0349188070
86  1.265045e+03 0.6397906 7.1407067 0.0349188070
87  1.265045e+03 0.8082062 9.1801539 0.0349188070
88  1.194995e+03 0.5887809 3.7301752 0.0492431856
89  1.194995e+03 0.5887809 3.7301752 0.0492431856
90  1.194995e+03 0.5887809 3.7301752 0.0492431856
91  1.194995e+03 0.5639660 7.6906269 0.0492431856
92  1.194995e+03 0.5639660 7.6906269 0.0492431856
93  1.194995e+03 0.6875723 4.5088187 0.0492431856
94  1.093224e+03 0.3202153 8.6047652 0.0761589820
95  1.093224e+03 0.1963052 8.6047652 0.0761589820
96  1.093224e+03 0.1963052 8.6047652 0.0761589820
97  1.093224e+03 0.1963052 8.6047652 0.0761589820
98  1.093224e+03 0.1963052 8.6047652 0.0761589820
99  1.093224e+03 0.2707684 9.9887836 0.0761589820
100 1.093224e+03 0.2707684 9.9887836 0.0761589820
101 1.093224e+03 0.2707684 9.9887836 0.0761589820
102 1.093224e+03 0.2707684 9.9887836 0.0761589820
103 1.093224e+03 0.2707684 9.9887836 0.0761589820
104 1.093224e+03 0.2707684 9.9887836 0.0761589820
105 1.093224e+03 0.2707684 9.9887836 0.0761589820
106 1.093224e+03 0.2707684 9.9887836 0.0761589820
107 1.093224e+03 0.2707684 9.9887836 0.0761589820
108 9.954133e+02 0.2707684 6.9182029 0.1025992967
109 9.954133e+02 0.2707684 6.9182029 0.1025992967
110 9.954133e+02 0.2707684 6.9182029 0.1025992967
111 9.954133e+02 0.2707684 6.9998585 0.1025992967
112 9.954133e+02 0.2707684 9.4576087 0.1025992967
113 9.954133e+02 0.3906921 9.4576087 0.1025992967
114 9.954133e+02 0.3906921 9.4576087 0.1025992967
115 9.954133e+02 0.3906921 9.4576087 0.1025992967
116 9.954133e+02 0.3906921 9.4576087 0.1025992967
117 9.954133e+02 0.3906921 9.4576087 0.1025992967
118 9.954133e+02 0.3906921 9.4576087 0.1025992967
119 9.954133e+02 0.3906921 9.4576087 0.1025992967
120 9.954133e+02 0.3906921 9.4576087 0.1025992967
121 9.954133e+02 0.3906921 9.4576087 0.1025992967
122 9.954133e+02 0.3906921 9.4576087 0.1025992967
123 9.954133e+02 0.3906921 9.4576087 0.1025992967
124 9.954133e+02 0.3906921 9.4576087 0.1025992967
125 9.954133e+02 0.3906921 9.4576087 0.1025992967
126 9.954133e+02 0.3906921 9.4576087 0.1025992967
127 9.954133e+02 0.3906921 9.4576087 0.1025992967
128 9.954133e+02 0.3906921 9.4576087 0.1025992967
129 9.954133e+02 0.3906921 9.4576087 0.1025992967
130 9.954133e+02 0.3906921 9.4576087 0.1025992967
131 9.954133e+02 0.3906921 9.4576087 0.1025992967
132 9.954133e+02 0.3906921 9.4576087 0.1025992967
133 9.954133e+02 0.3906921 9.4576087 0.1025992967
134 9.954133e+02 0.3906921 9.4576087 0.1025992967
135 9.954133e+02 0.3906921 9.4576087 0.1025992967
136 9.954133e+02 0.3906921 9.4576087 0.1025992967
137 9.954133e+02 0.3906921 9.4576087 0.1025992967
138 9.954133e+02 0.3906921 9.4576087 0.1025992967
139 9.954133e+02 0.4038095 9.5276440 0.1025992967
140 9.498137e+02 0.8750402 5.6555902 0.1204573538
141 9.216324e+02 0.7697269 5.6555902 0.1338245740
142 8.039761e+02 0.6770117 5.6555902 0.1739226952
143 8.039761e+02 0.6770117 9.9840162 0.1739226952
144 8.039761e+02 0.6770117 9.9840162 0.1739226952
145 8.039761e+02 0.6770117 9.9840162 0.1739226952
146 8.039761e+02 0.6770117 9.9840162 0.1739226952
147 8.039761e+02 0.6770117 9.9840162 0.1739226952
148 8.039761e+02 0.6770117 9.9840162 0.1739226952
149 7.786194e+02 0.7431091 5.9746899 0.1800369452
150 7.786194e+02 0.7431091 5.9746899 0.1800369452
151 7.786194e+02 0.7431091 5.9746899 0.1800369452
152 7.786194e+02 0.7431091 5.9746899 0.1800369452
153 7.786194e+02 0.7431091 5.9746899 0.1800369452
154 7.786194e+02 0.7431091 5.9746899 0.1800369452
155 7.786194e+02 0.7431091 5.9746899 0.1800369452
156 7.786194e+02 0.7431091 5.9746899 0.1800369452
157 7.786194e+02 0.7431091 5.9746899 0.1800369452
158 7.786194e+02 0.7431091 5.9746899 0.1800369452
159 7.786194e+02 0.7431091 5.9746899 0.1800369452
160 7.786194e+02 0.7431091 5.9746899 0.1800369452
161 7.786194e+02 0.7431091 6.8923202 0.1800369452
162 7.786194e+02 0.7431091 6.8923202 0.1800369452
163 7.786194e+02 0.7431091 6.8923202 0.1800369452
164 7.786194e+02 0.7441573 6.8923202 0.1800369452
165 7.786194e+02 0.7441573 6.8923202 0.1800369452
166 7.786194e+02 0.7441573 6.8923202 0.1800369452
167 7.786194e+02 0.7441573 6.8923202 0.1800369452
168 7.786194e+02 0.7441573 6.8923202 0.1800369452
169 7.786194e+02 0.7441573 6.8923202 0.1800369452
170 7.786194e+02 0.7441573 6.8923202 0.1800369452
171 7.786194e+02 0.7441573 6.8923202 0.1800369452
172 7.786194e+02 0.7441573 6.8923202 0.1800369452
173 7.786194e+02 0.7441573 6.8923202 0.1800369452
174 7.786194e+02 0.7441573 6.8923202 0.1800369452
175 7.786194e+02 0.7441573 6.8923202 0.1800369452
176 7.786194e+02 0.7441573 6.8923202 0.1800369452
177 7.786194e+02 0.7441573 6.8923202 0.1800369452
178 7.786194e+02 0.7441573 6.8923202 0.1800369452
179 7.786194e+02 0.7441573 6.8923202 0.1800369452
180 7.786194e+02 0.7441573 6.8923202 0.1800369452
181 7.786194e+02 0.7441573 6.8923202 0.1800369452
182 7.786194e+02 0.7441573 6.8923202 0.1800369452
183 7.786194e+02 0.7441573 6.8923202 0.1800369452
184 7.592888e+02 0.7441573 3.5351846 0.1852816861
185 7.592888e+02 0.7441573 3.5351846 0.1852816861
186 7.592888e+02 0.7441573 3.5351846 0.1852816861
187 7.592888e+02 0.7441573 3.5351846 0.1852816861
188 7.592888e+02 0.7441573 3.5351846 0.1852816861
189 7.592888e+02 0.7441573 8.5071287 0.1852816861
190 7.592888e+02 0.7441573 8.5071287 0.1852816861
191 7.592888e+02 0.7441573 8.5071287 0.1852816861
192 7.592888e+02 0.7441573 8.5071287 0.1852816861
193 7.149494e+02 0.3375839 8.5071287 0.2029660908
194 7.149494e+02 0.3375839 8.5071287 0.2029660908
195 7.149494e+02 0.3375839 8.5071287 0.2029660908
196 7.149494e+02 0.3375839 8.5071287 0.2029660908
197 7.149494e+02 0.3375839 8.5071287 0.2029660908
198 7.149494e+02 0.3375839 8.5071287 0.2012857922
199 7.149494e+02 0.8788597 8.5071287 0.2012857922
200 7.149494e+02 0.7126136 8.5071287 0.2012857922

$member$bestvalit
  [1] 5.271044e+20 5.271044e+20 5.271044e+20 3.841206e+19 2.593708e+19
  [6] 4.543290e+18 4.543290e+18 4.543290e+18 4.492140e+18 4.483332e+18
 [11] 3.353780e+18 1.782046e+17 1.777355e+17 6.140010e+16 5.936989e+16
 [16] 5.936989e+16 5.936989e+16 5.936989e+16 4.888855e+16 6.442515e+15
 [21] 6.442515e+15 6.442515e+15 2.300870e+15 1.939157e+15 1.939157e+15
 [26] 4.049060e+14 4.049060e+14 3.886886e+14 2.189883e+14 2.071713e+14
 [31] 3.437160e+13 3.348659e+13 2.226085e+12 2.226085e+12 2.226085e+12
 [36] 2.226085e+12 2.226085e+12 2.226085e+12 2.226085e+12 2.226085e+12
 [41] 2.226085e+12 2.223759e+12 1.826283e+12 9.949041e+11 9.949041e+11
 [46] 7.614386e+10 7.614386e+10 7.614127e+10 7.614127e+10 2.100166e+10
 [51] 2.100166e+10 1.687844e+09 1.686259e+09 1.619322e+09 1.555219e+09
 [56] 1.555219e+09 1.555219e+09 1.555219e+09 1.555219e+09 1.283031e+09
 [61] 2.045469e+06 2.045469e+06 2.045248e+06 1.943169e+06 1.908762e+06
 [66] 1.884824e+06 1.881029e+06 1.846521e+06 1.846521e+06 1.846521e+06
 [71] 1.846521e+06 1.846521e+06 1.838554e+06 1.838102e+06 1.838102e+06
 [76] 1.838102e+06 1.838102e+06 1.784289e+06 1.748644e+06 1.748644e+06
 [81] 1.729073e+06 1.703670e+06 1.690598e+06 1.690598e+06 1.684322e+06
 [86] 1.684322e+06 1.683558e+06 1.646830e+06 1.646830e+06 1.646830e+06
 [91] 1.646465e+06 1.632564e+06 1.632564e+06 1.569333e+06 1.467664e+06
 [96] 1.467664e+06 1.430356e+06 1.369320e+06 1.369320e+06 1.369320e+06
[101] 1.347474e+06 1.347474e+06 1.347474e+06 1.347474e+06 1.342782e+06
[106] 1.342782e+06 1.342782e+06 1.342782e+06 1.342782e+06 1.198320e+06
[111] 1.198320e+06 1.198320e+06 1.198320e+06 1.198320e+06 1.198320e+06
[116] 1.198320e+06 1.198320e+06 1.198320e+06 1.198320e+06 1.198320e+06
[121] 1.198320e+06 1.198320e+06 1.198320e+06 1.190120e+06 1.190120e+06
[126] 1.190120e+06 1.190120e+06 1.190120e+06 1.190120e+06 1.190120e+06
[131] 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06
[136] 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06
[141] 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06 1.188288e+06
[146] 1.188288e+06 1.188288e+06 1.188288e+06 1.154356e+06 1.134266e+06
[151] 1.115631e+06 1.115631e+06 1.115631e+06 1.110598e+06 1.110598e+06
[156] 1.110598e+06 1.063312e+06 1.063312e+06 1.063312e+06 1.063312e+06
[161] 1.063312e+06 1.063312e+06 1.063312e+06 1.063312e+06 1.063312e+06
[166] 1.063312e+06 1.063312e+06 1.063312e+06 1.063312e+06 1.063312e+06
[171] 1.063312e+06 1.063312e+06 1.055342e+06 1.055342e+06 1.055342e+06
[176] 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06
[181] 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06
[186] 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06
[191] 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06
[196] 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06 1.055342e+06

$member$pop
          [,1]       [,2]     [,3]      [,4]
 [1,] 621.7079 0.99627525 9.976145 0.2482022
 [2,] 586.8623 0.96352014 8.839457 0.2638027
 [3,] 654.2308 0.13755275 9.779611 0.2190226
 [4,] 602.8141 0.25825266 5.212910 0.2325541
 [5,] 617.4587 0.52625197 2.260496 0.2322641
 [6,] 573.8340 0.72835396 7.860773 0.2646534
 [7,] 590.1031 0.40575098 3.344562 0.2434393
 [8,] 679.3854 0.42087800 9.071449 0.2138199
 [9,] 587.4851 0.23518909 8.373307 0.2441155
[10,] 638.1678 0.53229595 5.308088 0.2299688
[11,] 635.2372 0.95970895 7.604869 0.2463024
[12,] 641.4903 0.57555709 4.982883 0.2297420
[13,] 641.6220 0.35436762 6.456915 0.2295433
[14,] 567.7697 0.24427510 1.780823 0.2226085
[15,] 664.9879 0.97428961 9.478940 0.2268482
[16,] 539.8244 0.24902194 4.776912 0.2559437
[17,] 714.9494 0.71261357 8.507129 0.2012858
[18,] 648.4050 0.26523098 5.535539 0.2166854
[19,] 630.2074 0.93535019 4.036350 0.2412741
[20,] 681.3013 0.80729938 8.744404 0.2190186
[21,] 576.1082 0.79817827 3.006925 0.2636736
[22,] 530.2323 0.16279581 5.256632 0.2680224
[23,] 574.7832 0.42713354 9.410967 0.2633796
[24,] 646.7782 0.79709250 3.971816 0.2297815
[25,] 559.6044 0.15970525 7.186210 0.2554982
[26,] 603.0972 0.46445879 4.494032 0.2433745
[27,] 639.1990 0.99931686 2.681459 0.2381399
[28,] 423.7757 0.06457774 4.012063 0.2949782
[29,] 621.5617 0.61601345 4.538379 0.2389957
[30,] 635.4880 0.94911628 3.427982 0.2389565
[31,] 659.8662 0.97064701 9.719670 0.2361442
[32,] 650.0673 0.49427414 5.684259 0.2254557
[33,] 652.5566 0.51301955 6.962585 0.2253064
[34,] 639.8006 0.39905961 8.969096 0.2329011
[35,] 563.0865 0.80793124 8.894898 0.2768100
[36,] 663.6013 0.76123045 9.971064 0.2298991
[37,] 481.3042 0.38815362 1.080035 0.2592667
[38,] 634.2282 0.90366952 9.816341 0.2491627
[39,] 680.6549 0.51187795 5.962852 0.2112840
[40,] 482.3707 0.21307040 1.761721 0.2594776
[41,] 655.1344 0.93641047 9.987420 0.2317612
[42,] 628.8394 0.49875709 7.607829 0.2440598
[43,] 555.8788 0.36034407 6.929988 0.2684649
[44,] 702.4154 0.46003598 6.350344 0.2041442
[45,] 583.2455 0.23561054 6.621119 0.2493666
[46,] 562.4776 0.88729727 5.611681 0.2746571
[47,] 598.8124 0.77345579 2.157916 0.2508353
[48,] 482.5983 0.32195248 1.192309 0.2555106
[49,] 463.9614 0.42862649 3.811002 0.3133740
[50,] 562.7795 0.27702211 2.914031 0.2434676

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho         phi 
714.9493824   0.7126136   8.5071287   0.2012858 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$fitted.values
 [1] 1359.442 1368.672 1374.205 1376.661 1376.661 1380.203 1387.611 1388.257
 [9] 1379.652 1389.332 1396.761 1427.910 1439.648 1449.572 1443.448 1446.751
[17] 1461.608 1474.706 1493.286 1509.682

$residuals
 [1] -413.30870 -405.94114 -304.62607 -204.86476 -198.54519 -194.39284
 [7] -148.25338  -99.69649 -171.94563 -110.92324  -36.16879  112.87427
[13]  135.38622  246.38769  201.24158  179.28021  193.43136  280.89336
[19]  394.13431  482.21221

$cov.unscaled
      gamma delta rho phi
gamma    NA    NA  NA  NA
delta    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho      phi 
714.9494   0.7126   8.5071   0.2013 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 714.9494         NA      NA       NA
delta   0.7126         NA      NA       NA
rho     8.5071         NA      NA       NA
phi     0.2013         NA      NA       NA

Residual standard error: 254.0952 
Multiple R-squared: 0.2705072 

> coef( summary( cesLandIntDeVrs ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 714.9493824         NA      NA       NA
delta   0.7126136         NA      NA       NA
rho     8.5071287         NA      NA       NA
phi     0.2012858         NA      NA       NA
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

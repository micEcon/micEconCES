
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
Loading required package: minpack.lm
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print.default( cesLandLabor ) 
$optim
$optim$par
    gamma     delta       rho 
85.881210  0.096279 -4.192271 

$optim$value
[1] 165847.2

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
85.881210  0.096279 -4.192271 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.899 1189.209 1213.286 1224.099 1224.099 1239.822 1273.235 1276.185
 [9] 1237.366 1281.101 1315.497 1467.833 1528.765 1581.833 1548.909 1566.598
[17] 1648.169 1722.860 1833.423 1935.634

$residuals
 [1] -203.765900 -226.478835 -143.707001  -52.302155  -45.982588  -54.012122
 [7]  -33.877072   12.375801  -29.659575   -2.692469   45.095195   72.951246
[13]   46.270086  114.126480   95.779791   59.433304    6.871182   32.739722
[19]   53.996809   56.260513

$cov.unscaled
          gamma       delta         rho
gamma 953840179 -5672560.72 -22133026.3
delta  -5672561    33735.76    131638.0
rho   -22133026   131638.03    513786.4

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Coefficients:
   gamma    delta      rho 
85.88121  0.09628 -4.19227 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.588e+01  2.812e+06  3.05e-05        1
delta  9.628e-02  1.673e+04  5.76e-06        1
rho   -4.192e+00  6.527e+04 -6.42e-05        1

Residual standard error: 91.0624 

> coef( cesLandLabor ) 
    gamma     delta       rho 
85.881210  0.096279 -4.192271 
> vcov( cesLandLabor ) 
              gamma        delta           rho
gamma 7909586638720 -47038918550 -183535033079
delta  -47038918550    279749061    1091590030
rho   -183535033079   1091590030    4260502296
> coef( summary( cesLandLabor ) )
       Estimate Std. Error       t value  Pr(>|t|)
gamma 85.881210 2812398.73  3.053664e-05 0.9999756
delta  0.096279   16725.70  5.756350e-06 0.9999954
rho   -4.192271   65272.52 -6.422719e-05 0.9999488
> fitted( cesLandLabor )
 [1] 1149.899 1189.209 1213.286 1224.099 1224.099 1239.822 1273.235 1276.185
 [9] 1237.366 1281.101 1315.497 1467.833 1528.765 1581.833 1548.909 1566.598
[17] 1648.169 1722.860 1833.423 1935.634
> residuals( cesLandLabor )
 [1] -203.765900 -226.478835 -143.707001  -52.302155  -45.982588  -54.012122
 [7]  -33.877072   12.375801  -29.659575   -2.692469   45.095195   72.951246
[13]   46.270086  114.126480   95.779791   59.433304    6.871182   32.739722
[19]   53.996809   56.260513
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho          phi 
189.13450778   0.04366269  -1.11694815   1.81154092 

$optim$value
[1] 65969.48

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho          phi 
189.13450778   0.04366269  -1.11694815   1.81154092 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1072.014 1112.678 1126.981 1163.866 1163.866 1170.997 1187.158 1217.692
 [9] 1175.705 1250.419 1282.257 1550.361 1620.747 1652.201 1602.043 1588.884
[17] 1682.191 1762.384 1884.470 2000.898

$residuals
 [1] -125.881224 -149.947507  -57.401569    7.930065   14.249631   14.812746
 [7]   52.199585   70.868608   32.001505   27.989037   78.335714   -9.576675
[13]  -45.712780   43.758007   42.646352   37.146716  -27.151558   -6.783917
[19]    2.950681   -9.003555

$cov.unscaled
             gamma         delta           rho           phi
gamma 138.87923236 -1.001256e-01 -0.7824563126  3.070389e-02
delta  -0.10012557  7.223580e-05  0.0005644854 -2.249462e-05
rho    -0.78245631  5.644854e-04  0.0044164169 -1.685179e-04
phi     0.03070389 -2.249462e-05 -0.0001685179  1.908093e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
    gamma     delta       rho       phi 
189.13451   0.04366  -1.11695   1.81154 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma 189.13451  676.82312   0.279    0.780    
delta   0.04366    0.48813   0.089    0.929    
rho    -1.11695    3.81673  -0.293    0.770    
phi     1.81154    0.25087   7.221 5.16e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 57.43234 

> coef( cesLandLaborVrs )
       gamma        delta          rho          phi 
189.13450778   0.04366269  -1.11694815   1.81154092 
> vcov( cesLandLaborVrs )
            gamma         delta          rho          phi
gamma 458089.5318 -330.26158276 -2580.911773 101.27597257
delta   -330.2616    0.23826791     1.861941  -0.07419793
rho    -2580.9118    1.86194053    14.567436  -0.55585196
phi      101.2760   -0.07419793    -0.555852   0.06293794
> coef( summary( cesLandLaborVrs ) )
          Estimate  Std. Error     t value     Pr(>|t|)
gamma 189.13450778 676.8231170  0.27944452 7.799037e-01
delta   0.04366269   0.4881269  0.08944945 9.287247e-01
rho    -1.11694815   3.8167311 -0.29264523 7.697933e-01
phi     1.81154092   0.2508744  7.22090908 5.164117e-13
> fitted( cesLandLaborVrs )
 [1] 1072.014 1112.678 1126.981 1163.866 1163.866 1170.997 1187.158 1217.692
 [9] 1175.705 1250.419 1282.257 1550.361 1620.747 1652.201 1602.043 1588.884
[17] 1682.191 1762.384 1884.470 2000.898
> residuals( cesLandLaborVrs )
 [1] -125.881224 -149.947507  -57.401569    7.930065   14.249631   14.812746
 [7]   52.199585   70.868608   32.001505   27.989037   78.335714   -9.576675
[13]  -45.712780   43.758007   42.646352   37.146716  -27.151558   -6.783917
[19]    2.950681   -9.003555
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
     gamma      delta        rho 
128.768741   0.312829  -1.128250 

$optim$value
[1] 193271.2

$optim$counts
function gradient 
     627      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
128.768741   0.312829  -1.128250 

$iter
function gradient 
     627      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1165.398 1202.503 1224.113 1236.910 1236.910 1250.782 1280.362 1285.863
 [9] 1249.200 1293.193 1325.065 1477.320 1534.493 1581.646 1549.738 1563.411
[17] 1639.789 1709.129 1811.815 1906.786

$residuals
 [1] -219.265396 -239.772530 -154.533640  -65.113090  -58.793523  -64.971823
 [7]  -41.003999    2.697484  -41.494215  -14.784849   35.527332   63.464116
[13]   40.541667  114.312941   94.951261   62.620297   15.250444   46.470489
[19]   75.604886   85.108499

$cov.unscaled
           gamma        delta          rho
gamma 2136.90435 -11.08203664 -17.29697951
delta  -11.08204   0.05747982   0.08973357
rho    -17.29698   0.08973357   0.14012744

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
128.7687   0.3128  -1.1282 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 627 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  128.7687  4544.4026   0.028    0.977
delta    0.3128    23.5690   0.013    0.989
rho     -1.1282    36.7998  -0.031    0.976

Residual standard error: 98.30696 

> coef( cesLandLaborCg )
     gamma      delta        rho 
128.768741   0.312829  -1.128250 
> vcov( cesLandLaborCg )
           gamma        delta          rho
gamma 20651595.4 -107099.6635 -167162.4761
delta  -107099.7     555.4998     867.2084
rho    -167162.5     867.2084    1354.2278
> coef( summary( cesLandLaborCg ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 128.768741 4544.40264  0.02833568 0.9773944
delta   0.312829   23.56904  0.01327288 0.9894101
rho    -1.128250   36.79983 -0.03065910 0.9755414
> fitted( cesLandLaborCg )
 [1] 1165.398 1202.503 1224.113 1236.910 1236.910 1250.782 1280.362 1285.863
 [9] 1249.200 1293.193 1325.065 1477.320 1534.493 1581.646 1549.738 1563.411
[17] 1639.789 1709.129 1811.815 1906.786
> residuals( cesLandLaborCg )
 [1] -219.265396 -239.772530 -154.533640  -65.113090  -58.793523  -64.971823
 [7]  -41.003999    2.697484  -41.494215  -14.784849   35.527332   63.464116
[13]   40.541667  114.312941   94.951261   62.620297   15.250444   46.470489
[19]   75.604886   85.108499
> 
> # using the SANN optimization method
> set.seed( 123 )
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
       gamma        delta          rho 
127.32525420   0.04836739  -3.17896260 

$optim$value
[1] 166423.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
       gamma        delta          rho 
127.32525420   0.04836739  -3.17896260 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1150.039 1189.272 1213.272 1224.138 1224.138 1239.805 1273.108 1276.124
 [9] 1237.374 1281.105 1315.423 1467.719 1528.542 1581.462 1548.568 1566.166
[17] 1647.616 1722.192 1832.600 1934.677

$residuals
 [1] -203.905882 -226.541450 -143.693071  -52.341322  -46.021755  -53.995020
 [7]  -33.750051   12.436970  -29.667482   -2.696151   45.169139   73.064989
[13]   46.492851  114.497662   96.120996   59.864632    7.424213   33.407493
[19]   54.820738   57.217157

$cov.unscaled
            gamma        delta          rho
gamma 1545587.081 -2821.570476 -20735.63396
delta   -2821.570     5.151323     37.86212
rho    -20735.634    37.862122    278.36112

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
    gamma     delta       rho 
127.32525   0.04837  -3.17896 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
        Estimate Std. Error  t value Pr(>|t|)
gamma  1.273e+02  1.134e+05    0.001    0.999
delta  4.837e-02  2.070e+02 0.000234    1.000
rho   -3.179e+00  1.522e+03   -0.002    0.998

Residual standard error: 91.2206 

> coef( cesLandLaborSann )
       gamma        delta          rho 
127.32525420   0.04836739  -3.17896260 
> vcov( cesLandLaborSann )
            gamma        delta          rho
gamma 12861135105 -23478844.73 -172545302.1
delta   -23478845     42865.17     315058.2
rho    -172545302    315058.19    2316297.8
> coef( summary( cesLandLaborSann ) )
          Estimate  Std. Error       t value  Pr(>|t|)
gamma 127.32525420 113406.9447  0.0011227289 0.9991042
delta   0.04836739    207.0391  0.0002336148 0.9998136
rho    -3.17896260   1521.9388 -0.0020887585 0.9983334
> fitted( cesLandLaborSann )
 [1] 1150.039 1189.272 1213.272 1224.138 1224.138 1239.805 1273.108 1276.124
 [9] 1237.374 1281.105 1315.423 1467.719 1528.542 1581.462 1548.568 1566.166
[17] 1647.616 1722.192 1832.600 1934.677
> residuals( cesLandLaborSann )
 [1] -203.905882 -226.541450 -143.693071  -52.341322  -46.021755  -53.995020
 [7]  -33.750051   12.436970  -29.667482   -2.696151   45.169139   73.064989
[13]   46.492851  114.497662   96.120996   59.864632    7.424213   33.407493
[19]   54.820738   57.217157
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
     gamma      delta        rho 
82.6807347  0.1235136 -4.0198807 

$optim$value
[1] 165850.8

$optim$counts
function gradient 
     383       79 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
82.6807347  0.1235136 -4.0198807 

$iter
function gradient 
     383       79 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.959 1189.271 1213.348 1224.162 1224.162 1239.886 1273.299 1276.250
 [9] 1237.429 1281.167 1315.564 1467.907 1528.841 1581.912 1548.986 1566.675
[17] 1648.250 1722.944 1833.512 1935.727

$residuals
 [1] -203.825713 -226.540159 -143.769064  -52.365115  -46.045549  -54.075524
 [7]  -33.941478   12.310821  -29.723012   -2.758120   45.028283   72.876786
[13]   46.193204  114.047823   95.702631   59.355807    6.790271   32.655700
[19]   53.908087   56.167366

$cov.unscaled
          gamma       delta         rho
gamma 578603819 -4350824.46 -13635953.0
delta  -4350824    32716.66    102544.2
rho   -13635953   102544.18    321487.9

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
82.6807  0.1235 -4.0199 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 383 function and 79 gradient calls

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.268e+01  2.190e+06  3.77e-05        1
delta  1.235e-01  1.647e+04  7.50e-06        1
rho   -4.020e+00  5.163e+04 -7.79e-05        1

Residual standard error: 91.06338 

> coef( cesLandLaborBfgs )
     gamma      delta        rho 
82.6807347  0.1235136 -4.0198807 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma 4798094352142 -36079378598 -113076663387
delta  -36079378598    271304132     850351504
rho   -113076663387    850351504    2665950938
> coef( summary( cesLandLaborBfgs ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma 82.6807347 2190455.28  3.774591e-05 0.9999699
delta  0.1235136   16471.31  7.498708e-06 0.9999940
rho   -4.0198807   51632.85 -7.785510e-05 0.9999379
> fitted( cesLandLaborBfgs )
 [1] 1149.959 1189.271 1213.348 1224.162 1224.162 1239.886 1273.299 1276.250
 [9] 1237.429 1281.167 1315.564 1467.907 1528.841 1581.912 1548.986 1566.675
[17] 1648.250 1722.944 1833.512 1935.727
> residuals( cesLandLaborBfgs )
 [1] -203.825713 -226.540159 -143.769064  -52.365115  -46.045549  -54.075524
 [7]  -33.941478   12.310821  -29.723012   -2.758120   45.028283   72.876786
[13]   46.193204  114.047823   95.702631   59.355807    6.790271   32.655700
[19]   53.908087   56.167366
> 
> # using the L-BFGS-B optimization method with constrained delta
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
       gamma        delta          rho 
128.73036599   0.01010398  -4.77103872 

$optim$value
[1] 165861.2

$optim$counts
function gradient 
     136      136 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
       gamma        delta          rho 
128.73036599   0.01010398  -4.77103872 

$iter
function gradient 
     136      136 

$convergence
[1] FALSE

$message
[1] "NEW_X"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.893 1189.201 1213.275 1224.089 1224.089 1239.811 1273.220 1276.172
 [9] 1237.355 1281.090 1315.484 1467.817 1528.745 1581.810 1548.887 1566.573
[17] 1648.141 1722.830 1833.389 1935.596

$residuals
 [1] -203.759948 -226.470166 -143.695910  -52.292488  -45.972921  -54.000709
 [7]  -33.862421   12.388747  -29.648889   -2.681277   45.108832   72.967290
[13]   46.289427  114.149716   95.802059   59.457649    6.898710   32.770057
[19]   54.030829   56.297584

$cov.unscaled
            gamma        delta          rho
gamma 410057373.9 -229498.1533 -7804349.123
delta   -229498.2     128.4516     4368.673
rho    -7804349.1    4368.6728   148615.895

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
    gamma     delta       rho 
128.73037   0.01010  -4.77104 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence NOT achieved after 136 function and 136 gradient calls
Message: NEW_X 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  1.287e+02  1.844e+06  6.98e-05        1
delta  1.010e-02  1.032e+03  9.79e-06        1
rho   -4.771e+00  3.511e+04 -1.36e-04        1

Residual standard error: 91.06624 

> coef( cesLandLaborBfgsCon )
       gamma        delta          rho 
128.73036599   0.01010398  -4.77103872 
> vcov( cesLandLaborBfgsCon )
              gamma       delta          rho
gamma 3400630660232 -1903242098 -64721940390
delta   -1903242098     1065257     36229668
rho    -64721940390    36229668   1232480628
> coef( summary( cesLandLaborBfgsCon ) )
          Estimate  Std. Error       t value  Pr(>|t|)
gamma 128.73036599 1844079.895  6.980737e-05 0.9999443
delta   0.01010398    1032.113  9.789602e-06 0.9999922
rho    -4.77103872   35106.703 -1.359011e-04 0.9998916
> fitted( cesLandLaborBfgsCon )
 [1] 1149.893 1189.201 1213.275 1224.089 1224.089 1239.811 1273.220 1276.172
 [9] 1237.355 1281.090 1315.484 1467.817 1528.745 1581.810 1548.887 1566.573
[17] 1648.141 1722.830 1833.389 1935.596
> residuals( cesLandLaborBfgsCon )
 [1] -203.759948 -226.470166 -143.695910  -52.292488  -45.972921  -54.000709
 [7]  -33.862421   12.388747  -29.648889   -2.681277   45.108832   72.967290
[13]   46.289427  114.149716   95.802059   59.457649    6.898710   32.770057
[19]   54.030829   56.297584
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.015804                                  
2     17 0.051750 -3 -0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$cov.unscaled
              gamma         delta           rho
gamma  5.725091e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.821e-03  -3.217 0.001297 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.820700e-03 -3.2166220 0.0012970936
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$cov.unscaled
              gamma         delta           rho           phi
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
phi    3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho        phi 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  1.028e+00  -0.046    0.964    
phi    1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 

> coef( cesLandLaborKmenta )
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 1.027944e+00 -0.04573784 9.635192e-01
phi    1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = startVal, fn = residFun, data = estData, jac = jac,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 3.01196852638219, 4.45439145036563, -0.45356532196544 
residual sum-of-squares: 123031
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 3.0119685  4.4543915 -0.4535653 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1101.147 1147.282 1179.190 1183.690 1183.690 1205.313 1251.263 1245.841
 [9] 1200.058 1242.986 1285.549 1438.307 1511.855 1585.436 1548.887 1580.862
[17] 1681.601 1776.690 1918.425 2050.414

$residuals
 [1] -155.014260 -184.551961 -109.611190  -11.893259   -5.573692  -19.503414
 [7]  -11.905577   42.719740    7.648671   35.422410   75.043855  102.476762
[13]   63.180162  110.523291   95.802394   45.168815  -26.560976  -21.090226
[19]  -31.005164  -58.519879

$cov.unscaled
            gamma       delta          rho
gamma  14.6608096 -13.5016114  0.293775857
delta -13.5016114  12.4343392 -0.270575191
rho     0.2937759  -0.2705752  0.005889537

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 3.0120  4.4544 -0.4536 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   3.0120   300.3110   0.010    0.992
delta   4.4544   276.5691   0.016    0.987
rho    -0.4536     6.0191  -0.075    0.940

Residual standard error: 78.43183 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 3.0119685  4.4543915 -0.4535653 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  90186.722 -83055.855  1807.17724
delta -83055.855  76490.475 -1664.45715
rho     1807.177  -1664.457    36.22979
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma  3.0119685 300.311041  0.01002950 0.9919978
delta  4.4543915 276.569113  0.01610589 0.9871499
rho   -0.4535653   6.019119 -0.07535411 0.9399330
> fitted( cesLandLaborLm )
 [1] 1101.147 1147.282 1179.190 1183.690 1183.690 1205.313 1251.263 1245.841
 [9] 1200.058 1242.986 1285.549 1438.307 1511.855 1585.436 1548.887 1580.862
[17] 1681.601 1776.690 1918.425 2050.414
> residuals( cesLandLaborLm )
 [1] -155.014260 -184.551961 -109.611190  -11.893259   -5.573692  -19.503414
 [7]  -11.905577   42.719740    7.648671   35.422410   75.043855  102.476762
[13]   63.180162  110.523291   95.802394   45.168815  -26.560976  -21.090226
[19]  -31.005164  -58.519879
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 165896.7

$nlm$estimate
[1] 128.73970376   0.01440892  -4.40066506

$nlm$gradient
[1]    -238.3039 -487876.4457    6883.3414

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1] 128.73970376   0.01440892  -4.40066506

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$fitted.values
 [1] 1149.557 1188.848 1212.911 1223.725 1223.725 1239.439 1272.832 1275.787
 [9] 1236.985 1280.707 1315.086 1467.371 1528.276 1581.317 1548.405 1566.082
[17] 1647.619 1722.280 1832.800 1934.970

$residuals
 [1] -203.423794 -226.117789 -143.332022  -51.928339  -45.608772  -53.628703
 [7]  -33.474418   12.774066  -29.279012   -2.298075   45.506617   73.412835
[13]   46.759024  114.642827   96.283788   59.949161    7.420564   33.319680
[19]   54.620680   56.923909

$cov.unscaled
             [,1]         [,2]         [,3]
[1,] 107847445.67 -79527.56983 -1902371.631
[2,]    -79527.57     58.64789     1403.085
[3,]  -1902371.63   1403.08536    33575.653

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1] 128.73970   0.01441  -4.40067

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error   t value Pr(>|t|)
[1,]  1.287e+02  9.458e+05  1.36e-04        1
[2,]  1.441e-02  6.975e+02  2.07e-05        1
[3,] -4.401e+00  1.669e+04 -2.64e-04        1

Residual standard error: 91.076 

> coef( cesLandLaborNewton )
[1] 128.73970376   0.01440892  -4.40066506
> vcov( cesLandLaborNewton )
             [,1]         [,2]         [,3]
[1,] 894576954479 -659668207.9 -15779862094
[2,]   -659668208     486474.7     11638364
[3,] -15779862094   11638364.0    278504562
> coef( summary( cesLandLaborNewton ) )
         Estimate  Std. Error       t value  Pr(>|t|)
[1,] 128.73970376 945820.7835  1.361143e-04 0.9998914
[2,]   0.01440892    697.4774  2.065862e-05 0.9999835
[3,]  -4.40066506  16688.4559 -2.636952e-04 0.9997896
> fitted( cesLandLaborNewton )
 [1] 1149.557 1188.848 1212.911 1223.725 1223.725 1239.439 1272.832 1275.787
 [9] 1236.985 1280.707 1315.086 1467.371 1528.276 1581.317 1548.405 1566.082
[17] 1647.619 1722.280 1832.800 1934.970
> residuals( cesLandLaborNewton )
 [1] -203.423794 -226.117789 -143.332022  -51.928339  -45.608772  -53.628703
 [7]  -33.474418   12.774066  -29.279012   -2.298075   45.506617   73.412835
[13]   46.759024  114.642827   96.283788   59.949161    7.420564   33.319680
[19]   54.620680   56.923909
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
75.7725037  0.0796474 -5.8431806 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 


$coefficients
     gamma      delta        rho 
75.7725037  0.0796474 -5.8431806 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$fitted.values
 [1] 1149.938 1189.252 1213.332 1224.143 1224.143 1239.869 1273.286 1276.235
 [9] 1237.412 1281.149 1315.549 1467.891 1528.828 1581.902 1548.976 1566.668
[17] 1648.244 1722.941 1833.512 1935.729

$residuals
 [1] -203.805024 -226.521633 -143.752819  -52.346916  -46.027349  -54.059020
 [7]  -33.928158   12.326349  -29.705697   -2.740345   45.043928   72.893212
[13]   46.206932  114.057635   95.712920   59.363601    6.795566   32.658707
[19]   53.908234   56.165297

$cov.unscaled
             gamma       delta          rho
gamma 364447392148 -2666473437 -12411291091
delta  -2666473437    19511598     90876257
rho   -12411291091    90876257    424675583

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
   gamma    delta      rho 
75.77250  0.07965 -5.84318 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  7.577e+01  5.497e+07  1.38e-06        1
delta  7.965e-02  4.022e+05  1.98e-07        1
rho   -5.843e+00  1.876e+06 -3.11e-06        1

Residual standard error: 91.05836 

> coef( cesLandLaborPort )
     gamma      delta        rho 
75.7725037  0.0796474 -5.8431806 
> vcov( cesLandLaborPort )
              gamma         delta           rho
gamma  3.021861e+15 -2.210940e+13 -1.029098e+14
delta -2.210940e+13  1.617829e+11  7.535119e+11
rho   -1.029098e+14  7.535119e+11  3.521251e+12
> coef( summary( cesLandLaborPort ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma 75.7725037 54971459.2  1.378397e-06 0.9999989
delta  0.0796474   402222.4  1.980183e-07 0.9999998
rho   -5.8431806  1876499.6 -3.113872e-06 0.9999975
> fitted( cesLandLaborPort )
 [1] 1149.938 1189.252 1213.332 1224.143 1224.143 1239.869 1273.286 1276.235
 [9] 1237.412 1281.149 1315.549 1467.891 1528.828 1581.902 1548.976 1566.668
[17] 1648.244 1722.941 1833.512 1935.729
> residuals( cesLandLaborPort )
 [1] -203.805024 -226.521633 -143.752819  -52.346916  -46.027349  -54.059020
 [7]  -33.928158   12.326349  -29.705697   -2.740345   45.043928   72.893212
[13]   46.206932  114.057635   95.712920   59.363601    6.795566   32.658707
[19]   53.908234   56.165297
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print.default( cesLandInt )
$optim
$optim$par
    gamma     delta       rho 
31.927896  0.200181  3.729535 

$optim$value
[1] 165838.2

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
31.927896  0.200181  3.729535 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.985 1189.302 1213.383 1224.196 1224.196 1239.922 1273.341 1276.288
 [9] 1237.465 1281.203 1315.605 1467.953 1528.893 1581.968 1549.039 1566.729
[17] 1648.304 1722.999 1833.572 1935.792

$residuals
 [1] -203.851924 -226.571835 -143.803518  -52.399855  -46.080041  -54.112449
 [7]  -33.983010   12.272584  -29.758353   -2.794204   44.987834   72.830632
[13]   46.141353  113.991174   95.650392   59.302253    6.736222   32.600470
[19]   53.848493   56.102495

$cov.unscaled
          gamma      delta         rho
gamma 527536619 14942153.1 -30191151.7
delta  14942153   423229.0   -855164.7
rho   -30191152  -855164.7   1728069.3

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Coefficients:
  gamma   delta     rho 
31.9279  0.2002  3.7295 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.193e+01  2.091e+06 1.53e-05        1
delta 2.002e-01  5.924e+04 3.38e-06        1
rho   3.729e+00  1.197e+05 3.12e-05        1

Residual standard error: 91.05994 

> coef( summary( cesLandInt ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 31.927896  2091479.7 1.526570e-05 0.9999878
delta  0.200181    59240.0 3.379153e-06 0.9999973
rho    3.729535   119703.8 3.115637e-05 0.9999751
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho        phi 
 4.9387196  0.8523468 -0.2060560  1.4188175 

$optim$value
[1] 58690.44

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho        phi 
 4.9387196  0.8523468 -0.2060560  1.4188175 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1041.539 1113.040 1137.844 1179.018 1174.900 1197.055 1242.268 1228.189
 [9] 1183.354 1233.602 1292.108 1509.132 1605.059 1661.681 1579.809 1585.024
[17] 1658.627 1740.333 1887.154 2036.468

$residuals
 [1]  -95.4056652 -150.3094210  -68.2650796   -7.2212652    3.2157236
 [6]  -11.2450425   -2.9102453   60.3715694   24.3519332   44.8063178
[11]   68.4847067   31.6521730  -30.0243175   34.2788031   64.8799722
[16]   41.0072228   -3.5870902   15.2668661    0.2659028  -44.5742707

$cov.unscaled
              gamma         delta           rho           phi
gamma  0.7391467961  5.793149e-02 -1.473637e-01 -3.237879e-04
delta  0.0579314944  4.556062e-03 -1.159940e-02 -1.831628e-05
rho   -0.1473636895 -1.159940e-02  2.953898e-02  4.256295e-05
phi   -0.0003237879 -1.831628e-05  4.256295e-05  3.463553e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
  gamma   delta     rho     phi 
 4.9387  0.8523 -0.2061  1.4188 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   4.9387    46.5730   0.106    0.916    
delta   0.8523     3.6565   0.233    0.816    
rho    -0.2061     9.3104  -0.022    0.982    
phi     1.4188     0.1008  14.073   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 54.17123 

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  4.9387196 46.5729792  0.10604259 9.155486e-01
delta  0.8523468  3.6564823  0.23310568 8.156793e-01
rho   -0.2060560  9.3103584 -0.02213191 9.823427e-01
phi    1.4188175  0.1008160 14.07333302 5.539577e-45
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
 5.7033878  0.4319779 -0.3113746 

$optim$value
[1] 567138.4

$optim$counts
function gradient 
     630      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
 5.7033878  0.4319779 -0.3113746 

$iter
function gradient 
     630      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1150.496 1239.662 1247.151 1323.041 1312.984 1331.508 1365.428 1325.367
 [9] 1303.864 1327.399 1389.368 1549.567 1627.763 1634.363 1529.261 1503.612
[17] 1491.248 1508.283 1579.270 1664.241

$residuals
 [1] -204.362938 -276.931488 -177.572047 -151.244812 -134.867562 -145.697621
 [7] -126.070585  -36.806500  -96.158047  -48.990605  -28.775526   -8.783166
[13]  -52.728651   61.596861  115.428058  122.419588  163.791474  247.317177
[19]  308.150727  327.652830

$cov.unscaled
           gamma       delta         rho
gamma  2.7985002  0.34079083 -0.44549230
delta  0.3407908  0.04150410 -0.05426096
rho   -0.4454923 -0.05426096  0.07094667

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
 5.7034  0.4320 -0.3114 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 630 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   5.7034   281.7363   0.020    0.984
delta   0.4320    34.3104   0.013    0.990
rho    -0.3114    44.8586  -0.007    0.994

Residual standard error: 168.4148 

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma  5.7033878  281.73631  0.02024371 0.9838490
delta  0.4319779   34.31039  0.01259029 0.9899547
rho   -0.3113746   44.85865 -0.00694124 0.9944617
> 
> # using the SANN optimization method
> set.seed( 234 )
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
5.152345927 0.002501309 2.600489328 

$optim$value
[1] 190727.1

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
5.152345927 0.002501309 2.600489328 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1161.564 1206.938 1229.481 1246.920 1245.997 1262.158 1295.993 1294.691
 [9] 1257.247 1299.348 1336.952 1491.704 1554.984 1603.873 1562.046 1573.958
[17] 1641.108 1705.623 1809.555 1909.756

$residuals
 [1] -215.430924 -244.207310 -159.901907  -75.123890  -67.881313  -76.347797
 [7]  -56.634849   -6.129811  -49.540468  -20.939898   23.640604   49.080011
[13]   20.050291   92.086422   82.643407   52.072873   13.931955   49.976526
[19]   77.864819   82.138057

$cov.unscaled
             gamma         delta          rho
gamma  0.637798864  2.984686e-03 -0.385515471
delta  0.002984686  1.397450e-05 -0.001805408
rho   -0.385515471 -1.805408e-03  0.233267999

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Coefficients:
   gamma    delta      rho 
5.152346 0.002501 2.600489 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  5.152346  77.988950   0.066    0.947
delta  0.002501   0.365056   0.007    0.995
rho    2.600489  47.164885   0.055    0.956

Residual standard error: 97.65426 

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error    t value Pr(>|t|)
gamma 5.152345927 77.9889499 0.06606508 0.947326
delta 0.002501309  0.3650559 0.00685185 0.994533
rho   2.600489328 47.1648855 0.05513613 0.956030
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
35.3054464  0.2545718  4.1372571 

$optim$value
[1] 165833.6

$optim$counts
function gradient 
     405       91 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
35.3054464  0.2545718  4.1372571 

$iter
function gradient 
     405       91 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.943 1189.257 1213.337 1224.149 1224.149 1239.875 1273.292 1276.240
 [9] 1237.417 1281.154 1315.555 1467.897 1528.835 1581.909 1548.982 1566.673
[17] 1648.249 1722.946 1833.516 1935.733

$residuals
 [1] -203.809638 -226.526766 -143.757974  -52.352453  -46.032839  -54.064607
 [7]  -33.933918   12.320829  -29.711136   -2.745848   45.038104   72.886707
[13]   46.200056  114.050767   95.706710   59.357691    6.790420   32.654128
[19]   53.903833   56.160700

$cov.unscaled
            gamma     delta        rho
gamma 11660875127 406211792 -693061415
delta   406211792  14150602  -24143496
rho    -693061415 -24143496   41196605

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
35.3054  0.2546  4.1373 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 405 function and 91 gradient calls

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.531e+01  9.833e+06 3.59e-06        1
delta 2.546e-01  3.425e+05 7.43e-07        1
rho   4.137e+00  5.845e+05 7.08e-06        1

Residual standard error: 91.05865 

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 35.3054464  9833017.3 3.590500e-06 0.9999971
delta  0.2545718   342537.9 7.431930e-07 0.9999994
rho    4.1372571   584456.2 7.078815e-06 0.9999944
> 
> # using the L-BFGS-B optimization method with constrained delta
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
       gamma        delta          rho 
8.0092185237 0.0002043299 4.6802679050 

$optim$value
[1] 166228.6

$optim$counts
function gradient 
     147      147 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
       gamma        delta          rho 
8.0092185237 0.0002043299 4.6802679050 

$iter
function gradient 
     147      147 

$convergence
[1] FALSE

$message
[1] "NEW_X"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1150.767 1190.207 1214.275 1225.197 1225.183 1240.925 1274.367 1277.251
 [9] 1238.429 1282.164 1316.635 1469.102 1530.110 1583.147 1550.044 1567.629
[17] 1648.913 1723.376 1833.814 1936.027

$residuals
 [1] -204.633770 -227.476800 -144.695922  -53.400501  -47.067342  -55.114682
 [7]  -35.009585   11.309821  -30.722449   -3.755369   43.957998   71.682593
[13]   44.925129  112.812546   94.645136   58.402600    6.127105   32.224083
[19]   53.606253   55.866840

$cov.unscaled
             gamma         delta          rho
gamma 2076.7063772  0.6021682777 -955.2260379
delta    0.6021683  0.0001746351   -0.2770573
rho   -955.2260379 -0.2770572637  439.5846910

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
    gamma     delta       rho 
8.0092185 0.0002043 4.6802679 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence NOT achieved after 147 function and 147 gradient calls
Message: NEW_X 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 8.009e+00  4.155e+03    0.002    0.998
delta 2.043e-04  1.205e+00 0.000170    1.000
rho   4.680e+00  1.911e+03    0.002    0.998

Residual standard error: 91.16704 

> coef( summary( cesLandIntBfgsCon ) )
          Estimate  Std. Error      t value  Pr(>|t|)
gamma 8.0092185237 4154.563542 0.0019278123 0.9984618
delta 0.0002043299    1.204768 0.0001696010 0.9998647
rho   4.6802679050 1911.433253 0.0024485647 0.9980463
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.017794                                  
2     17 0.107030 -3 -0.089235 23.402 1.020e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
             gamma        delta          rho
gamma 3.667607e+18 3.152675e+10 1.111310e+08
delta 3.152675e+10 2.710399e+02 9.555328e-01
rho   1.111310e+08 9.555328e-01 3.369099e-03

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.804e-02   0.543    0.587

Residual standard error: 1434.873 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.804394e-02 0.54319046 0.5869987
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho          phi 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho          phi
gamma  0.006287789  0.4447299  0.04356957 -0.002344101
delta  0.444729932 31.5957949  3.02153597 -0.124590619
rho    0.043569573  3.0215360  0.32935388 -0.034664500
phi   -0.002344101 -0.1245906 -0.03466450  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$cov.unscaled
              gamma         delta           rho           phi
gamma  2.231400e-07  2.790747e-05  3.716972e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
phi   -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho       phi 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.573894  -0.397    0.692    
phi    1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.57389361 -0.39669863 6.915897e-01
phi    1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 31.4864544560051, 0.0810003279388295, 5.6456064461588 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
      gamma       delta         rho 
31.48645446  0.08100033  5.64560645 

$iter
[1] 73

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1149.948 1189.262 1213.342 1224.154 1224.154 1239.880 1273.297 1276.245
 [9] 1237.422 1281.160 1315.560 1467.903 1528.841 1581.915 1548.990 1566.681
[17] 1648.258 1722.956 1833.528 1935.745

$residuals
 [1] -203.814799 -226.531781 -143.763195  -52.357377  -46.037809  -54.069633
 [7]  -33.939089   12.315419  -29.716277   -2.751297   45.032654   72.880623
[13]   46.193791  114.044011   95.699601   59.350124    6.781408   32.643925
[19]   53.892508   56.148685

$cov.unscaled
             gamma      delta          rho
gamma 409067754798 7049691725 -30742563413
delta   7049691725  121495849   -529931174
rho   -30742563413 -529931174   2313924046

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
31.486  0.081  5.646 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence achieved after 73 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.149e+01  5.824e+07 5.41e-07        1
delta 8.100e-02  1.004e+06 8.07e-08        1
rho   5.646e+00  4.380e+06 1.29e-06        1

Residual standard error: 91.05833 

> coef( summary( cesLandIntLm ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 31.48645446   58239458 5.406378e-07 0.9999996
delta  0.08100033    1003692 8.070238e-08 0.9999999
rho    5.64560645    4380203 1.288891e-06 0.9999990
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 168164

$nlm$estimate
[1] 7.1237841214 0.0008842653 3.6319685714

$nlm$gradient
[1]     10313.76 -25252283.73    -45578.27

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1] 7.1237841214 0.0008842653 3.6319685714

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$fitted.values
 [1] 1151.555 1191.564 1215.482 1227.008 1226.912 1242.689 1276.163 1278.659
 [9] 1239.973 1283.546 1318.305 1470.959 1532.167 1584.807 1550.849 1567.835
[17] 1647.512 1720.758 1830.356 1932.293

$residuals
 [1] -205.422287 -228.833719 -145.902696  -55.211228  -48.796190  -56.879465
 [7]  -36.805639    9.902335  -32.266310   -5.137652   42.287804   69.825247
[13]   42.867875  111.152746   93.840373   58.195705    7.528238   34.842266
[19]   57.063774   59.600928

$cov.unscaled
             [,1]          [,2]         [,3]
[1,]  63.85197165  7.681269e-02 -28.11117023
[2,]   0.07681269  9.242557e-05  -0.03382981
[3,] -28.11117023 -3.382981e-02  12.38353562

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1] 7.1237841 0.0008843 3.6319686

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
[1,] 7.124e+00  7.327e+02   0.010    0.992
[2,] 8.843e-04  8.816e-01   0.001    0.999
[3,] 3.632e+00  3.227e+02   0.011    0.991

Residual standard error: 91.69624 

> coef( summary( cesLandIntNewton ) )
         Estimate  Std. Error     t value  Pr(>|t|)
[1,] 7.1237841214 732.7210493 0.009722369 0.9922428
[2,] 0.0008842653   0.8815513 0.001003079 0.9991997
[3,] 3.6319685714 322.6813318 0.011255589 0.9910195
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
31.7091768  0.1754718  3.9720510 

$nlminb$objective
[1] 165835.6

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 146

$nlminb$evaluations
function gradient 
     200      146 


$coefficients
     gamma      delta        rho 
31.7091768  0.1754718  3.9720510 

$iter
[1] 146

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$fitted.values
 [1] 1149.944 1189.259 1213.339 1224.152 1224.151 1239.877 1273.294 1276.242
 [9] 1237.420 1281.157 1315.557 1467.900 1528.838 1581.911 1548.984 1566.675
[17] 1648.249 1722.944 1833.514 1935.730

$residuals
 [1] -203.811213 -226.528968 -143.760033  -52.355146  -46.035448  -54.067264
 [7]  -33.936630   12.318518  -29.713563   -2.748136   45.035493   72.883801
[13]   46.196902  114.047991   95.704865   59.356487    6.790973   32.656047
[19]   53.906669   56.163794

$cov.unscaled
           gamma    delta       rho
gamma 1592989123 42287346 -94599510
delta   42287346  1122560  -2511284
rho    -94599510 -2511284   5618480

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
31.7092  0.1755  3.9721 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 146 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.171e+01  3.634e+06 8.72e-06        1
delta 1.755e-01  9.648e+04 1.82e-06        1
rho   3.972e+00  2.158e+05 1.84e-05        1

Residual standard error: 91.05921 

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 31.7091768  3634379.7 8.724784e-06 0.9999930
delta  0.1754718    96478.1 1.818773e-06 0.9999985
rho    3.9720510   215840.7 1.840270e-05 0.9999853
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.899 1189.209 1213.286 1224.099 1224.099 1239.822 1273.235 1276.185
 [9] 1237.366 1281.101 1315.497 1467.833 1528.765 1581.833 1548.909 1566.598
[17] 1648.169 1722.860 1833.423 1935.634
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1072.014 1112.678 1126.981 1163.866 1163.866 1170.997 1187.158 1217.692
 [9] 1175.705 1250.419 1282.257 1550.361 1620.747 1652.201 1602.043 1588.884
[17] 1682.191 1762.384 1884.470 2000.898
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

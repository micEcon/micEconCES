
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
Loading required package: minpack.lm
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$cov.unscaled
           gamma       delta         rho
gamma 51681510.2 -180252.085 -949945.025
delta  -180252.1     628.694    3313.579
rho    -949945.0    3313.579   17469.029

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  1.003e+02  6.548e+05  1.53e-04        1
delta  6.909e-02  2.284e+03  3.03e-05        1
rho   -3.746e+00  1.204e+04 -3.11e-04        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428734611992 -1495318291 -7880464593
delta  -1495318291     5215461    27488476
rho    -7880464593    27488476   144917925
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654778.292  1.531055e-04 0.9998778
delta   0.06909165   2283.738  3.025375e-05 0.9999759
rho    -3.74630543  12038.186 -3.112018e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180

$cov.unscaled
             gamma         delta           rho           phi
gamma 343.31007875 -1.045707e-01 -2.2492500344  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
phi     0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
    gamma     delta       rho       phi 
233.84853   0.01535  -1.86100   1.43203 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
phi      1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

> coef( cesLandLaborVrs )
       gamma        delta          rho          phi 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho          phi
gamma 1438367.1569 -438.12004126 -9423.688897 188.41146053
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
phi       188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194557  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
phi     1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.733127 -166.510342  -81.412584   -1.601221    4.718346   -0.978531
 [7]   23.275689   58.183365   20.628176   31.455745   77.266741   44.553521
[13]    7.017105   75.491644   68.089122   40.293243  -29.482085  -18.966718
[19]  -24.089171  -49.944180
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$cov.unscaled
            gamma        delta          rho
gamma 1034.396377 -2.569522630 -3.466063908
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.70 -78466.6193 -105844.6864
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> set.seed( 123 )
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$cov.unscaled
             gamma         delta          rho
gamma 11108.427441 -2.1880051775 -92.89635357
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896354  0.0183133366   0.77803365

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.899718 

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593373.04 -19419.743417 -824505.9789
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540885    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419572  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099185 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973091
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939

$cov.unscaled
           gamma       delta         rho
gamma 1716793187 -7752928.47 -39543448.1
delta   -7752928    35012.42    178591.8
rho    -39543448   178591.79    911191.5

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47345  0.07176 -4.39599 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  8.947e+01  3.773e+06  2.37e-05        1
delta  7.176e-02  1.704e+04  4.21e-06        1
rho   -4.396e+00  8.692e+04 -5.06e-05        1

Residual standard error: 91.06148 
Multiple R-squared: 0.906309 

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47345330  0.07175508 -4.39599297 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.423598e+13 -64288782785 -327901922293
delta -6.428878e+10    290329782    1480917693
rho   -3.279019e+11   1480917693    7555775973
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47345330 3773059.93  2.371376e-05 0.9999811
delta  0.07175508   17039.07  4.211209e-06 0.9999966
rho   -4.39599297   86923.97 -5.057285e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973091
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( 0, 0, -1 ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      60       60 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 

$iter
function gradient 
      60       60 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
              gamma         delta           rho
gamma  1.363269e+00 -2.927712e-02  5.039476e+10
delta -2.927712e-02  6.287732e-04 -1.077020e+09
rho    5.039476e+10 -1.077020e+09  7.098080e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 60 function and 60 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  4.914e+01  1.063e+02     0.462    0.644
delta  1.000e+00  2.283e+00     0.438    0.661
rho   -1.000e+00  2.426e+13 -4.12e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesLandLaborBfgsCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999998 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.130370e+04 -2.427547e+02  4.178541e+14
delta -2.427547e+02  5.213547e+00 -8.930238e+12
rho    4.178541e+14 -8.930238e+12  5.885457e+26
> coef( summary( cesLandLaborBfgsCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.063189e+02  4.622223e-01 0.6439219
delta  1.0000000 2.283319e+00  4.379589e-01 0.6614161
rho   -0.9999998 2.425996e+13 -4.122018e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.015804                                  
2     17 0.051750 -3 -0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$cov.unscaled
              gamma         delta           rho
gamma  5.725091e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.821e-03  -3.217 0.001297 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10  1.059153e-13
delta -1.366604e-10  3.865291e+01 -2.996619e-02
rho    1.059153e-13 -2.996619e-02  2.323915e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.820700e-03 -3.2166220 0.0012970936
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$cov.unscaled
              gamma         delta           rho           phi
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
phi    3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho        phi 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  1.028e+00  -0.046    0.964    
phi    1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 
Multiple R-squared: -18857212 

> coef( cesLandLaborKmenta )
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 1.027944e+00 -0.04573784 9.635192e-01
phi    1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = startVal, fn = residFun, data = estData, jac = jac,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.61969670133496, 4.85556569552491, -0.461292104488485 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$cov.unscaled
            gamma       delta          rho
gamma  13.9283785 -15.9958961  0.286083734
delta -15.9958961  18.3706647 -0.328580669
rho     0.2860837  -0.3285807  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.238 -98362.944  1759.20361
delta -98362.944 112966.016 -2020.52837
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658911  0.008951365 0.9928579
delta  4.8555657 336.104175  0.014446609 0.9884737
rho   -0.4612921   6.012499 -0.076722194 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168298.4

$nlm$estimate
[1]  2.743530e+02  8.909107e-04 -4.078588e+00

$nlm$gradient
[1]      -139.796 -13241371.147     23126.403

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1]  2.743530e+02  8.909107e-04 -4.078588e+00

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$fitted.values
 [1] 1150.916 1189.880 1213.617 1224.673 1224.673 1240.147 1273.088 1276.326
 [9] 1237.803 1281.533 1315.595 1467.805 1528.288 1580.758 1547.947 1565.280
[17] 1646.399 1720.678 1830.702 1932.469

$residuals
 [1] -204.783315 -227.149238 -144.037955  -52.876573  -46.557006  -54.337474
 [7]  -33.729742   12.234620  -30.096544   -3.124567   44.997666   72.979248
[13]   46.747075  115.201068   96.741946   60.751335    8.640617   34.921515
[19]   56.718628   59.424534

$cov.unscaled
              [,1]          [,2]          [,3]
[1,] 127464.641054 -4.0595028906 -1.547007e+03
[2,]     -4.059503  0.0001293511  4.931104e-02
[3,]  -1547.006879  0.0493110359  1.880309e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1]  2.744e+02  8.909e-04 -4.079e+00

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
[1,]  2.744e+02  3.275e+04   0.008    0.993
[2,]  8.909e-04  1.043e+00   0.001    0.999
[3,] -4.079e+00  3.978e+02  -0.010    0.992

Residual standard error: 91.73288 
Multiple R-squared: 0.9049224 

> coef( cesLandLaborNewton )
[1]  2.743530e+02  8.909107e-04 -4.078588e+00
> vcov( cesLandLaborNewton )
             [,1]          [,2]          [,3]
[1,] 1072604912.1 -34160.396995 -1.301794e+07
[2,]     -34160.4      1.088480  4.149485e+02
[3,]  -13017941.0    414.948483  1.582265e+05
> coef( summary( cesLandLaborNewton ) )
          Estimate   Std. Error       t value  Pr(>|t|)
[1,]  2.743530e+02 32750.647507  0.0083770245 0.9933162
[2,]  8.909107e-04     1.043302  0.0008539334 0.9993187
[3,] -4.078588e+00   397.776961 -0.0102534536 0.9918191
> fitted( cesLandLaborNewton )
 [1] 1150.916 1189.880 1213.617 1224.673 1224.673 1240.147 1273.088 1276.326
 [9] 1237.803 1281.533 1315.595 1467.805 1528.288 1580.758 1547.947 1565.280
[17] 1646.399 1720.678 1830.702 1932.469
> residuals( cesLandLaborNewton )
 [1] -204.783315 -227.149238 -144.037955  -52.876573  -46.557006  -54.337474
 [7]  -33.729742   12.234620  -30.096544   -3.124567   44.997666   72.979248
[13]   46.747075  115.201068   96.741946   60.751335    8.640617   34.921515
[19]   56.718628   59.424534
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 

$nlminb$objective
[1] 165832.6

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      143 


$coefficients
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.876 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.911 1548.985 1566.677
[17] 1648.254 1722.951 1833.523 1935.740

$residuals
 [1] -203.811952 -226.528786 -143.760107  -52.354275  -46.034708  -54.066467
 [7]  -33.935792   12.318690  -29.713132   -2.748042   45.036034   72.884407
[13]   46.197774  114.048173   95.703653   59.354236    6.785721   32.648423
[19]   53.897297   56.153754

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
   gamma    delta      rho 
79.98449  0.05813 -5.84102 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.98449         NA      NA       NA
delta  0.05813         NA      NA       NA
rho   -5.84102         NA      NA       NA

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

> coef( cesLandLaborPort )
      gamma       delta         rho 
79.98449297  0.05812501 -5.84102067 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 79.98449297         NA      NA       NA
delta  0.05812501         NA      NA       NA
rho   -5.84102067         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.876 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.911 1548.985 1566.677
[17] 1648.254 1722.951 1833.523 1935.740
> residuals( cesLandLaborPort )
 [1] -203.811952 -226.528786 -143.760107  -52.354275  -46.034708  -54.066467
 [7]  -33.935792   12.318690  -29.713132   -2.748042   45.036034   72.884407
[13]   46.197774  114.048173   95.703653   59.354236    6.785721   32.648423
[19]   53.897297   56.153754
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$cov.unscaled
          gamma    delta       rho
gamma 815381640 23301430 -46979498
delta  23301430   665895  -1342577
rho   -46979498 -1342577   2707133

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.221e+01  2.600e+06 1.24e-05        1
delta 2.008e-01  7.431e+04 2.70e-06        1
rho   3.800e+00  1.498e+05 2.54e-05        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2600197.34 1.238800e-05 0.9999901
delta  0.2007986   74306.83 2.702290e-06 0.9999978
rho    3.8002155  149823.74 2.536458e-05 0.9999798
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho        phi 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho        phi 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854483   10.575677   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$cov.unscaled
              gamma         delta           rho           phi
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
phi   -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
  gamma   delta     rho     phi 
1.00222 0.02173 1.68396 1.31339 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
phi    1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.99837 
Multiple R-squared: 0.959327 

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
phi   1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> set.seed( 234 )
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$cov.unscaled
           gamma      delta         rho
gamma 5004.97608 41.3989510 -650.115474
delta   41.39895  0.3424517   -5.378117
rho   -650.11547 -5.3781168   84.469555

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.315e+01  6.459e+03    0.002    0.998
delta 2.101e-02  5.342e+01 0.000393    1.000
rho   2.925e+00  8.390e+02    0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 13.14842134 6458.52724 0.002035823 0.9983756
delta  0.02100585   53.42348 0.000393195 0.9996863
rho    2.92470954  839.03986 0.003485781 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
34.7911440  0.2558348  3.9471595 

$optim$value
[1] 165834.5

$optim$counts
function gradient 
     352       82 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.7911440  0.2558348  3.9471595 

$iter
function gradient 
     352       82 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.939 1189.254 1213.334 1224.146 1224.146 1239.871 1273.288 1276.237
 [9] 1237.414 1281.151 1315.551 1467.893 1528.831 1581.904 1548.978 1566.668
[17] 1648.243 1722.939 1833.508 1935.725

$residuals
 [1] -203.806209 -226.523494 -143.754546  -52.349291  -46.029636  -54.061369
 [7]  -33.930585   12.324366  -29.707796   -2.742282   45.041639   72.890655
[13]   46.204107  114.055193   95.711461   59.362810    6.796659   32.661273
[19]   53.911803   56.169161

$cov.unscaled
           gamma     delta        rho
gamma 4046787004 138220035 -234970455
delta  138220035   4720986   -8025664
rho   -234970455  -8025664   13644678

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
34.7911  0.2558  3.9472 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
Convergence achieved after 352 function and 82 gradient calls

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.479e+01  5.793e+06 6.01e-06        1
delta 2.558e-01  1.979e+05 1.29e-06        1
rho   3.947e+00  3.364e+05 1.17e-05        1

Residual standard error: 91.05892 
Multiple R-squared: 0.9063144 

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.7911440  5792654.9 6.006079e-06 0.9999952
delta  0.2558348   197851.3 1.293066e-06 0.9999990
rho    3.9471595   336359.8 1.173493e-05 0.9999906
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( 0, 0, -1 ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      34       34 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      34       34 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
             gamma        delta          rho
gamma 4.991855e-01 7.597528e-03 7.332675e+09
delta 7.597528e-03 1.156554e-04 1.294089e+08
rho   7.332675e+09 1.294089e+08 3.637099e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Coefficients:
 gamma  delta    rho 
49.143  1.000  0.651 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(0, 0, -1), upper = c(Inf, 
        1, Inf))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
Convergence achieved after 34 function and 34 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.914e+01  6.434e+01    0.764    0.445
delta 1.000e+00  9.793e-01    1.021    0.307
rho   6.511e-01  1.737e+13 3.75e-14    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.433549e+01 7.638544e-01 0.4449540
delta  1.0000000 9.792705e-01 1.021168e+00 0.3071747
rho    0.6510633 1.736590e+13 3.749091e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$testCrs
Linear hypothesis test

Hypothesis:
a_1 + a_2 = 1
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     14 0.017794                                  
2     17 0.107030 -3 -0.089235 23.402 1.020e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
             gamma        delta          rho
gamma 3.667607e+18 3.152675e+10 1.111310e+08
delta 3.152675e+10 2.710399e+02 9.555328e-01
rho   1.111310e+08 9.555328e-01 3.369099e-03

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.804e-02   0.543    0.587

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.804394e-02 0.54319046 0.5869987
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho          phi 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho          phi
gamma  0.006287789  0.4447299  0.04356957 -0.002344101
delta  0.444729932 31.5957949  3.02153597 -0.124590619
rho    0.043569573  3.0215360  0.32935388 -0.034664500
phi   -0.002344101 -0.1245906 -0.03466450  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$cov.unscaled
              gamma         delta           rho           phi
gamma  2.231400e-07  2.790747e-05  3.716972e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
phi   -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho       phi 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.573894  -0.397    0.692    
phi    1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 
Multiple R-squared: -964.0144 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.57389361 -0.39669863 6.915897e-01
phi    1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347898132, 0.851862754188495, 4.36180424047568 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$cov.unscaled
             gamma       delta          rho
gamma 362120013302 30887171595 -79280788128
delta  30887171595  2634538173  -6762430246
rho   -79280788128 -6762430246  17361936920

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 4.737e+01  5.480e+07 8.64e-07        1
delta 8.519e-01  4.674e+06 1.82e-07        1
rho   4.362e+00  1.200e+07 3.64e-07        1

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 47.3694348   54795634 8.644746e-07 0.9999993
delta  0.8518628    4673820 1.822627e-07 0.9999999
rho    4.3618042   11998274 3.635360e-07 0.9999997
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166082.8

$nlm$estimate
[1] 13.88019000  0.01195882  3.49913110

$nlm$gradient
[1]    1666.269 -572878.026   -9095.965

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
[1] 13.88019000  0.01195882  3.49913110

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$fitted.values
 [1] 1150.331 1189.731 1213.797 1224.691 1224.680 1240.414 1273.844 1276.742
 [9] 1237.927 1281.654 1316.101 1468.506 1529.485 1582.519 1549.472 1567.087
[17] 1648.467 1723.016 1833.500 1935.704

$residuals
 [1] -204.198183 -227.000305 -144.217619  -52.894463  -46.564071  -54.604470
 [7]  -34.486186   11.819087  -30.221274   -3.245475   44.491947   72.278130
[13]   45.550025  113.440061   95.217551   58.943921    6.572888   32.583558
[19]   53.920599   56.189900

$cov.unscaled
           [,1]       [,2]       [,3]
[1,] 48491.5245 249.393052 -6824.5161
[2,]   249.3931   1.282689   -35.1023
[3,] -6824.5161 -35.102302   960.6991

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
[1] 13.88019  0.01196  3.49913

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error  t value Pr(>|t|)
[1,] 1.388e+01  2.007e+04    0.001        1
[2,] 1.196e-02  1.032e+02 0.000116        1
[3,] 3.499e+00  2.824e+03    0.001        1

Residual standard error: 91.12705 
Multiple R-squared: 0.9061741 

> coef( summary( cesLandIntNewton ) )
        Estimate Std. Error      t value  Pr(>|t|)
[1,] 13.88019000 20066.8982 0.0006916958 0.9994481
[2,]  0.01195882   103.2067 0.0001158725 0.9999075
[3,]  3.49913110  2824.4964 0.0012388513 0.9990115
> 
> # using the PORT optimization rountine implemented in nlminb()
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
42.0395028  0.4068374  5.7603719 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 


$coefficients
     gamma      delta        rho 
42.0395028  0.4068374  5.7603719 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$fitted.values
 [1] 1149.947 1189.262 1213.342 1224.153 1224.153 1239.879 1273.296 1276.245
 [9] 1237.422 1281.159 1315.559 1467.903 1528.840 1581.915 1548.989 1566.680
[17] 1648.258 1722.955 1833.527 1935.745

$residuals
 [1] -203.814262 -226.531216 -143.762621  -52.356789  -46.037222  -54.069039
 [7]  -33.938479   12.316025  -29.715687   -2.750689   45.033282   72.881324
[13]   46.194522  114.044760   95.700320   59.350839    6.782123   32.644642
[19]   53.893251   56.149467

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
42.0395  0.4068  5.7604 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  42.0395         NA      NA       NA
delta   0.4068         NA      NA       NA
rho     5.7604         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 42.0395028         NA      NA       NA
delta  0.4068374         NA      NA       NA
rho    5.7603719         NA      NA       NA
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

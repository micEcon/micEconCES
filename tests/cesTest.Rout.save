
R version 3.3.3 (2017-03-06) -- "Another Canoe"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "micEconCES" )
Loading required package: minpack.lm
Loading required package: DEoptim
Loading required package: parallel

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich


If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
> options( digits = 3 )
> 
> # load data
> data( germanFarms, package = "micEcon" )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor (Nelder-Mead)
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "NM" )
> print.default( cesLandLabor ) 
$optim
$optim$par
   gamma    delta      rho 
100.2501   0.0691  -3.7463 

$optim$value
[1] 165914

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
   gamma    delta      rho 
100.2501   0.0691  -3.7463 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1467 1528 1581 1548
[16] 1566 1648 1722 1833 1935

$residuals
 [1] -203.49 -226.18 -143.39  -51.99  -45.67  -53.69  -33.54   12.71  -29.34
[10]   -2.36   45.44   73.34   46.69  114.57   96.21   59.88    7.35   33.25
[19]   54.55   56.86

$rss
[1] 165914

$cov.unscaled
         gamma   delta     rho
gamma 51678531 -180242 -949890
delta  -180242     629    3313
rho    -949890    3313   17468

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Coefficients:
   gamma    delta      rho 
100.2501   0.0691  -3.7463 

Elasticity of Substitution: NA 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  1.00e+02   6.55e+05       0        1
delta  6.91e-02   2.28e+03       0        1
rho   -3.75e+00   1.20e+04       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLabor, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  1.00e+02   6.55e+05       0        1
delta  6.91e-02   2.28e+03       0        1
rho   -3.75e+00   1.20e+04       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

> print( summary( cesLandLabor ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  1.00e+02   6.55e+05       0        1
delta  6.91e-02   2.28e+03       0        1
rho   -3.75e+00   1.20e+04       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

> summary( cesLandLabor )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLabor ) 
   gamma    delta      rho 
100.2501   0.0691  -3.7463 
> vcov( cesLandLabor ) 
          gamma     delta       rho
gamma  4.29e+11 -1.50e+09 -7.88e+09
delta -1.50e+09  5.22e+06  2.75e+07
rho   -7.88e+09  2.75e+07  1.45e+08
> coef( summary( cesLandLabor ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma 100.2501     654759  1.53e-04        1
delta   0.0691       2284  3.03e-05        1
rho    -3.7463      12038 -3.11e-04        1
> fitted( cesLandLabor )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1467 1528 1581 1548
[16] 1566 1648 1722 1833 1935
> residuals( cesLandLabor )
 [1] -203.49 -226.18 -143.39  -51.99  -45.67  -53.69  -33.54   12.71  -29.34
[10]   -2.36   45.44   73.34   46.69  114.57   96.21   59.88    7.35   33.25
[19]   54.55   56.86
> 
> # variable returns to scale (Nelder-Mead)
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandLaborVrs )
$optim
$optim$par
   gamma    delta      rho       nu 
233.8485   0.0154  -1.8610   1.4320 

$optim$value
[1] 83794

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
   gamma    delta      rho       nu 
233.8485   0.0154  -1.8610   1.4320 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
 gamma  delta    rho     nu 
274.37   0.50   0.25   1.00 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1087 1129 1151 1173 1173 1187 1216 1230 1187 1247 1283 1496 1568 1620 1577
[16] 1586 1685 1775 1912 2042

$residuals
 [1] -140.733 -166.510  -81.413   -1.601    4.718   -0.979   23.276   58.183
 [9]   20.628   31.456   77.267   44.554    7.017   75.492   68.089   40.293
[17]  -29.482  -18.967  -24.089  -49.944

$rss
[1] 83794

$cov.unscaled
        gamma     delta       rho        nu
gamma 343.310 -1.05e-01 -2.249250  4.50e-02
delta  -0.105  3.19e-05  0.000687 -1.32e-05
rho    -2.249  6.87e-04  0.014842 -2.61e-04
nu      0.045 -1.32e-05 -0.000261  2.01e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
   gamma    delta      rho       nu 
233.8485   0.0154  -1.8610   1.4320 

Elasticity of Substitution: NA 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  233.8485  1199.3195    0.19     0.85    
delta    0.0154     0.3655    0.04     0.97    
rho     -1.8610     7.8857   -0.24     0.81    
nu       1.4320     0.2904    4.93  8.2e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 64.7 
Multiple R-squared: 0.953 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborVrs )
   gamma    delta      rho       nu 
233.8485   0.0154  -1.8610   1.4320 
> vcov( cesLandLaborVrs )
        gamma     delta      rho       nu
gamma 1438367 -438.1200 -9423.69 188.4115
delta    -438    0.1336     2.88  -0.0552
rho     -9424    2.8788    62.18  -1.0944
nu        188   -0.0552    -1.09   0.0843
> coef( summary( cesLandLaborVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma 233.8485   1199.319   0.195 8.45e-01
delta   0.0154      0.366   0.042 9.67e-01
rho    -1.8610      7.886  -0.236 8.13e-01
nu      1.4320      0.290   4.932 8.16e-07
> fitted( cesLandLaborVrs )
 [1] 1087 1129 1151 1173 1173 1187 1216 1230 1187 1247 1283 1496 1568 1620 1577
[16] 1586 1685 1775 1912 2042
> residuals( cesLandLaborVrs )
 [1] -140.733 -166.510  -81.413   -1.601    4.718   -0.979   23.276   58.183
 [9]   20.628   31.456   77.267   44.554    7.017   75.492   68.089   40.293
[17]  -29.482  -18.967  -24.089  -49.944
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
  gamma   delta     rho 
274.373   0.459   0.123 

$optim$value
[1] 610413

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma   delta     rho 
274.373   0.459   0.123 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       0.89 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1263 1285 1289 1315 1315 1316 1318 1342 1321 1366 1380 1530 1559 1561 1537
[16] 1520 1555 1580 1617 1649

$residuals
 [1] -316.8 -321.8 -219.0 -143.5 -137.1 -130.1  -78.4  -53.0 -112.9  -87.5
[11]  -19.0   11.2   16.3  134.9  107.5  106.0  100.2  175.2  270.6  342.7

$rss
[1] 610749

$cov.unscaled
        gamma    delta      rho
gamma 1034.40 -2.56952 -3.46606
delta   -2.57  0.00638  0.00861
rho     -3.47  0.00861  0.01163

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
274.373   0.459   0.123 

Elasticity of Substitution: 0.89 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  274.373   5620.303    0.05     0.96
delta    0.459     13.963    0.03     0.97
rho      0.123     18.844    0.01     0.99

Residual standard error: 175 
Multiple R-squared: 0.655 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     0.89      14.94    0.06     0.95

> coef( cesLandLaborCg )
  gamma   delta     rho 
274.373   0.459   0.123 
> vcov( cesLandLaborCg )
         gamma  delta     rho
gamma 31587808 -78467 -105845
delta   -78467    195     263
rho    -105845    263     355
> coef( summary( cesLandLaborCg ) )
      Estimate Std. Error t value Pr(>|t|)
gamma  274.373     5620.3 0.04882    0.961
delta    0.459       14.0 0.03286    0.974
rho      0.123       18.8 0.00653    0.995
> fitted( cesLandLaborCg )
 [1] 1263 1285 1289 1315 1315 1316 1318 1342 1321 1366 1380 1530 1559 1561 1537
[16] 1520 1555 1580 1617 1649
> residuals( cesLandLaborCg )
 [1] -316.8 -321.8 -219.0 -143.5 -137.1 -130.1  -78.4  -53.0 -112.9  -87.5
[11]  -19.0   11.2   16.3  134.9  107.5  106.0  100.2  175.2  270.6  342.7
> 
> # using the SANN optimization method
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
    gamma     delta       rho 
273.55850   0.00801  -2.79022 

$optim$value
[1] 177511

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
    gamma     delta       rho 
273.55850   0.00801  -2.79022 

$iter
[1] 10000

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1156 1194 1217 1228 1228 1243 1274 1279 1241 1285 1318 1470 1529 1579 1547
[16] 1563 1642 1715 1822 1922

$residuals
 [1] -209.66 -231.06 -146.93  -56.55  -50.23  -57.25  -35.14    9.86  -33.36
[10]   -6.44   42.71   70.88   46.11  116.70   97.86   63.24   12.87   40.85
[19]   65.00   69.74

$rss
[1] 177511

$cov.unscaled
         gamma     delta      rho
gamma 11108.43 -2.188005 -92.8964
delta    -2.19  0.000431   0.0183
rho     -92.90  0.018313   0.7780

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
    gamma     delta       rho 
273.55850   0.00801  -2.79022 

Elasticity of Substitution: NA 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  2.74e+02   9.93e+03    0.03     0.98
delta  8.01e-03   1.96e+00    0.00     1.00
rho   -2.79e+00   8.31e+01   -0.03     0.97

Residual standard error: 94.2 
Multiple R-squared: 0.9 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborSann )
    gamma     delta       rho 
273.55850   0.00801  -2.79022 
> vcov( cesLandLaborSann )
         gamma     delta     rho
gamma 98593373 -19419.74 -824506
delta   -19420      3.83     163
rho    -824506    162.54    6905
> coef( summary( cesLandLaborSann ) )
       Estimate Std. Error t value Pr(>|t|)
gamma 273.55850    9929.42  0.0276    0.978
delta   0.00801       1.96  0.0041    0.997
rho    -2.79022      83.10 -0.0336    0.973
> fitted( cesLandLaborSann )
 [1] 1156 1194 1217 1228 1228 1243 1274 1279 1241 1285 1318 1470 1529 1579 1547
[16] 1563 1642 1715 1822 1922
> residuals( cesLandLaborSann )
 [1] -209.66 -231.06 -146.93  -56.55  -50.23  -57.25  -35.14    9.86  -33.36
[10]   -6.44   42.71   70.88   46.11  116.70   97.86   63.24   12.87   40.85
[19]   65.00   69.74
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
  gamma   delta     rho 
89.4735  0.0718 -4.3960 

$optim$value
[1] 165844

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma   delta     rho 
89.4735  0.0718 -4.3960 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1468 1529 1582 1549
[16] 1567 1648 1723 1833 1936

$residuals
 [1] -203.73 -226.44 -143.67  -52.26  -45.94  -53.97  -33.84   12.42  -29.62
[10]   -2.65   45.14   73.00   46.32  114.17   95.83   59.48    6.92   32.79
[19]   54.05   56.32

$rss
[1] 165844

$cov.unscaled
          gamma    delta       rho
gamma  1.71e+09 -7742356 -39489576
delta -7.74e+06    34965    178348
rho   -3.95e+07   178348    909951

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
89.4735  0.0718 -4.3960 

Elasticity of Substitution: NA 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  8.95e+01   3.77e+06       0        1
delta  7.18e-02   1.70e+04       0        1
rho   -4.40e+00   8.69e+04       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborBfgs )
  gamma   delta     rho 
89.4735  0.0718 -4.3960 
> vcov( cesLandLaborBfgs )
          gamma     delta       rho
gamma  1.42e+13 -6.42e+10 -3.27e+11
delta -6.42e+10  2.90e+08  1.48e+09
rho   -3.27e+11  1.48e+09  7.55e+09
> coef( summary( cesLandLaborBfgs ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma  89.4735    3770489  2.37e-05        1
delta   0.0718      17027  4.21e-06        1
rho    -4.3960      86865 -5.06e-05        1
> fitted( cesLandLaborBfgs )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1468 1529 1582 1549
[16] 1567 1648 1723 1833 1936
> residuals( cesLandLaborBfgs )
 [1] -203.73 -226.44 -143.67  -52.26  -45.94  -53.97  -33.84   12.42  -29.62
[10]   -2.65   45.14   73.00   46.32  114.17   95.83   59.48    6.92   32.79
[19]   54.05   56.32
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B" )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
gamma delta   rho 
 49.1   1.0  -1.0 

$optim$value
[1] 165832

$optim$counts
function gradient 
      60       60 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
gamma delta   rho 
 49.1   1.0  -1.0 

$iter
function gradient 
      60       60 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
        Inf 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  1.33e+00 -2.85e-02 -3.44e+09
delta -2.85e-02  6.12e-04  7.30e+07
rho   -3.44e+09  7.30e+07  2.42e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
gamma delta   rho 
 49.1   1.0  -1.0 

Elasticity of Substitution: Inf 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 60 function and 60 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  4.91e+01   1.05e+02    0.47     0.64
delta  1.00e+00   2.25e+00    0.44     0.66
rho   -1.00e+00   4.48e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)                  NA      NA       NA

> coef( cesLandLaborBfgsCon )
gamma delta   rho 
 49.1   1.0  -1.0 
> vcov( cesLandLaborBfgsCon )
          gamma     delta       rho
gamma  1.10e+04 -2.36e+02 -2.85e+13
delta -2.36e+02  5.08e+00  6.06e+11
rho   -2.85e+13  6.06e+11  2.01e+27
> coef( summary( cesLandLaborBfgsCon ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma     49.1   1.05e+02  4.68e-01    0.639
delta      1.0   2.25e+00  4.44e-01    0.657
rho       -1.0   4.48e+13 -2.23e-14    1.000
> fitted( cesLandLaborBfgsCon )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936
> residuals( cesLandLaborBfgsCon )
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
    a_0     a_1     a_2   b_1_1   b_1_2   b_2_2 
-16.662   6.674  47.685   0.463 -15.576  10.346 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df    RSS Df Sum of Sq    F  Pr(>F)    
1     17 0.0518                              
2     14 0.0158  3    0.0359 10.6 0.00067 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
         -26.76           21.27          -20.27           -6.69            6.69 
      eq1_b_2_2 
          -6.69 

$coefficients
    gamma     delta       rho 
 2.38e-12  2.13e+01 -1.55e-02 

$vcov
          gamma     delta       rho
gamma  4.83e-22 -1.37e-10 -9.78e-14
delta -1.37e-10  3.87e+01  2.76e-02
rho   -9.78e-14  2.76e-02  1.98e-05

$ela
E_1_2 (all) 
       1.02 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1.23e+07 1.68e+07 2.27e+07 1.89e+07 1.89e+07 2.35e+07 3.65e+07 2.83e+07
 [9] 2.14e+07 2.25e+07 3.04e+07 3.76e+07 5.60e+07 9.83e+07 8.79e+07 1.28e+08
[17] 2.11e+08 3.43e+08 6.74e+08 1.21e+09

$residuals
 [1] -1.23e+07 -1.68e+07 -2.27e+07 -1.89e+07 -1.89e+07 -2.35e+07 -3.65e+07
 [8] -2.83e+07 -2.14e+07 -2.25e+07 -3.04e+07 -3.76e+07 -5.60e+07 -9.83e+07
[15] -8.79e+07 -1.28e+08 -2.11e+08 -3.43e+08 -6.74e+08 -1.21e+09

$rss
[1] 2.13e+18

$cov.unscaled
          gamma     delta       rho
gamma  5.73e-35 -2.53e-23  1.90e-26
delta -2.53e-23  1.12e-11 -8.39e-15
rho    1.90e-26 -8.39e-15  6.29e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
 2.38e-12  2.13e+01 -1.55e-02 

Elasticity of Substitution: 1.02 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.000666

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  2.38e-12   2.20e-11    0.11  0.91385    
delta  2.13e+01   6.22e+00    3.42  0.00062 ***
rho   -1.55e-02   4.45e-03   -3.49  0.00049 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 3.26e+08 
Multiple R-squared: -1.2e+12 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)  1.01575    0.00459     221   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( cesLandLaborKmentaCrs )
    gamma     delta       rho 
 2.38e-12  2.13e+01 -1.55e-02 
> vcov( cesLandLaborKmentaCrs )
          gamma     delta       rho
gamma  4.83e-22 -1.37e-10 -9.78e-14
delta -1.37e-10  3.87e+01  2.76e-02
rho   -9.78e-14  2.76e-02  1.98e-05
> coef( summary( cesLandLaborKmentaCrs ) )
       Estimate Std. Error t value Pr(>|t|)
gamma  2.38e-12   2.20e-11   0.108 0.913849
delta  2.13e+01   6.22e+00   3.421 0.000624
rho   -1.55e-02   4.45e-03  -3.486 0.000490
> fitted( cesLandLaborKmentaCrs )
 [1] 1.23e+07 1.68e+07 2.27e+07 1.89e+07 1.89e+07 2.35e+07 3.65e+07 2.83e+07
 [9] 2.14e+07 2.25e+07 3.04e+07 3.76e+07 5.60e+07 9.83e+07 8.79e+07 1.28e+08
[17] 2.11e+08 3.43e+08 6.74e+08 1.21e+09
> residuals( cesLandLaborKmentaCrs )
 [1] -1.23e+07 -1.68e+07 -2.27e+07 -1.89e+07 -1.89e+07 -2.35e+07 -3.65e+07
 [8] -2.83e+07 -2.14e+07 -2.25e+07 -3.04e+07 -3.76e+07 -5.60e+07 -9.83e+07
[15] -8.79e+07 -1.28e+08 -2.11e+08 -3.43e+08 -6.74e+08 -1.21e+09
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
    a_0     a_1     a_2   b_1_1   b_1_2   b_2_2 
-16.662   6.674  47.685   0.463 -15.576  10.346 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df    RSS Df Sum of Sq    F Pr(>F)   
1     16 0.0410                            
2     14 0.0158  2    0.0252 11.2 0.0013 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
         -13.54           12.39          -10.73           -3.77            3.77 
      eq1_b_2_2 
          -3.77 

$coefficients
    gamma     delta       rho        nu 
 1.31e-06  7.48e+00 -4.70e-02  1.66e+00 

$vcov
          gamma     delta       rho        nu
gamma  1.96e-10 -7.28e-05 -4.93e-07  2.71e-06
delta -7.28e-05  2.83e+01  1.93e-01 -1.30e+00
rho   -4.93e-07  1.93e-01  1.32e-03 -9.02e-03
nu     2.71e-06 -1.30e+00 -9.02e-03  1.02e-01

$ela
E_1_2 (all) 
       1.05 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  220367  267863  318575  293624  293624  331938  427121  377098  316143
[10]  337492  404487  510921  653421  900828  831223 1015749 1381972 1854548
[19] 2793607 3981969

$residuals
 [1]  -219421  -266900  -317506  -292452  -292446  -330753  -425881  -375809
 [9]  -314935  -336214  -403127  -509380  -651846  -899132  -829578 -1014123
[17] -1380317 -1852792 -2791719 -3979977

$rss
[1] 3.34e+13

$cov.unscaled
          gamma     delta       rho        nu
gamma  3.68e-19 -1.96e-13  1.11e-15  3.21e-15
delta -1.96e-13  1.06e-07 -5.76e-10 -2.11e-09
rho    1.11e-15 -5.76e-10  3.45e-12  6.59e-12
nu     3.21e-15 -2.11e-09  6.59e-12  1.15e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho        nu 
 1.31e-06  7.48e+00 -4.70e-02  1.66e+00 

Elasticity of Substitution: 1.05 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.00127

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  1.31e-06   1.40e-05    0.09     0.93    
delta  7.48e+00   5.32e+00    1.41     0.16    
rho   -4.70e-02   3.63e-02   -1.30     0.19    
nu     1.66e+00   3.20e-01    5.18  2.2e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1291888 
Multiple R-squared: -18857212 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)   1.0493     0.0399    26.3   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( cesLandLaborKmenta )
    gamma     delta       rho        nu 
 1.31e-06  7.48e+00 -4.70e-02  1.66e+00 
> vcov( cesLandLaborKmenta )
          gamma     delta       rho        nu
gamma  1.96e-10 -7.28e-05 -4.93e-07  2.71e-06
delta -7.28e-05  2.83e+01  1.93e-01 -1.30e+00
rho   -4.93e-07  1.93e-01  1.32e-03 -9.02e-03
nu     2.71e-06 -1.30e+00 -9.02e-03  1.02e-01
> coef( summary( cesLandLaborKmenta ) )
       Estimate Std. Error t value Pr(>|t|)
gamma  1.31e-06   0.000014  0.0939 9.25e-01
delta  7.48e+00   5.323903  1.4052 1.60e-01
rho   -4.70e-02   0.036264 -1.2965 1.95e-01
nu     1.66e+00   0.319635  5.1799 2.22e-07
> fitted( cesLandLaborKmenta )
 [1]  220367  267863  318575  293624  293624  331938  427121  377098  316143
[10]  337492  404487  510921  653421  900828  831223 1015749 1381972 1854548
[19] 2793607 3981969
> residuals( cesLandLaborKmenta )
 [1]  -219421  -266900  -317506  -292452  -292446  -330753  -425881  -375809
 [9]  -314935  -336214  -403127  -509380  -651846  -899132  -829578 -1014123
[17] -1380317 -1852792 -2791719 -3979977
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.6196967015242, 4.85556569530865, -0.461292104484702 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
 gamma  delta    rho 
 2.620  4.856 -0.461 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
       1.86 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1101 1147 1179 1184 1184 1205 1251 1246 1200 1243 1286 1439 1512 1586 1549
[16] 1581 1682 1777 1919 2051

$residuals
 [1] -155.11 -184.68 -109.76  -12.03   -5.71  -19.66  -12.09   42.55    7.50
[10]   35.27   74.87  102.27   62.94  110.25   95.54   44.88  -26.87  -21.42
[19]  -31.35  -58.86

$rss
[1] 122985

$cov.unscaled
        gamma   delta      rho
gamma  13.928 -15.996  0.28608
delta -15.996  18.371 -0.32858
rho     0.286  -0.329  0.00588

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
 2.620  4.856 -0.461 

Elasticity of Substitution: 1.86 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    2.620    292.659    0.01     0.99
delta    4.856    336.104    0.01     0.99
rho     -0.461      6.012   -0.08     0.94

Residual standard error: 78.4 
Multiple R-squared: 0.931 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.86      20.72    0.09     0.93

> coef( cesLandLaborLm )
 gamma  delta    rho 
 2.620  4.856 -0.461 
> vcov( cesLandLaborLm )
       gamma  delta     rho
gamma  85649 -98363  1759.2
delta -98363 112966 -2020.5
rho     1759  -2021    36.2
> coef( summary( cesLandLaborLm ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    2.620     292.66  0.00895    0.993
delta    4.856     336.10  0.01445    0.988
rho     -0.461       6.01 -0.07672    0.939
> fitted( cesLandLaborLm )
 [1] 1101 1147 1179 1184 1184 1205 1251 1246 1200 1243 1286 1439 1512 1586 1549
[16] 1581 1682 1777 1919 2051
> residuals( cesLandLaborLm )
 [1] -155.11 -184.68 -109.76  -12.03   -5.71  -19.66  -12.09   42.55    7.50
[10]   35.27   74.87  102.27   62.94  110.25   95.54   44.88  -26.87  -21.42
[19]  -31.35  -58.86
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168420

$nlm$estimate
[1]  2.74e+02  9.53e-04 -4.04e+00

$nlm$gradient
[1]      -154 -13581474     25227

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
    gamma     delta       rho 
 2.74e+02  9.53e-04 -4.04e+00 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1151 1190 1214 1225 1225 1240 1273 1276 1238 1282 1316 1468 1528 1581 1548
[16] 1565 1646 1721 1831 1932

$residuals
 [1] -204.80 -227.15 -144.02  -52.87  -46.55  -54.32  -33.69   12.26  -30.09
[10]   -3.11   45.03   73.02   46.81  115.29   96.83   60.85    8.77   35.07
[19]   56.90   59.64

$rss
[1] 168420

$cov.unscaled
          gamma     delta       rho
gamma 117724.94 -3.971483 -1.41e+03
delta     -3.97  0.000134  4.78e-02
rho    -1414.77  0.047768  1.70e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
    gamma     delta       rho 
 2.74e+02  9.53e-04 -4.04e+00 

Elasticity of Substitution: NA 

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  2.74e+02   3.15e+04    0.01     0.99
delta  9.53e-04   1.06e+00    0.00     1.00
rho   -4.04e+00   3.79e+02   -0.01     0.99

Residual standard error: 91.8 
Multiple R-squared: 0.905 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborNewton )
    gamma     delta       rho 
 2.74e+02  9.53e-04 -4.04e+00 
> vcov( cesLandLaborNewton )
          gamma     delta       rho
gamma 991359314 -33443.78 -11913778
delta    -33444      1.13       402
rho   -11913778    402.26    143385
> coef( summary( cesLandLaborNewton ) )
       Estimate Std. Error   t value Pr(>|t|)
gamma  2.74e+02   31485.86  0.008714    0.993
delta  9.53e-04       1.06  0.000897    0.999
rho   -4.04e+00     378.66 -0.010667    0.991
> fitted( cesLandLaborNewton )
 [1] 1151 1190 1214 1225 1225 1240 1273 1276 1238 1282 1316 1468 1528 1581 1548
[16] 1565 1646 1721 1831 1932
> residuals( cesLandLaborNewton )
 [1] -204.80 -227.15 -144.02  -52.87  -46.55  -54.32  -33.69   12.26  -30.09
[10]   -3.11   45.03   73.02   46.81  115.29   96.83   60.85    8.77   35.07
[19]   56.90   59.64
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
  gamma   delta     rho 
79.6480  0.0558 -5.9752 

$nlminb$objective
[1] 165833

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     200      151 

$nlminb$message
[1] "iteration limit reached without convergence (10)"


$coefficients
  gamma   delta     rho 
79.6480  0.0558 -5.9752 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (10)"

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.06  -33.93   12.32  -29.71
[10]   -2.74   45.04   72.89   46.20  114.05   95.71   59.36    6.79   32.65
[19]   53.90   56.16

$rss
[1] 165833

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho 
79.6480  0.0558 -5.9752 

Elasticity of Substitution: NA 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  79.6480         NA      NA       NA
delta   0.0558         NA      NA       NA
rho    -5.9752         NA      NA       NA

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLaborPort, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  79.6480         NA      NA       NA
delta   0.0558         NA      NA       NA
rho    -5.9752         NA      NA       NA

Residual standard error: 91.1 
Multiple R-squared: 0.906 

> print( summary( cesLandLaborPort ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  79.6480         NA      NA       NA
delta   0.0558         NA      NA       NA
rho    -5.9752         NA      NA       NA

Residual standard error: 91.1 
Multiple R-squared: 0.906 

> summary( cesLandLaborPort )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLaborPort )
  gamma   delta     rho 
79.6480  0.0558 -5.9752 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
      Estimate Std. Error t value Pr(>|t|)
gamma  79.6480         NA      NA       NA
delta   0.0558         NA      NA       NA
rho    -5.9752         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936
> residuals( cesLandLaborPort )
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.06  -33.93   12.32  -29.71
[10]   -2.74   45.04   72.89   46.20  114.05   95.71   59.36    6.79   32.65
[19]   53.90   56.16
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
gamma delta   rho 
 49.1   1.0  -1.0 

$nlminb$objective
[1] 165832

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 70

$nlminb$evaluations
function gradient 
     109       70 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
gamma delta   rho 
 49.1   1.0  -1.0 

$iter
[1] 70

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
        Inf 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  1.33e+00 -2.86e-02  3.09e+10
delta -2.86e-02  6.14e-04 -7.06e+08
rho    3.09e+10 -7.06e+08  4.03e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
gamma delta   rho 
 49.1   1.0  -1.0 

Elasticity of Substitution: Inf 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 70 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  4.91e+01   1.05e+02    0.47     0.64
delta  1.00e+00   2.26e+00    0.44     0.66
rho   -1.00e+00   5.78e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)                  NA      NA       NA

> coef( cesLandLaborPortCon )
gamma delta   rho 
 49.1   1.0  -1.0 
> vcov( cesLandLaborPortCon )
          gamma     delta       rho
gamma  1.10e+04 -2.37e+02  2.56e+14
delta -2.37e+02  5.09e+00 -5.85e+12
rho    2.56e+14 -5.85e+12  3.34e+27
> coef( summary( cesLandLaborPortCon ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma     49.1   1.05e+02  4.68e-01    0.640
delta      1.0   2.26e+00  4.43e-01    0.658
rho       -1.0   5.78e+13 -1.73e-14    1.000
> fitted( cesLandLaborPortCon )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936
> residuals( cesLandLaborPortCon )
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained by hand
> cesLandLaborPortCon2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0.1, 0.1, -0.5 ), upper = c( 300, 0.9, 4 ) )
> print.default( cesLandLaborPortCon2 )
$nlminb
$nlminb$par
gamma delta   rho 
 57.7   0.9  -0.5 

$nlminb$objective
[1] 174341

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 37

$nlminb$evaluations
function gradient 
      71       38 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
gamma delta   rho 
 57.7   0.9  -0.5 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          2 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta    rho 
274.37   0.50   0.25 

$lower
[1]  0.1  0.1 -0.5

$upper
[1] 300.0   0.9   4.0

$fitted.values
 [1] 1155 1193 1216 1228 1228 1243 1275 1279 1241 1285 1318 1471 1530 1581 1549
[16] 1565 1645 1718 1825 1925

$residuals
 [1] -208.44 -230.47 -146.92  -56.13  -49.82  -57.26  -35.88    9.55  -33.18
[10]   -6.29   42.31   70.23   44.79  114.64   95.94   60.98   10.26   38.08
[19]   62.28   67.34

$rss
[1] 174341

$cov.unscaled
       gamma   delta     rho
gamma 261.32 -4.4388 -16.514
delta  -4.44  0.0754   0.281
rho   -16.51  0.2806   1.044

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Coefficients:
gamma delta   rho 
 57.7   0.9  -0.5 

Elasticity of Substitution: 2 

> summary( cesLandLaborPortCon2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 37 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma     57.7     1509.3    0.04     0.97
delta      0.9       25.6    0.04     0.97
rho       -0.5       95.4   -0.01     1.00

Residual standard error: 93.4 
Multiple R-squared: 0.902 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        2        382    0.01        1

> coef( cesLandLaborPortCon2 )
gamma delta   rho 
 57.7   0.9  -0.5 
> vcov( cesLandLaborPortCon2 )
        gamma  delta     rho
gamma 2277925 -38694 -143950
delta  -38694    657    2446
rho   -143950   2446    9104
> coef( summary( cesLandLaborPortCon2 ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     57.7     1509.3  0.03822    0.970
delta      0.9       25.6  0.03510    0.972
rho       -0.5       95.4 -0.00524    0.996
> fitted( cesLandLaborPortCon2 )
 [1] 1155 1193 1216 1228 1228 1243 1275 1279 1241 1285 1318 1471 1530 1581 1549
[16] 1565 1645 1718 1825 1925
> residuals( cesLandLaborPortCon2 )
 [1] -208.44 -230.47 -146.92  -56.13  -49.82  -57.26  -35.88    9.55  -33.18
[10]   -6.29   42.31   70.23   44.79  114.64   95.94   60.98   10.26   38.08
[19]   62.28   67.34
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
 gamma  delta    rho     nu 
80.275  0.219 -0.478  1.895 

$nlminb$objective
[1] 63132

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 120

$nlminb$evaluations
function gradient 
     200      120 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
 gamma  delta    rho     nu 
80.275  0.219 -0.478  1.895 

$iter
[1] 120

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
       1.92 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta    rho     nu 
274.37   0.50   0.25   1.00 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1060 1103 1118 1156 1156 1164 1180 1212 1168 1246 1279 1560 1634 1664 1612
[16] 1596 1690 1770 1889 2001

$residuals
 [1] -114.33 -140.20  -48.29   15.68   22.00   22.23   59.30   76.46   39.24
[10]   32.16   81.22  -19.53  -58.61   31.54   32.59   29.96  -35.42  -14.29
[19]   -1.67   -9.12

$rss
[1] 63132

$cov.unscaled
        gamma     delta       rho        nu
gamma 85.2227 -3.08e-01 -0.587932  2.46e-02
delta -0.3078  1.11e-03  0.002124 -9.06e-05
rho   -0.5879  2.12e-03  0.004060 -1.67e-04
nu     0.0246 -9.06e-05 -0.000167  1.89e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
 gamma  delta    rho     nu 
80.275  0.219 -0.478  1.895 

Elasticity of Substitution: 1.92 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 120 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   80.275    518.666    0.15     0.88    
delta    0.219      1.874    0.12     0.91    
rho     -0.478      3.580   -0.13     0.89    
nu       1.895      0.244    7.75  9.2e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 56.2 
Multiple R-squared: 0.964 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.92      13.16    0.15     0.88

> coef( cesLandLaborPortVrs )
 gamma  delta    rho     nu 
80.275  0.219 -0.478  1.895 
> vcov( cesLandLaborPortVrs )
         gamma    delta       rho      nu
gamma 269014.2 -971.704 -1855.868 77.7796
delta   -971.7    3.511     6.705 -0.2860
rho    -1855.9    6.705    12.817 -0.5261
nu        77.8   -0.286    -0.526  0.0598
> coef( summary( cesLandLaborPortVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   80.275    518.666   0.155 8.77e-01
delta    0.219      1.874   0.117 9.07e-01
rho     -0.478      3.580  -0.134 8.94e-01
nu       1.895      0.244   7.750 9.19e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060 1103 1118 1156 1156 1164 1180 1212 1168 1246 1279 1560 1634 1664 1612
[16] 1596 1690 1770 1889 2001
> residuals( cesLandLaborPortVrs )
 [1] -114.33 -140.20  -48.29   15.68   22.00   22.23   59.30   76.46   39.24
[10]   32.16   81.22  -19.53  -58.61   31.54   32.59   29.96  -35.42  -14.29
[19]   -1.67   -9.12
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
 gamma  delta    rho     nu 
54.872  0.339 -0.281  1.887 

$nlminb$objective
[1] 62654

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 119

$nlminb$evaluations
function gradient 
     200      119 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
 gamma  delta    rho     nu 
54.872  0.339 -0.281  1.887 

$iter
[1] 119

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
       1.39 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta    rho     nu 
274.37   0.50   0.25   1.00 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1060 1103 1118 1156 1156 1164 1181 1212 1168 1246 1279 1559 1633 1665 1613
[16] 1597 1692 1771 1889 1999

$residuals
 [1] -113.53 -139.88  -48.55   16.01   22.33   22.12   58.41   76.20   39.36
[10]   32.57   81.13  -18.66  -58.27   31.03   32.02   28.87  -36.52  -15.13
[19]   -1.53   -7.42

$rss
[1] 62654

$cov.unscaled
        gamma     delta      rho        nu
gamma 51.6252 -0.317075 -0.46196  1.93e-02
delta -0.3171  0.001948  0.00284 -1.21e-04
rho   -0.4620  0.002838  0.00414 -1.70e-04
nu     0.0193 -0.000121 -0.00017  1.89e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
 gamma  delta    rho     nu 
54.872  0.339 -0.281  1.887 

Elasticity of Substitution: 1.39 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 119 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   54.872    402.151    0.14     0.89    
delta    0.339      2.471    0.14     0.89    
rho     -0.281      3.600   -0.08     0.94    
nu       1.887      0.244    7.75  9.3e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 56 
Multiple R-squared: 0.965 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.39       6.96     0.2     0.84

> coef( cesLandLaborPortVrsCon )
 gamma  delta    rho     nu 
54.872  0.339 -0.281  1.887 
> vcov( cesLandLaborPortVrsCon )
         gamma    delta       rho      nu
gamma 161725.5 -993.294 -1447.170 60.3745
delta   -993.3    6.103     8.890 -0.3785
rho    -1447.2    8.890    12.962 -0.5315
nu        60.4   -0.379    -0.532  0.0593
> coef( summary( cesLandLaborPortVrsCon ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   54.872    402.151   0.136 8.91e-01
delta    0.339      2.471   0.137 8.91e-01
rho     -0.281      3.600  -0.078 9.38e-01
nu       1.887      0.244   7.749 9.28e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1060 1103 1118 1156 1156 1164 1181 1212 1168 1246 1279 1559 1633 1665 1613
[16] 1597 1692 1771 1889 1999
> residuals( cesLandLaborPortVrsCon )
 [1] -113.53 -139.88  -48.55   16.01   22.33   22.12   58.41   76.20   39.36
[10]   32.57   81.13  -18.66  -58.27   31.03   32.02   28.87  -36.52  -15.13
[19]   -1.53   -7.42
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
   par1    par2    par3 
111.799   0.467  -0.828 

$optim$bestval
[1] 212108

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
        par1   par2    par3
1   4.21e+08 0.4660  5.7405
2   5.40e+07 0.6949  3.8381
3   5.40e+07 0.6949  3.8381
4   5.40e+07 0.6949  3.8381
5   5.01e+07 0.4422  6.3486
6   5.01e+07 0.2504  6.3486
7   8.20e+06 0.1289  8.3948
8   8.20e+06 0.1289  8.3948
9   8.20e+06 0.1289  8.3948
10  8.20e+06 0.1289  8.3948
11  8.20e+06 0.1289  9.5137
12  8.20e+06 0.1289  9.5137
13  8.20e+06 0.1289  9.5137
14  8.20e+06 0.1289  9.5137
15  1.43e+06 0.0177  9.8139
16  1.43e+06 0.0177  9.8139
17  1.43e+06 0.0177  9.8139
18  1.43e+06 0.0177  9.8139
19  1.43e+06 0.0177  9.8139
20  1.19e+06 0.0387  8.3608
21  1.19e+06 0.0387  8.3608
22  1.19e+06 0.0387  8.3608
23  1.04e+04 0.6767  8.6162
24  1.04e+04 0.6675  8.6162
25  1.04e+04 0.5432  8.5005
26  1.04e+04 0.5432  8.5005
27  1.04e+04 0.3786  8.5005
28  1.04e+04 0.3786  8.5005
29  1.04e+04 0.3786  8.5005
30  1.04e+04 0.3165  9.4800
31  8.17e+03 0.0612  9.2547
32  8.17e+03 0.0612  9.2547
33  8.17e+03 0.0612  9.2547
34  8.17e+03 0.0612  9.2547
35  8.17e+03 0.0612  9.2547
36  8.17e+03 0.0612  9.2547
37  4.01e+03 0.1188  7.3225
38  4.01e+03 0.1188  7.3225
39  3.52e+03 0.1362  7.2918
40  3.52e+03 0.1362  7.2918
41  7.55e+02 0.4635  5.8549
42  7.55e+02 0.4635  5.8549
43  7.55e+02 0.4635  3.2876
44  7.55e+02 0.4635  3.2876
45  7.55e+02 0.4635  3.2876
46  7.55e+02 0.4635  3.2876
47  7.55e+02 0.4635  3.2876
48  7.55e+02 0.4635  3.2876
49  7.55e+02 0.4635  3.2876
50  7.55e+02 0.4635  3.2876
51  7.55e+02 0.4635  3.2876
52  7.55e+02 0.4635  3.2876
53  7.55e+02 0.4635  3.2876
54  7.55e+02 0.4635  3.2876
55  7.55e+02 0.4635  3.2876
56  7.55e+02 0.4635  3.2876
57  7.55e+02 0.4635  3.2876
58  7.55e+02 0.4635  3.2876
59  7.55e+02 0.4635  3.2876
60  7.55e+02 0.4635  3.2876
61  7.44e+02 0.6204  4.6337
62  7.44e+02 0.6204  4.6337
63  4.29e+02 0.5705  1.0797
64  6.62e+02 0.2444  0.6847
65  6.37e+02 0.1464  0.0286
66  6.37e+02 0.1464  0.0286
67  6.37e+02 0.1337  0.0286
68  6.37e+02 0.1337  0.0286
69  6.37e+02 0.1337  0.0286
70  6.37e+02 0.1337  0.0286
71  6.37e+02 0.1337  0.0286
72  5.92e+02 0.0769 -0.4447
73  5.92e+02 0.0769 -0.4447
74  5.92e+02 0.0769 -0.4447
75  5.92e+02 0.0769 -0.4447
76  5.92e+02 0.0769 -0.4447
77  5.92e+02 0.0769 -0.4447
78  5.92e+02 0.0769 -0.4447
79  5.92e+02 0.0769 -0.4447
80  5.92e+02 0.0769 -0.4447
81  5.92e+02 0.0769 -0.4447
82  5.92e+02 0.0769 -0.4447
83  5.92e+02 0.0769 -0.4447
84  5.92e+02 0.0769 -0.4447
85  5.92e+02 0.0769 -0.4447
86  5.92e+02 0.0769 -0.4447
87  5.92e+02 0.0769 -0.4447
88  5.92e+02 0.0769 -0.4447
89  5.92e+02 0.0769 -0.4447
90  5.92e+02 0.0769 -0.4447
91  5.92e+02 0.0769 -0.4447
92  5.92e+02 0.0769 -0.4447
93  5.92e+02 0.0769 -0.4447
94  5.92e+02 0.0769 -0.4447
95  5.92e+02 0.0769 -0.4447
96  5.92e+02 0.0769 -0.4447
97  4.74e+02 0.1061 -0.6184
98  4.74e+02 0.1061 -0.6184
99  4.74e+02 0.1061 -0.6184
100 4.74e+02 0.1061 -0.6184
101 4.74e+02 0.1061 -0.6184
102 4.74e+02 0.1061 -0.6184
103 2.35e+02 0.2758 -0.6442
104 2.35e+02 0.2758 -0.6442
105 2.35e+02 0.2758 -0.6442
106 3.41e+02 0.1546 -0.6442
107 3.41e+02 0.1546 -0.6442
108 3.41e+02 0.1546 -0.6442
109 3.41e+02 0.1546 -0.6442
110 3.41e+02 0.1546 -0.6442
111 3.41e+02 0.1546 -0.6442
112 3.41e+02 0.1546 -0.6442
113 3.41e+02 0.1546 -0.6442
114 3.41e+02 0.1546 -0.6442
115 3.41e+02 0.1546 -0.6442
116 3.41e+02 0.1546 -0.6442
117 3.41e+02 0.1546 -0.6442
118 3.41e+02 0.1546 -0.6442
119 3.41e+02 0.1546 -0.6442
120 3.41e+02 0.1546 -0.6442
121 3.41e+02 0.1546 -0.6442
122 3.41e+02 0.1546 -0.6442
123 3.41e+02 0.1546 -0.6442
124 3.41e+02 0.1546 -0.6442
125 3.41e+02 0.1546 -0.6442
126 3.41e+02 0.1546 -0.6442
127 3.41e+02 0.1546 -0.6442
128 3.18e+02 0.1392 -0.7884
129 1.73e+02 0.2850 -0.9020
130 1.73e+02 0.2850 -0.9020
131 1.73e+02 0.2850 -0.9020
132 1.73e+02 0.2850 -0.9020
133 1.73e+02 0.2850 -0.9020
134 1.73e+02 0.2850 -0.9020
135 1.73e+02 0.2850 -0.9020
136 1.73e+02 0.2850 -0.9020
137 1.73e+02 0.2850 -0.9020
138 1.73e+02 0.2850 -0.9020
139 1.73e+02 0.2850 -0.9020
140 1.73e+02 0.2850 -0.9020
141 1.73e+02 0.2850 -0.9020
142 1.73e+02 0.2850 -0.9020
143 1.73e+02 0.2850 -0.9020
144 1.73e+02 0.2850 -0.9020
145 1.73e+02 0.2850 -0.9020
146 1.73e+02 0.2850 -0.9020
147 1.73e+02 0.2850 -0.9020
148 1.73e+02 0.2850 -0.9020
149 1.73e+02 0.2850 -0.9020
150 1.73e+02 0.2850 -0.9020
151 1.73e+02 0.2850 -0.9020
152 1.60e+02 0.3328 -0.7882
153 1.60e+02 0.3328 -0.7882
154 1.60e+02 0.3328 -0.7882
155 1.60e+02 0.3328 -0.7882
156 1.60e+02 0.3328 -0.7882
157 1.60e+02 0.3328 -0.7882
158 1.60e+02 0.3328 -0.7882
159 1.60e+02 0.3328 -0.7882
160 1.39e+02 0.3941 -0.7260
161 1.39e+02 0.3941 -0.7260
162 1.39e+02 0.3941 -0.7260
163 1.39e+02 0.3941 -0.7260
164 1.39e+02 0.3941 -0.7260
165 1.39e+02 0.3941 -0.7260
166 1.39e+02 0.3941 -0.7260
167 1.39e+02 0.3941 -0.7260
168 1.39e+02 0.3941 -0.7260
169 1.39e+02 0.3941 -0.7260
170 1.39e+02 0.3941 -0.7260
171 1.39e+02 0.3941 -0.7260
172 1.39e+02 0.3941 -0.7260
173 1.39e+02 0.3941 -0.7260
174 1.39e+02 0.3941 -0.7260
175 1.39e+02 0.3941 -0.7260
176 1.39e+02 0.3941 -0.7260
177 1.39e+02 0.3941 -0.7260
178 1.39e+02 0.3941 -0.7260
179 1.39e+02 0.3941 -0.7260
180 1.39e+02 0.3941 -0.7260
181 1.39e+02 0.3941 -0.7260
182 1.39e+02 0.3941 -0.7260
183 1.39e+02 0.3941 -0.7260
184 1.39e+02 0.3941 -0.7260
185 1.39e+02 0.3941 -0.7260
186 1.39e+02 0.3941 -0.7260
187 1.39e+02 0.3941 -0.7260
188 1.39e+02 0.3941 -0.7260
189 1.39e+02 0.3941 -0.7260
190 1.39e+02 0.3941 -0.7260
191 1.39e+02 0.3941 -0.7260
192 1.39e+02 0.3941 -0.7260
193 1.39e+02 0.3941 -0.7260
194 1.39e+02 0.3941 -0.7260
195 1.39e+02 0.3941 -0.7260
196 1.39e+02 0.3941 -0.7260
197 1.39e+02 0.3941 -0.7260
198 1.39e+02 0.3941 -0.7260
199 1.12e+02 0.4666 -0.8278
200 1.12e+02 0.4666 -0.8278

$member$bestvalit
  [1] 1.06e+19 2.61e+17 2.61e+17 2.61e+17 1.46e+17 1.33e+17 3.35e+15 3.35e+15
  [9] 3.35e+15 3.35e+15 3.34e+15 3.34e+15 3.34e+15 3.34e+15 9.97e+13 9.97e+13
 [17] 9.97e+13 9.97e+13 9.97e+13 6.88e+13 6.88e+13 6.88e+13 5.74e+09 5.70e+09
 [25] 5.28e+09 5.28e+09 4.88e+09 4.88e+09 4.88e+09 4.71e+09 2.59e+09 2.59e+09
 [33] 2.59e+09 2.59e+09 2.59e+09 2.59e+09 4.85e+08 4.85e+08 3.46e+08 3.46e+08
 [41] 1.36e+06 1.36e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06
 [49] 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06
 [57] 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.07e+06 1.03e+06 1.03e+06
 [65] 9.78e+05 9.78e+05 9.06e+05 9.06e+05 9.06e+05 9.06e+05 9.06e+05 7.77e+05
 [73] 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05
 [81] 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05
 [89] 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05 7.77e+05
 [97] 6.05e+05 6.05e+05 6.05e+05 6.05e+05 6.05e+05 6.05e+05 6.00e+05 6.00e+05
[105] 6.00e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05
[113] 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05
[121] 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.62e+05 4.07e+05
[129] 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05
[137] 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05
[145] 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 3.29e+05 2.43e+05
[153] 2.43e+05 2.43e+05 2.43e+05 2.43e+05 2.43e+05 2.43e+05 2.43e+05 2.34e+05
[161] 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05
[169] 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05
[177] 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05
[185] 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05
[193] 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.34e+05 2.12e+05 2.12e+05

$member$pop
      [,1]   [,2]   [,3]
 [1,]  194 0.3686 -0.469
 [2,]  186 0.3691 -0.510
 [3,]  443 0.1974 -0.207
 [4,]  112 0.4666 -0.828
 [5,]  383 0.1583 -0.548
 [6,]  689 0.6294  3.497
 [7,]  899 0.1279  6.780
 [8,]  236 0.1901 -0.904
 [9,]  222 0.4128 -0.214
[10,]  641 0.0949 -0.174
[11,]  404 0.4771  0.584
[12,]  165 0.3333 -0.756
[13,]  238 0.5285  0.187
[14,]  883 0.2225  6.836
[15,]  149 0.3902 -0.686
[16,]  171 0.4439 -0.443
[17,]  144 0.4929 -0.479
[18,]  234 0.2617 -0.694
[19,]  927 0.0424  8.720
[20,]  196 0.3713 -0.459
[21,]  875 0.1408  3.262
[22,]  139 0.3941 -0.726
[23,]  160 0.3328 -0.788
[24,]  883 0.2344  6.997
[25,]  304 0.3119 -0.216
[26,]  251 0.1674 -0.905
[27,]  104 0.4623 -0.760
[28,]  418 0.1127 -0.679
[29,]  876 0.2039  4.587
[30,]  356 0.1753 -0.529

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
  gamma   delta     rho 
111.799   0.467  -0.828 

$iter
[1] 200

$ela
E_1_2 (all) 
       5.81 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1186 1224 1245 1258 1258 1272 1301 1308 1271 1315 1347 1502 1559 1606 1573
[16] 1586 1662 1731 1833 1927

$residuals
 [1] -240.26 -260.92 -175.51  -86.69  -80.37  -86.39  -62.06  -18.99  -63.07
[10]  -37.08   13.27   38.90   15.94   90.40   71.27   39.73   -7.43   24.22
[19]   54.12   64.45

$rss
[1] 212108

$cov.unscaled
       gamma   delta     rho
gamma 998.70 -7.0258 -9.4614
delta  -7.03  0.0494  0.0666
rho    -9.46  0.0666  0.0897

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
111.799   0.467  -0.828 

Elasticity of Substitution: 5.81 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  111.799   3254.471    0.03     0.97
delta    0.467     22.897    0.02     0.98
rho     -0.828     30.845   -0.03     0.98

Residual standard error: 103 
Multiple R-squared: 0.88 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     5.81    1040.70    0.01        1

> coef( cesLandLaborDe )
  gamma   delta     rho 
111.799   0.467  -0.828 
> vcov( cesLandLaborDe )
         gamma  delta     rho
gamma 10591582 -74511 -100342
delta   -74511    524     706
rho    -100342    706     951
> coef( summary( cesLandLaborDe ) )
      Estimate Std. Error t value Pr(>|t|)
gamma  111.799     3254.5  0.0344    0.973
delta    0.467       22.9  0.0204    0.984
rho     -0.828       30.8 -0.0268    0.979
> fitted( cesLandLaborDe )
 [1] 1186 1224 1245 1258 1258 1272 1301 1308 1271 1315 1347 1502 1559 1606 1573
[16] 1586 1662 1731 1833 1927
> residuals( cesLandLaborDe )
 [1] -240.26 -260.92 -175.51  -86.69  -80.37  -86.39  -62.06  -18.99  -63.07
[10]  -37.08   13.27   38.90   15.94   90.40   71.27   39.73   -7.43   24.22
[19]   54.12   64.45
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
  par1   par2   par3   par4 
12.202  0.751  0.393  2.090 

$optim$bestval
[1] 68679

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
        par1    par2   par3   par4
1   2.46e+08 0.47532  6.927 1.1110
2   2.46e+08 0.47532  6.927 1.1110
3   2.46e+08 0.47532  6.927 1.1110
4   2.46e+08 0.47532  6.927 1.1110
5   1.30e+08 0.85815  6.898 0.8297
6   1.63e+08 0.41868  8.740 0.4397
7   1.63e+08 0.41868  8.740 0.4397
8   1.63e+08 0.41868  8.740 0.4397
9   6.18e+07 0.12190  5.645 1.7936
10  2.28e+07 0.11114  3.450 2.1799
11  2.28e+07 0.11114  3.450 2.1799
12  2.28e+07 0.11114  3.450 2.1799
13  2.28e+07 0.11114  3.450 2.1799
14  1.67e+07 0.19669  9.130 0.0252
15  1.67e+07 0.19669  9.130 0.0252
16  1.67e+07 0.19669  9.130 0.0252
17  1.67e+07 0.19669  9.130 0.0252
18  1.67e+07 0.19669  9.130 0.0252
19  1.54e+06 0.41868  8.740 0.2155
20  1.54e+06 0.41868  8.740 0.2155
21  1.54e+06 0.41868  8.740 0.2155
22  1.54e+06 0.41868  8.740 0.2155
23  1.54e+06 0.41868  8.740 0.2155
24  1.54e+06 0.41868  8.740 0.2155
25  1.54e+06 0.41868  8.740 0.2155
26  1.54e+06 0.41868  8.740 0.2155
27  1.54e+06 0.41868  8.740 0.2155
28  1.54e+06 0.41868  8.740 0.2155
29  1.54e+06 0.41868  8.740 0.1982
30  1.54e+06 0.41868  8.740 0.1037
31  1.54e+06 0.41868  8.740 0.1037
32  1.54e+06 0.41868  8.740 0.1037
33  2.51e+05 0.84796 -0.524 0.1240
34  2.51e+05 0.84796 -0.524 0.1240
35  2.51e+05 0.84796  6.198 0.1610
36  2.51e+05 0.84796  6.198 0.1610
37  2.51e+05 0.84796  6.198 0.1610
38  2.51e+05 0.84796  6.198 0.1610
39  2.51e+05 0.84796  6.198 0.1386
40  2.51e+05 0.00499  6.198 0.1386
41  2.51e+05 0.00499  6.198 0.1386
42  2.51e+05 0.00499  6.198 0.1386
43  2.51e+05 0.00499  6.198 0.1386
44  1.61e+05 0.38782  9.974 0.1338
45  1.61e+05 0.38782  9.974 0.1338
46  1.61e+05 0.38782  9.974 0.1338
47  6.75e+04 0.06243  6.385 0.1708
48  6.75e+04 0.06243  6.385 0.1708
49  6.75e+04 0.06243  7.237 0.1299
50  6.75e+04 0.06243  7.237 0.1299
51  2.19e+02 0.50663  7.228 0.0161
52  2.19e+02 0.61732  7.228 0.0161
53  2.19e+02 0.61732  7.228 0.0161
54  2.19e+02 0.61732  6.340 1.4654
55  2.19e+02 0.61732  6.340 1.4654
56  2.19e+02 0.61732  6.340 1.4654
57  2.19e+02 0.85499  6.340 1.4654
58  2.19e+02 0.96016  6.340 1.4654
59  2.19e+02 0.96016  6.340 1.4654
60  2.19e+02 0.96016  6.340 1.4654
61  2.19e+02 0.96016  6.131 1.4654
62  2.19e+02 0.96016  6.131 1.4654
63  2.19e+02 0.96016  6.131 1.4654
64  2.19e+02 0.96016  6.131 1.4654
65  2.19e+02 0.96016  6.131 1.4654
66  2.19e+02 0.96016  6.131 1.4654
67  2.19e+02 0.96016  4.419 1.4654
68  2.19e+02 0.96016  4.419 1.4654
69  2.19e+02 0.96016  4.419 1.4654
70  9.59e+02 0.26274  6.723 0.6261
71  9.59e+02 0.26274  4.480 0.6261
72  9.59e+02 0.35542  4.480 0.6261
73  5.92e+02 0.13786  8.178 1.8319
74  5.92e+02 0.13786  8.178 1.8319
75  5.92e+02 0.13786  6.923 1.8319
76  5.92e+02 0.13786  6.923 1.8319
77  5.92e+02 0.13786  6.923 1.8319
78  5.92e+02 0.13786  6.923 1.8319
79  5.92e+02 0.13786  6.923 1.8319
80  4.92e+02 0.22834  8.370 2.1479
81  4.92e+02 0.22834  8.370 2.1479
82  4.92e+02 0.22834  8.370 2.1479
83  4.92e+02 0.22834  8.370 2.1479
84  4.92e+02 0.41942  8.038 2.1479
85  3.82e+02 0.50877  9.219 2.5551
86  3.82e+02 0.50877  9.219 2.5551
87  3.82e+02 0.50877  9.219 2.5551
88  3.82e+02 0.50877  9.219 2.5551
89  3.82e+02 0.50877  9.219 2.5551
90  3.82e+02 0.50877  9.219 2.5551
91  3.82e+02 0.50877  9.219 2.5551
92  3.82e+02 0.50877  9.219 2.5551
93  3.82e+02 0.50877  9.219 2.5551
94  3.82e+02 0.50877  9.219 2.5551
95  2.24e+02 0.70628  7.804 3.0190
96  2.24e+02 0.70628  7.804 3.0190
97  2.24e+02 0.70628  7.804 3.0190
98  2.24e+02 0.70628  7.804 3.0190
99  2.24e+02 0.71400  7.533 3.0190
100 2.24e+02 0.71400  7.533 3.0190
101 1.22e+01 0.73928  0.393 2.0901
102 1.22e+01 0.73928  0.393 2.0901
103 1.22e+01 0.73928  0.393 2.0901
104 1.22e+01 0.73928  0.393 2.0901
105 1.22e+01 0.73928  0.393 2.0901
106 1.22e+01 0.73928  0.393 2.0901
107 1.22e+01 0.73928  0.393 2.0901
108 1.22e+01 0.73928  0.393 2.0901
109 1.22e+01 0.73928  0.393 2.0901
110 1.22e+01 0.73928  0.393 2.0901
111 1.22e+01 0.73928  0.393 2.0901
112 1.22e+01 0.73928  0.393 2.0901
113 1.22e+01 0.73928  0.393 2.0901
114 1.22e+01 0.73928  0.393 2.0901
115 1.22e+01 0.73928  0.393 2.0901
116 1.22e+01 0.73928  0.393 2.0901
117 1.22e+01 0.73928  0.393 2.0901
118 1.22e+01 0.73928  0.393 2.0901
119 1.22e+01 0.73928  0.393 2.0901
120 1.22e+01 0.73928  0.393 2.0901
121 1.22e+01 0.73928  0.393 2.0901
122 1.22e+01 0.73928  0.393 2.0901
123 1.22e+01 0.73928  0.393 2.0901
124 1.22e+01 0.73928  0.393 2.0901
125 1.22e+01 0.73928  0.393 2.0901
126 1.22e+01 0.73928  0.393 2.0901
127 1.22e+01 0.73928  0.393 2.0901
128 1.22e+01 0.73928  0.393 2.0901
129 1.22e+01 0.73928  0.393 2.0901
130 1.22e+01 0.73928  0.393 2.0901
131 1.22e+01 0.73928  0.393 2.0901
132 1.22e+01 0.73928  0.393 2.0901
133 1.22e+01 0.73928  0.393 2.0901
134 1.22e+01 0.73928  0.393 2.0901
135 1.22e+01 0.73928  0.393 2.0901
136 1.22e+01 0.73928  0.393 2.0901
137 1.22e+01 0.73928  0.393 2.0901
138 1.22e+01 0.73928  0.393 2.0901
139 1.22e+01 0.73928  0.393 2.0901
140 1.22e+01 0.73928  0.393 2.0901
141 1.22e+01 0.73928  0.393 2.0901
142 1.22e+01 0.73928  0.393 2.0901
143 1.22e+01 0.73928  0.393 2.0901
144 1.22e+01 0.73928  0.393 2.0901
145 1.22e+01 0.73928  0.393 2.0901
146 1.22e+01 0.73928  0.393 2.0901
147 1.22e+01 0.73928  0.393 2.0901
148 1.22e+01 0.73928  0.393 2.0901
149 1.22e+01 0.73928  0.393 2.0901
150 1.22e+01 0.73928  0.393 2.0901
151 1.22e+01 0.73928  0.393 2.0901
152 1.22e+01 0.73928  0.393 2.0901
153 1.22e+01 0.73928  0.393 2.0901
154 1.22e+01 0.73928  0.393 2.0901
155 1.22e+01 0.73928  0.393 2.0901
156 1.22e+01 0.74551  0.393 2.0901
157 1.22e+01 0.74551  0.393 2.0901
158 1.22e+01 0.74551  0.393 2.0901
159 1.22e+01 0.74551  0.393 2.0901
160 1.22e+01 0.74551  0.393 2.0901
161 1.22e+01 0.74551  0.393 2.0901
162 1.22e+01 0.74551  0.393 2.0901
163 1.22e+01 0.74551  0.393 2.0901
164 1.22e+01 0.74551  0.393 2.0901
165 1.22e+01 0.74551  0.393 2.0901
166 1.22e+01 0.74551  0.393 2.0901
167 1.22e+01 0.74551  0.393 2.0901
168 1.22e+01 0.74551  0.393 2.0901
169 1.22e+01 0.74551  0.393 2.0901
170 1.22e+01 0.74551  0.393 2.0901
171 1.22e+01 0.74551  0.393 2.0901
172 1.22e+01 0.74551  0.393 2.0901
173 1.22e+01 0.74551  0.393 2.0901
174 1.22e+01 0.74551  0.393 2.0901
175 1.22e+01 0.74551  0.393 2.0901
176 1.22e+01 0.74551  0.393 2.0901
177 1.22e+01 0.74551  0.393 2.0901
178 1.22e+01 0.74551  0.393 2.0901
179 1.22e+01 0.74551  0.393 2.0901
180 1.22e+01 0.75142  0.393 2.0901
181 1.22e+01 0.75142  0.393 2.0901
182 1.22e+01 0.75142  0.393 2.0901
183 1.22e+01 0.75142  0.393 2.0901
184 1.22e+01 0.75142  0.393 2.0901
185 1.22e+01 0.75142  0.393 2.0901
186 1.22e+01 0.75142  0.393 2.0901
187 1.22e+01 0.75142  0.393 2.0901
188 1.22e+01 0.75142  0.393 2.0901
189 1.22e+01 0.75142  0.393 2.0901
190 1.22e+01 0.75142  0.393 2.0901
191 1.22e+01 0.75142  0.393 2.0901
192 1.22e+01 0.75142  0.393 2.0901
193 1.22e+01 0.75142  0.393 2.0901
194 1.22e+01 0.75142  0.393 2.0901
195 1.22e+01 0.75142  0.393 2.0901
196 1.22e+01 0.75142  0.393 2.0901
197 1.22e+01 0.75142  0.393 2.0901
198 1.22e+01 0.75142  0.393 2.0901
199 1.22e+01 0.75142  0.393 2.0901
200 1.22e+01 0.75142  0.393 2.0901

$member$bestvalit
  [1] 3.97e+18 3.97e+18 3.97e+18 3.97e+18 1.12e+18 8.23e+17 8.23e+17 8.23e+17
  [9] 4.07e+17 8.44e+16 8.44e+16 8.44e+16 8.44e+16 5.74e+15 5.74e+15 5.74e+15
 [17] 5.74e+15 5.74e+15 5.91e+13 5.91e+13 5.91e+13 5.91e+13 5.91e+13 5.91e+13
 [25] 5.91e+13 5.91e+13 5.91e+13 5.91e+13 5.81e+13 5.28e+13 5.28e+13 5.28e+13
 [33] 2.70e+12 2.70e+12 1.58e+12 1.58e+12 1.58e+12 1.58e+12 1.53e+12 1.41e+12
 [41] 1.41e+12 1.41e+12 1.41e+12 5.80e+11 5.80e+11 5.80e+11 1.02e+11 1.02e+11
 [49] 9.83e+10 9.83e+10 3.02e+07 3.02e+07 3.02e+07 1.73e+07 1.73e+07 1.73e+07
 [57] 1.28e+07 6.82e+06 6.82e+06 6.82e+06 6.33e+06 6.33e+06 6.33e+06 6.33e+06
 [65] 6.33e+06 6.33e+06 1.71e+06 1.71e+06 1.71e+06 1.60e+06 1.51e+06 1.42e+06
 [73] 7.54e+05 7.54e+05 7.38e+05 7.38e+05 7.38e+05 7.38e+05 7.38e+05 7.01e+05
 [81] 7.01e+05 7.01e+05 7.01e+05 6.51e+05 5.47e+05 5.47e+05 5.47e+05 5.47e+05
 [89] 5.47e+05 5.47e+05 5.47e+05 5.47e+05 5.47e+05 5.47e+05 5.46e+05 5.46e+05
 [97] 5.46e+05 5.46e+05 5.10e+05 5.10e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[105] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[113] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[121] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[129] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[137] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[145] 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05 3.35e+05
[153] 3.35e+05 3.35e+05 3.35e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05
[161] 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05
[169] 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05 1.22e+05
[177] 1.22e+05 1.22e+05 1.22e+05 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04
[185] 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04
[193] 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04 6.87e+04

$member$pop
       [,1]    [,2]   [,3] [,4]
 [1,] 338.6 0.45800  6.046 2.62
 [2,] 124.6 0.47585 -0.211 1.19
 [3,] 678.1 0.25414  6.951 1.54
 [4,] 462.9 0.69014  7.967 1.93
 [5,] 459.3 0.10744  8.470 2.47
 [6,] 124.5 0.84199  4.473 2.83
 [7,] 684.4 0.15687  9.028 1.65
 [8,] 297.7 0.45949  5.815 2.86
 [9,]  20.3 0.83133  1.110 2.22
[10,] 509.8 0.11969  9.750 2.27
[11,] 295.8 0.62239  6.560 2.63
[12,] 496.3 0.47434  6.144 1.90
[13,] 382.5 0.48536  9.374 2.56
[14,] 387.7 0.76922  4.158 1.59
[15,] 190.0 0.46519  6.769 3.71
[16,] 653.1 0.21347  7.887 1.64
[17,] 385.7 0.67063  7.451 2.17
[18,] 547.9 0.42670  9.302 1.93
[19,] 187.7 0.30302 -0.182 1.34
[20,] 533.9 0.00748  9.831 2.25
[21,] 441.1 0.42769  6.448 2.21
[22,] 287.8 0.56962  6.120 2.73
[23,] 132.0 0.75256  1.290 1.61
[24,] 465.6 0.40056  9.416 2.24
[25,] 587.8 0.05263  4.367 1.95
[26,] 333.9 0.72490  7.213 2.35
[27,] 382.8 0.79690  7.794 2.02
[28,] 389.9 0.67859  4.511 1.89
[29,]  12.2 0.75142  0.393 2.09
[30,] 208.8 0.44957  7.730 3.67
[31,] 351.7 0.66942  8.295 2.46
[32,] 335.4 0.32691  1.507 2.10
[33,] 224.3 0.71400  7.533 3.02
[34,] 446.2 0.48074  6.965 2.16
[35,] 630.4 0.38322  2.909 1.41
[36,] 631.6 0.13926  8.524 1.79
[37,] 524.3 0.43515  9.164 1.98
[38,] 285.3 0.31167  5.290 3.10
[39,] 352.9 0.54909  6.287 2.50
[40,] 418.2 0.39278  8.483 2.47

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
 gamma  delta    rho     nu 
12.202  0.751  0.393  2.090 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.718 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1046 1091 1106 1149 1149 1156 1171 1208 1162 1247 1282 1595 1674 1701 1643
[16] 1619 1715 1793 1906 2009

$residuals
 [1]  -99.72 -128.46  -36.61   22.80   29.12   29.69   68.01   80.17   45.73
[10]   30.91   78.30  -54.40  -98.82   -4.56    1.53    7.18  -60.06  -36.94
[19]  -18.44  -17.33

$rss
[1] 68679

$cov.unscaled
         gamma     delta       rho        nu
gamma  2.05481 -4.76e-02 -0.083368  3.77e-03
delta -0.04760  1.10e-03  0.001933 -9.15e-05
rho   -0.08337  1.93e-03  0.003386 -1.55e-04
nu     0.00377 -9.15e-05 -0.000155  1.85e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
 gamma  delta    rho     nu 
12.202  0.751  0.393  2.090 

Elasticity of Substitution: 0.718 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   12.202     84.001    0.15     0.88    
delta    0.751      1.948    0.39     0.70    
rho      0.393      3.410    0.12     0.91    
nu       2.090      0.252    8.30   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 58.6 
Multiple R-squared: 0.961 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.718      1.757    0.41     0.68

> coef( cesLandLaborDeVrs )
 gamma  delta    rho     nu 
12.202  0.751  0.393  2.090 
> vcov( cesLandLaborDeVrs )
       gamma    delta      rho      nu
gamma 7056.1 -163.474 -286.283 12.9387
delta -163.5    3.793    6.638 -0.3141
rho   -286.3    6.638   11.626 -0.5327
nu      12.9   -0.314   -0.533  0.0634
> coef( summary( cesLandLaborDeVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   12.202     84.001   0.145 8.85e-01
delta    0.751      1.948   0.386 7.00e-01
rho      0.393      3.410   0.115 9.08e-01
nu       2.090      0.252   8.302 1.02e-16
> fitted( cesLandLaborDeVrs )
 [1] 1046 1091 1106 1149 1149 1156 1171 1208 1162 1247 1282 1595 1674 1701 1643
[16] 1619 1715 1793 1906 2009
> residuals( cesLandLaborDeVrs )
 [1]  -99.72 -128.46  -36.61   22.80   29.12   29.69   68.01   80.17   45.73
[10]   30.91   78.30  -54.40  -98.82   -4.56    1.53    7.18  -60.06  -36.94
[19]  -18.44  -17.33
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
 par1  par2  par3 
49.62  0.99 -0.99 

$optim$bestval
[1] 166013

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
    par1  par2   par3
1   47.8 0.851 -0.547
2   47.8 0.851 -0.547
3   42.1 0.989  0.296
4   42.1 0.989  0.296
5   42.1 0.989 -0.555
6   42.1 0.989 -0.555
7   49.0 0.961 -0.335
8   49.0 0.961 -0.335
9   49.0 0.961 -0.335
10  49.5 0.970 -0.671
11  49.5 0.970 -0.671
12  49.8 0.970 -0.588
13  49.5 0.970 -0.820
14  49.7 0.981 -0.706
15  49.7 0.981 -0.706
16  49.7 0.981 -0.706
17  49.7 0.981 -0.706
18  49.7 0.981 -0.706
19  49.7 0.981 -0.706
20  49.6 0.987 -0.785
21  50.0 0.982 -0.785
22  49.9 0.982 -0.813
23  49.9 0.982 -0.813
24  50.0 0.981 -0.868
25  50.0 0.981 -0.868
26  49.8 0.988 -0.868
27  49.8 0.988 -0.868
28  49.8 0.988 -0.868
29  49.8 0.988 -0.868
30  49.8 0.988 -0.868
31  49.8 0.988 -0.910
32  49.8 0.988 -0.910
33  49.9 0.986 -0.983
34  49.8 0.986 -0.966
35  49.8 0.986 -0.966
36  49.7 0.988 -0.984
37  49.7 0.988 -0.984
38  49.7 0.989 -0.986
39  49.6 0.990 -0.981
40  49.6 0.990 -0.981
41  49.6 0.990 -0.981
42  49.6 0.990 -0.981
43  49.6 0.990 -0.981
44  49.6 0.990 -0.981
45  49.6 0.990 -0.981
46  49.6 0.990 -0.981
47  49.6 0.990 -0.981
48  49.6 0.990 -0.981
49  49.6 0.990 -0.981
50  49.6 0.990 -0.981
51  49.6 0.990 -0.981
52  49.6 0.990 -0.981
53  49.6 0.990 -0.981
54  49.6 0.990 -0.981
55  49.6 0.990 -0.988
56  49.6 0.990 -0.988
57  49.6 0.990 -0.989
58  49.6 0.990 -0.989
59  49.6 0.990 -0.989
60  49.6 0.990 -0.989
61  49.6 0.990 -0.989
62  49.6 0.990 -0.989
63  49.6 0.990 -0.989
64  49.6 0.990 -0.989
65  49.6 0.990 -0.989
66  49.6 0.990 -0.989
67  49.6 0.990 -0.989
68  49.6 0.990 -0.989
69  49.6 0.990 -0.989
70  49.6 0.990 -0.989
71  49.6 0.990 -0.989
72  49.6 0.990 -0.989
73  49.6 0.990 -0.990
74  49.6 0.990 -0.990
75  49.6 0.990 -0.990
76  49.6 0.990 -0.990
77  49.6 0.990 -0.990
78  49.6 0.990 -0.990
79  49.6 0.990 -0.990
80  49.6 0.990 -0.990
81  49.6 0.990 -0.990
82  49.6 0.990 -0.990
83  49.6 0.990 -0.990
84  49.6 0.990 -0.990
85  49.6 0.990 -0.990
86  49.6 0.990 -0.990
87  49.6 0.990 -0.990
88  49.6 0.990 -0.990
89  49.6 0.990 -0.990
90  49.6 0.990 -0.990
91  49.6 0.990 -0.990
92  49.6 0.990 -0.990
93  49.6 0.990 -0.990
94  49.6 0.990 -0.990
95  49.6 0.990 -0.990
96  49.6 0.990 -0.990
97  49.6 0.990 -0.990
98  49.6 0.990 -0.990
99  49.6 0.990 -0.990
100 49.6 0.990 -0.990
101 49.6 0.990 -0.990
102 49.6 0.990 -0.990
103 49.6 0.990 -0.990
104 49.6 0.990 -0.990
105 49.6 0.990 -0.990
106 49.6 0.990 -0.990
107 49.6 0.990 -0.990
108 49.6 0.990 -0.990
109 49.6 0.990 -0.990
110 49.6 0.990 -0.990
111 49.6 0.990 -0.990
112 49.6 0.990 -0.990
113 49.6 0.990 -0.990
114 49.6 0.990 -0.990
115 49.6 0.990 -0.990
116 49.6 0.990 -0.990
117 49.6 0.990 -0.990
118 49.6 0.990 -0.990
119 49.6 0.990 -0.990
120 49.6 0.990 -0.990
121 49.6 0.990 -0.990
122 49.6 0.990 -0.990
123 49.6 0.990 -0.990
124 49.6 0.990 -0.990
125 49.6 0.990 -0.990
126 49.6 0.990 -0.990
127 49.6 0.990 -0.990
128 49.6 0.990 -0.990
129 49.6 0.990 -0.990
130 49.6 0.990 -0.990
131 49.6 0.990 -0.990
132 49.6 0.990 -0.990
133 49.6 0.990 -0.990
134 49.6 0.990 -0.990
135 49.6 0.990 -0.990
136 49.6 0.990 -0.990
137 49.6 0.990 -0.990
138 49.6 0.990 -0.990
139 49.6 0.990 -0.990
140 49.6 0.990 -0.990
141 49.6 0.990 -0.990
142 49.6 0.990 -0.990
143 49.6 0.990 -0.990
144 49.6 0.990 -0.990
145 49.6 0.990 -0.990
146 49.6 0.990 -0.990
147 49.6 0.990 -0.990
148 49.6 0.990 -0.990
149 49.6 0.990 -0.990
150 49.6 0.990 -0.990
151 49.6 0.990 -0.990
152 49.6 0.990 -0.990
153 49.6 0.990 -0.990
154 49.6 0.990 -0.990
155 49.6 0.990 -0.990
156 49.6 0.990 -0.990
157 49.6 0.990 -0.990
158 49.6 0.990 -0.990
159 49.6 0.990 -0.990
160 49.6 0.990 -0.990
161 49.6 0.990 -0.990
162 49.6 0.990 -0.990
163 49.6 0.990 -0.990
164 49.6 0.990 -0.990
165 49.6 0.990 -0.990
166 49.6 0.990 -0.990
167 49.6 0.990 -0.990
168 49.6 0.990 -0.990
169 49.6 0.990 -0.990
170 49.6 0.990 -0.990
171 49.6 0.990 -0.990
172 49.6 0.990 -0.990
173 49.6 0.990 -0.990
174 49.6 0.990 -0.990
175 49.6 0.990 -0.990
176 49.6 0.990 -0.990
177 49.6 0.990 -0.990
178 49.6 0.990 -0.990
179 49.6 0.990 -0.990
180 49.6 0.990 -0.990
181 49.6 0.990 -0.990
182 49.6 0.990 -0.990
183 49.6 0.990 -0.990
184 49.6 0.990 -0.990
185 49.6 0.990 -0.990
186 49.6 0.990 -0.990
187 49.6 0.990 -0.990
188 49.6 0.990 -0.990
189 49.6 0.990 -0.990
190 49.6 0.990 -0.990
191 49.6 0.990 -0.990
192 49.6 0.990 -0.990
193 49.6 0.990 -0.990
194 49.6 0.990 -0.990
195 49.6 0.990 -0.990
196 49.6 0.990 -0.990
197 49.6 0.990 -0.990
198 49.6 0.990 -0.990
199 49.6 0.990 -0.990
200 49.6 0.990 -0.990

$member$bestvalit
  [1] 2369621 2369621 1603098 1603098 1188221 1188221  400322  400322  400322
 [10]  205213  205213  203072  193019  172761  172761  172761  172761  172761
 [19]  172761  167647  167101  166961  166961  166910  166910  166153  166153
 [28]  166153  166153  166153  166126  166126  166106  166096  166096  166060
 [37]  166060  166054  166033  166033  166033  166033  166026  166026  166026
 [46]  166026  166026  166019  166019  166019  166019  166019  166019  166019
 [55]  166018  166018  166016  166016  166016  166016  166016  166013  166013
 [64]  166013  166013  166013  166013  166013  166013  166013  166013  166013
 [73]  166013  166013  166013  166013  166013  166013  166013  166013  166013
 [82]  166013  166013  166013  166013  166013  166013  166013  166013  166013
 [91]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[100]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[109]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[118]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[127]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[136]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[145]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[154]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[163]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[172]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[181]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[190]  166013  166013  166013  166013  166013  166013  166013  166013  166013
[199]  166013  166013

$member$pop
      [,1] [,2]  [,3]
 [1,] 49.6 0.99 -0.99
 [2,] 49.6 0.99 -0.99
 [3,] 49.6 0.99 -0.99
 [4,] 49.6 0.99 -0.99
 [5,] 49.6 0.99 -0.99
 [6,] 49.6 0.99 -0.99
 [7,] 49.6 0.99 -0.99
 [8,] 49.6 0.99 -0.99
 [9,] 49.6 0.99 -0.99
[10,] 49.6 0.99 -0.99
[11,] 49.6 0.99 -0.99
[12,] 49.6 0.99 -0.99
[13,] 49.6 0.99 -0.99
[14,] 49.6 0.99 -0.99
[15,] 49.6 0.99 -0.99
[16,] 49.6 0.99 -0.99
[17,] 49.6 0.99 -0.99
[18,] 49.6 0.99 -0.99
[19,] 49.6 0.99 -0.99
[20,] 49.6 0.99 -0.99
[21,] 49.6 0.99 -0.99
[22,] 49.6 0.99 -0.99
[23,] 49.6 0.99 -0.99
[24,] 49.6 0.99 -0.99
[25,] 49.6 0.99 -0.99
[26,] 49.6 0.99 -0.99
[27,] 49.6 0.99 -0.99
[28,] 49.6 0.99 -0.99
[29,] 49.6 0.99 -0.99
[30,] 49.6 0.99 -0.99

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
49.62  0.99 -0.99 

$iter
[1] 200

$ela
E_1_2 (all) 
        100 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1833 1936

$residuals
 [1] -203.92 -226.62 -143.83  -52.44  -46.12  -54.14  -33.98   12.26  -29.79
[10]   -2.83   44.98   72.83   46.17  114.06   95.71   59.39    6.86   32.77
[19]   54.08   56.39

$rss
[1] 166013

$cov.unscaled
        gamma  delta     rho
gamma  2206.4 -64.36 -2181.2
delta   -64.4   1.88    63.6
rho   -2181.2  63.64  2157.5

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

Elasticity of Substitution: 100 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    49.62    4279.59    0.01     0.99
delta     0.99     124.84    0.01     0.99
rho      -0.99    4231.81    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      100   42318097       0        1

> coef( cesLandLaborDe2 )
gamma delta   rho 
49.62  0.99 -0.99 
> vcov( cesLandLaborDe2 )
          gamma   delta       rho
gamma  18314845 -534259 -18105166
delta   -534259   15585    528229
rho   -18105166  528229  17908214
> coef( summary( cesLandLaborDe2 ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma    49.62       4280  0.011594    0.991
delta     0.99        125  0.007930    0.994
rho      -0.99       4232 -0.000234    1.000
> fitted( cesLandLaborDe2 )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1833 1936
> residuals( cesLandLaborDe2 )
 [1] -203.92 -226.62 -143.83  -52.44  -46.12  -54.14  -33.98   12.26  -29.79
[10]   -2.83   44.98   72.83   46.17  114.06   95.71   59.39    6.86   32.77
[19]   54.08   56.39
> 
> # Land & Labor with constant returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # Land & Labor with variable returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls", vrs = TRUE ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ## CES: Land & Intermediate Inputs (Nelder-Mead)
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "NM" )
> print.default( cesLandInt )
$optim
$optim$par
 gamma  delta    rho 
32.211  0.201  3.800 

$optim$value
[1] 165837

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho 
32.211  0.201  3.800 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.208 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.86 -226.58 -143.81  -52.41  -46.09  -54.12  -33.99   12.27  -29.76
[10]   -2.80   44.98   72.82   46.13  113.98   95.64   59.29    6.73   32.59
[19]   53.84   56.09

$rss
[1] 165837

$cov.unscaled
          gamma    delta       rho
gamma 823971532 23546906 -47474415
delta  23546906   672910  -1356720
rho   -47474415 -1356720   2735648

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Coefficients:
 gamma  delta    rho 
32.211  0.201  3.800 

Elasticity of Substitution: 0.208 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 3.22e+01   2.61e+06       0        1
delta 2.01e-01   7.47e+04       0        1
rho   3.80e+00   1.51e+05       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.208   6536.338       0        1

> coef( summary( cesLandInt ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   32.211    2613858 1.23e-05        1
delta    0.201      74697 2.69e-06        1
rho      3.800     150611 2.52e-05        1
> 
> # variable returns to scale (Nelder-Mead)
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandIntVrs )
$optim
$optim$par
 gamma  delta    rho     nu 
1.0022 0.0217 1.6840 1.3134 

$optim$value
[1] 71996

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
1.0022 0.0217 1.6840 1.3134 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.373 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta   rho    nu 
13.62  0.50  0.25  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1071 1133 1159 1188 1186 1206 1249 1242 1197 1247 1298 1499 1585 1644 1578
[16] 1587 1663 1741 1877 2014

$residuals
 [1] -125.10 -170.21  -89.00  -16.50   -7.81  -20.56   -9.42   46.85   10.58
[10]   31.23   62.40   41.84   -9.81   52.11   66.93   38.80   -7.67   14.72
[19]   10.22  -22.47

$rss
[1] 71996

$cov.unscaled
          gamma     delta       rho        nu
gamma  2.56e-02  2.38e-03 -3.60e-02 -5.42e-05
delta  2.38e-03  2.24e-04 -3.38e-03 -2.65e-06
rho   -3.60e-02 -3.38e-03  5.11e-02  3.44e-05
nu    -5.42e-05 -2.65e-06  3.44e-05  3.44e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
 gamma  delta    rho     nu 
1.0022 0.0217 1.6840 1.3134 

Elasticity of Substitution: 0.373 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.0022     9.5948    0.10     0.92    
delta   0.0217     0.8972    0.02     0.98    
rho     1.6840    13.5668    0.12     0.90    
nu      1.3134     0.1113   11.80   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 60 
Multiple R-squared: 0.959 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.373      1.883     0.2     0.84

> coef( summary( cesLandIntVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   1.0022      9.595  0.1045 9.17e-01
delta   0.0217      0.897  0.0242 9.81e-01
rho     1.6840     13.567  0.1241 9.01e-01
nu      1.3134      0.111 11.7967 4.06e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
 gamma  delta    rho 
13.620  0.482  0.290 

$optim$value
[1] 257636

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho 
13.620  0.482  0.290 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.775 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1152 1211 1229 1263 1260 1276 1310 1297 1265 1301 1346 1501 1569 1605 1544
[16] 1545 1588 1638 1732 1827

$residuals
 [1] -206.25 -247.87 -158.97  -91.42  -81.49  -90.58  -70.72   -8.74  -57.07
[10]  -22.75   14.79   39.38    6.26   91.09  100.35   81.11   67.06  117.43
[19]  155.51  164.80

$rss
[1] 257689

$cov.unscaled
       gamma   delta     rho
gamma 12.076  0.5827 -0.7490
delta  0.583  0.0281 -0.0361
rho   -0.749 -0.0361  0.0465

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
 gamma  delta    rho 
13.620  0.482  0.290 

Elasticity of Substitution: 0.775 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   13.620    394.445    0.03     0.97
delta    0.482     19.035    0.03     0.98
rho      0.290     24.470    0.01     0.99

Residual standard error: 114 
Multiple R-squared: 0.854 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.775     14.696    0.05     0.96

> coef( summary( cesLandIntCg ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   13.620      394.4  0.0345    0.972
delta    0.482       19.0  0.0253    0.980
rho      0.290       24.5  0.0119    0.991
> 
> # using the SANN optimization method
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN", random.seed = 234 )
> print.default( cesLandIntSann )
$optim
$optim$par
 gamma  delta    rho 
13.148  0.021  2.925 

$optim$value
[1] 166684

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho 
13.148  0.021  2.925 

$iter
[1] 10000

$ela
E_1_2 (all) 
      0.255 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1151 1191 1215 1226 1226 1241 1275 1278 1239 1283 1317 1470 1531 1584 1550
[16] 1568 1649 1723 1833 1935

$residuals
 [1] -204.81 -227.81 -144.99  -53.88  -47.52  -55.58  -35.48   10.96  -31.11
[10]   -4.10   43.53   71.21   44.39  112.41   94.48   58.39    6.49   32.84
[19]   54.39   56.71

$rss
[1] 166684

$cov.unscaled
       gamma  delta     rho
gamma 5005.0 41.399 -650.12
delta   41.4  0.342   -5.38
rho   -650.1 -5.378   84.47

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Coefficients:
 gamma  delta    rho 
13.148  0.021  2.925 

Elasticity of Substitution: 0.255 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   13.148   6458.526       0        1
delta    0.021     53.423       0        1
rho      2.925    839.040       0        1

Residual standard error: 91.3 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.255     54.471       0        1

> coef( summary( cesLandIntSann ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   13.148     6458.5 0.002036    0.998
delta    0.021       53.4 0.000393    1.000
rho      2.925      839.0 0.003486    0.997
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
 gamma  delta    rho 
35.469  0.238  4.401 

$optim$value
[1] 165833

$optim$counts
function gradient 
     421      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho 
35.469  0.238  4.401 

$iter
function gradient 
     421      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.185 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.87 -226.59 -143.82  -52.42  -46.10  -54.13  -34.00   12.25  -29.78
[10]   -2.81   44.97   72.81   46.12  113.97   95.63   59.28    6.70   32.56
[19]   53.81   56.06

$rss
[1] 165833

$cov.unscaled
          gamma     delta       rho
gamma  4.90e+10  1.68e+09 -3.00e+09
delta  1.68e+09  5.76e+07 -1.03e+08
rho   -3.00e+09 -1.03e+08  1.84e+08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
 gamma  delta    rho 
35.469  0.238  4.401 

Elasticity of Substitution: 0.185 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence NOT achieved after 421 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 3.55e+01   2.02e+07       0        1
delta 2.38e-01   6.91e+05       0        1
rho   4.40e+00   1.23e+06       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.85e-01   4.23e+04       0        1

> coef( summary( cesLandIntBfgs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   35.469   20153932 1.76e-06        1
delta    0.238     691139 3.44e-07        1
rho      4.401    1234311 3.57e-06        1
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B" )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
 gamma  delta    rho 
49.143  1.000  0.651 

$optim$value
[1] 165832

$optim$counts
function gradient 
      24       24 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
 gamma  delta    rho 
49.143  1.000  0.651 

$iter
function gradient 
      24       24 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
      0.606 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  5.11e-01  7.73e-03 -2.39e+10
delta  7.73e-03  1.17e-04 -2.78e+08
rho   -2.39e+10 -2.78e+08  4.22e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
 gamma  delta    rho 
49.143  1.000  0.651 

Elasticity of Substitution: 0.606 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 24 function and 24 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.91e+01   6.51e+01    0.75     0.45
delta 1.00e+00   9.85e-01    1.02     0.31
rho   6.51e-01   1.87e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 6.06e-01   6.86e+12       0        1

> coef( summary( cesLandIntBfgsCon ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   49.143   6.51e+01 7.55e-01     0.45
delta    1.000   9.85e-01 1.02e+00     0.31
rho      0.651   1.87e+13 3.48e-14     1.00
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
     a_0      a_1      a_2    b_1_1    b_1_2    b_2_2 
-110.376   -0.921   35.414   -2.564    1.635   -6.187 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df    RSS Df Sum of Sq    F Pr(>F)    
1     17 0.1070                             
2     14 0.0178  3    0.0892 23.4  1e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
          18.13            9.95           -8.95            2.81           -2.81 
      eq1_b_2_2 
           2.81 

$coefficients
   gamma    delta      rho 
7.46e+07 9.95e+00 3.15e-02 

$vcov
          gamma     delta       rho
gamma  3.67e+18  3.15e+10 -9.75e+07
delta  3.15e+10  2.71e+02 -8.38e-01
rho   -9.75e+07 -8.38e-01  2.59e-03

$ela
E_1_2 (all) 
      0.969 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  5.80  4.77  5.26  4.02  4.19  4.22  4.37  5.22  4.67  5.31  4.91  5.49
[13]  5.45  6.66  8.42  9.99 14.75 18.68 21.86 23.33

$residuals
 [1]  940  958 1064 1168 1174 1182 1235 1283 1203 1273 1356 1535 1570 1689 1636
[16] 1616 1640 1737 1866 1969

$rss
[1] 41177199

$cov.unscaled
         gamma    delta      rho
gamma 3.93e+19 5.39e+11 1.96e+09
delta 5.39e+11 7.39e+03 2.68e+01
rho   1.96e+09 2.68e+01 9.72e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
   gamma    delta      rho 
7.46e+07 9.95e+00 3.15e-02 

Elasticity of Substitution: 0.969 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 1.02e-05

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 7.46e+07   1.92e+09    0.04     0.97
delta 9.95e+00   1.65e+01    0.60     0.55
rho   3.15e-02   5.09e-02    0.62     0.54

Residual standard error: 1435 
Multiple R-squared: -22.3 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)   0.9694     0.0479    20.2   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( summary( cesLandIntKmentaCrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma 7.46e+07   1.92e+09   0.039    0.969
delta 9.95e+00   1.65e+01   0.604    0.546
rho   3.15e-02   5.09e-02   0.619    0.536
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
     a_0      a_1      a_2    b_1_1    b_1_2    b_2_2 
-110.376   -0.921   35.414   -2.564    1.635   -6.187 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df    RSS Df Sum of Sq    F Pr(>F)  
1     16 0.0326                           
2     14 0.0178  2    0.0148 5.82  0.014 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
         -5.249          -1.919           3.617          -0.931           0.931 
      eq1_b_2_2 
         -0.931 

$coefficients
   gamma    delta      rho       nu 
 0.00525 -1.13031 -0.22766  1.69768 

$vcov
         gamma  delta     rho       nu
gamma  0.00629  0.445 -0.0781 -0.00234
delta  0.44473 31.596 -5.5448 -0.12459
rho   -0.07809 -5.545  0.9732  0.02274
nu    -0.00234 -0.125  0.0227  0.01332

$ela
E_1_2 (all) 
       1.29 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  7320  8738  8679 10195  9972 10227 10655  9744  9646  9742 10774 12960
[13] 14236 13821 11673 10948 10010  9775 10345 11280

$residuals
 [1]  -6374  -7776  -7609  -9023  -8794  -9041  -9416  -8456  -8438  -8464
[11]  -9414 -11419 -12661 -12125 -10028  -9322  -8355  -8020  -8458  -9288

$rss
[1] 1.71e+09

$cov.unscaled
          gamma     delta       rho        nu
gamma  2.23e-07  2.79e-05  3.72e-06 -1.09e-08
delta  2.79e-05  3.49e-03  4.65e-04 -1.08e-06
rho    3.72e-06  4.65e-04  6.20e-05 -1.47e-07
nu    -1.09e-08 -1.08e-06 -1.47e-07  5.43e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
   gamma    delta      rho       nu 
 0.00525 -1.13031 -0.22766  1.69768 

Elasticity of Substitution: 1.29 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.0144

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.00525    0.07930    0.07     0.95    
delta -1.13031    5.62101   -0.20     0.84    
rho   -0.22766    0.98651   -0.23     0.82    
nu     1.69768    0.11542   14.71   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 9242 
Multiple R-squared: -964 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.29       1.65    0.78     0.43

> coef( summary( cesLandIntKmenta ) )
      Estimate Std. Error t value Pr(>|t|)
gamma  0.00525     0.0793  0.0662 9.47e-01
delta -1.13031     5.6210 -0.2011 8.41e-01
rho   -0.22766     0.9865 -0.2308 8.17e-01
nu     1.69768     0.1154 14.7083 5.70e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347886622, 0.851862754101602, 4.36180424036389 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
 gamma  delta    rho 
47.369  0.852  4.362 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
      0.187 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.36  -46.04  -54.07  -33.94   12.32  -29.72
[10]   -2.75   45.03   72.88   46.20  114.05   95.70   59.35    6.78   32.65
[19]   53.89   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  8.75e+10  7.46e+09 -1.91e+10
delta  7.46e+09  6.36e+08 -1.63e+09
rho   -1.91e+10 -1.63e+09  4.20e+09

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
47.369  0.852  4.362 

Elasticity of Substitution: 0.187 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.74e+01   2.69e+07       0        1
delta 8.52e-01   2.30e+06       0        1
rho   4.36e+00   5.90e+06       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.87e-01   2.05e+05       0        1

> coef( summary( cesLandIntLm ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   47.369   26929633 1.76e-06        1
delta    0.852    2296976 3.71e-07        1
rho      4.362    5898872 7.39e-07        1
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166069

$nlm$estimate
[1] 13.8832  0.0115  3.5321

$nlm$gradient
[1]    1825 -644476   -9759

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
  gamma   delta     rho 
13.8832  0.0115  3.5321 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.221 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1190 1214 1225 1225 1240 1274 1277 1238 1282 1316 1469 1530 1583 1550
[16] 1567 1649 1723 1834 1936

$residuals
 [1] -204.23 -227.02 -144.24  -52.91  -46.59  -54.63  -34.51   11.79  -30.24
[10]   -3.27   44.47   72.25   45.52  113.41   95.18   58.90    6.51   32.51
[19]   53.84   56.11

$rss
[1] 166069

$cov.unscaled
      gamma  delta     rho
gamma 53925 268.55 -7652.8
delta   269   1.34   -38.1
rho   -7653 -38.12  1086.3

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
  gamma   delta     rho 
13.8832  0.0115  3.5321 

Elasticity of Substitution: 0.221 

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 1.39e+01   2.12e+04       0        1
delta 1.15e-02   1.05e+02       0        1
rho   3.53e+00   3.00e+03       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.221    146.219       0        1

> coef( summary( cesLandIntNewton ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma  13.8832      21160 0.000656    0.999
delta   0.0115        105 0.000109    1.000
rho     3.5321       3003 0.001176    0.999
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
 gamma  delta    rho 
41.982  0.398  5.852 

$nlminb$objective
[1] 165832

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     200      151 

$nlminb$message
[1] "iteration limit reached without convergence (10)"


$coefficients
 gamma  delta    rho 
41.982  0.398  5.852 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (10)"

$ela
E_1_2 (all) 
      0.146 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.36  -46.04  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.03   72.88   46.20  114.05   95.70   59.35    6.78   32.65
[19]   53.89   56.15

$rss
[1] 165832

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
 gamma  delta    rho 
41.982  0.398  5.852 

Elasticity of Substitution: 0.146 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   41.982         NA      NA       NA
delta    0.398         NA      NA       NA
rho      5.852         NA      NA       NA

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.146         NA      NA       NA

> coef( summary( cesLandIntPort ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   41.982         NA      NA       NA
delta    0.398         NA      NA       NA
rho      5.852         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
 gamma  delta    rho 
36.832  0.247  4.851 

$nlminb$objective
[1] 165833

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 141

$nlminb$evaluations
function gradient 
     200      141 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
 gamma  delta    rho 
36.832  0.247  4.851 

$iter
[1] 141

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
      0.171 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta   rho 
13.62  0.50  0.25 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.83 -226.55 -143.78  -52.37  -46.05  -54.08  -33.95   12.30  -29.73
[10]   -2.77   45.02   72.86   46.18  114.02   95.68   59.33    6.76   32.62
[19]   53.87   56.13

$rss
[1] 165833

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
 gamma  delta    rho 
36.832  0.247  4.851 

Elasticity of Substitution: 0.171 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 141 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   36.832         NA      NA       NA
delta    0.247         NA      NA       NA
rho      4.851         NA      NA       NA

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.171         NA      NA       NA

> coef( summary( cesLandIntPortCon ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   36.832         NA      NA       NA
delta    0.247         NA      NA       NA
rho      4.851         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
 gamma  delta    rho     nu 
 2.073  0.863 -0.411  1.581 

$nlminb$objective
[1] 50300

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 125

$nlminb$evaluations
function gradient 
     200      125 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
 gamma  delta    rho     nu 
 2.073  0.863 -0.411  1.581 

$iter
[1] 125

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
        1.7 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta   rho    nu 
13.62  0.50  0.25  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1004 1092 1115 1175 1168 1193 1243 1217 1172 1223 1294 1538 1650 1703 1592
[16] 1587 1647 1725 1881 2047

$residuals
 [1]  -57.94 -129.23  -45.71   -2.98   10.13   -7.11   -3.43   71.12   35.51
[10]   55.68   67.03    3.09  -75.43   -6.88   52.58   38.70    7.93   30.66
[19]    6.34  -54.91

$rss
[1] 50300

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.098534  1.43e-02 -3.89e-02 -1.18e-04
delta  0.014316  2.09e-03 -5.68e-03 -1.18e-05
rho   -0.038896 -5.68e-03  1.55e-02  2.94e-05
nu    -0.000118 -1.18e-05  2.94e-05  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
 gamma  delta    rho     nu 
 2.073  0.863 -0.411  1.581 

Elasticity of Substitution: 1.7 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 125 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   2.0733    15.7420    0.13     0.90    
delta   0.8635     2.2922    0.38     0.71    
rho    -0.4112     6.2337   -0.07     0.95    
nu      1.5808     0.0932   16.97   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.1 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.7       18.0    0.09     0.92

> coef( summary( cesLandIntPortVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    2.073    15.7420   0.132 8.95e-01
delta    0.863     2.2922   0.377 7.06e-01
rho     -0.411     6.2337  -0.066 9.47e-01
nu       1.581     0.0932  16.971 1.36e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
 gamma  delta    rho     nu 
 1.763  0.811 -0.288  1.581 

$nlminb$objective
[1] 50198

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 129

$nlminb$evaluations
function gradient 
     200      129 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
 gamma  delta    rho     nu 
 1.763  0.811 -0.288  1.581 

$iter
[1] 129

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
        1.4 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta   rho    nu 
13.62  0.50  0.25  1.00 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1004 1092 1115 1175 1168 1193 1243 1218 1172 1223 1294 1538 1650 1703 1593
[16] 1588 1647 1725 1881 2046

$residuals
 [1]  -58.14 -129.28  -45.84   -2.76   10.28   -6.95   -3.28   71.02   35.52
[10]   55.56   67.04    3.06  -75.38   -7.14   52.12   38.22    7.70   30.76
[19]    6.68  -54.53

$rss
[1] 50198

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.094486  0.018197 -3.81e-02 -1.11e-04
delta  0.018197  0.003517 -7.37e-03 -1.50e-05
rho   -0.038084 -0.007366  1.54e-02  2.89e-05
nu    -0.000111 -0.000015  2.89e-05  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
 gamma  delta    rho     nu 
 1.763  0.811 -0.288  1.581 

Elasticity of Substitution: 1.4 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 129 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.7635    15.3997    0.11     0.91    
delta   0.8114     2.9710    0.27     0.78    
rho    -0.2879     6.2235   -0.05     0.96    
nu      1.5810     0.0931   16.99   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.1 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.4       12.3    0.11     0.91

> coef( summary( cesLandIntPortVrsCon ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.763    15.3997  0.1145 9.09e-01
delta    0.811     2.9710  0.2731 7.85e-01
rho     -0.288     6.2235 -0.0463 9.63e-01
nu       1.581     0.0931 16.9907 9.62e-65
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
 par1  par2  par3 
45.46  0.58  7.00 

$optim$bestval
[1] 165832

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
        par1  par2 par3
1   4.21e+08 0.466 5.74
2   5.40e+07 0.695 3.84
3   5.40e+07 0.695 3.84
4   5.40e+07 0.695 3.84
5   5.40e+07 0.695 3.84
6   5.40e+07 0.695 4.02
7   1.44e+07 0.708 3.16
8   1.44e+07 0.708 3.16
9   1.44e+07 0.708 3.16
10  1.44e+07 0.708 3.16
11  1.39e+07 0.466 5.74
12  1.39e+07 0.466 6.75
13  4.53e+06 0.734 7.87
14  4.53e+06 0.734 7.87
15  4.53e+06 0.734 7.95
16  4.07e+06 0.717 7.54
17  4.07e+06 0.717 7.54
18  2.01e+06 0.370 6.71
19  4.09e+05 0.518 8.03
20  4.09e+05 0.518 8.03
21  4.09e+05 0.518 8.03
22  4.09e+05 0.518 8.03
23  4.09e+05 0.518 8.03
24  4.09e+05 0.814 8.10
25  4.09e+05 0.814 8.10
26  1.92e+05 0.857 5.40
27  1.92e+05 0.857 5.40
28  1.64e+05 0.459 6.85
29  1.64e+05 0.459 6.85
30  1.64e+05 0.459 6.85
31  4.94e+04 0.751 4.75
32  4.94e+04 0.751 4.75
33  4.94e+04 0.751 4.75
34  4.94e+04 0.846 4.75
35  4.94e+04 0.846 4.75
36  1.04e+04 0.644 1.64
37  1.04e+04 0.644 1.64
38  1.04e+04 0.644 1.64
39  1.04e+04 0.644 6.68
40  7.67e+03 0.828 8.10
41  4.75e+03 0.626 9.66
42  1.16e+03 0.983 8.35
43  1.16e+03 0.983 8.35
44  1.16e+03 0.983 8.35
45  1.16e+03 0.983 8.35
46  1.16e+03 0.983 8.35
47  1.16e+03 0.983 8.35
48  2.41e+02 0.956 6.51
49  2.41e+02 0.956 6.51
50  1.85e+02 0.804 7.27
51  1.85e+02 0.804 7.27
52  1.85e+02 0.804 7.27
53  1.85e+02 0.804 7.27
54  1.85e+02 0.804 7.27
55  1.85e+02 0.804 7.27
56  1.85e+02 0.804 7.27
57  1.78e+02 0.883 6.47
58  1.78e+02 0.883 6.47
59  6.22e+01 0.778 6.73
60  6.22e+01 0.778 6.73
61  4.26e+01 0.567 7.50
62  4.26e+01 0.567 7.50
63  4.26e+01 0.567 6.74
64  4.26e+01 0.567 6.74
65  4.26e+01 0.557 6.74
66  4.26e+01 0.557 6.74
67  4.26e+01 0.557 6.74
68  4.26e+01 0.557 6.74
69  4.26e+01 0.557 6.74
70  4.71e+01 0.515 7.14
71  4.17e+01 0.294 7.29
72  4.17e+01 0.307 7.29
73  4.17e+01 0.307 7.29
74  4.17e+01 0.307 7.29
75  4.01e+01 0.232 7.25
76  4.01e+01 0.232 7.25
77  4.01e+01 0.232 7.25
78  4.01e+01 0.232 7.25
79  4.17e+01 0.307 7.18
80  4.17e+01 0.307 7.18
81  4.17e+01 0.307 7.18
82  4.17e+01 0.307 7.18
83  4.17e+01 0.307 7.18
84  4.17e+01 0.307 7.18
85  4.17e+01 0.307 7.18
86  4.17e+01 0.307 7.18
87  4.17e+01 0.307 7.18
88  4.17e+01 0.307 7.18
89  4.17e+01 0.307 7.18
90  4.55e+01 0.523 8.41
91  4.55e+01 0.523 8.41
92  4.55e+01 0.523 8.41
93  4.49e+01 0.530 7.11
94  4.49e+01 0.530 7.11
95  4.49e+01 0.530 7.11
96  4.49e+01 0.530 7.11
97  4.49e+01 0.530 7.11
98  4.49e+01 0.530 7.11
99  4.49e+01 0.530 7.11
100 4.49e+01 0.530 7.11
101 4.45e+01 0.420 8.78
102 4.45e+01 0.420 8.78
103 4.45e+01 0.420 8.78
104 4.45e+01 0.420 8.78
105 4.45e+01 0.420 8.78
106 4.45e+01 0.420 8.78
107 4.45e+01 0.420 8.78
108 4.45e+01 0.420 8.78
109 4.45e+01 0.420 8.78
110 4.45e+01 0.420 8.78
111 4.45e+01 0.420 8.78
112 4.45e+01 0.420 8.78
113 4.45e+01 0.420 8.78
114 4.45e+01 0.420 8.78
115 4.45e+01 0.420 8.78
116 4.45e+01 0.420 8.78
117 4.46e+01 0.424 8.82
118 4.46e+01 0.424 8.82
119 4.46e+01 0.424 8.82
120 4.46e+01 0.424 8.82
121 4.46e+01 0.424 8.82
122 4.46e+01 0.424 8.82
123 4.46e+01 0.424 8.82
124 4.46e+01 0.424 8.82
125 4.46e+01 0.424 8.82
126 4.46e+01 0.424 8.82
127 4.46e+01 0.424 8.82
128 4.46e+01 0.424 8.82
129 4.46e+01 0.424 8.82
130 4.46e+01 0.424 8.82
131 4.55e+01 0.580 7.00
132 4.55e+01 0.580 7.00
133 4.55e+01 0.580 7.00
134 4.55e+01 0.580 7.00
135 4.55e+01 0.580 7.00
136 4.55e+01 0.580 7.00
137 4.55e+01 0.580 7.00
138 4.55e+01 0.580 7.00
139 4.55e+01 0.580 7.00
140 4.55e+01 0.580 7.00
141 4.55e+01 0.580 7.00
142 4.55e+01 0.580 7.00
143 4.55e+01 0.580 7.00
144 4.55e+01 0.580 7.00
145 4.55e+01 0.580 7.00
146 4.55e+01 0.580 7.00
147 4.55e+01 0.580 7.00
148 4.55e+01 0.580 7.00
149 4.55e+01 0.580 7.00
150 4.55e+01 0.580 7.00
151 4.55e+01 0.580 7.00
152 4.55e+01 0.580 7.00
153 4.55e+01 0.580 7.00
154 4.55e+01 0.580 7.00
155 4.55e+01 0.580 7.00
156 4.55e+01 0.580 7.00
157 4.55e+01 0.580 7.00
158 4.55e+01 0.580 7.00
159 4.55e+01 0.580 7.00
160 4.55e+01 0.580 7.00
161 4.55e+01 0.580 7.00
162 4.55e+01 0.580 7.00
163 4.55e+01 0.580 7.00
164 4.55e+01 0.580 7.00
165 4.55e+01 0.580 7.00
166 4.55e+01 0.580 7.00
167 4.55e+01 0.580 7.00
168 4.55e+01 0.580 7.00
169 4.55e+01 0.580 7.00
170 4.55e+01 0.580 7.00
171 4.55e+01 0.580 7.00
172 4.55e+01 0.580 7.00
173 4.55e+01 0.580 7.00
174 4.55e+01 0.580 7.00
175 4.55e+01 0.580 7.00
176 4.55e+01 0.580 7.00
177 4.55e+01 0.580 7.00
178 4.55e+01 0.580 7.00
179 4.55e+01 0.580 7.00
180 4.55e+01 0.580 7.00
181 4.55e+01 0.580 7.00
182 4.55e+01 0.580 7.00
183 4.55e+01 0.580 7.00
184 4.55e+01 0.580 7.00
185 4.55e+01 0.580 7.00
186 4.55e+01 0.580 7.00
187 4.55e+01 0.580 7.00
188 4.55e+01 0.580 7.00
189 4.55e+01 0.580 7.00
190 4.55e+01 0.580 7.00
191 4.55e+01 0.580 7.00
192 4.55e+01 0.580 7.00
193 4.55e+01 0.580 7.00
194 4.55e+01 0.580 7.00
195 4.55e+01 0.580 7.00
196 4.55e+01 0.580 7.00
197 4.55e+01 0.580 7.00
198 4.55e+01 0.580 7.00
199 4.55e+01 0.580 7.00
200 4.55e+01 0.580 7.00

$member$bestvalit
  [1] 3.97e+21 6.06e+19 6.06e+19 6.06e+19 6.06e+19 6.01e+19 4.46e+18 4.46e+18
  [9] 4.46e+18 4.46e+18 4.31e+18 4.14e+18 3.82e+17 3.82e+17 3.81e+17 3.11e+17
 [17] 3.11e+17 9.38e+16 3.39e+15 3.39e+15 3.39e+15 3.39e+15 3.39e+15 3.03e+15
 [25] 3.03e+15 6.72e+14 6.72e+14 5.81e+14 5.81e+14 5.81e+14 4.72e+13 4.72e+13
 [33] 4.72e+13 4.49e+13 4.49e+13 3.14e+12 3.14e+12 3.14e+12 2.11e+12 1.05e+12
 [41] 4.20e+11 2.13e+10 2.13e+10 2.13e+10 2.13e+10 2.13e+10 2.13e+10 6.44e+08
 [49] 6.44e+08 3.44e+08 3.44e+08 3.44e+08 3.44e+08 3.44e+08 3.44e+08 3.44e+08
 [57] 3.02e+08 3.02e+08 4.27e+06 4.27e+06 3.40e+05 3.40e+05 2.99e+05 2.99e+05
 [65] 2.88e+05 2.88e+05 2.88e+05 2.88e+05 2.88e+05 2.74e+05 1.66e+05 1.66e+05
 [73] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [81] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [89] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [97] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[105] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[113] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[121] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[129] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[137] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[145] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[153] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[161] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[169] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[177] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[185] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[193] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05

$member$pop
      [,1]  [,2]  [,3]
 [1,] 41.4 0.184  9.87
 [2,] 45.8 0.648  6.20
 [3,] 44.7 0.460  8.22
 [4,] 44.4 0.459  7.71
 [5,] 45.3 0.557  7.26
 [6,] 45.6 0.609  6.68
 [7,] 43.2 0.411  6.87
 [8,] 45.5 0.580  7.00
 [9,] 46.2 0.708  5.56
[10,] 43.1 0.486  5.47
[11,] 45.3 0.568  6.96
[12,] 45.6 0.586  7.15
[13,] 41.7 0.307  7.18
[14,] 46.2 0.714  5.49
[15,] 45.2 0.530  7.51
[16,] 46.1 0.686  5.94
[17,] 46.0 0.672  5.93
[18,] 45.5 0.578  7.12
[19,] 45.7 0.611  6.79
[20,] 44.5 0.410  9.07
[21,] 45.4 0.580  6.90
[22,] 45.5 0.592  6.75
[23,] 44.8 0.480  7.99
[24,] 45.0 0.515  7.63
[25,] 42.5 0.232 10.00
[26,] 45.6 0.618  6.53
[27,] 44.6 0.444  8.32
[28,] 43.2 0.425  6.62
[29,] 45.6 0.601  6.83
[30,] 46.5 0.743  5.39

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
45.46  0.58  7.00 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.125 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.06  -33.93   12.32  -29.71
[10]   -2.74   45.04   72.89   46.20  114.05   95.71   59.36    6.79   32.65
[19]   53.90   56.16

$rss
[1] 165832

$cov.unscaled
         gamma    delta      rho
gamma 5.51e+11 2.41e+10 5.57e+11
delta 2.41e+10 2.15e+09 0.00e+00
rho   5.57e+11 0.00e+00 1.10e+12

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
45.46  0.58  7.00 

Elasticity of Substitution: 0.125 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.55e+01   6.76e+07       0        1
delta 5.80e-01   4.22e+06       0        1
rho   7.00e+00   9.55e+07       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.25e-01   1.49e+06       0        1

> coef( summary( cesLandIntDe ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    45.46   67612473 6.72e-07        1
delta     0.58    4219729 1.37e-07        1
rho       7.00   95481571 7.33e-08        1
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
  par1   par2   par3   par4 
44.868  0.365  7.496  0.989 

$optim$bestval
[1] 172951

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
        par1   par2     par3    par4
1   6.41e+09 0.3840  4.37474 0.10467
2   8.23e+09 0.7555  1.63783 0.02204
3   8.23e+09 0.7555  1.63783 0.02204
4   5.59e+08 0.4753  4.39070 0.09455
5   5.59e+08 0.4753  4.39070 0.09455
6   5.59e+08 0.4753  4.39070 0.09455
7   5.59e+08 0.4753  4.39070 0.09455
8   5.59e+08 0.4753  4.39070 0.09455
9   5.59e+08 0.4753  4.39070 0.09455
10  5.59e+08 0.4753  4.39070 0.09455
11  5.59e+08 0.4753  4.39070 0.09455
12  4.02e+08 0.3989  4.39070 0.09455
13  4.02e+08 0.3989  4.39070 0.09455
14  8.44e+07 0.0925  6.16404 0.23943
15  8.44e+07 0.7326  7.66781 0.23943
16  8.44e+07 0.7326  7.66781 0.23943
17  8.44e+07 0.7326  7.66781 0.23943
18  7.42e+07 0.1242  7.12076 0.10650
19  5.98e+07 0.7428 -0.35434 0.09759
20  5.98e+07 0.7428 -0.35434 0.09759
21  6.69e+07 0.7806  6.48048 0.01884
22  1.52e+07 0.2861  9.87607 0.04257
23  1.52e+07 0.2861  9.87607 0.04257
24  3.05e+05 0.6771  0.19187 0.03879
25  3.05e+05 0.6771  0.19187 0.03879
26  3.05e+05 0.6771  0.19187 0.03879
27  3.05e+05 0.6771  0.19187 0.03879
28  3.05e+05 0.6771  0.19187 0.03879
29  3.05e+05 0.6771  0.19187 0.03879
30  3.05e+05 0.6771  0.19187 0.03879
31  6.27e+03 0.7103  4.04011 0.11512
32  6.27e+03 0.7103  4.04011 0.10153
33  6.27e+03 0.7103  4.04011 0.08223
34  6.27e+03 0.7103  4.04011 0.08223
35  6.27e+03 0.7103  4.04011 0.08223
36  6.27e+03 0.7103  4.04011 0.08223
37  6.27e+03 0.7103  4.04011 0.08223
38  6.27e+03 0.7103  4.04011 0.08223
39  6.27e+03 0.7103  4.04011 0.08223
40  6.27e+03 0.7103  8.53892 0.08223
41  6.27e+03 0.7103  8.53892 0.08223
42  6.27e+03 0.7103  8.53892 0.08223
43  6.27e+03 0.7103  8.53892 0.08223
44  6.27e+03 0.7103  8.53892 0.08223
45  6.27e+03 0.7103  8.53892 0.08223
46  6.27e+03 0.7103  8.53892 0.08223
47  6.27e+03 0.7103  8.53892 0.08223
48  6.27e+03 0.7103  9.25067 0.08223
49  6.27e+03 0.7103  9.25067 0.08223
50  6.27e+03 0.7103  9.25067 0.08223
51  6.27e+03 0.7103  9.25067 0.08223
52  6.27e+03 0.7103  9.25067 0.00751
53  6.27e+03 0.7103  9.25067 0.00751
54  6.27e+03 0.7630  9.25067 0.00751
55  6.27e+03 0.7630  9.25067 0.00751
56  6.27e+03 0.7630  9.25067 0.00751
57  6.27e+03 0.7630  9.25067 0.00751
58  6.27e+03 0.7630  9.25067 0.00751
59  5.68e+03 0.7711  1.51036 0.00617
60  5.68e+03 0.7711  1.51036 0.00617
61  5.68e+03 0.7354  7.04690 0.00617
62  4.83e+03 0.8653  9.77791 0.05022
63  1.87e+03 0.7444  8.31740 0.02386
64  1.87e+03 0.7444  8.31740 0.02386
65  1.87e+03 0.7444  8.31740 0.02386
66  1.87e+03 0.7444  8.31740 0.02386
67  1.87e+03 0.7444  8.31740 0.02386
68  1.21e+03 0.8245  9.07487 0.02714
69  1.21e+03 0.8245  9.07487 0.02714
70  1.21e+03 0.8245  9.07487 0.03560
71  1.21e+03 0.8245  9.07487 0.03560
72  1.21e+03 0.8245  3.80090 0.03560
73  1.21e+03 0.8245  3.80090 0.03560
74  1.21e+03 0.8245  3.80090 0.03560
75  1.21e+03 0.8245  3.80090 0.03560
76  1.21e+03 0.8245  2.11449 0.03560
77  1.21e+03 0.8245  2.11449 0.03560
78  1.21e+03 0.8245  2.11449 0.03560
79  1.21e+03 0.8245  2.11449 0.03560
80  1.21e+03 0.8245  2.11449 0.03560
81  1.21e+03 0.8245  1.97484 0.03996
82  1.07e+03 0.7614 -0.09233 0.06973
83  1.13e+03 0.8180  5.42970 0.06151
84  1.09e+03 0.8306  1.87904 0.07162
85  1.09e+03 0.8306  1.08097 0.07162
86  9.27e+02 0.8181 -0.01644 0.10252
87  9.27e+02 0.8582  4.65056 0.12229
88  9.27e+02 0.7767  5.65635 0.12229
89  9.27e+02 0.7767  5.65635 0.12229
90  7.74e+02 0.4819  0.86082 0.15312
91  8.50e+02 0.9125  8.39904 0.15794
92  7.68e+02 0.2706  7.27068 0.16574
93  3.64e+02 0.3279 -0.00421 0.24534
94  5.59e+02 0.9503 -0.48261 0.24331
95  4.38e+02 0.6952  0.17246 0.27971
96  4.38e+02 0.6952  0.17246 0.28607
97  4.38e+02 0.6952  0.17246 0.28607
98  4.38e+02 0.6952  0.17246 0.28607
99  4.38e+02 0.6952  0.17246 0.28607
100 5.51e+02 0.2706  7.27068 0.27343
101 5.29e+02 0.9882  7.48414 0.30372
102 3.93e+02 0.2706  7.27068 0.38236
103 3.19e+02 0.2516  4.17944 0.38670
104 3.79e+02 0.2706  7.27068 0.38236
105 3.79e+02 0.2706  7.27068 0.38236
106 3.79e+02 0.2706  7.27068 0.38236
107 3.79e+02 0.2706  7.27068 0.38236
108 3.80e+02 0.6491  6.89775 0.38504
109 3.80e+02 0.6491  6.89775 0.38504
110 2.86e+02 0.6723  9.30923 0.45956
111 2.86e+02 0.6723  9.30923 0.45956
112 2.86e+02 0.6723  9.30923 0.45956
113 2.86e+02 0.6723  9.30923 0.45956
114 2.26e+02 0.3124  2.09259 0.47298
115 2.26e+02 0.3124  2.09259 0.47298
116 2.26e+02 0.3124  2.09259 0.47298
117 2.43e+02 0.1857  7.21708 0.49799
118 2.43e+02 0.1857  7.21708 0.49799
119 2.43e+02 0.1857  7.21708 0.49799
120 1.71e+02 0.3124  2.09259 0.53568
121 1.71e+02 0.3124  2.09259 0.53568
122 1.71e+02 0.3124  2.09259 0.53568
123 1.71e+02 0.3124  2.09259 0.53568
124 2.33e+02 0.8407  3.51082 0.52848
125 2.33e+02 0.8407  3.51082 0.52848
126 2.33e+02 0.8407  3.51082 0.52848
127 2.33e+02 0.8407  3.51082 0.52848
128 1.91e+02 0.8115  3.22055 0.57610
129 1.91e+02 0.8115  3.22055 0.57610
130 1.91e+02 0.7116  3.64971 0.57610
131 1.65e+02 0.7967  4.97888 0.63572
132 1.65e+02 0.7967  4.97888 0.63572
133 1.65e+02 0.7967  4.97888 0.63572
134 1.65e+02 0.7967  4.97888 0.63572
135 1.65e+02 0.7967  4.97888 0.63572
136 1.65e+02 0.7967  4.97888 0.63572
137 1.65e+02 0.7967  4.97888 0.63572
138 1.45e+02 0.7501  4.35725 0.67440
139 1.24e+02 0.4875  9.25008 0.70639
140 1.24e+02 0.4875  9.25008 0.70639
141 1.24e+02 0.4875  9.25008 0.70639
142 1.24e+02 0.4875  9.25008 0.70639
143 1.24e+02 0.4875  9.25008 0.70639
144 1.24e+02 0.4139  9.25008 0.70639
145 1.24e+02 0.4139  9.25008 0.70639
146 1.24e+02 0.4139  9.25008 0.70639
147 1.24e+02 0.4139  9.25008 0.70639
148 1.24e+02 0.4139  9.25008 0.70639
149 1.24e+02 0.4139  9.25008 0.70639
150 1.24e+02 0.4139  9.25008 0.70639
151 1.12e+02 0.2333  9.26603 0.72574
152 1.12e+02 0.2333  9.26603 0.72574
153 1.12e+02 0.2333  9.26603 0.72574
154 1.12e+02 0.2333  9.26603 0.72574
155 1.12e+02 0.2333  9.26603 0.72574
156 1.12e+02 0.2333  9.26603 0.72574
157 1.12e+02 0.2333  9.26603 0.72574
158 1.12e+02 0.2333  9.26603 0.72574
159 1.12e+02 0.2333  9.26603 0.72574
160 1.12e+02 0.2333  9.26603 0.72574
161 1.12e+02 0.2333  9.26603 0.72574
162 1.12e+02 0.2333  9.26603 0.72574
163 1.12e+02 0.2333  9.26603 0.72574
164 1.12e+02 0.2333  9.26603 0.72574
165 1.12e+02 0.2761  9.26603 0.72574
166 1.03e+02 0.4945  7.59437 0.76438
167 1.03e+02 0.4945  7.59437 0.76438
168 9.41e+01 0.5958  7.34258 0.79355
169 9.41e+01 0.5958  7.34258 0.79355
170 9.41e+01 0.5958  7.34258 0.79355
171 9.41e+01 0.5958  7.34258 0.79355
172 9.00e+01 0.8027  6.41346 0.81972
173 9.00e+01 0.8027  6.41346 0.81972
174 9.00e+01 0.8027  6.41346 0.81972
175 9.00e+01 0.8027  6.41346 0.81972
176 9.00e+01 0.8027  6.41346 0.81972
177 9.00e+01 0.8027  6.41346 0.81972
178 9.00e+01 0.8027  6.41346 0.81972
179 7.95e+01 0.4190  6.21908 0.82143
180 7.95e+01 0.4190  6.21908 0.82143
181 7.95e+01 0.4190  6.21908 0.82143
182 8.82e+01 0.8106  5.80109 0.82109
183 8.82e+01 0.8106  5.80109 0.82109
184 8.13e+01 0.5848  6.04229 0.82819
185 8.13e+01 0.5848  6.04229 0.82819
186 8.13e+01 0.5848  6.04229 0.82819
187 8.13e+01 0.5848  6.04229 0.82819
188 8.13e+01 0.5848  6.04229 0.82819
189 5.84e+01 0.5909  7.75980 0.94330
190 6.33e+01 0.9561  5.99029 0.93260
191 6.33e+01 0.9561  5.99029 0.93260
192 6.33e+01 0.9561  5.99029 0.93260
193 6.60e+01 0.9691  7.80326 0.90991
194 4.36e+01 0.4917  8.56253 1.00429
195 4.49e+01 0.3651  7.49623 0.98903
196 4.49e+01 0.3651  7.49623 0.98903
197 4.49e+01 0.3651  7.49623 0.98903
198 4.49e+01 0.3651  7.49623 0.98903
199 4.49e+01 0.3651  7.49623 0.98903
200 4.49e+01 0.3651  7.49623 0.98903

$member$bestvalit
  [1] 1.73e+21 1.58e+21 1.58e+21 1.22e+19 1.22e+19 1.22e+19 1.22e+19 1.22e+19
  [9] 1.22e+19 1.22e+19 1.22e+19 6.34e+18 6.34e+18 8.56e+17 7.26e+17 7.26e+17
 [17] 7.26e+17 2.40e+17 1.74e+17 1.74e+17 1.02e+17 6.25e+15 6.25e+15 2.56e+12
 [25] 2.56e+12 2.56e+12 2.56e+12 2.56e+12 2.56e+12 2.56e+12 1.25e+09 1.12e+09
 [33] 9.54e+08 9.54e+08 9.54e+08 9.54e+08 9.54e+08 9.54e+08 9.54e+08 9.46e+08
 [41] 9.46e+08 9.46e+08 9.46e+08 9.46e+08 9.46e+08 9.46e+08 9.46e+08 9.45e+08
 [49] 9.45e+08 9.45e+08 9.45e+08 5.05e+08 5.05e+08 5.05e+08 5.05e+08 5.05e+08
 [57] 5.05e+08 5.05e+08 3.88e+08 3.88e+08 3.87e+08 3.72e+08 9.30e+06 9.30e+06
 [65] 9.30e+06 9.30e+06 9.30e+06 1.84e+06 1.84e+06 1.72e+06 1.72e+06 1.72e+06
 [73] 1.72e+06 1.72e+06 1.72e+06 1.71e+06 1.71e+06 1.71e+06 1.71e+06 1.71e+06
 [81] 1.68e+06 1.63e+06 1.62e+06 1.60e+06 1.59e+06 1.56e+06 1.47e+06 1.47e+06
 [89] 1.47e+06 1.44e+06 1.40e+06 1.40e+06 1.38e+06 1.29e+06 1.19e+06 1.17e+06
 [97] 1.17e+06 1.17e+06 1.17e+06 1.15e+06 1.11e+06 1.10e+06 1.10e+06 9.56e+05
[105] 9.56e+05 9.56e+05 9.56e+05 9.19e+05 9.19e+05 8.58e+05 8.58e+05 8.58e+05
[113] 8.58e+05 7.66e+05 7.66e+05 7.66e+05 7.36e+05 7.36e+05 7.36e+05 6.92e+05
[121] 6.92e+05 6.92e+05 6.92e+05 6.78e+05 6.78e+05 6.78e+05 6.78e+05 6.52e+05
[129] 6.52e+05 6.15e+05 5.19e+05 5.19e+05 5.19e+05 5.19e+05 5.19e+05 5.19e+05
[137] 5.19e+05 4.82e+05 4.37e+05 4.37e+05 4.37e+05 4.37e+05 4.37e+05 4.25e+05
[145] 4.25e+05 4.25e+05 4.25e+05 4.25e+05 4.25e+05 4.25e+05 4.04e+05 4.04e+05
[153] 4.04e+05 4.04e+05 4.04e+05 4.04e+05 4.04e+05 4.04e+05 4.04e+05 4.04e+05
[161] 4.04e+05 4.04e+05 4.04e+05 4.04e+05 4.02e+05 3.64e+05 3.64e+05 3.29e+05
[169] 3.29e+05 3.29e+05 3.29e+05 3.22e+05 3.22e+05 3.22e+05 3.22e+05 3.22e+05
[177] 3.22e+05 3.22e+05 3.04e+05 3.04e+05 3.04e+05 3.03e+05 3.03e+05 2.95e+05
[185] 2.95e+05 2.95e+05 2.95e+05 2.95e+05 2.84e+05 2.49e+05 2.49e+05 2.49e+05
[193] 2.27e+05 1.82e+05 1.73e+05 1.73e+05 1.73e+05 1.73e+05 1.73e+05 1.73e+05

$member$pop
        [,1]   [,2] [,3]   [,4]
 [1,]   35.9 0.2840 5.07 1.0032
 [2,]  103.4 0.5085 9.27 0.7666
 [3,]  102.6 0.7715 8.22 0.7748
 [4,]   63.3 0.9733 6.66 0.9326
 [5,]  116.0 0.5534 7.42 0.7267
 [6,]   58.4 0.5909 7.76 0.9433
 [7,]   65.7 0.6852 8.26 0.8999
 [8,]   90.7 0.4514 7.35 0.7950
 [9,]  531.5 0.4888 2.44 0.2697
[10,]  102.9 0.4945 9.04 0.7644
[11,]   44.5 0.5914 7.63 0.9882
[12,]   79.5 0.4978 4.45 0.8214
[13,]   91.0 0.3324 8.33 0.7860
[14,]  113.6 0.7910 8.35 0.7498
[15,]   50.9 0.6408 9.58 0.9697
[16,]   89.1 0.6096 9.37 0.8140
[17,]  725.9 0.9464 8.98 0.2277
[18,]   82.2 0.5627 9.22 0.8353
[19,]  111.6 0.3363 5.93 0.7195
[20,]   44.9 0.3651 7.50 0.9890
[21,]  419.4 0.0888 9.36 0.3395
[22,]  123.5 0.4139 9.25 0.7064
[23,] 1354.2 0.9811 9.17 0.0146
[24,]  659.6 0.9238 8.78 0.2341
[25,]   90.0 0.8027 6.41 0.8197
[26,]   57.0 0.5454 9.08 0.9413
[27,]  238.9 0.8915 5.46 0.5405
[28,]  591.6 0.1584 7.00 0.2433
[29,]   85.5 0.4130 7.69 0.8099
[30,]  103.3 0.7493 5.58 0.7673
[31,]   92.8 0.2263 7.53 0.7680
[32,]   49.8 0.1629 7.81 0.9324
[33,]   66.0 0.9691 7.80 0.9099
[34,]   74.8 0.9965 7.43 0.8765
[35,]  475.9 0.8008 7.42 0.3254
[36,]  113.6 0.6211 5.36 0.7343
[37,]  111.2 0.5886 6.94 0.7422
[38,]   97.7 0.2366 4.03 0.7186
[39,]  117.1 0.3875 9.03 0.7214
[40,]   94.1 0.5958 8.30 0.7936

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
 gamma  delta    rho     nu 
44.868  0.365  7.496  0.989 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.118 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1158 1198 1222 1232 1232 1248 1281 1284 1246 1289 1323 1475 1535 1588 1555
[16] 1573 1654 1728 1838 1939

$residuals
 [1] -212.26 -234.83 -151.96  -60.50  -54.19  -62.15  -41.86    4.41  -37.80
[10]  -10.63   37.32   66.05   39.77  107.99   89.41   53.19    1.22   27.67
[19]   49.85   53.04

$rss
[1] 172951

$cov.unscaled
      gamma delta rho nu
gamma    NA    NA  NA NA
delta    NA    NA  NA NA
rho      NA    NA  NA NA
nu       NA    NA  NA NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
 gamma  delta    rho     nu 
44.868  0.365  7.496  0.989 

Elasticity of Substitution: 0.118 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   44.868         NA      NA       NA
delta    0.365         NA      NA       NA
rho      7.496         NA      NA       NA
nu       0.989         NA      NA       NA

Residual standard error: 93 
Multiple R-squared: 0.902 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.118         NA      NA       NA

> coef( summary( cesLandIntDeVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   44.868         NA      NA       NA
delta    0.365         NA      NA       NA
rho      7.496         NA      NA       NA
nu       0.989         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
 par1  par2  par3 
48.98  0.99  2.99 

$optim$bestval
[1] 165833

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
    par1  par2  par3
1   28.0 0.322 2.179
2   40.3 0.511 2.996
3   48.5 0.984 0.628
4   48.5 0.984 0.628
5   48.5 0.984 0.628
6   45.8 0.845 2.525
7   45.8 0.845 2.525
8   48.5 0.984 1.177
9   48.5 0.984 1.177
10  48.5 0.984 1.177
11  48.5 0.984 1.177
12  48.5 0.984 1.177
13  48.5 0.984 1.177
14  48.5 0.984 1.177
15  48.5 0.984 1.177
16  48.5 0.984 1.177
17  48.5 0.984 1.177
18  48.5 0.984 1.177
19  48.5 0.984 1.177
20  48.5 0.984 1.177
21  48.5 0.984 1.177
22  48.5 0.984 1.177
23  48.5 0.984 1.177
24  48.5 0.984 1.177
25  48.5 0.984 1.177
26  48.5 0.984 1.177
27  48.5 0.984 1.177
28  48.5 0.984 1.177
29  48.5 0.984 1.177
30  48.5 0.984 1.177
31  48.5 0.984 1.177
32  48.5 0.984 1.177
33  48.5 0.984 1.177
34  48.5 0.984 1.177
35  48.5 0.984 1.177
36  48.5 0.984 1.177
37  48.5 0.984 1.177
38  48.5 0.984 1.177
39  48.5 0.984 1.177
40  48.5 0.984 1.177
41  48.5 0.984 1.177
42  48.5 0.984 1.177
43  48.5 0.984 1.177
44  48.5 0.984 1.177
45  48.0 0.946 2.239
46  48.0 0.946 2.239
47  48.0 0.946 2.239
48  47.3 0.930 1.961
49  47.3 0.930 1.961
50  47.3 0.930 1.961
51  47.3 0.930 1.961
52  47.3 0.930 1.961
53  47.3 0.930 1.961
54  47.3 0.930 1.961
55  47.3 0.930 1.961
56  47.3 0.930 1.961
57  47.3 0.930 1.961
58  46.7 0.874 2.678
59  46.7 0.874 2.678
60  46.7 0.874 2.678
61  46.7 0.874 2.678
62  46.7 0.874 2.678
63  46.7 0.874 2.678
64  46.7 0.874 2.678
65  46.7 0.874 2.678
66  46.7 0.874 2.678
67  46.7 0.874 2.678
68  46.7 0.874 2.678
69  48.0 0.946 2.398
70  48.0 0.946 2.398
71  48.0 0.946 2.398
72  48.0 0.946 2.398
73  48.0 0.946 2.398
74  48.0 0.946 2.398
75  48.0 0.946 2.398
76  48.0 0.946 2.398
77  48.0 0.946 2.398
78  48.0 0.946 2.398
79  48.0 0.946 2.398
80  48.3 0.957 2.423
81  48.3 0.957 2.423
82  48.3 0.957 2.423
83  48.3 0.957 2.423
84  48.3 0.957 2.423
85  48.3 0.957 2.423
86  48.3 0.957 2.423
87  48.3 0.957 2.423
88  48.3 0.957 2.423
89  48.3 0.957 2.423
90  48.3 0.957 2.423
91  48.3 0.957 2.423
92  48.3 0.957 2.423
93  48.3 0.957 2.423
94  48.3 0.957 2.423
95  48.3 0.957 2.423
96  48.3 0.957 2.423
97  48.3 0.957 2.423
98  48.3 0.957 2.423
99  48.3 0.957 2.423
100 48.3 0.957 2.423
101 48.3 0.957 2.423
102 48.3 0.957 2.423
103 48.3 0.957 2.423
104 48.3 0.957 2.423
105 48.3 0.957 2.423
106 48.3 0.957 2.423
107 48.3 0.957 2.423
108 48.3 0.957 2.423
109 48.3 0.957 2.423
110 48.3 0.957 2.423
111 48.3 0.957 2.423
112 48.3 0.957 2.423
113 48.3 0.957 2.423
114 48.3 0.957 2.423
115 48.3 0.957 2.423
116 48.3 0.957 2.423
117 48.3 0.957 2.423
118 48.3 0.957 2.423
119 48.3 0.957 2.423
120 48.3 0.957 2.423
121 48.3 0.957 2.423
122 48.3 0.957 2.423
123 48.3 0.957 2.423
124 48.3 0.957 2.423
125 48.4 0.965 2.466
126 48.4 0.965 2.466
127 48.4 0.965 2.466
128 48.4 0.965 2.466
129 48.4 0.965 2.466
130 48.4 0.965 2.466
131 48.4 0.965 2.466
132 48.6 0.973 2.438
133 48.6 0.973 2.438
134 48.6 0.973 2.438
135 48.6 0.973 2.438
136 48.8 0.983 2.442
137 48.8 0.983 2.442
138 48.9 0.989 2.419
139 48.9 0.989 2.419
140 48.9 0.989 2.419
141 48.9 0.989 2.419
142 48.9 0.989 2.419
143 48.9 0.989 2.419
144 48.9 0.989 2.419
145 48.9 0.989 2.419
146 48.9 0.989 2.419
147 48.9 0.989 2.419
148 48.9 0.989 2.419
149 48.9 0.989 2.419
150 48.9 0.989 2.419
151 48.9 0.986 2.801
152 48.9 0.986 2.801
153 48.9 0.986 2.801
154 48.9 0.987 2.831
155 48.9 0.987 2.831
156 48.9 0.987 2.831
157 48.9 0.987 2.831
158 48.9 0.987 2.831
159 48.9 0.987 2.831
160 48.9 0.987 2.831
161 48.9 0.987 2.831
162 48.9 0.988 2.851
163 48.9 0.986 2.916
164 48.9 0.986 2.916
165 48.9 0.986 2.916
166 48.9 0.986 2.916
167 48.9 0.986 2.916
168 48.9 0.986 2.916
169 48.9 0.986 2.916
170 48.9 0.986 2.916
171 48.9 0.986 2.916
172 48.9 0.986 2.916
173 48.9 0.986 2.916
174 48.9 0.988 2.927
175 48.9 0.988 2.927
176 48.9 0.988 2.927
177 48.9 0.988 2.961
178 48.9 0.988 2.961
179 48.9 0.988 2.961
180 49.0 0.989 2.999
181 49.0 0.989 2.999
182 49.0 0.990 2.998
183 49.0 0.990 2.998
184 49.0 0.990 2.998
185 49.0 0.990 2.998
186 49.0 0.990 2.998
187 49.0 0.990 2.998
188 49.0 0.990 2.998
189 49.0 0.990 2.998
190 49.0 0.990 2.998
191 49.0 0.990 2.998
192 49.0 0.990 2.998
193 49.0 0.990 2.998
194 49.0 0.990 2.991
195 49.0 0.990 2.991
196 49.0 0.990 2.991
197 49.0 0.990 2.991
198 49.0 0.990 2.991
199 49.0 0.990 2.991
200 49.0 0.990 2.991

$member$bestvalit
  [1] 238555 196179 168944 168944 168944 166603 166603 165902 165902 165902
 [11] 165902 165902 165902 165902 165902 165902 165902 165902 165902 165902
 [21] 165902 165902 165902 165902 165902 165902 165902 165902 165902 165902
 [31] 165902 165902 165902 165902 165902 165902 165902 165902 165902 165902
 [41] 165902 165902 165902 165902 165899 165899 165899 165864 165864 165864
 [51] 165864 165864 165864 165864 165864 165864 165864 165847 165847 165847
 [61] 165847 165847 165847 165847 165847 165847 165847 165847 165841 165841
 [71] 165841 165841 165841 165841 165841 165841 165841 165841 165841 165836
 [81] 165836 165836 165836 165836 165836 165836 165836 165836 165836 165836
 [91] 165836 165836 165836 165836 165836 165836 165836 165836 165836 165836
[101] 165836 165836 165836 165836 165836 165836 165836 165836 165836 165836
[111] 165836 165836 165836 165836 165836 165836 165836 165836 165836 165836
[121] 165836 165836 165836 165836 165835 165835 165835 165835 165835 165835
[131] 165835 165835 165835 165835 165835 165834 165834 165833 165833 165833
[141] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833
[151] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833
[161] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833
[171] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833
[181] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833
[191] 165833 165833 165833 165833 165833 165833 165833 165833 165833 165833

$member$pop
      [,1]  [,2] [,3]
 [1,] 49.0 0.989 2.99
 [2,] 48.9 0.988 2.88
 [3,] 48.9 0.987 2.89
 [4,] 49.0 0.990 2.84
 [5,] 49.0 0.989 2.98
 [6,] 48.4 0.963 2.41
 [7,] 49.0 0.989 2.82
 [8,] 49.0 0.990 2.89
 [9,] 48.6 0.973 2.47
[10,] 48.9 0.988 2.96
[11,] 49.0 0.989 2.97
[12,] 48.1 0.956 2.07
[13,] 48.9 0.986 2.92
[14,] 49.0 0.989 2.94
[15,] 48.9 0.986 2.97
[16,] 49.0 0.989 2.95
[17,] 48.9 0.989 2.84
[18,] 48.9 0.989 2.94
[19,] 49.0 0.989 2.98
[20,] 49.0 0.989 2.93
[21,] 49.0 0.990 2.99
[22,] 48.9 0.988 2.82
[23,] 49.0 0.989 2.94
[24,] 49.0 0.990 2.97
[25,] 49.0 0.989 3.00
[26,] 49.0 0.989 2.98
[27,] 48.9 0.986 2.80
[28,] 49.0 0.989 2.98
[29,] 49.0 0.989 2.95
[30,] 48.9 0.987 2.96

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
48.98  0.99  2.99 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.251 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.80 -226.52 -143.75  -52.34  -46.02  -54.05  -33.92   12.33  -29.70
[10]   -2.73   45.05   72.90   46.21  114.06   95.72   59.37    6.80   32.67
[19]   53.92   56.17

$rss
[1] 165833

$cov.unscaled
          gamma     delta       rho
gamma  5.45e+08  36965703 -1.20e+09
delta  3.70e+07   2506891 -8.13e+07
rho   -1.20e+09 -81323212  2.64e+09

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
48.98  0.99  2.99 

Elasticity of Substitution: 0.251 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.90e+01   2.13e+06       0        1
delta 9.90e-01   1.44e+05       0        1
rho   2.99e+00   4.68e+06       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 2.51e-01   2.94e+05       0        1

> coef( cesLandLaborDe2 )
gamma delta   rho 
48.98  0.99  2.99 
> vcov( cesLandLaborDe2 )
          gamma     delta       rho
gamma  4.52e+12  3.07e+11 -9.94e+12
delta  3.07e+11  2.08e+10 -6.74e+11
rho   -9.94e+12 -6.74e+11  2.19e+13
> coef( summary( cesLandLaborDe2 ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    48.98    2125942 2.30e-05        1
delta     0.99     144174 6.87e-06        1
rho       2.99    4677201 6.39e-07        1
> fitted( cesLandLaborDe2 )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936
> residuals( cesLandLaborDe2 )
 [1] -203.80 -226.52 -143.75  -52.34  -46.02  -54.05  -33.92   12.33  -29.70
[10]   -2.73   45.05   72.90   46.21  114.06   95.72   59.37    6.80   32.67
[19]   53.92   56.17
> 
> # constant returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # variable returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1467 1528 1581 1548
[16] 1566 1648 1722 1833 1935
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1087 1129 1151 1173 1173 1187 1216 1230 1187 1247 1283 1496 1568 1620 1577
[16] 1586 1685 1775 1912 2042
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
 17.872   0.164  18.036 

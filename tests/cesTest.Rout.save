
R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following object(s) are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: miscTools
Loading required package: micEcon
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor (Nelder-Mead)
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "NM" )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$rss
[1] 165914.1

$cov.unscaled
           gamma        delta         rho
gamma 51681024.1 -180250.3889 -949936.086
delta  -180250.4     628.6881    3313.548
rho    -949936.1    3313.5476   17468.864

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

Elasticity of Substitution: NA 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLabor, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> print( summary( cesLandLabor ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> summary( cesLandLabor )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428730578760 -1495304223 -7880390441
delta  -1495304223     5215412    27488217
rho    -7880390441    27488217   144916561
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654775.212  1.531062e-04 0.9998778
delta   0.06909165   2283.728  3.025389e-05 0.9999759
rho    -3.74630543  12038.129 -3.112033e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572247   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale (Nelder-Mead)
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.7331268 -166.5103418  -81.4125842   -1.6012208    4.7183461
 [6]   -0.9785309   23.2756885   58.1833652   20.6281759   31.4557445
[11]   77.2667406   44.5535212    7.0171050   75.4916439   68.0891216
[16]   40.2932432  -29.4820846  -18.9667179  -24.0891708  -49.9441803

$rss
[1] 83794.05

$cov.unscaled
             gamma         delta           rho            nu
gamma 343.31007871 -1.045707e-01 -2.2492500342  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
nu      0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
    gamma     delta       rho        nu 
233.84853   0.01535  -1.86100   1.43203 

Elasticity of Substitution: NA 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
nu       1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborVrs )
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho           nu
gamma 1438367.1567 -438.12004121 -9423.688895 188.41146051
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
nu        188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194557  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
nu      1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.7331268 -166.5103418  -81.4125842   -1.6012208    4.7183461
 [6]   -0.9785309   23.2756885   58.1833652   20.6281759   31.4557445
[11]   77.2667406   44.5535212    7.0171050   75.4916439   68.0891216
[16]   40.2932432  -29.4820846  -18.9667179  -24.0891708  -49.9441803
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.8904487 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$rss
[1] 610748.6

$cov.unscaled
            gamma        delta          rho
gamma 1034.396377 -2.569522629 -3.466063908
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

Elasticity of Substitution: 0.8904 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.8904    14.9412    0.06    0.952

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.70 -78466.6193 -105844.6864
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$rss
[1] 177510.9

$cov.unscaled
             gamma         delta          rho
gamma 11108.427490 -2.1880051870 -92.89635398
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896354  0.0183133367   0.77803366

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

Elasticity of Substitution: NA 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.8997179 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593373.47 -19419.743501 -824505.9825
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540886    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419594  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099185 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939

$rss
[1] 165843.9

$cov.unscaled
           gamma       delta         rho
gamma 1713990506 -7740272.06 -39478894.2
delta   -7740272    34955.27    178300.3
rho    -39478894   178300.28    909704.6

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47345  0.07176 -4.39599 

Elasticity of Substitution: NA 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  8.947e+01  3.770e+06       0        1
delta  7.176e-02  1.703e+04       0        1
rho   -4.396e+00  8.685e+04       0        1

Residual standard error: 91.06148 
Multiple R-squared: 0.9063091 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47345267  0.07175508 -4.39599297 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.421274e+13 -64183833425 -327366628335
delta -6.418383e+10    289855849    1478500402
rho   -3.273666e+11   1478500402    7543446583
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47345267 3769978.90  2.373314e-05 0.9999811
delta  0.07175508   17025.15  4.214651e-06 0.9999966
rho   -4.39599297   86853.02 -5.061417e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728712 -226.440898 -143.668787  -52.263266  -45.943699  -53.973090
 [7]  -33.837671   12.415705  -29.620464   -2.652004   45.136260   72.996872
[13]   46.316962  114.174130   95.826583   59.480114    6.919847   32.790076
[19]   54.049758   56.315939
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B" )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      66       66 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 

$iter
function gradient 
      66       66 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
   12853.01 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.800580e+00 -3.879189e-02 -2.783350e+11
delta -3.879189e-02  8.357862e-04  6.048757e+09
rho   -2.783350e+11  6.048757e+09  1.636011e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
  gamma   delta     rho 
49.1430  1.0000 -0.9999 

Elasticity of Substitution: 12853 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 66 function and 66 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  4.914e+01  1.222e+02   0.402    0.688
delta  1.000e+00  2.632e+00   0.380    0.704
rho   -9.999e-01  3.683e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.285e+04  6.084e+21       0        1

> coef( cesLandLaborBfgsCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9999222 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.492972e+04 -3.216476e+02 -2.307848e+15
delta -3.216476e+02  6.930020e+00  5.015399e+13
rho   -2.307848e+15  5.015399e+13  1.356518e+27
> coef( summary( cesLandLaborBfgsCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.221872e+02  4.021938e-01 0.6875414
delta  1.0000000 2.632493e+00  3.798680e-01 0.7040434
rho   -0.9999222 3.683094e+13 -2.714897e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     17 0.051750                                  
2     14 0.015804  3  0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05

$ela
E_1_2 (all) 
   1.015751 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$rss
[1] 2.128614e+18

$cov.unscaled
              gamma         delta           rho
gamma  5.725090e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285537e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

Elasticity of Substitution: 1.016 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.0006662873

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.448e-03  -3.486 0.000490 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all) 1.015751   0.004589   221.3   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.448074e-03 -3.4860859 0.0004901436
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)   
1     16 0.040974                               
2     14 0.015804  2   0.02517 11.148 0.00127 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01

$ela
E_1_2 (all) 
   1.049335 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$rss
[1] 3.337947e+13

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
nu     3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho         nu 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

Elasticity of Substitution: 1.049 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.001270271

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  3.626e-02  -1.296    0.195    
nu     1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 
Multiple R-squared: -18857212 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)  1.04934    0.03993   26.28   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( cesLandLaborKmenta )
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 3.626408e-02 -1.29648715 1.948077e-01
nu     1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.61969669587125, 4.8555657017719, -0.461292104597317 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
   1.856294 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$rss
[1] 122985.2

$cov.unscaled
            gamma       delta          rho
gamma  13.9283784 -15.9958960  0.286083732
delta -15.9958960  18.3706647 -0.328580667
rho     0.2860837  -0.3285807  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

Elasticity of Substitution: 1.856 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.856     20.718    0.09    0.929

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.237 -98362.943  1759.20360
delta -98362.943 112966.016 -2020.52836
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658910  0.008951365 0.9928579
delta  4.8555657 336.104174  0.014446609 0.9884737
rho   -0.4612921   6.012499 -0.076722194 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168475.9

$nlm$estimate
[1] 274.353181715   0.000952076  -4.038093245

$nlm$gradient
[1] -3.539155e+02 -2.778149e+07  4.836406e+04

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967

$residuals
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101

$rss
[1] 168475.9

$cov.unscaled
              gamma         delta           rho
gamma 116890.897642 -3.9407087159 -1.405139e+03
delta     -3.940709  0.0001329177  4.741141e-02
rho    -1405.139376  0.0474114129  1.691587e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
     gamma      delta        rho 
 2.744e+02  9.521e-04 -4.038e+00 

Elasticity of Substitution: NA 

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.744e+02  3.138e+04   0.009    0.993
delta  9.521e-04  1.058e+00   0.001    0.999
rho   -4.038e+00  3.775e+02  -0.011    0.991

Residual standard error: 91.78123 
Multiple R-squared: 0.9048222 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborNewton )
        gamma         delta           rho 
274.353181715   0.000952076  -4.038093245 
> vcov( cesLandLaborNewton )
             gamma         delta           rho
gamma 984664868.80 -33195.719333 -11836604.964
delta    -33195.72      1.119672       399.384
rho   -11836604.96    399.383986    142495.827
> coef( summary( cesLandLaborNewton ) )
           Estimate   Std. Error       t value  Pr(>|t|)
gamma 274.353181715 31379.370115  0.0087431067 0.9930241
delta   0.000952076     1.058145  0.0008997592 0.9992821
rho    -4.038093245   377.486195 -0.0106973270 0.9914649
> fitted( cesLandLaborNewton )
 [1] 1150.177 1189.098 1212.802 1223.862 1223.862 1239.314 1272.208 1275.459
 [9] 1236.976 1280.676 1314.698 1466.798 1527.216 1579.618 1546.836 1564.137
[17] 1645.176 1719.380 1829.296 1930.967
> residuals( cesLandLaborNewton )
 [1] -204.044353 -226.367034 -143.222871  -52.065883  -45.746316  -53.503936
 [7]  -32.849775   13.102146  -29.270127   -2.267954   45.894301   73.986552
[13]   47.819012  116.340909   97.853217   61.894050    9.864315   36.219955
[19]   58.124541   60.927101
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.48771167  0.06071902 -5.82585076 

$nlminb$objective
[1] 165832.6

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 144

$nlminb$evaluations
function gradient 
     200      144 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
      gamma       delta         rho 
79.48771167  0.06071902 -5.82585076 

$iter
[1] 144

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.940 1189.254 1213.334 1224.145 1224.145 1239.871 1273.288 1276.237
 [9] 1237.414 1281.151 1315.551 1467.893 1528.830 1581.904 1548.979 1566.670
[17] 1648.247 1722.944 1833.515 1935.732

$residuals
 [1] -203.806958 -226.523621 -143.754837  -52.348959  -46.029392  -54.061082
 [7]  -33.930262   12.324232  -29.707757   -2.742478   45.041748   72.890782
[13]   46.204414  114.055043   95.710380   59.361040    6.792879   32.655905
[19]   53.905260   56.162161

$rss
[1] 165832.6

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
   gamma    delta      rho 
79.48771  0.06072 -5.82585 

Elasticity of Substitution: NA 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 144 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.48771         NA      NA       NA
delta  0.06072         NA      NA       NA
rho   -5.82585         NA      NA       NA

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLaborPort, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 144 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.48771         NA      NA       NA
delta  0.06072         NA      NA       NA
rho   -5.82585         NA      NA       NA

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

> print( summary( cesLandLaborPort ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 144 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 79.48771         NA      NA       NA
delta  0.06072         NA      NA       NA
rho   -5.82585         NA      NA       NA

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

> summary( cesLandLaborPort )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLaborPort )
      gamma       delta         rho 
79.48771167  0.06071902 -5.82585076 
> vcov( cesLandLaborPort )
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborPort ) )
         Estimate Std. Error t value Pr(>|t|)
gamma 79.48771167         NA      NA       NA
delta  0.06071902         NA      NA       NA
rho   -5.82585076         NA      NA       NA
> fitted( cesLandLaborPort )
 [1] 1149.940 1189.254 1213.334 1224.145 1224.145 1239.871 1273.288 1276.237
 [9] 1237.414 1281.151 1315.551 1467.893 1528.830 1581.904 1548.979 1566.670
[17] 1648.247 1722.944 1833.515 1935.732
> residuals( cesLandLaborPort )
 [1] -203.806958 -226.523621 -143.754837  -52.348959  -46.029392  -54.061082
 [7]  -33.930262   12.324232  -29.707757   -2.742478   45.041748   72.890782
[13]   46.204414  114.055043   95.710380   59.361040    6.792879   32.655905
[19]   53.905260   56.162161
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.9893505 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 69

$nlminb$evaluations
function gradient 
     111       69 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.9893505 

$iter
[1] 69

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
   93.90109 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.268538e+00 -2.700446e-02 -4.483397e+09
delta -2.700446e-02  5.748965e-04  1.125180e+08
rho   -4.483397e+09  1.125180e+08  1.048442e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
49.1430  1.0000 -0.9894 

Elasticity of Substitution: 93.9 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 69 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  4.914e+01  1.026e+02   0.479    0.632
delta  1.000e+00  2.183e+00   0.458    0.647
rho   -9.894e-01  2.948e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 9.39e+01   2.60e+17       0        1

> coef( cesLandLaborPortCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.9893505 
> vcov( cesLandLaborPortCon )
              gamma         delta           rho
gamma  1.051823e+04 -2.239107e+02 -3.717462e+13
delta -2.239107e+02  4.766822e+00  9.329566e+11
rho   -3.717462e+13  9.329566e+11  8.693282e+26
> coef( summary( cesLandLaborPortCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 1.025584e+02  4.791702e-01 0.6318175
delta  1.0000000 2.183305e+00  4.580212e-01 0.6469372
rho   -0.9893505 2.948437e+13 -3.355508e-14 1.0000000
> fitted( cesLandLaborPortCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborPortCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained by hand
> cesLandLaborPortCon2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0.1, 0.1, -0.5 ), upper = c( 300, 0.9, 4 ) )
> print.default( cesLandLaborPortCon2 )
$nlminb
$nlminb$par
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$nlminb$objective
[1] 174341.5

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 37

$nlminb$evaluations
function gradient 
      71       38 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          2 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0.1  0.1 -0.5

$upper
[1] 300.0   0.9   4.0

$fitted.values
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552

$residuals
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776

$rss
[1] 174341.5

$cov.unscaled
           gamma       delta        rho
gamma 261.317656 -4.43884282 -16.513536
delta  -4.438843  0.07540909   0.280593
rho   -16.513536  0.28059303   1.044383

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Coefficients:
gamma delta   rho 
57.69  0.90 -0.50 

Elasticity of Substitution: 2 

> summary( cesLandLaborPortCon2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 37 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    57.69    1509.28   0.038    0.970
delta     0.90      25.64   0.035    0.972
rho      -0.50      95.41  -0.005    0.996

Residual standard error: 93.36527 
Multiple R-squared: 0.9015085 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      2.0      381.7   0.005    0.996

> coef( cesLandLaborPortCon2 )
   gamma    delta      rho 
57.69045  0.90000 -0.50000 
> vcov( cesLandLaborPortCon2 )
           gamma       delta         rho
gamma 2277925.28 -38693.7203 -143949.714
delta  -38693.72    657.3466    2445.950
rho   -143949.71   2445.9501    9103.968
> coef( summary( cesLandLaborPortCon2 ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 57.69045 1509.27972  0.038223827 0.9695092
delta  0.90000   25.63877  0.035103086 0.9719975
rho   -0.50000   95.41471 -0.005240282 0.9958189
> fitted( cesLandLaborPortCon2 )
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552
> residuals( cesLandLaborPortCon2 )
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
80.2774222  0.2176361 -0.4818549  1.8959041 

$nlminb$objective
[1] 63134.75

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 112

$nlminb$evaluations
function gradient 
     200      112 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
80.2774222  0.2176361 -0.4818549  1.8959041 

$iter
[1] 112

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   1.929961 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1060.211 1102.726 1117.721 1155.953 1155.953 1163.451 1180.012 1212.022
 [9] 1168.325 1246.147 1279.339 1560.468 1633.939 1664.880 1612.491 1596.540
[17] 1691.148 1770.798 1890.358 2002.635

$residuals
 [1] -114.078042 -139.995740  -48.141973   15.843566   22.163133   22.358820
 [7]   59.346032   76.538661   39.381342   32.261474   81.253620  -19.684033
[13]  -58.904730   31.079854   32.198084   29.491348  -36.107878  -15.198230
[19]   -2.937929  -10.740486

$rss
[1] 63134.75

$cov.unscaled
            gamma         delta           rho            nu
gamma 84.98080687 -3.060665e-01 -0.5866825176  2.459943e-02
delta -0.30606652  1.102793e-03  0.0021134879 -9.017818e-05
rho   -0.58668252  2.113488e-03  0.0040547401 -1.664815e-04
nu     0.02459943 -9.017818e-05 -0.0001664815  1.893418e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
80.2774  0.2176 -0.4819  1.8959 

Elasticity of Substitution: 1.93 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 112 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  80.2774   517.9403   0.155    0.877    
delta   0.2176     1.8658   0.117    0.907    
rho    -0.4819     3.5777  -0.135    0.893    
nu      1.8959     0.2445   7.755 8.84e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 56.18485 
Multiple R-squared: 0.964333 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.93      13.33   0.145    0.885

> coef( cesLandLaborPortVrs )
     gamma      delta        rho         nu 
80.2774222  0.2176361 -0.4818549  1.8959041 
> vcov( cesLandLaborPortVrs )
             gamma        delta           rho          nu
gamma 268262.11884 -966.1717173 -1852.0028351 77.65393676
delta   -966.17172    3.4812282     6.6717268 -0.28466886
rho    -1852.00284    6.6717268    12.7997512 -0.52553839
nu        77.65394   -0.2846689    -0.5255384  0.05977023
> coef( summary( cesLandLaborPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma 80.2774222 517.9402657  0.1549936 8.768264e-01
delta  0.2176361   1.8658050  0.1166446 9.071417e-01
rho   -0.4818549   3.5776740 -0.1346839 8.928618e-01
nu     1.8959041   0.2444795  7.7548590 8.844168e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060.211 1102.726 1117.721 1155.953 1155.953 1163.451 1180.012 1212.022
 [9] 1168.325 1246.147 1279.339 1560.468 1633.939 1664.880 1612.491 1596.540
[17] 1691.148 1770.798 1890.358 2002.635
> residuals( cesLandLaborPortVrs )
 [1] -114.078042 -139.995740  -48.141973   15.843566   22.163133   22.358820
 [7]   59.346032   76.538661   39.381342   32.261474   81.253620  -19.684033
[13]  -58.904730   31.079854   32.198084   29.491348  -36.107878  -15.198230
[19]   -2.937929  -10.740486
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
43.9654128  0.4155173 -0.1713089  1.8853751 

$nlminb$objective
[1] 62406.96

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 138

$nlminb$evaluations
function gradient 
     200      138 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
43.9654128  0.4155173 -0.1713089  1.8853751 

$iter
[1] 138

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   1.206722 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1059.326 1102.509 1118.267 1155.711 1155.711 1163.791 1181.363 1212.566
 [9] 1168.366 1245.796 1279.645 1559.475 1633.574 1665.449 1613.187 1597.765
[17] 1692.051 1770.938 1888.387 1997.671

$residuals
 [1] -113.1925602 -139.7788672  -48.6878033   16.0854170   22.4049839
 [6]   22.0189408   57.9943377   75.9946228   39.3405748   32.6129931
[11]   80.9476839  -18.6911017  -58.5395305   30.5105961   31.5018010
[16]   28.2663644  -37.0113166  -15.3378691   -0.9663314   -5.7767143

$rss
[1] 62406.96

$cov.unscaled
            gamma         delta           rho            nu
gamma 35.66772090 -0.2867892259 -0.3853854686  1.604367e-02
delta -0.28678923  0.0023071432  0.0030992740 -1.320156e-04
rho   -0.38538547  0.0030992740  0.0041676546 -1.710495e-04
nu     0.01604367 -0.0001320156 -0.0001710495  1.892312e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
43.9654  0.4155 -0.1713  1.8854 

Elasticity of Substitution: 1.207 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 138 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  43.9654   333.6101   0.132    0.895    
delta   0.4155     2.6831   0.155    0.877    
rho    -0.1713     3.6062  -0.048    0.962    
nu      1.8854     0.2430   7.759 8.57e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 55.86008 
Multiple R-squared: 0.9647442 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.207      5.251    0.23    0.818

> coef( cesLandLaborPortVrsCon )
     gamma      delta        rho         nu 
43.9654128  0.4155173 -0.1713089  1.8853751 
> vcov( cesLandLaborPortVrsCon )
             gamma        delta           rho          nu
gamma 111295.70524 -894.8822170 -1202.5368159 50.06184688
delta   -894.88222    7.1990900     9.6708137 -0.41193451
rho    -1202.53682    9.6708137    13.0045332 -0.53373383
nu        50.06185   -0.4119345    -0.5337338  0.05904674
> coef( summary( cesLandLaborPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 43.9654128 333.6101096  0.13178681 8.951529e-01
delta  0.4155173   2.6831120  0.15486395 8.769286e-01
rho   -0.1713089   3.6061799 -0.04750426 9.621113e-01
nu     1.8853751   0.2429953  7.75889411 8.567314e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1059.326 1102.509 1118.267 1155.711 1155.711 1163.791 1181.363 1212.566
 [9] 1168.366 1245.796 1279.645 1559.475 1633.574 1665.449 1613.187 1597.765
[17] 1692.051 1770.938 1888.387 1997.671
> residuals( cesLandLaborPortVrsCon )
 [1] -113.1925602 -139.7788672  -48.6878033   16.0854170   22.4049839
 [6]   22.0189408   57.9943377   75.9946228   39.3405748   32.6129931
[11]   80.9476839  -18.6911017  -58.5395305   30.5105961   31.5018010
[16]   28.2663644  -37.0113166  -15.3378691   -0.9663314   -5.7767143
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
86.8124248  0.7288093 -0.3842647 

$optim$bestval
[1] 280362.8

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1        par2       par3
1   1.028646e+09 0.434892741  9.8345268
2   6.682047e+07 0.172494222  2.0734410
3   6.682047e+07 0.172494222  2.0734410
4   6.682047e+07 0.172494222  2.0734410
5   6.682047e+07 0.172494222  2.0734410
6   6.682047e+07 0.135338735  2.0734410
7   1.490408e+07 0.167217338  6.0475770
8   1.490408e+07 0.167217338  6.0475770
9   1.483337e+07 0.236560476  8.4880709
10  1.483337e+07 0.236560476  8.4880709
11  1.490408e+07 0.167217338  9.9569357
12  1.490408e+07 0.167217338  9.9569357
13  1.490408e+07 0.167217338  9.9569357
14  1.490408e+07 0.167217338  9.9569357
15  5.074989e+06 0.085433660  5.2133824
16  5.074989e+06 0.085433660  5.2133824
17  4.463124e+06 0.155273733  5.7517939
18  8.376400e+03 0.070360895  9.0036275
19  8.376400e+03 0.070360895  9.0036275
20  8.376400e+03 0.070360895  9.0036275
21  8.376400e+03 0.015355362  9.0036275
22  8.376400e+03 0.015355362  9.0036275
23  8.376400e+03 0.015355362  9.0036275
24  8.376400e+03 0.015355362  9.0036275
25  8.376400e+03 0.015355362  9.0036275
26  8.376400e+03 0.015355362  9.0036275
27  8.376400e+03 0.015355362  9.0036275
28  8.376400e+03 0.015355362  9.0036275
29  8.376400e+03 0.015355362  9.0036275
30  8.376400e+03 0.015355362  9.0036275
31  8.376400e+03 0.015355362  9.0036275
32  8.376400e+03 0.015355362  9.0036275
33  8.376400e+03 0.015355362  9.0036275
34  8.376400e+03 0.015355362  9.0036275
35  8.376400e+03 0.015355362  9.0036275
36  8.376400e+03 0.015355362  9.0036275
37  8.376400e+03 0.015355362  9.0036275
38  8.376400e+03 0.015355362  9.0036275
39  8.376400e+03 0.015355362  9.0036275
40  8.376400e+03 0.015355362  9.0036275
41  8.376400e+03 0.015355362  9.0036275
42  4.787685e+03 0.037029419  8.6672758
43  4.787685e+03 0.037029419  8.9386333
44  2.315580e+03 0.148532988  9.4003694
45  2.315580e+03 0.148532988  9.4003694
46  2.315580e+03 0.148532988  9.4003694
47  2.315580e+03 0.148532988  9.4003694
48  2.315580e+03 0.148532988  9.4003694
49  1.045648e+03 0.154084814  9.4335534
50  1.045648e+03 0.154084814  9.4335534
51  1.045648e+03 0.154084814  9.4335534
52  1.045648e+03 0.154084814  9.4335534
53  1.045648e+03 0.154084814  9.4335534
54  8.427449e+02 0.177117668  9.4745122
55  8.427449e+02 0.177117668  9.4745122
56  8.988483e+02 0.007592181  9.6985232
57  8.988483e+02 0.007592181  9.6985232
58  6.852948e+02 0.923893241  9.4374199
59  8.988483e+02 0.243372448  9.6985232
60  8.988483e+02 0.198835654  9.6985232
61  8.988483e+02 0.198835654  9.6985232
62  8.988483e+02 0.198835654  9.6985232
63  8.988483e+02 0.198835654  9.6985232
64  8.691055e+02 0.141862095  2.7776418
65  8.691055e+02 0.141862095  2.7776418
66  8.691055e+02 0.141862095  2.7776418
67  9.117240e+02 0.008668625  1.0983876
68  9.117240e+02 0.008668625  1.0983876
69  9.117240e+02 0.008668625  1.0983876
70  9.117240e+02 0.008668625  1.0983876
71  8.223797e+02 0.029169577 -0.3736795
72  8.223797e+02 0.029169577 -0.3736795
73  8.223797e+02 0.029169577 -0.3736795
74  8.223797e+02 0.029169577 -0.3736795
75  8.223797e+02 0.029169577 -0.3736795
76  8.223797e+02 0.029169577 -0.3736795
77  8.223797e+02 0.029169577 -0.3736795
78  8.223797e+02 0.029169577 -0.3736795
79  7.901907e+02 0.029169577 -0.3736795
80  7.901907e+02 0.029169577 -0.3736795
81  7.901907e+02 0.029169577 -0.3736795
82  7.901907e+02 0.029169577 -0.3736795
83  7.901907e+02 0.029169577 -0.3736795
84  7.901907e+02 0.029169577 -0.3736795
85  7.901907e+02 0.029169577 -0.3736795
86  7.901907e+02 0.029169577 -0.3736795
87  7.901907e+02 0.029169577 -0.3736795
88  7.901907e+02 0.029169577 -0.3736795
89  7.196376e+02 0.038101183 -0.6447781
90  7.196376e+02 0.038101183 -0.6447781
91  6.993829e+02 0.038101183 -0.6447781
92  6.993829e+02 0.038101183 -0.6447781
93  6.993829e+02 0.038101183 -0.6447781
94  6.993829e+02 0.038101183 -0.6447781
95  6.026263e+02 0.043625352 -0.7230128
96  6.026263e+02 0.043625352 -0.7230128
97  6.026263e+02 0.043625352 -0.7230128
98  6.026263e+02 0.043625352 -0.7230128
99  6.026263e+02 0.043625352 -0.7230128
100 6.026263e+02 0.043625352 -0.7230128
101 6.026263e+02 0.043625352 -0.7230128
102 6.026263e+02 0.043625352 -0.7230128
103 6.026263e+02 0.043625352 -0.7230128
104 6.026263e+02 0.043625352 -0.7230128
105 5.261646e+02 0.069669971 -0.7911229
106 5.082720e+02 0.069669971 -0.7911229
107 5.082720e+02 0.069669971 -0.7911229
108 5.082720e+02 0.069669971 -0.7911229
109 5.082720e+02 0.069669971 -0.7911229
110 5.082720e+02 0.069669971 -0.7911229
111 2.857324e+02 0.330663770 -0.2254886
112 2.857324e+02 0.330663770 -0.2254886
113 2.857324e+02 0.330663770 -0.2254886
114 2.857324e+02 0.330663770 -0.2254886
115 2.857324e+02 0.330663770 -0.2254886
116 2.857324e+02 0.330663770 -0.2254886
117 2.857324e+02 0.330663770 -0.2254886
118 2.857324e+02 0.330663770 -0.2254886
119 2.857324e+02 0.330663770 -0.2254886
120 2.857324e+02 0.330663770 -0.2254886
121 2.857324e+02 0.330663770 -0.2254886
122 2.857324e+02 0.330663770 -0.2254886
123 2.857324e+02 0.330663770 -0.2254886
124 2.857324e+02 0.330663770 -0.2254886
125 2.857324e+02 0.330663770 -0.2254886
126 2.857324e+02 0.330663770 -0.2254886
127 2.857324e+02 0.330663770 -0.2254886
128 2.857324e+02 0.330663770 -0.2254886
129 2.857324e+02 0.330663770 -0.2254886
130 2.857324e+02 0.330663770 -0.2254886
131 2.857324e+02 0.330663770 -0.2254886
132 2.857324e+02 0.330663770 -0.2254886
133 2.857324e+02 0.330663770 -0.2254886
134 2.857324e+02 0.330663770 -0.2254886
135 2.857324e+02 0.330663770 -0.2254886
136 2.857324e+02 0.330663770 -0.2254886
137 2.857324e+02 0.330663770 -0.2254886
138 2.857324e+02 0.330663770 -0.2254886
139 2.857324e+02 0.330663770 -0.2254886
140 2.857324e+02 0.330663770 -0.2254886
141 2.857324e+02 0.330663770 -0.2254886
142 2.857324e+02 0.330663770 -0.2254886
143 2.857324e+02 0.330663770 -0.2254886
144 2.857324e+02 0.330663770 -0.2254886
145 2.372672e+02 0.330663770 -0.3842647
146 2.372672e+02 0.330663770 -0.3842647
147 2.372672e+02 0.330663770 -0.3842647
148 2.372672e+02 0.330663770 -0.3842647
149 2.372672e+02 0.330663770 -0.3842647
150 2.372672e+02 0.330663770 -0.3842647
151 2.372672e+02 0.330663770 -0.3842647
152 2.372672e+02 0.330663770 -0.3842647
153 2.372672e+02 0.330663770 -0.3842647
154 2.372672e+02 0.330663770 -0.3842647
155 2.372672e+02 0.330663770 -0.3842647
156 2.372672e+02 0.330663770 -0.3842647
157 2.372672e+02 0.330663770 -0.3842647
158 2.372672e+02 0.330663770 -0.3842647
159 2.372672e+02 0.330663770 -0.3842647
160 2.372672e+02 0.330663770 -0.3842647
161 2.372672e+02 0.330663770 -0.3842647
162 2.372672e+02 0.330663770 -0.3842647
163 2.372672e+02 0.330663770 -0.3842647
164 2.372672e+02 0.330663770 -0.3842647
165 2.372672e+02 0.330663770 -0.3842647
166 2.372672e+02 0.330663770 -0.3842647
167 2.372672e+02 0.330663770 -0.3842647
168 2.372672e+02 0.330663770 -0.3842647
169 2.372672e+02 0.330663770 -0.3842647
170 2.372672e+02 0.330663770 -0.3842647
171 2.372672e+02 0.330663770 -0.3842647
172 2.372672e+02 0.330663770 -0.3842647
173 2.372672e+02 0.330663770 -0.3842647
174 2.372672e+02 0.330663770 -0.3842647
175 2.372672e+02 0.330663770 -0.3842647
176 2.372672e+02 0.330663770 -0.3842647
177 2.372672e+02 0.330663770 -0.3842647
178 2.372672e+02 0.330663770 -0.3842647
179 2.372672e+02 0.330663770 -0.3842647
180 2.372672e+02 0.330663770 -0.3842647
181 2.372672e+02 0.330663770 -0.3842647
182 2.372672e+02 0.330663770 -0.3842647
183 2.372672e+02 0.330663770 -0.3842647
184 2.372672e+02 0.330663770 -0.3842647
185 2.372672e+02 0.330663770 -0.3842647
186 2.372672e+02 0.330663770 -0.3842647
187 2.372672e+02 0.330663770 -0.3842647
188 2.372672e+02 0.330663770 -0.3842647
189 2.372672e+02 0.330663770 -0.3842647
190 2.372672e+02 0.330663770 -0.3842647
191 2.372672e+02 0.330663770 -0.3842647
192 2.372672e+02 0.330663770 -0.3842647
193 2.248799e+02 0.283777775 -0.6033374
194 2.248799e+02 0.283777775 -0.6033374
195 2.248799e+02 0.283777775 -0.6033374
196 2.041968e+02 0.249978982 -0.8240531
197 2.041968e+02 0.249978982 -0.8240531
198 2.041968e+02 0.249978982 -0.8240531
199 8.681242e+01 0.728809312 -0.3842647
200 8.681242e+01 0.728809312 -0.3842647

$member$bestvalit
  [1] 5.743635e+19 2.589187e+17 2.589187e+17 2.589187e+17 2.589187e+17
  [6] 2.482080e+17 1.140478e+16 1.140478e+16 1.133173e+16 1.133173e+16
 [11] 1.113698e+16 1.113698e+16 1.113698e+16 1.113698e+16 1.287781e+15
 [16] 1.287781e+15 1.020550e+15 2.739911e+09 2.739911e+09 2.739911e+09
 [21] 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09
 [26] 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09
 [31] 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09
 [36] 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09 2.700943e+09
 [41] 2.700943e+09 7.330870e+08 7.328479e+08 1.011047e+08 1.011047e+08
 [46] 1.011047e+08 1.011047e+08 1.011047e+08 2.122048e+06 2.122048e+06
 [51] 2.122048e+06 2.122048e+06 2.122048e+06 1.226037e+06 1.226037e+06
 [56] 1.085550e+06 1.085550e+06 1.084275e+06 1.074240e+06 1.071373e+06
 [61] 1.071373e+06 1.071373e+06 1.071373e+06 1.071044e+06 1.071044e+06
 [66] 1.071044e+06 1.070689e+06 1.070689e+06 1.070689e+06 1.070689e+06
 [71] 1.025229e+06 1.025229e+06 1.025229e+06 1.025229e+06 1.025229e+06
 [76] 1.025229e+06 1.025229e+06 1.025229e+06 9.558019e+05 9.558019e+05
 [81] 9.558019e+05 9.558019e+05 9.558019e+05 9.558019e+05 9.558019e+05
 [86] 9.558019e+05 9.558019e+05 9.558019e+05 9.215190e+05 9.215190e+05
 [91] 8.203709e+05 8.203709e+05 8.203709e+05 8.203709e+05 7.745853e+05
 [96] 7.745853e+05 7.745853e+05 7.745853e+05 7.745853e+05 7.745853e+05
[101] 7.745853e+05 7.745853e+05 7.745853e+05 7.745853e+05 7.127527e+05
[106] 5.734006e+05 5.734006e+05 5.734006e+05 5.734006e+05 5.734006e+05
[111] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[116] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[121] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[126] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[131] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[136] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05
[141] 5.132513e+05 5.132513e+05 5.132513e+05 5.132513e+05 3.907083e+05
[146] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[151] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[156] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[161] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[166] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[171] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[176] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[181] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[186] 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05 3.907083e+05
[191] 3.907083e+05 3.907083e+05 3.433831e+05 3.433831e+05 3.433831e+05
[196] 2.956549e+05 2.956549e+05 2.956549e+05 2.803628e+05 2.803628e+05

$member$pop
           [,1]       [,2]        [,3]
 [1,] 350.81092 0.17236320 -0.60744208
 [2,] 930.93541 0.01100633  9.51565658
 [3,] 252.73480 0.31204632 -0.36198519
 [4,] 380.79987 0.19291879 -0.41811102
 [5,] 892.87858 0.18820313  8.25576343
 [6,] 903.41273 0.13712109  9.70796318
 [7,] 266.76533 0.46271290  0.06453209
 [8,]  86.81242 0.72880931 -0.38426469
 [9,] 455.08607 0.16533212 -0.30288073
[10,] 874.91842 0.25000942  6.19972688
[11,] 152.18215 0.58569735 -0.13509492
[12,] 857.60306 0.24234011  4.15786094
[13,] 322.57482 0.44072524  0.24154546
[14,] 221.45446 0.48026239 -0.06430622
[15,] 857.97453 0.24460581  4.28688434
[16,] 243.33889 0.49831052  0.17589609
[17,] 827.35095 0.50308786  6.92400952
[18,] 568.85349 0.06669954 -0.59265284
[19,] 224.87994 0.28377778 -0.60333737
[20,] 204.19679 0.24997898 -0.82405311
[21,] 817.24785 0.49698961  5.98028135
[22,] 743.85027 0.74291141  6.54315841
[23,] 201.72342 0.62078197  0.22098103
[24,] 219.50400 0.40085134 -0.27347241
[25,] 383.01607 0.21288887 -0.28808416
[26,] 264.43995 0.26118998 -0.49344646
[27,] 287.79050 0.39865623 -0.05986473
[28,] 277.23031 0.33105484 -0.24586404
[29,] 299.95797 0.17540611 -0.68756401
[30,] 898.84832 0.16454469  9.69852317

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
86.8124248  0.7288093 -0.3842647 

$iter
[1] 200

$ela
E_1_2 (all) 
   1.624074 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1218.580 1256.461 1278.052 1292.104 1292.104 1305.858 1335.112 1341.871
 [9] 1304.540 1350.422 1382.620 1541.013 1598.902 1645.191 1612.495 1624.699
[17] 1701.329 1770.311 1872.080 1965.822

$residuals
 [1] -272.4472987 -293.7302001 -208.4733091 -120.3070788 -113.9875119
 [6] -120.0477502  -95.7538338  -53.3097569  -96.8334533  -72.0139326
[11]  -22.0270668   -0.2289798  -23.8674806   50.7685739   32.1944910
[16]    1.3318313  -46.2891199  -14.7111475   15.3406763   26.0725037

$rss
[1] 280362.8

$cov.unscaled
           gamma       delta         rho
gamma 239.691681 -2.26099821 -3.82856041
delta  -2.260998  0.02133169  0.03612945
rho    -3.828560  0.03612945  0.06121082

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
86.8124  0.7288 -0.3843 

Elasticity of Substitution: 1.624 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   86.8124  1833.0388   0.047    0.962
delta    0.7288    17.2925   0.042    0.966
rho     -0.3843    29.2927  -0.013    0.990

Residual standard error: 118.3982 
Multiple R-squared: 0.8416134 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.624     77.263   0.021    0.983

> coef( cesLandLaborDe )
     gamma      delta        rho 
86.8124248  0.7288093 -0.3842647 
> vcov( cesLandLaborDe )
           gamma       delta         rho
gamma 3360031.08 -31694.9850 -53669.2885
delta  -31694.99    299.0306    506.4676
rho    -53669.29    506.4676    858.0618
> coef( summary( cesLandLaborDe ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 86.8124248 1833.03875  0.04735984 0.9622264
delta  0.7288093   17.29250  0.04214597 0.9663823
rho   -0.3842647   29.29269 -0.01311811 0.9895336
> fitted( cesLandLaborDe )
 [1] 1218.580 1256.461 1278.052 1292.104 1292.104 1305.858 1335.112 1341.871
 [9] 1304.540 1350.422 1382.620 1541.013 1598.902 1645.191 1612.495 1624.699
[17] 1701.329 1770.311 1872.080 1965.822
> residuals( cesLandLaborDe )
 [1] -272.4472987 -293.7302001 -208.4733091 -120.3070788 -113.9875119
 [6] -120.0477502  -95.7538338  -53.3097569  -96.8334533  -72.0139326
[11]  -22.0270668   -0.2289798  -23.8674806   50.7685739   32.1944910
[16]    1.3318313  -46.2891199  -14.7111475   15.3406763   26.0725037
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
215.506584   0.378857   2.607021   3.012611 

$optim$bestval
[1] 509951.9

$optim$nfeval
[1] 8040

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2     par3       par4
1   6.072057e+08 0.94772694 6.926559 1.42294296
2   1.388061e+09 0.90941190 7.436625 0.25893905
3   3.487480e+08 0.38074352 4.720775 1.97126628
4   2.819089e+07 0.36537062 3.162742 1.44065716
5   2.819089e+07 0.36537062 3.162742 1.44065716
6   2.819089e+07 0.36537062 4.989894 0.43966625
7   2.819089e+07 0.36537062 4.989894 0.43966625
8   2.819089e+07 0.36537062 4.989894 0.43966625
9   2.819089e+07 0.36537062 4.989894 0.43966625
10  2.819089e+07 0.36537062 4.989894 0.43966625
11  2.819089e+07 0.36537062 4.989894 0.43966625
12  1.962958e+07 0.78014559 7.311124 0.34333566
13  1.962958e+07 0.78014559 7.311124 0.34333566
14  1.962958e+07 0.78014559 7.311124 0.34333566
15  1.962958e+07 0.78014559 7.311124 0.34333566
16  1.925962e+07 0.71512361 8.749848 0.10127337
17  2.445941e+04 0.71512361 8.749848 0.56123079
18  2.445941e+04 0.71512361 8.749848 0.56123079
19  2.445941e+04 0.71512361 8.749848 0.56123079
20  2.445941e+04 0.71512361 8.749848 0.56123079
21  2.445941e+04 0.71512361 8.749848 0.56123079
22  2.445941e+04 0.71512361 8.749848 0.56123079
23  2.445941e+04 0.71512361 8.749848 0.40995292
24  2.445941e+04 0.71512361 8.749848 0.35656241
25  2.445941e+04 0.50121905 9.860958 0.35656241
26  2.445941e+04 0.50121905 9.860958 0.35656241
27  2.445941e+04 0.50121905 9.860958 0.35656241
28  2.445941e+04 0.50121905 9.860958 0.35656241
29  2.445941e+04 0.50121905 9.860958 0.35656241
30  2.445941e+04 0.50121905 9.860958 0.35656241
31  2.445941e+04 0.50121905 9.860958 0.35656241
32  2.445941e+04 0.50121905 9.860958 0.35656241
33  2.445941e+04 0.50121905 9.860958 0.35656241
34  2.445941e+04 0.50121905 9.860958 0.35656241
35  2.445941e+04 0.50121905 9.860958 0.35656241
36  2.445941e+04 0.50121905 9.860958 0.35656241
37  2.445941e+04 0.50121905 9.860958 0.35656241
38  2.445941e+04 0.50121905 9.860958 0.35656241
39  2.445941e+04 0.50121905 9.860958 0.35656241
40  2.445941e+04 0.50121905 9.860958 0.35656241
41  2.445941e+04 0.50121905 9.860958 0.35656241
42  2.445941e+04 0.50121905 9.860958 0.35656241
43  2.445941e+04 0.46753111 9.860958 0.35656241
44  2.445941e+04 0.46753111 9.860958 0.35656241
45  2.445941e+04 0.46753111 9.860958 0.33776467
46  2.445941e+04 0.46753111 9.860958 0.33776467
47  2.445941e+04 0.46753111 9.860958 0.33776467
48  2.445941e+04 0.46753111 9.860958 0.33776467
49  2.445941e+04 0.46753111 9.860958 0.33776467
50  2.445941e+04 0.46753111 9.860958 0.33776467
51  5.822817e+03 0.32692201 9.550674 0.54101676
52  5.822817e+03 0.32692201 9.550674 0.54101676
53  5.822817e+03 0.32692201 9.550674 0.54101676
54  5.822817e+03 0.02776755 9.550674 0.54101676
55  5.822817e+03 0.02776755 9.550674 0.54101676
56  5.822817e+03 0.02776755 9.550674 0.54101676
57  2.620617e+03 0.11748788 2.446178 0.30119721
58  2.620617e+03 0.11748788 2.446178 0.30119721
59  2.620617e+03 0.11748788 2.446178 0.07882608
60  2.620617e+03 0.11748788 2.446178 0.07882608
61  2.620617e+03 0.11748788 2.446178 0.07882608
62  2.620617e+03 0.11748788 2.446178 0.07882608
63  2.620617e+03 0.11748788 2.446178 0.07882608
64  2.620617e+03 0.11748788 2.446178 0.07882608
65  2.620617e+03 0.11748788 2.446178 0.07882608
66  2.620617e+03 0.11748788 2.446178 0.07882608
67  2.620617e+03 0.11748788 2.446178 0.07882608
68  2.620617e+03 0.11748788 2.446178 0.07882608
69  5.813898e+02 0.07093580 5.271191 0.11930500
70  5.813898e+02 0.07093580 5.271191 0.11930500
71  1.850935e+03 0.37429655 3.349936 0.16006312
72  8.131041e+02 0.14057939 8.544349 0.06672942
73  8.131041e+02 0.23252466 8.544349 0.06672942
74  8.131041e+02 0.23252466 8.544349 0.06672942
75  1.096165e+03 0.07093580 5.271191 0.08104044
76  1.499227e+03 0.07773769 4.139241 0.15487531
77  1.370887e+03 0.12212816 3.184882 0.13263829
78  1.370887e+03 0.12212816 3.184882 0.13263829
79  1.370887e+03 0.12212816 3.184882 0.13263829
80  1.370887e+03 0.06883862 7.210292 0.13263829
81  1.181880e+03 0.62721626 5.333294 0.29000331
82  1.181880e+03 0.62721626 5.333294 0.29000331
83  9.487572e+02 0.87746170 3.991728 0.45624805
84  9.487572e+02 0.87746170 3.991728 0.45624805
85  9.487572e+02 0.87746170 3.991728 0.45624805
86  9.487572e+02 0.87746170 3.991728 0.45624805
87  9.487572e+02 0.87746170 3.991728 0.45624805
88  9.487572e+02 0.87746170 3.991728 0.45624805
89  1.008636e+03 0.40669602 1.589546 0.44060692
90  6.807729e+02 0.51431586 4.586665 1.15553009
91  7.468852e+02 0.43499193 9.459750 1.24866302
92  7.468852e+02 0.43499193 9.459750 1.24866302
93  7.468852e+02 0.43499193 9.459750 1.24866302
94  6.209026e+02 0.42095148 3.112191 1.41670261
95  5.026309e+02 0.22525333 1.630063 1.65625834
96  5.026309e+02 0.22525333 1.630063 1.65625834
97  5.026309e+02 0.22525333 1.630063 1.65625834
98  5.026309e+02 0.22525333 1.630063 1.83177259
99  5.026309e+02 0.22525333 1.630063 1.83177259
100 2.436377e+02 0.90963878 5.096281 1.97268003
101 2.436377e+02 0.90963878 5.096281 1.97268003
102 2.436377e+02 0.90963878 5.096281 1.97268003
103 2.436377e+02 0.90963878 5.096281 1.97268003
104 2.436377e+02 0.90963878 5.096281 1.97268003
105 2.436377e+02 0.90963878 5.096281 1.97268003
106 2.436377e+02 0.90963878 5.096281 1.97268003
107 2.436377e+02 0.90963878 5.096281 1.97268003
108 3.478673e+02 0.59337920 3.251108 1.94161649
109 3.478673e+02 0.59337920 3.251108 1.94161649
110 3.478673e+02 0.59337920 3.251108 1.94161649
111 3.478673e+02 0.59337920 3.251108 1.94161649
112 3.478673e+02 0.59337920 3.251108 1.94161649
113 3.478673e+02 0.60778651 3.251108 1.94161649
114 3.478673e+02 0.60778651 3.251108 1.94161649
115 3.478673e+02 0.60778651 3.251108 1.94161649
116 4.378067e+02 0.50163075 7.931598 2.30267509
117 4.378067e+02 0.50163075 7.931598 2.30267509
118 4.378067e+02 0.50163075 7.931598 2.30267509
119 3.515183e+02 0.59069916 7.050021 2.44296566
120 3.515183e+02 0.59069916 7.050021 2.44296566
121 3.515183e+02 0.59069916 7.050021 2.44296566
122 3.515183e+02 0.59069916 7.050021 2.44296566
123 3.515183e+02 0.59069916 7.050021 2.44296566
124 3.515183e+02 0.59069916 7.050021 2.44296566
125 3.599526e+02 0.42203576 8.731894 2.67362296
126 3.599526e+02 0.42203576 8.731894 2.67362296
127 3.599526e+02 0.42203576 8.731894 2.67362296
128 3.690039e+02 0.41720415 9.794533 2.68877698
129 3.690039e+02 0.41720415 9.794533 2.68877698
130 3.690039e+02 0.41720415 9.794533 2.68877698
131 3.690039e+02 0.41720415 9.794533 2.68877698
132 3.690039e+02 0.41720415 9.794533 2.68877698
133 3.690039e+02 0.41720415 9.794533 2.68877698
134 2.764766e+02 0.51432552 8.731894 3.10657146
135 2.764766e+02 0.51432552 8.731894 3.10657146
136 2.764766e+02 0.51432552 8.731894 3.10657146
137 2.764766e+02 0.51432552 8.731894 3.10657146
138 2.764766e+02 0.51432552 8.731894 3.10657146
139 2.895997e+02 0.46591144 7.040518 2.97314730
140 2.895997e+02 0.46591144 7.040518 2.97314730
141 2.895997e+02 0.46591144 7.040518 2.97314730
142 2.895997e+02 0.46591144 7.040518 2.97314730
143 2.895997e+02 0.46591144 7.040518 2.97314730
144 2.895997e+02 0.46591144 7.040518 2.97314730
145 2.895997e+02 0.46591144 7.040518 2.97314730
146 2.895997e+02 0.46591144 7.040518 2.97314730
147 2.895997e+02 0.46591144 7.040518 2.97314730
148 2.895997e+02 0.46591144 7.040518 2.97314730
149 3.306575e+02 0.33158433 7.426371 2.92404886
150 3.306575e+02 0.33158433 7.426371 2.92404886
151 3.306575e+02 0.33158433 7.426371 2.92404886
152 3.306575e+02 0.33158433 7.426371 2.92404886
153 3.306575e+02 0.33158433 7.426371 2.92404886
154 3.306575e+02 0.33158433 7.426371 2.92404886
155 3.306575e+02 0.33158433 7.426371 2.92404886
156 3.306575e+02 0.33158433 7.426371 2.92404886
157 2.563411e+02 0.56586719 7.009948 3.04160958
158 2.905385e+02 0.37653440 5.401532 2.98611631
159 2.905385e+02 0.37653440 5.401532 2.98611631
160 2.905385e+02 0.37653440 5.401532 2.98611631
161 2.905385e+02 0.37653440 5.401532 2.98611631
162 2.905385e+02 0.37653440 5.401532 2.98611631
163 2.905385e+02 0.37653440 5.401532 2.98611631
164 2.905385e+02 0.37653440 5.401532 2.98611631
165 2.905385e+02 0.37653440 5.401532 2.98611631
166 2.905385e+02 0.37653440 5.401532 2.98611631
167 2.905385e+02 0.37653440 5.401532 2.98611631
168 2.905385e+02 0.37653440 5.401532 2.98611631
169 2.905385e+02 0.37653440 5.401532 2.98611631
170 2.905385e+02 0.37653440 5.401532 2.98611631
171 2.905385e+02 0.37653440 5.401532 2.98611631
172 2.905385e+02 0.37653440 5.401532 2.98611631
173 2.905385e+02 0.37653440 5.401532 2.98611631
174 2.905385e+02 0.37653440 5.401532 2.98611631
175 2.905385e+02 0.37653440 5.401532 2.98611631
176 2.905385e+02 0.37653440 5.401532 2.98611631
177 2.905385e+02 0.37653440 5.401532 2.98611631
178 3.028406e+02 0.34646041 5.892230 2.99050253
179 3.028406e+02 0.34646041 5.892230 2.99050253
180 3.028406e+02 0.34646041 5.892230 2.99050253
181 3.028406e+02 0.34646041 5.892230 2.99050253
182 3.028406e+02 0.34646041 5.892230 2.99050253
183 2.155066e+02 0.37885705 2.607021 3.01261090
184 2.155066e+02 0.37885705 2.607021 3.01261090
185 2.155066e+02 0.37885705 2.607021 3.01261090
186 2.155066e+02 0.37885705 2.607021 3.01261090
187 2.155066e+02 0.37885705 2.607021 3.01261090
188 2.155066e+02 0.37885705 2.607021 3.01261090
189 2.155066e+02 0.37885705 2.607021 3.01261090
190 2.155066e+02 0.37885705 2.607021 3.01261090
191 2.155066e+02 0.37885705 2.607021 3.01261090
192 2.155066e+02 0.37885705 2.607021 3.01261090
193 2.155066e+02 0.37885705 2.607021 3.01261090
194 2.155066e+02 0.37885705 2.607021 3.01261090
195 2.155066e+02 0.37885705 2.607021 3.01261090
196 2.155066e+02 0.37885705 2.607021 3.01261090
197 2.155066e+02 0.37885705 2.607021 3.01261090
198 2.155066e+02 0.37885705 2.607021 3.01261090
199 2.155066e+02 0.37885705 2.607021 3.01261090
200 2.155066e+02 0.37885705 2.607021 3.01261090

$member$bestvalit
  [1] 8.736589e+19 5.716822e+19 2.093104e+19 8.610368e+16 8.610368e+16
  [6] 2.533931e+16 2.533931e+16 2.533931e+16 2.533931e+16 2.533931e+16
 [11] 2.533931e+16 1.200923e+16 1.200923e+16 1.200923e+16 1.200923e+16
 [16] 8.345226e+15 2.114114e+10 2.114114e+10 2.114114e+10 2.114114e+10
 [21] 2.114114e+10 2.114114e+10 1.757351e+10 1.646212e+10 1.558676e+10
 [26] 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10
 [31] 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10
 [36] 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10 1.558676e+10
 [41] 1.558676e+10 1.558676e+10 1.550954e+10 1.550954e+10 1.520394e+10
 [46] 1.520394e+10 1.520394e+10 1.520394e+10 1.520394e+10 1.520394e+10
 [51] 7.538112e+08 7.538112e+08 7.538112e+08 7.160878e+08 7.160878e+08
 [56] 7.160878e+08 5.402249e+07 5.402249e+07 3.599807e+07 3.599807e+07
 [61] 3.599807e+07 3.599807e+07 3.599807e+07 3.599807e+07 3.599807e+07
 [66] 3.599807e+07 3.599807e+07 3.599807e+07 1.450999e+07 1.450999e+07
 [71] 9.207688e+06 8.346485e+06 8.329427e+06 8.329427e+06 3.239997e+06
 [76] 2.398257e+06 1.704212e+06 1.704212e+06 1.704212e+06 1.693931e+06
 [81] 1.539910e+06 1.539910e+06 1.477199e+06 1.477199e+06 1.477199e+06
 [86] 1.477199e+06 1.477199e+06 1.477199e+06 1.425752e+06 1.074946e+06
 [91] 9.565679e+05 9.565679e+05 9.565679e+05 9.359233e+05 8.748491e+05
 [96] 8.748491e+05 8.748491e+05 8.040849e+05 8.040849e+05 7.104584e+05
[101] 7.104584e+05 7.104584e+05 7.104584e+05 7.104584e+05 7.104584e+05
[106] 7.104584e+05 7.104584e+05 6.748502e+05 6.748502e+05 6.748502e+05
[111] 6.748502e+05 6.748502e+05 6.669683e+05 6.669683e+05 6.669683e+05
[116] 6.510168e+05 6.510168e+05 6.510168e+05 5.546638e+05 5.546638e+05
[121] 5.546638e+05 5.546638e+05 5.546638e+05 5.546638e+05 5.416794e+05
[126] 5.416794e+05 5.416794e+05 5.261286e+05 5.261286e+05 5.261286e+05
[131] 5.261286e+05 5.261286e+05 5.261286e+05 5.121079e+05 5.121079e+05
[136] 5.121079e+05 5.121079e+05 5.121079e+05 5.110951e+05 5.110951e+05
[141] 5.110951e+05 5.110951e+05 5.110951e+05 5.110951e+05 5.110951e+05
[146] 5.110951e+05 5.110951e+05 5.110951e+05 5.108560e+05 5.108560e+05
[151] 5.108560e+05 5.108560e+05 5.108560e+05 5.108560e+05 5.108560e+05
[156] 5.108560e+05 5.106227e+05 5.101984e+05 5.101984e+05 5.101984e+05
[161] 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05
[166] 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05
[171] 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05 5.101984e+05
[176] 5.101984e+05 5.101984e+05 5.101978e+05 5.101978e+05 5.101978e+05
[181] 5.101978e+05 5.101978e+05 5.099519e+05 5.099519e+05 5.099519e+05
[186] 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05
[191] 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05
[196] 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05 5.099519e+05

$member$pop
          [,1]       [,2]     [,3]     [,4]
 [1,] 215.5066 0.37885705 2.607021 3.012611
 [2,] 340.0522 0.27290590 4.709029 2.800544
 [3,] 225.8842 0.44994267 3.301260 2.952364
 [4,] 285.8180 0.26939260 4.076397 3.063113
 [5,] 314.1984 0.44688050 6.785640 2.845356
 [6,] 382.8687 0.28825942 8.916619 2.751826
 [7,] 290.5385 0.37653440 5.401532 2.986116
 [8,] 281.2774 0.31617053 4.345777 3.019325
 [9,] 269.3751 0.33852737 4.786677 3.120786
[10,] 297.7450 0.40715024 6.003197 2.943275
[11,] 279.8383 0.58179186 6.830467 2.846337
[12,] 345.1167 0.26431755 8.745713 2.941239
[13,] 290.6420 0.30031158 4.595184 3.040262
[14,] 256.3411 0.56586719 7.009948 3.041610
[15,] 299.5799 0.10122008 2.983247 3.245160
[16,] 339.0362 0.26198644 4.912108 2.825778
[17,] 264.6027 0.53974992 6.415997 2.974641
[18,] 303.8284 0.66679531 9.595698 2.766068
[19,] 299.1225 0.21793498 2.618813 2.888069
[20,] 287.5259 0.34732245 4.967221 3.004611
[21,] 302.8406 0.34646041 5.892230 2.990503
[22,] 234.3412 0.45725236 3.650858 2.924069
[23,] 289.5997 0.46591144 7.040518 2.973147
[24,] 342.7673 0.40697178 7.656002 2.780910
[25,] 273.4109 0.35353702 5.208598 3.103816
[26,] 317.5201 0.26910628 4.809187 2.951238
[27,] 332.0399 0.32126700 7.172711 2.918997
[28,] 297.1048 0.41326917 6.963036 2.999334
[29,] 347.8320 0.29697632 6.371413 2.820495
[30,] 303.2499 0.13821717 2.472356 3.062711
[31,] 310.9398 0.22329145 2.643098 2.824108
[32,] 316.1305 0.35445099 6.801409 2.930428
[33,] 359.5695 0.23871395 9.305362 2.900035
[34,] 348.3008 0.01388177 1.724150 3.115409
[35,] 364.0688 0.26600451 4.600948 2.663773
[36,] 265.2745 0.52245514 6.549181 3.008983
[37,] 309.7957 0.25650807 4.805406 3.003328
[38,] 276.1926 0.45426984 7.195525 3.093632
[39,] 330.6575 0.33158433 7.426371 2.924049
[40,] 215.9863 0.50502147 5.049509 3.201776

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
215.506584   0.378857   2.607021   3.012611 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.2772371 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1120.249 1143.888 1120.321 1216.693 1216.693 1192.121 1143.973 1241.677
 [9] 1216.708 1344.802 1344.841 1814.705 1847.310 1750.914 1688.488 1568.201
[17] 1597.781 1597.826 1597.882 1597.923

$residuals
 [1] -174.116139 -181.157220  -50.741800  -44.896549  -38.576982   -6.311205
 [7]   95.384676   46.884299   -9.001936  -66.393267   15.751879 -273.920690
[13] -272.275397  -54.954335  -43.798742   57.829755   57.259294  157.773692
[19]  289.538484  393.970529

$rss
[1] 509951.9

$cov.unscaled
              gamma         delta           rho            nu
gamma  9.832012e+07 -2.925581e+05 -4.172741e+05  2.601703e+01
delta -2.925581e+05  8.705351e+02  1.241708e+03 -7.723162e-02
rho   -4.172741e+05  1.241708e+03  1.771654e+03 -1.087552e-01
nu     2.601703e+01 -7.723162e-02 -1.087552e-01  1.829779e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho       nu 
215.5066   0.3789   2.6070   3.0126 

Elasticity of Substitution: 0.2772 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma 2.155e+02  1.583e+06   0.000        1    
delta 3.789e-01  4.711e+03   0.000        1    
rho   2.607e+00  6.721e+03   0.000        1    
nu    3.013e+00  6.830e-01   4.411 1.03e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 159.6797 
Multiple R-squared: 0.7119106 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.2772   516.5848   0.001        1

> coef( cesLandLaborDeVrs )
     gamma      delta        rho         nu 
215.506584   0.378857   2.607021   3.012611 
> vcov( cesLandLaborDeVrs )
              gamma         delta           rho            nu
gamma  2.506927e+12 -7.459527e+09 -1.063949e+10  6.633716e+05
delta -7.459527e+09  2.219655e+07  3.166058e+07 -1.969221e+03
rho   -1.063949e+10  3.166058e+07  4.517291e+07 -2.772996e+03
nu     6.633716e+05 -1.969221e+03 -2.772996e+03  4.665495e-01
> coef( summary( cesLandLaborDeVrs ) )
        Estimate   Std. Error      t value     Pr(>|t|)
gamma 215.506584 1.583328e+06 1.361099e-04 9.998914e-01
delta   0.378857 4.711322e+03 8.041417e-05 9.999358e-01
rho     2.607021 6.721079e+03 3.878873e-04 9.996905e-01
nu      3.012611 6.830443e-01 4.410564e+00 1.031015e-05
> fitted( cesLandLaborDeVrs )
 [1] 1120.249 1143.888 1120.321 1216.693 1216.693 1192.121 1143.973 1241.677
 [9] 1216.708 1344.802 1344.841 1814.705 1847.310 1750.914 1688.488 1568.201
[17] 1597.781 1597.826 1597.882 1597.923
> residuals( cesLandLaborDeVrs )
 [1] -174.116139 -181.157220  -50.741800  -44.896549  -38.576982   -6.311205
 [7]   95.384676   46.884299   -9.001936  -66.393267   15.751879 -273.920690
[13] -272.275397  -54.954335  -43.798742   57.829755   57.259294  157.773692
[19]  289.538484  393.970529
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
    par1     par2     par3 
49.61683  0.99000 -0.99000 

$optim$bestval
[1] 166012.8

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2       par3
1   44.26785 0.9316579 -0.8082296
2   44.26785 0.9316579 -0.8082296
3   44.26785 0.9316579 -0.8082296
4   44.26785 0.9316579 -0.8082296
5   44.26785 0.9316579 -0.8082296
6   46.15727 0.9694478 -0.2902611
7   48.64679 0.9386924 -0.6348988
8   48.64679 0.9386924 -0.9019968
9   48.64679 0.9386924 -0.9019968
10  48.64679 0.9386924 -0.9019968
11  48.02164 0.9770688 -0.9172132
12  48.61976 0.9694478 -0.9758917
13  49.26828 0.9581120 -0.9870194
14  49.26828 0.9581120 -0.9870194
15  49.32728 0.9702884 -0.8322152
16  49.67807 0.9770688 -0.9172132
17  49.30370 0.9869063 -0.9167161
18  49.52486 0.9889893 -0.9713304
19  49.52486 0.9889893 -0.9713304
20  49.79833 0.9859043 -0.9279187
21  49.91234 0.9850945 -0.9893447
22  49.91234 0.9850945 -0.9893447
23  49.65410 0.9892053 -0.8945347
24  49.65410 0.9892053 -0.8945347
25  49.65410 0.9892053 -0.8945347
26  49.59613 0.9893323 -0.9730323
27  49.65410 0.9892053 -0.9635211
28  49.65410 0.9892053 -0.9635211
29  49.65410 0.9892053 -0.9635211
30  49.65410 0.9892053 -0.9635211
31  49.65410 0.9892053 -0.9635211
32  49.65410 0.9892053 -0.9635211
33  49.63754 0.9894363 -0.9882939
34  49.63754 0.9894363 -0.9882939
35  49.63754 0.9894363 -0.9882939
36  49.63754 0.9894363 -0.9882939
37  49.63487 0.9897022 -0.9806063
38  49.63600 0.9899663 -0.9838307
39  49.63600 0.9899663 -0.9838307
40  49.63600 0.9899663 -0.9838307
41  49.63600 0.9899663 -0.9838307
42  49.63600 0.9899663 -0.9862744
43  49.63600 0.9899663 -0.9862744
44  49.63600 0.9899663 -0.9862744
45  49.63600 0.9899663 -0.9862744
46  49.63600 0.9899663 -0.9862744
47  49.63600 0.9899142 -0.9867288
48  49.62624 0.9898084 -0.9870430
49  49.62624 0.9898084 -0.9870430
50  49.62624 0.9898084 -0.9870430
51  49.62668 0.9899022 -0.9844843
52  49.62668 0.9899022 -0.9844843
53  49.62668 0.9899022 -0.9844843
54  49.61769 0.9899142 -0.9883912
55  49.61769 0.9899142 -0.9883912
56  49.62358 0.9899998 -0.9891926
57  49.62358 0.9899998 -0.9891926
58  49.62010 0.9899812 -0.9891414
59  49.62010 0.9899812 -0.9891414
60  49.62010 0.9899812 -0.9891414
61  49.61964 0.9899891 -0.9889832
62  49.61964 0.9899891 -0.9889832
63  49.61666 0.9899998 -0.9893894
64  49.61666 0.9899998 -0.9893894
65  49.61666 0.9899998 -0.9893894
66  49.61666 0.9899998 -0.9893894
67  49.61666 0.9899998 -0.9893894
68  49.61689 0.9899966 -0.9897008
69  49.61658 0.9899981 -0.9897060
70  49.61658 0.9899981 -0.9897060
71  49.61658 0.9899981 -0.9897060
72  49.61658 0.9899981 -0.9897060
73  49.61658 0.9899981 -0.9897060
74  49.61725 0.9899971 -0.9899510
75  49.61725 0.9899971 -0.9899510
76  49.61698 0.9899965 -0.9899780
77  49.61689 0.9899975 -0.9899726
78  49.61614 0.9899989 -0.9899918
79  49.61614 0.9899989 -0.9899918
80  49.61614 0.9899989 -0.9899918
81  49.61614 0.9899989 -0.9899918
82  49.61709 0.9899999 -0.9899559
83  49.61709 0.9899990 -0.9899912
84  49.61663 0.9899994 -0.9899866
85  49.61663 0.9899994 -0.9899866
86  49.61695 0.9899998 -0.9899742
87  49.61695 0.9899998 -0.9899742
88  49.61614 0.9899998 -0.9899918
89  49.61614 0.9899998 -0.9899918
90  49.61733 0.9899997 -0.9899932
91  49.61678 0.9899997 -0.9899988
92  49.61663 0.9899998 -0.9899982
93  49.61692 0.9899998 -0.9899982
94  49.61697 0.9899999 -0.9899985
95  49.61690 0.9899999 -0.9899989
96  49.61690 0.9899999 -0.9899989
97  49.61690 0.9899999 -0.9899989
98  49.61678 0.9900000 -0.9899996
99  49.61678 0.9900000 -0.9899996
100 49.61678 0.9900000 -0.9899996
101 49.61678 0.9900000 -0.9899996
102 49.61678 0.9900000 -0.9899996
103 49.61678 0.9900000 -0.9899996
104 49.61678 0.9900000 -0.9899996
105 49.61685 0.9900000 -0.9899992
106 49.61685 0.9900000 -0.9899992
107 49.61684 0.9900000 -0.9899992
108 49.61684 0.9900000 -0.9899992
109 49.61682 0.9900000 -0.9899999
110 49.61682 0.9900000 -0.9899999
111 49.61682 0.9900000 -0.9899999
112 49.61682 0.9900000 -0.9899999
113 49.61682 0.9900000 -0.9899999
114 49.61682 0.9900000 -0.9899999
115 49.61680 0.9900000 -0.9900000
116 49.61680 0.9900000 -0.9900000
117 49.61685 0.9900000 -0.9900000
118 49.61685 0.9900000 -0.9900000
119 49.61685 0.9900000 -0.9900000
120 49.61685 0.9900000 -0.9900000
121 49.61685 0.9900000 -0.9900000
122 49.61685 0.9900000 -0.9900000
123 49.61685 0.9900000 -0.9900000
124 49.61685 0.9900000 -0.9900000
125 49.61685 0.9900000 -0.9900000
126 49.61684 0.9900000 -0.9900000
127 49.61683 0.9900000 -0.9900000
128 49.61683 0.9900000 -0.9900000
129 49.61683 0.9900000 -0.9900000
130 49.61683 0.9900000 -0.9900000
131 49.61683 0.9900000 -0.9900000
132 49.61683 0.9900000 -0.9900000
133 49.61683 0.9900000 -0.9900000
134 49.61683 0.9900000 -0.9900000
135 49.61683 0.9900000 -0.9900000
136 49.61683 0.9900000 -0.9900000
137 49.61683 0.9900000 -0.9900000
138 49.61683 0.9900000 -0.9900000
139 49.61683 0.9900000 -0.9900000
140 49.61683 0.9900000 -0.9900000
141 49.61683 0.9900000 -0.9900000
142 49.61683 0.9900000 -0.9900000
143 49.61683 0.9900000 -0.9900000
144 49.61683 0.9900000 -0.9900000
145 49.61683 0.9900000 -0.9900000
146 49.61683 0.9900000 -0.9900000
147 49.61683 0.9900000 -0.9900000
148 49.61683 0.9900000 -0.9900000
149 49.61683 0.9900000 -0.9900000
150 49.61683 0.9900000 -0.9900000
151 49.61683 0.9900000 -0.9900000
152 49.61683 0.9900000 -0.9900000
153 49.61683 0.9900000 -0.9900000
154 49.61683 0.9900000 -0.9900000
155 49.61683 0.9900000 -0.9900000
156 49.61683 0.9900000 -0.9900000
157 49.61683 0.9900000 -0.9900000
158 49.61683 0.9900000 -0.9900000
159 49.61683 0.9900000 -0.9900000
160 49.61683 0.9900000 -0.9900000
161 49.61683 0.9900000 -0.9900000
162 49.61683 0.9900000 -0.9900000
163 49.61683 0.9900000 -0.9900000
164 49.61683 0.9900000 -0.9900000
165 49.61683 0.9900000 -0.9900000
166 49.61683 0.9900000 -0.9900000
167 49.61683 0.9900000 -0.9900000
168 49.61683 0.9900000 -0.9900000
169 49.61683 0.9900000 -0.9900000
170 49.61683 0.9900000 -0.9900000
171 49.61683 0.9900000 -0.9900000
172 49.61683 0.9900000 -0.9900000
173 49.61683 0.9900000 -0.9900000
174 49.61683 0.9900000 -0.9900000
175 49.61683 0.9900000 -0.9900000
176 49.61683 0.9900000 -0.9900000
177 49.61683 0.9900000 -0.9900000
178 49.61683 0.9900000 -0.9900000
179 49.61683 0.9900000 -0.9900000
180 49.61683 0.9900000 -0.9900000
181 49.61683 0.9900000 -0.9900000
182 49.61683 0.9900000 -0.9900000
183 49.61683 0.9900000 -0.9900000
184 49.61683 0.9900000 -0.9900000
185 49.61683 0.9900000 -0.9900000
186 49.61683 0.9900000 -0.9900000
187 49.61683 0.9900000 -0.9900000
188 49.61683 0.9900000 -0.9900000
189 49.61683 0.9900000 -0.9900000
190 49.61683 0.9900000 -0.9900000
191 49.61683 0.9900000 -0.9900000
192 49.61683 0.9900000 -0.9900000
193 49.61683 0.9900000 -0.9900000
194 49.61683 0.9900000 -0.9900000
195 49.61683 0.9900000 -0.9900000
196 49.61683 0.9900000 -0.9900000
197 49.61683 0.9900000 -0.9900000
198 49.61683 0.9900000 -0.9900000
199 49.61683 0.9900000 -0.9900000
200 49.61683 0.9900000 -0.9900000

$member$bestvalit
  [1] 1337461.6 1337461.6 1337461.6 1337461.6 1337461.6  732634.1  503471.3
  [8]  385326.5  385326.5  385326.5  252648.1  232392.3  225504.3  225504.3
 [15]  201385.8  173007.4  170350.5  166414.7  166414.7  166184.0  166162.0
 [22]  166162.0  166124.3  166124.3  166124.3  166095.4  166045.6  166045.6
 [29]  166045.6  166045.6  166045.6  166045.6  166024.8  166024.8  166024.8
 [36]  166024.8  166023.4  166020.5  166020.5  166020.5  166020.5  166019.7
 [43]  166019.7  166019.7  166019.7  166019.7  166019.3  166017.9  166017.9
 [50]  166017.9  166017.7  166017.7  166017.7  166015.4  166015.4  166013.9
 [57]  166013.9  166013.6  166013.6  166013.6  166013.6  166013.6  166013.1
 [64]  166013.1  166013.1  166013.1  166013.1  166013.0  166013.0  166013.0
 [71]  166013.0  166013.0  166013.0  166012.8  166012.8  166012.8  166012.8
 [78]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [85]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [92]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [99]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[106]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[113]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[120]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[127]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[134]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[141]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[148]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[155]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[162]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[169]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[176]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[183]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[190]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[197]  166012.8  166012.8  166012.8  166012.8

$member$pop
          [,1] [,2]  [,3]
 [1,] 49.61683 0.99 -0.99
 [2,] 49.61683 0.99 -0.99
 [3,] 49.61683 0.99 -0.99
 [4,] 49.61683 0.99 -0.99
 [5,] 49.61683 0.99 -0.99
 [6,] 49.61683 0.99 -0.99
 [7,] 49.61683 0.99 -0.99
 [8,] 49.61683 0.99 -0.99
 [9,] 49.61683 0.99 -0.99
[10,] 49.61683 0.99 -0.99
[11,] 49.61683 0.99 -0.99
[12,] 49.61683 0.99 -0.99
[13,] 49.61683 0.99 -0.99
[14,] 49.61683 0.99 -0.99
[15,] 49.61683 0.99 -0.99
[16,] 49.61683 0.99 -0.99
[17,] 49.61683 0.99 -0.99
[18,] 49.61683 0.99 -0.99
[19,] 49.61683 0.99 -0.99
[20,] 49.61683 0.99 -0.99
[21,] 49.61683 0.99 -0.99
[22,] 49.61683 0.99 -0.99
[23,] 49.61683 0.99 -0.99
[24,] 49.61683 0.99 -0.99
[25,] 49.61683 0.99 -0.99
[26,] 49.61683 0.99 -0.99
[27,] 49.61683 0.99 -0.99
[28,] 49.61683 0.99 -0.99
[29,] 49.61683 0.99 -0.99
[30,] 49.61683 0.99 -0.99

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.61683  0.99000 -0.99000 

$iter
[1] 200

$ela
E_1_2 (all) 
        100 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505

$residuals
 [1] -203.915909 -226.616321 -143.829363  -52.437990  -46.118424  -54.136476
 [7]  -33.977296   12.258408  -29.789582   -2.826017   44.976903   72.827185
[13]   46.168856  114.063680   95.711302   59.392019    6.863192   32.766935
[19]   54.076596   56.389280

$rss
[1] 166012.8

$cov.unscaled
            gamma      delta         rho
gamma  2206.43828 -64.363588 -2181.17777
delta   -64.36359   1.877625    63.63713
rho   -2181.17777  63.637131  2157.45034

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

Elasticity of Substitution: 100 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    49.62    4279.58   0.012    0.991
delta     0.99     124.84   0.008    0.994
rho      -0.99    4231.81   0.000    1.000

Residual standard error: 91.10784 
Multiple R-squared: 0.9062137 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      100   42318098       0        1

> coef( cesLandLaborDe2 )
   gamma    delta      rho 
49.61683  0.99000 -0.99000 
> vcov( cesLandLaborDe2 )
            gamma      delta         rho
gamma  18314845.2 -534258.84 -18105166.9
delta   -534258.8   15585.49    528228.8
rho   -18105166.9  528228.78  17908214.0
> coef( summary( cesLandLaborDe2 ) )
      Estimate Std. Error       t value  Pr(>|t|)
gamma 49.61683  4279.5847  0.0115938431 0.9907497
delta  0.99000   124.8418  0.0079300335 0.9936728
rho   -0.99000  4231.8098 -0.0002339425 0.9998133
> fitted( cesLandLaborDe2 )
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505
> residuals( cesLandLaborDe2 )
 [1] -203.915909 -226.616321 -143.829363  -52.437990  -46.118424  -54.136476
 [7]  -33.977296   12.258408  -29.789582   -2.826017   44.976903   72.827185
[13]   46.168856  114.063680   95.711302   59.392019    6.863192   32.766935
[19]   54.076596   56.389280
> 
> # Land & Labor with constant returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # Land & Labor with variable returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls", vrs = TRUE ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ## CES: Land & Intermediate Inputs (Nelder-Mead)
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "NM" )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   0.208324 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$rss
[1] 165837.1

$cov.unscaled
          gamma      delta       rho
gamma 815214446 23296651.9 -46969864
delta  23296652   665758.5  -1342302
rho   -46969864 -1342301.7   2706578

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

Elasticity of Substitution: 0.2083 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.221e+01  2.600e+06       0        1
delta 2.008e-01  7.430e+04       0        1
rho   3.800e+00  1.498e+05       0        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.2083  6501.5158       0        1

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2599930.74 1.238927e-05 0.9999901
delta  0.2007986   74299.21 2.702567e-06 0.9999978
rho    3.8002155  149808.37 2.536718e-05 0.9999798
> 
> # variable returns to scale (Nelder-Mead)
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3725843 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854483   10.575677   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$rss
[1] 71996.09

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
nu    -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
  gamma   delta     rho      nu 
1.00222 0.02173 1.68396 1.31339 

Elasticity of Substitution: 0.3726 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
nu     1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.99837 
Multiple R-squared: 0.9593269 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3726     1.8833   0.198    0.843

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
nu    1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.7749583 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$rss
[1] 257689.4

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

Elasticity of Substitution: 0.775 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.775     14.696   0.053    0.958

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN", random.seed = 234 )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$ela
E_1_2 (all) 
  0.2547959 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$rss
[1] 166684.4

$cov.unscaled
           gamma      delta         rho
gamma 5004.97673 41.3989564 -650.115558
delta   41.39896  0.3424517   -5.378117
rho   -650.11556 -5.3781175   84.469565

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

Elasticity of Substitution: 0.2548 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 1.315e+01  6.459e+03   0.002    0.998
delta 2.101e-02  5.342e+01   0.000    1.000
rho   2.925e+00  8.390e+02   0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.2548    54.4713   0.005    0.996

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 13.14842134 6458.52765 0.002035823 0.9983756
delta  0.02100585   53.42348 0.000393195 0.9996863
rho    2.92470954  839.03992 0.003485781 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$optim$value
[1] 165834.5

$optim$counts
function gradient 
     352       82 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.7896450  0.2558192  3.9468447 

$iter
function gradient 
     352       82 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.2021491 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.939 1189.254 1213.334 1224.146 1224.146 1239.871 1273.288 1276.236
 [9] 1237.414 1281.151 1315.551 1467.893 1528.830 1581.904 1548.978 1566.668
[17] 1648.243 1722.938 1833.508 1935.725

$residuals
 [1] -203.806133 -226.523416 -143.754466  -52.349211  -46.029556  -54.061288
 [7]  -33.930502   12.324450  -29.707715   -2.742198   45.041725   72.890751
[13]   46.204207  114.055297   95.711563   59.362915    6.796772   32.661392
[19]   53.911931   56.169295

$rss
[1] 165834.5

$cov.unscaled
           gamma     delta        rho
gamma 3840584870 131166652 -222988593
delta  131166652   4479717   -7615811
rho   -222988593  -7615811   12948441

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
34.7896  0.2558  3.9468 

Elasticity of Substitution: 0.2021 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence achieved after 352 function and 82 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.479e+01  5.643e+06       0        1
delta 2.558e-01  1.927e+05       0        1
rho   3.947e+00  3.277e+05       0        1

Residual standard error: 91.05892 
Multiple R-squared: 0.9063144 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 2.021e-01  1.339e+04       0        1

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.7896450  5643144.5 6.164940e-06 0.9999951
delta  0.2558192   192729.3 1.327350e-06 0.9999989
rho    3.9468447   327665.9 1.204533e-05 0.9999904
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B" )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      27       27 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      27       27 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.6056703 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  5.482972e-01  8.354371e-03 -4.811163e+10
delta  8.354371e-03  1.273117e-04 -7.445778e+08
rho   -4.811163e+10 -7.445778e+08  4.575469e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
  gamma   delta     rho 
49.1430  1.0000  0.6511 

Elasticity of Substitution: 0.6057 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 27 function and 27 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  6.743e+01   0.729    0.466
delta 1.000e+00  1.027e+00   0.973    0.330
rho   6.511e-01  1.948e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 6.057e-01  7.145e+12       0        1

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.742604e+01 7.288423e-01 0.4660981
delta  1.0000000 1.027434e+00 9.732989e-01 0.3304048
rho    0.6510633 1.947769e+13 3.342611e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)    
1     17 0.107030                                 
2     14 0.017794  3  0.089235 23.402 1.02e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463082e+07 9.946367e+00 3.152891e-02 

$vcov
              gamma         delta           rho
gamma  3.667607e+18  3.152675e+10 -9.754074e+07
delta  3.152675e+10  2.710399e+02 -8.384470e-01
rho   -9.754074e+07 -8.384470e-01  2.594122e-03

$ela
E_1_2 (all) 
  0.9694348 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  5.797421  4.768828  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989443 14.746590 18.676872 21.859112 23.329535

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$rss
[1] 41177199

$cov.unscaled
             gamma        delta          rho
gamma 3.934484e+19 5.390936e+11 1.955727e+09
delta 5.390936e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

Elasticity of Substitution: 0.9694 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 1.019788e-05

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.093e-02   0.619    0.536

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)  0.96943    0.04787   20.25   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463082e+07 1.915100e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.093252e-02 0.61903301 0.5358946
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     16 0.032596                              
2     14 0.017794  2  0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho           nu 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho           nu
gamma  0.006287789  0.4447299 -0.07809453 -0.002344101
delta  0.444729932 31.5957949 -5.54483736 -0.124590619
rho   -0.078094527 -5.5448374  0.97320590  0.022743063
nu    -0.002344101 -0.1245906  0.02274306  0.013322562

$ela
E_1_2 (all) 
   1.294771 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$rss
[1] 1708188016

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.231400e-07  2.790746e-05  3.716972e-06 -1.091277e-08
delta  2.790746e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716972e-06  4.651127e-04  6.195762e-05 -1.465858e-07
nu    -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho        nu 
 0.005251 -1.130309 -0.227663  1.697680 

Elasticity of Substitution: 1.295 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.01444873

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.986512  -0.231    0.817    
nu     1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.721 
Multiple R-squared: -964.0144 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.295      1.654   0.783    0.434

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.98651199 -0.23077551 8.174892e-01
nu     1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347917481, 0.851862754325707, 4.36180424094534 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.1865044 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

Elasticity of Substitution: 0.1865 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  47.3694         NA      NA       NA
delta   0.8519         NA      NA       NA
rho     4.3618         NA      NA       NA

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.1865         NA      NA       NA

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 47.3694348         NA      NA       NA
delta  0.8518628         NA      NA       NA
rho    4.3618042         NA      NA       NA
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166085.7

$nlm$estimate
[1] 13.87993876  0.01200905  3.49562057

$nlm$gradient
[1]    1965.848 -670064.125  -10608.430

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
      gamma       delta         rho 
13.87993876  0.01200905  3.49562057 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.2224387 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.389 1189.791 1213.858 1224.754 1224.743 1240.478 1273.909 1276.807
 [9] 1237.990 1281.719 1316.168 1468.581 1529.563 1582.600 1549.549 1567.165
[17] 1648.548 1723.100 1833.588 1935.797

$residuals
 [1] -204.256113 -227.060723 -144.279093  -52.957049  -46.626577  -54.667793
 [7]  -34.551201   11.754297  -30.284264   -3.310486   44.424952   72.203384
[13]   45.472058  113.359833   95.139757   58.865793    6.492140   32.500160
[19]   53.832430   56.096888

$rss
[1] 166085.7

$cov.unscaled
           gamma      delta         rho
gamma 47924.9262 247.287437 -6738.88728
delta   247.2874   1.276031   -34.77555
rho   -6738.8873 -34.775552   947.81696

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
   gamma    delta      rho 
13.87994  0.01201  3.49562 

Elasticity of Substitution: 0.2224 

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 1.388e+01  1.995e+04   0.001    0.999
delta 1.201e-02  1.029e+02   0.000    1.000
rho   3.496e+00  2.806e+03   0.001    0.999

Residual standard error: 91.12785 
Multiple R-squared: 0.9061725 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.2224   138.8143   0.002    0.999

> coef( summary( cesLandIntNewton ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.87993876 19949.4928 0.0006957540 0.9994449
delta  0.01200905   102.9394 0.0001166614 0.9999069
rho    3.49562057  2805.5200 0.0012459796 0.9990059
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
     gamma      delta        rho 
42.0292656  0.4047593  5.7842219 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 146

$nlminb$evaluations
function gradient 
     200      147 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho 
42.0292656  0.4047593  5.7842219 

$iter
[1] 146

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
  0.1474008 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812027 -226.528905 -143.760263  -52.354410  -46.034843  -54.066629
 [7]  -33.936004   12.318505  -29.713282   -2.748199   45.035839   72.884177
[13]   46.197493  114.047835   95.703330   59.353884    6.785326   32.647990
[19]   53.896814   56.153229

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho 
42.0293  0.4048  5.7842 

Elasticity of Substitution: 0.1474 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 146 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  42.0293         NA      NA       NA
delta   0.4048         NA      NA       NA
rho     5.7842         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.1474         NA      NA       NA

> coef( summary( cesLandIntPort ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 42.0292656         NA      NA       NA
delta  0.4047593         NA      NA       NA
rho    5.7842219         NA      NA       NA
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
36.9414853  0.2508156  4.8460910 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 142

$nlminb$evaluations
function gradient 
     200      142 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho 
36.9414853  0.2508156  4.8460910 

$iter
[1] 142

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
  0.1710545 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.938 1189.252 1213.332 1224.144 1224.144 1239.869 1273.286 1276.235
 [9] 1237.412 1281.149 1315.549 1467.891 1528.828 1581.902 1548.977 1566.668
[17] 1648.245 1722.941 1833.512 1935.729

$residuals
 [1] -203.805157 -226.521834 -143.753038  -52.347156  -46.027585  -54.059278
 [7]  -33.928454   12.326096  -29.705933   -2.740578   45.043650   72.892893
[13]   46.206564  114.057248   95.712601   59.363303    6.795358   32.658572
[19]   53.908133   56.165186

$rss
[1] 165832.5

$cov.unscaled
             gamma      delta         rho
gamma 145918393778 5477652841 -9451443766
delta   5477652841  205628191  -354823568
rho    -9451443766 -354823568   612530633

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
36.9415  0.2508  4.8461 

Elasticity of Substitution: 0.1711 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 142 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.694e+01  3.478e+07       0        1
delta 2.508e-01  1.306e+06       0        1
rho   4.846e+00  2.254e+06       0        1

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.711e-01  6.594e+04       0        1

> coef( summary( cesLandIntPortCon ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 36.9414853   34783625 1.062037e-06 0.9999992
delta  0.2508156    1305753 1.920849e-07 0.9999998
rho    4.8460910    2253636 2.150343e-06 0.9999983
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 2.1742354  0.8776531 -0.4515860  1.5807736 

$nlminb$objective
[1] 50332.15

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 124

$nlminb$evaluations
function gradient 
     200      124 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
 2.1742354  0.8776531 -0.4515860  1.5807736 

$iter
[1] 124

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
    1.82344 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1004.052 1092.013 1115.309 1174.937 1168.120 1193.061 1242.924 1217.481
 [9] 1172.277 1222.765 1293.658 1537.789 1650.603 1702.864 1592.042 1587.249
[17] 1647.084 1725.014 1881.222 2046.967

$residuals
 [1]  -57.919486 -129.282166  -45.729651   -3.140860    9.996209   -7.250666
 [7]   -3.566287   71.079886   35.429537   55.643835   66.934271    2.995415
[13]  -75.568192   -6.904393   52.647013   38.782499    7.955370   30.586203
[19]    6.197831  -55.073428

$rss
[1] 50332.15

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0982168965  1.301937e-02 -3.882506e-02 -1.196575e-04
delta  0.0130193732  1.733974e-03 -5.175460e-03 -1.076348e-05
rho   -0.0388250649 -5.175460e-03  1.545084e-02  2.956296e-05
nu    -0.0001196575 -1.076348e-05  2.956296e-05  3.449831e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
 2.1742  0.8777 -0.4516  1.5808 

Elasticity of Substitution: 1.823 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 124 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  2.17424   15.72175   0.138    0.890    
delta  0.87765    2.08895   0.420    0.674    
rho   -0.45159    6.23568  -0.072    0.942    
nu     1.58077    0.09318  16.965   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.1658 
Multiple R-squared: 0.9715656 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.823     20.733   0.088     0.93

> coef( summary( cesLandIntPortVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  2.1742354 15.72174789  0.13829477 8.900075e-01
delta  0.8776531  2.08895485  0.42013980 6.743833e-01
rho   -0.4515860  6.23567848 -0.07241971 9.422679e-01
nu     1.5807736  0.09317655 16.96535930 1.481905e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.6414246  0.7872587 -0.2402486  1.5814279 

$nlminb$objective
[1] 50159.01

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 136

$nlminb$evaluations
function gradient 
     200      136 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
 1.6414246  0.7872587 -0.2402486  1.5814279 

$iter
[1] 136

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
    1.31622 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1004.313 1092.051 1115.484 1174.536 1167.835 1192.761 1242.656 1217.619
 [9] 1172.231 1222.928 1293.629 1537.872 1650.583 1703.364 1592.820 1588.030
[17] 1647.393 1724.726 1880.534 2046.231

$residuals
 [1]  -58.180314 -129.320780  -45.904653   -2.739728   10.281291   -6.951108
 [7]   -3.297899   70.942413   35.475566   55.480070   66.963250    2.912565
[13]  -75.548667   -7.404564   51.869465   38.001417    7.646875   30.874115
[19]    6.885856  -54.337286

$rss
[1] 50159.01

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0904477244  1.946825e-02 -3.723331e-02 -1.065022e-04
delta  0.0194682511  4.204087e-03 -8.046312e-03 -1.631308e-05
rho   -0.0372333056 -8.046312e-03  1.540348e-02  2.866245e-05
nu    -0.0001065022 -1.631308e-05  2.866245e-05  3.449374e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
 1.6414  0.7873 -0.2402  1.5814 

Elasticity of Substitution: 1.316 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 136 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.64142   15.06116   0.109    0.913    
delta  0.78726    3.24710   0.242    0.808    
rho   -0.24025    6.21540  -0.039    0.969    
nu     1.58143    0.09301  17.003   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.07944 
Multiple R-squared: 0.9716634 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.316     10.768   0.122    0.903

> coef( summary( cesLandIntPortVrsCon ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  1.6414246  15.061157  0.10898397 9.132152e-01
delta  0.7872587   3.247098  0.24244997 8.084315e-01
rho   -0.2402486   6.215398 -0.03865377 9.691664e-01
nu     1.5814279   0.093010 17.00277334 7.832509e-65
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
40.6561756  0.2215833  7.9489198 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2     par3
1   1.028646e+09 0.4348927 9.834527
2   6.682047e+07 0.1724942 2.073441
3   6.682047e+07 0.1724942 2.073441
4   6.682047e+07 0.1724942 2.073441
5   3.376796e+07 0.3674947 3.666296
6   1.021062e+07 0.4551081 5.072473
7   1.021062e+07 0.4551081 5.072473
8   1.021062e+07 0.4551081 5.072473
9   1.021062e+07 0.4551081 5.072473
10  1.021062e+07 0.4551081 5.072473
11  1.021062e+07 0.4551081 5.072473
12  1.021062e+07 0.4551081 5.072473
13  7.695356e+06 0.2383644 6.571515
14  7.695356e+06 0.2383644 6.571515
15  7.695356e+06 0.2383644 6.571515
16  7.695356e+06 0.2383644 7.463971
17  7.695356e+06 0.3775401 8.710841
18  4.931080e+06 0.2997347 8.242454
19  3.336574e+06 0.3218738 9.591842
20  3.336574e+06 0.3218738 9.591842
21  3.336574e+06 0.3218738 9.591842
22  3.503724e+05 0.6132391 6.957374
23  3.503724e+05 0.6132391 6.957374
24  3.503724e+05 0.6132391 6.957374
25  3.503724e+05 0.6132391 7.439758
26  3.503724e+05 0.6132391 7.439758
27  3.503724e+05 0.6132391 7.439758
28  3.503724e+05 0.8176976 7.439758
29  7.854733e+04 0.8067896 9.680262
30  7.854733e+04 0.8067896 9.680262
31  7.854733e+04 0.8067896 9.680262
32  7.854733e+04 0.8067896 9.680262
33  7.854733e+04 0.8067896 9.680262
34  2.136953e+04 0.7216280 2.853390
35  2.136953e+04 0.7216280 2.853390
36  2.136953e+04 0.8201967 2.740026
37  2.136953e+04 0.8201967 2.740026
38  2.057123e+04 0.5933264 5.857669
39  2.057123e+04 0.5933264 5.857669
40  1.200400e+04 0.6711997 6.406908
41  1.200400e+04 0.6711997 6.406908
42  1.492964e+03 0.8611761 4.031193
43  1.492964e+03 0.8611761 7.721379
44  1.492964e+03 0.8611761 7.721379
45  1.492964e+03 0.8611761 7.721379
46  1.492964e+03 0.8611761 7.721379
47  1.492964e+03 0.8611761 7.721379
48  1.492964e+03 0.8611761 7.721379
49  6.935187e+02 0.9556147 3.763480
50  5.901573e+02 0.7615107 6.420828
51  5.901573e+02 0.7615107 6.420828
52  4.059856e+01 0.9785919 7.892402
53  4.059856e+01 0.9785919 6.195938
54  4.059856e+01 0.9785919 6.195938
55  4.059856e+01 0.9785919 6.195938
56  4.059856e+01 0.9785919 6.195938
57  4.059856e+01 0.9785919 6.195938
58  4.059856e+01 0.9785919 6.195938
59  4.059856e+01 0.4645801 7.669045
60  4.059856e+01 0.4645801 7.669045
61  4.059856e+01 0.4645801 7.669045
62  4.059856e+01 0.4645801 7.669045
63  4.059856e+01 0.4645801 7.669045
64  4.059856e+01 0.4645801 7.669045
65  4.059856e+01 0.4645801 7.669045
66  4.345036e+01 0.4237535 7.902831
67  4.345036e+01 0.4237535 7.902831
68  4.345036e+01 0.4237535 7.902831
69  4.345036e+01 0.3592133 7.955566
70  4.345036e+01 0.3592133 7.955566
71  4.345036e+01 0.3592133 7.955566
72  4.345036e+01 0.3592133 7.955566
73  4.503120e+01 0.5039872 7.586534
74  4.503120e+01 0.5039872 7.586534
75  4.503120e+01 0.5039872 7.586534
76  4.503120e+01 0.5039872 7.586534
77  4.503120e+01 0.5039872 7.586534
78  4.503120e+01 0.5039872 7.586534
79  4.244717e+01 0.4213480 5.973209
80  4.797055e+01 0.8158521 7.992968
81  4.797055e+01 0.8158521 7.992968
82  4.262555e+01 0.2542934 9.679556
83  4.262555e+01 0.2542934 9.679556
84  4.262555e+01 0.2542934 9.679556
85  4.262555e+01 0.2542934 9.679556
86  4.262555e+01 0.2542934 9.679556
87  4.054191e+01 0.2322463 7.606134
88  4.054191e+01 0.2322463 7.606134
89  4.054191e+01 0.2322463 7.606134
90  4.054191e+01 0.2322463 7.606134
91  4.054191e+01 0.2322463 7.606134
92  4.054191e+01 0.2322463 7.606134
93  4.054191e+01 0.2322463 7.606134
94  4.054191e+01 0.2322463 7.606134
95  4.054191e+01 0.2322463 7.606134
96  4.054191e+01 0.2322463 7.606134
97  4.054191e+01 0.2322463 7.606134
98  4.054191e+01 0.2322463 7.606134
99  4.054191e+01 0.2322463 7.606134
100 4.054191e+01 0.2322463 7.606134
101 4.054191e+01 0.2322463 7.606134
102 4.411784e+01 0.5129304 6.203816
103 4.411784e+01 0.5129304 6.203816
104 4.411784e+01 0.5129304 6.203816
105 4.411784e+01 0.5129304 6.203816
106 4.411784e+01 0.5129304 6.203816
107 4.411784e+01 0.5129304 6.203816
108 4.411784e+01 0.5129304 6.203816
109 4.411784e+01 0.5129304 6.203816
110 4.411784e+01 0.5129304 6.203816
111 4.065618e+01 0.2215833 7.948920
112 4.065618e+01 0.2215833 7.948920
113 4.065618e+01 0.2215833 7.948920
114 4.065618e+01 0.2215833 7.948920
115 4.065618e+01 0.2215833 7.948920
116 4.065618e+01 0.2215833 7.948920
117 4.065618e+01 0.2215833 7.948920
118 4.065618e+01 0.2215833 7.948920
119 4.065618e+01 0.2215833 7.948920
120 4.065618e+01 0.2215833 7.948920
121 4.065618e+01 0.2215833 7.948920
122 4.065618e+01 0.2215833 7.948920
123 4.065618e+01 0.2215833 7.948920
124 4.065618e+01 0.2215833 7.948920
125 4.065618e+01 0.2215833 7.948920
126 4.065618e+01 0.2215833 7.948920
127 4.065618e+01 0.2215833 7.948920
128 4.065618e+01 0.2215833 7.948920
129 4.065618e+01 0.2215833 7.948920
130 4.065618e+01 0.2215833 7.948920
131 4.065618e+01 0.2215833 7.948920
132 4.065618e+01 0.2215833 7.948920
133 4.065618e+01 0.2215833 7.948920
134 4.065618e+01 0.2215833 7.948920
135 4.065618e+01 0.2215833 7.948920
136 4.065618e+01 0.2215833 7.948920
137 4.065618e+01 0.2215833 7.948920
138 4.065618e+01 0.2215833 7.948920
139 4.065618e+01 0.2215833 7.948920
140 4.065618e+01 0.2215833 7.948920
141 4.065618e+01 0.2215833 7.948920
142 4.065618e+01 0.2215833 7.948920
143 4.065618e+01 0.2215833 7.948920
144 4.065618e+01 0.2215833 7.948920
145 4.065618e+01 0.2215833 7.948920
146 4.065618e+01 0.2215833 7.948920
147 4.065618e+01 0.2215833 7.948920
148 4.065618e+01 0.2215833 7.948920
149 4.065618e+01 0.2215833 7.948920
150 4.065618e+01 0.2215833 7.948920
151 4.065618e+01 0.2215833 7.948920
152 4.065618e+01 0.2215833 7.948920
153 4.065618e+01 0.2215833 7.948920
154 4.065618e+01 0.2215833 7.948920
155 4.065618e+01 0.2215833 7.948920
156 4.065618e+01 0.2215833 7.948920
157 4.065618e+01 0.2215833 7.948920
158 4.065618e+01 0.2215833 7.948920
159 4.065618e+01 0.2215833 7.948920
160 4.065618e+01 0.2215833 7.948920
161 4.065618e+01 0.2215833 7.948920
162 4.065618e+01 0.2215833 7.948920
163 4.065618e+01 0.2215833 7.948920
164 4.065618e+01 0.2215833 7.948920
165 4.065618e+01 0.2215833 7.948920
166 4.065618e+01 0.2215833 7.948920
167 4.065618e+01 0.2215833 7.948920
168 4.065618e+01 0.2215833 7.948920
169 4.065618e+01 0.2215833 7.948920
170 4.065618e+01 0.2215833 7.948920
171 4.065618e+01 0.2215833 7.948920
172 4.065618e+01 0.2215833 7.948920
173 4.065618e+01 0.2215833 7.948920
174 4.065618e+01 0.2215833 7.948920
175 4.065618e+01 0.2215833 7.948920
176 4.065618e+01 0.2215833 7.948920
177 4.065618e+01 0.2215833 7.948920
178 4.065618e+01 0.2215833 7.948920
179 4.065618e+01 0.2215833 7.948920
180 4.065618e+01 0.2215833 7.948920
181 4.065618e+01 0.2215833 7.948920
182 4.065618e+01 0.2215833 7.948920
183 4.065618e+01 0.2215833 7.948920
184 4.065618e+01 0.2215833 7.948920
185 4.065618e+01 0.2215833 7.948920
186 4.065618e+01 0.2215833 7.948920
187 4.065618e+01 0.2215833 7.948920
188 4.065618e+01 0.2215833 7.948920
189 4.065618e+01 0.2215833 7.948920
190 4.065618e+01 0.2215833 7.948920
191 4.065618e+01 0.2215833 7.948920
192 4.065618e+01 0.2215833 7.948920
193 4.065618e+01 0.2215833 7.948920
194 4.065618e+01 0.2215833 7.948920
195 4.065618e+01 0.2215833 7.948920
196 4.065618e+01 0.2215833 7.948920
197 4.065618e+01 0.2215833 7.948920
198 4.065618e+01 0.2215833 7.948920
199 4.065618e+01 0.2215833 7.948920
200 4.065618e+01 0.2215833 7.948920

$member$bestvalit
  [1] 2.155798e+22 4.154617e+20 4.154617e+20 4.154617e+20 3.386097e+19
  [6] 2.445887e+18 2.445887e+18 2.445887e+18 2.445887e+18 2.445887e+18
 [11] 2.445887e+18 2.445887e+18 1.575873e+18 1.575873e+18 1.575873e+18
 [16] 1.495750e+18 1.273846e+18 5.602475e+17 2.425372e+17 2.425372e+17
 [21] 2.425372e+17 2.429577e+15 2.429577e+15 2.429577e+15 2.407530e+15
 [26] 2.407530e+15 2.407530e+15 2.228302e+15 1.107977e+14 1.107977e+14
 [31] 1.107977e+14 1.107977e+14 1.107977e+14 9.831899e+12 9.831899e+12
 [36] 9.038268e+12 9.038268e+12 8.660852e+12 8.660852e+12 2.785417e+12
 [41] 2.785417e+12 3.871167e+10 3.732012e+10 3.732012e+10 3.732012e+10
 [46] 3.732012e+10 3.732012e+10 3.732012e+10 7.329860e+09 5.521969e+09
 [51] 5.521969e+09 1.389014e+06 1.380161e+06 1.380161e+06 1.380161e+06
 [56] 1.380161e+06 1.380161e+06 1.380161e+06 4.803631e+05 4.803631e+05
 [61] 4.803631e+05 4.803631e+05 4.803631e+05 4.803631e+05 4.803631e+05
 [66] 1.744043e+05 1.744043e+05 1.744043e+05 1.671331e+05 1.671331e+05
 [71] 1.671331e+05 1.671331e+05 1.661926e+05 1.661926e+05 1.661926e+05
 [76] 1.661926e+05 1.661926e+05 1.661926e+05 1.659634e+05 1.659045e+05
 [81] 1.659045e+05 1.658603e+05 1.658603e+05 1.658603e+05 1.658603e+05
 [86] 1.658603e+05 1.658409e+05 1.658409e+05 1.658409e+05 1.658409e+05
 [91] 1.658409e+05 1.658409e+05 1.658409e+05 1.658409e+05 1.658409e+05
 [96] 1.658409e+05 1.658409e+05 1.658409e+05 1.658409e+05 1.658409e+05
[101] 1.658409e+05 1.658351e+05 1.658351e+05 1.658351e+05 1.658351e+05
[106] 1.658351e+05 1.658351e+05 1.658351e+05 1.658351e+05 1.658351e+05
[111] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[116] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]     [,3]
 [1,] 45.33107 0.5842376 6.669486
 [2,] 44.35097 0.5290049 6.203816
 [3,] 46.00345 0.6108656 7.475717
 [4,] 40.65618 0.2215833 7.948920
 [5,] 47.97055 0.8158521 8.382611
 [6,] 40.97015 0.2877895 6.865689
 [7,] 40.50384 0.2449490 7.272437
 [8,] 46.60001 0.7122467 6.351007
 [9,] 41.04241 0.2776678 7.125221
[10,] 43.58668 0.3405027 8.947499
[11,] 40.83622 0.3221913 6.103426
[12,] 46.28429 0.5707782 9.312590
[13,] 47.61373 0.7766684 8.110020
[14,] 41.24030 0.1835032 9.656351
[15,] 41.81164 0.3913916 5.817447
[16,] 44.59383 0.5290907 6.545361
[17,] 46.99156 0.7695815 5.859517
[18,] 39.89500 0.2566346 6.525653
[19,] 41.12894 0.2421116 7.985188
[20,] 41.30837 0.2232595 8.590631
[21,] 46.28627 0.6456569 7.251388
[22,] 39.81046 0.1625418 8.663754
[23,] 48.77129 0.9332221 9.327863
[24,] 41.03530 0.1738345 9.665245
[25,] 47.54214 0.7974364 6.786291
[26,] 41.08927 0.3081779 6.574137
[27,] 43.33488 0.4099262 7.122598
[28,] 42.73688 0.4051084 6.475723
[29,] 40.56410 0.2322463 7.606134
[30,] 45.52996 0.5963405 6.771490

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
40.6561756  0.2215833  7.9489198 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.1117453 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1149.942 1189.256 1213.336 1224.148 1224.148 1239.873 1273.291 1276.239
 [9] 1237.416 1281.153 1315.553 1467.896 1528.833 1581.907 1548.982 1566.673
[17] 1648.250 1722.947 1833.519 1935.736

$residuals
 [1] -203.809021 -226.525796 -143.757091  -52.351209  -46.031642  -54.063387
 [7]  -33.932674   12.321842  -29.710046   -2.744850   45.039279   72.888015
[13]   46.201491  114.051970   95.707378   59.357977    6.789629   32.652485
[19]   53.901596   56.158277

$rss
[1] 165832.4

$cov.unscaled
      gamma delta rho
gamma    NA    NA  NA
delta    NA    NA  NA
rho      NA    NA  NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
40.6562  0.2216  7.9489 

Elasticity of Substitution: 0.1117 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  40.6562         NA      NA       NA
delta   0.2216         NA      NA       NA
rho     7.9489         NA      NA       NA

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.1117         NA      NA       NA

> coef( summary( cesLandIntDe ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 40.6561756         NA      NA       NA
delta  0.2215833         NA      NA       NA
rho    7.9489198         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
53.3302482  0.3341075  6.6283083  0.9320773 

$optim$bestval
[1] 209853.4

$optim$nfeval
[1] 8040

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2         par3        par4
1   6.072057e+08 0.94772694  6.926559008 1.422942956
2   1.388061e+09 0.90941190  7.436624906 0.258939051
3   1.388061e+09 0.90941190  8.642647228 0.258939051
4   1.062441e+09 0.85246338 -0.070888097 0.177596477
5   8.627789e+08 0.85246338 -0.070888097 0.177596477
6   2.819089e+07 0.78729006  2.207192042 0.439666254
7   2.819089e+07 0.78729006  2.207192042 0.439666254
8   2.819089e+07 0.78729006  2.207192042 0.439666254
9   2.819089e+07 0.78729006  2.207192042 0.439666254
10  2.819089e+07 0.78729006  2.207192042 0.439666254
11  2.819089e+07 0.78729006  2.207192042 0.439666254
12  2.819089e+07 0.78729006  2.207192042 0.439666254
13  2.819089e+07 0.78729006  2.207192042 0.439666254
14  7.200204e+07 0.90051179  1.986413912 0.047549012
15  7.200204e+07 0.90051179  1.986413912 0.047549012
16  7.200204e+07 0.90051179  1.986413912 0.047549012
17  2.819089e+07 0.78729006  2.207192042 0.113693216
18  2.819089e+07 0.78729006  2.207192042 0.113693216
19  5.730058e+06 0.36891872  3.642026552 0.458346307
20  5.730058e+06 0.36891872  3.642026552 0.405784300
21  5.730058e+06 0.37217010  3.642026552 0.405784300
22  1.524799e+07 0.77665585  6.792955613 0.005295143
23  8.603886e+06 0.66184886  9.899964524 0.018637074
24  8.603886e+06 0.66184886  9.899964524 0.018637074
25  7.440685e+06 0.25529760  3.517124463 0.032969539
26  7.440685e+06 0.25529760  3.517124463 0.032969539
27  1.972352e+06 0.01754005  8.972521358 0.292897860
28  1.972352e+06 0.01754005  8.972521358 0.292897860
29  1.972352e+06 0.01754005  8.972521358 0.292897860
30  1.972352e+06 0.01754005  8.972521358 0.292897860
31  1.972352e+06 0.01754005  8.972521358 0.281234281
32  8.984406e+05 0.82175104 -0.006815904 0.430616087
33  8.029060e+05 0.85237932  5.346574845 0.333980666
34  2.447586e+04 0.87409843  8.419222045 0.006104830
35  2.447586e+04 0.87409843  8.419222045 0.006104830
36  2.447586e+04 0.87409843  8.419222045 0.006104830
37  2.447586e+04 0.87409843  8.419222045 0.006104830
38  2.447586e+04 0.87409843  8.419222045 0.006104830
39  2.447586e+04 0.87409843  8.419222045 0.006104830
40  2.447586e+04 0.87409843  8.419222045 0.006104830
41  2.447586e+04 0.87409843  8.419222045 0.006104830
42  2.447586e+04 0.87409843  8.419222045 0.006104830
43  2.447586e+04 0.87409843  8.419222045 0.006104830
44  2.447586e+04 0.87409843  8.419222045 0.006104830
45  2.447586e+04 0.95922152  8.419222045 0.006104830
46  2.447586e+04 0.95922152  8.419222045 0.006104830
47  2.447586e+04 0.95922152  8.419222045 0.006104830
48  2.447586e+04 0.95922152  8.419222045 0.006104830
49  2.447586e+04 0.95922152  8.419222045 0.006104830
50  2.447586e+04 0.95922152  8.419222045 0.003574921
51  2.447586e+04 0.95922152  8.419222045 0.003574921
52  2.447586e+04 0.95922152  8.419222045 0.003574921
53  2.447586e+04 0.95922152  8.419222045 0.003574921
54  2.260235e+03 0.16559813  9.140302619 0.005216689
55  2.260235e+03 0.16559813  9.140302619 0.005216689
56  2.260235e+03 0.60543587  9.494467240 0.005216689
57  2.260235e+03 0.60543587  9.494467240 0.005216689
58  2.260235e+03 0.60543587  9.494467240 0.005216689
59  2.260235e+03 0.60543587  9.494467240 0.005216689
60  1.389716e+03 0.50243691  5.137422178 0.003658491
61  1.389716e+03 0.50243691  5.137422178 0.003658491
62  1.389716e+03 0.50243691  5.137422178 0.003658491
63  1.389716e+03 0.50243691  5.137422178 0.005772476
64  1.389716e+03 0.80730049  5.137422178 0.005772476
65  1.389716e+03 0.80730049  5.137422178 0.005772476
66  1.389716e+03 0.90959460  4.367786736 0.005772476
67  1.389716e+03 0.90959460  4.367786736 0.005772476
68  1.389716e+03 0.90959460  4.367786736 0.005772476
69  1.389716e+03 0.90959460  4.367786736 0.005772476
70  1.389716e+03 0.90959460  4.367786736 0.005772476
71  1.389716e+03 0.90959460  9.635243718 0.005772476
72  1.389716e+03 0.90959460  9.635243718 0.005772476
73  1.389716e+03 0.94770255  9.635243718 0.005772476
74  1.389716e+03 0.94770255  9.635243718 0.005772476
75  1.385942e+03 0.90826655  5.194501929 0.008727465
76  1.385942e+03 0.90826655  5.194501929 0.008727465
77  1.385942e+03 0.90826655  7.336623675 0.008727465
78  1.385942e+03 0.90826655  7.336623675 0.008727465
79  1.385942e+03 0.90826655  7.336623675 0.008727465
80  1.340172e+03 0.53689640  2.511864478 0.013503737
81  1.313973e+03 0.13323118  1.968087308 0.018784197
82  1.313973e+03 0.13323118  1.968087308 0.018784197
83  1.313973e+03 0.13323118  1.968087308 0.018784197
84  1.313973e+03 0.31792573  1.968087308 0.018784197
85  1.313973e+03 0.31792573  1.968087308 0.018784197
86  1.313973e+03 0.31792573  1.968087308 0.018784197
87  1.313973e+03 0.31792573  1.968087308 0.018784197
88  1.313973e+03 0.31792573  1.968087308 0.018784197
89  1.313750e+03 0.89826591  0.977899689 0.022363089
90  1.253297e+03 0.90826655  7.336623675 0.033537295
91  1.253297e+03 0.90826655  7.336623675 0.033537295
92  1.267475e+03 0.88064021  6.940003927 0.034013676
93  1.228834e+03 0.85333632  2.011138475 0.041310557
94  1.189423e+03 0.49992659  6.986868333 0.054492664
95  1.189423e+03 0.49992659  6.986868333 0.054492664
96  1.167362e+03 0.97139941  5.303848192 0.065376947
97  1.148870e+03 0.35434862  9.499152231 0.059924910
98  1.102745e+03 0.10252119  8.622309851 0.072784208
99  1.061065e+03 0.37336482  7.425611358 0.084326290
100 9.171235e+02 0.21016498  7.043642192 0.122001706
101 9.171235e+02 0.21016498  7.043642192 0.122001706
102 8.021391e+02 0.01262672  4.779085944 0.139596074
103 8.021391e+02 0.01262672  4.779085944 0.139596074
104 7.818208e+02 0.51264662  1.109578443 0.159865508
105 7.818208e+02 0.51264662  1.109578443 0.159865508
106 7.949403e+02 0.57186932  4.707179171 0.164254074
107 7.272933e+02 0.56952964  7.344670705 0.186617491
108 6.230302e+02 0.30953270  2.412558723 0.219242534
109 6.230302e+02 0.30953270  2.412558723 0.219242534
110 4.361035e+02 0.09463414  3.013700802 0.282579941
111 4.361035e+02 0.09463414  3.013700802 0.282579941
112 4.290977e+02 0.02362395  5.547800859 0.297918847
113 4.290977e+02 0.02362395  5.547800859 0.297918847
114 4.290977e+02 0.02362395  5.547800859 0.297918847
115 4.290977e+02 0.02362395  5.547800859 0.297918847
116 4.290977e+02 0.02362395  5.547800859 0.297918847
117 3.873059e+02 0.12821365  4.145025681 0.342812104
118 3.873059e+02 0.12821365  4.145025681 0.342812104
119 3.873059e+02 0.12821365  4.145025681 0.342812104
120 3.639078e+02 0.10507618  8.062764902 0.382595205
121 3.639078e+02 0.10507618  8.062764902 0.382595205
122 3.687573e+02 0.43878954  3.622643774 0.378585509
123 3.687573e+02 0.43878954  3.622643774 0.378585509
124 3.687573e+02 0.43878954  3.622643774 0.378585509
125 3.687573e+02 0.43878954  3.622643774 0.378585509
126 3.399498e+02 0.65453745  2.392886858 0.398415155
127 3.399498e+02 0.65453745  2.392886858 0.398415155
128 3.399498e+02 0.65453745  2.392886858 0.407370291
129 3.399498e+02 0.65453745  2.392886858 0.407370291
130 2.910342e+02 0.66928740  6.123321895 0.459911226
131 2.335403e+02 0.09828333  8.985661798 0.493404348
132 2.335403e+02 0.09828333  8.101686710 0.493404348
133 2.335403e+02 0.09828333  8.101686710 0.493404348
134 2.335403e+02 0.09828333  8.101686710 0.493404348
135 2.103751e+02 0.15596464  6.853412210 0.520827555
136 2.103751e+02 0.15596464  6.853412210 0.520827555
137 1.750337e+02 0.31231733  3.220028349 0.571412901
138 1.750337e+02 0.31231733  3.220028349 0.571412901
139 1.750337e+02 0.31231733  3.220028349 0.571412901
140 1.750337e+02 0.31231733  3.220028349 0.571412901
141 1.750337e+02 0.31231733  3.220028349 0.571412901
142 1.750337e+02 0.31231733  3.220028349 0.571412901
143 1.821776e+02 0.30052994  8.207299878 0.596496822
144 1.855315e+02 0.88626810  7.864516337 0.615511147
145 1.821776e+02 0.63503868  8.207299878 0.596496822
146 1.821776e+02 0.46237175  7.686608504 0.596496822
147 1.821776e+02 0.46237175  7.686608504 0.596496822
148 1.821776e+02 0.46237175  7.686608504 0.596496822
149 1.821776e+02 0.46237175  7.686608504 0.596496822
150 1.821776e+02 0.46237175  7.686608504 0.596496822
151 1.821776e+02 0.46237175  7.686608504 0.596496822
152 1.734924e+02 0.88626810  7.864516337 0.621886671
153 1.734924e+02 0.88626810  7.864516337 0.621886671
154 1.734924e+02 0.88626810  7.864516337 0.621886671
155 1.734924e+02 0.88626810  7.864516337 0.621886671
156 1.734924e+02 0.88626810  7.864516337 0.621886671
157 1.734924e+02 0.88626810  7.864516337 0.621886671
158 1.436631e+02 0.30629856  4.078572910 0.626538673
159 1.436631e+02 0.30629856  4.078572910 0.626538673
160 1.525709e+02 0.99679511  6.035550116 0.658200124
161 1.525709e+02 0.99679511  6.723082271 0.669857806
162 1.525709e+02 0.99679511  6.723082271 0.669857806
163 1.455136e+02 0.91049354  4.067398662 0.680427570
164 1.455136e+02 0.91049354  4.067398662 0.680427570
165 1.381392e+02 0.67728998  5.178829680 0.675760033
166 1.381392e+02 0.67728998  5.178829680 0.675760033
167 1.381392e+02 0.67728998  5.178829680 0.675760033
168 1.381392e+02 0.67728998  5.178829680 0.675760033
169 1.415244e+02 0.66289957  5.765898106 0.672711635
170 1.415244e+02 0.66289957  5.765898106 0.672711635
171 9.868058e+01 0.39409901  6.333514363 0.767951004
172 1.002993e+02 0.42154244  8.067106006 0.766646688
173 1.002993e+02 0.42154244  8.067106006 0.766646688
174 1.002993e+02 0.42154244  8.067106006 0.766646688
175 1.002993e+02 0.42154244  8.067106006 0.766646688
176 1.018211e+02 0.59376864  7.973623672 0.769385317
177 8.664738e+01 0.58644101  4.776468653 0.801810372
178 8.309419e+01 0.65295128  3.523048236 0.816939240
179 8.309419e+01 0.65295128  3.523048236 0.816939240
180 8.309419e+01 0.65295128  3.523048236 0.816939240
181 8.309419e+01 0.65295128  3.523048236 0.816939240
182 8.309419e+01 0.65295128  3.523048236 0.816939240
183 8.309419e+01 0.65295128  3.523048236 0.816939240
184 7.573766e+01 0.40596287  4.260047204 0.824441337
185 7.573766e+01 0.40596287  4.260047204 0.824441337
186 7.573766e+01 0.40596287  4.260047204 0.824441337
187 7.573766e+01 0.40596287  4.260047204 0.824441337
188 6.562983e+01 0.31611407  4.636774380 0.853655726
189 6.562983e+01 0.31611407  4.636774380 0.853655726
190 6.141557e+01 0.11480778  7.212176176 0.860397208
191 6.141557e+01 0.11480778  7.212176176 0.860397208
192 6.141557e+01 0.11480778  7.212176176 0.860397208
193 6.994059e+01 0.47368040  8.461594801 0.876695911
194 6.994059e+01 0.47368040  8.461594801 0.876695911
195 6.994059e+01 0.47368040  8.461594801 0.876695911
196 6.994059e+01 0.47368040  8.461594801 0.876695911
197 5.480654e+01 0.33385752  8.067106006 0.927718347
198 5.480654e+01 0.33385752  8.067106006 0.927718347
199 5.333025e+01 0.33410751  6.628308305 0.932077296
200 5.333025e+01 0.33410751  6.628308305 0.932077296

$member$bestvalit
  [1] 1.165488e+23 2.209917e+20 2.207879e+20 8.934191e+19 5.891757e+19
  [6] 3.367799e+17 3.367799e+17 3.367799e+17 3.367799e+17 3.367799e+17
 [11] 3.367799e+17 3.367799e+17 3.367799e+17 1.433606e+17 1.433606e+17
 [16] 1.433606e+17 3.494202e+16 3.494202e+16 1.844388e+16 1.256805e+16
 [21] 1.254350e+16 4.819168e+15 1.679788e+15 1.679788e+15 1.416721e+15
 [26] 1.416721e+15 7.251155e+14 7.251155e+14 7.251155e+14 7.251155e+14
 [31] 6.633102e+14 4.773469e+14 1.240832e+14 1.111381e+10 1.111381e+10
 [36] 1.111381e+10 1.111381e+10 1.111381e+10 1.111381e+10 1.111381e+10
 [41] 1.111381e+10 1.111381e+10 1.111381e+10 1.111381e+10 1.111223e+10
 [46] 1.111223e+10 1.111223e+10 1.111223e+10 1.111223e+10 1.091394e+10
 [51] 1.091394e+10 1.091394e+10 1.091394e+10 1.757000e+07 1.757000e+07
 [56] 1.750862e+07 1.750862e+07 1.750862e+07 1.750862e+07 1.761434e+06
 [61] 1.761434e+06 1.761434e+06 1.755847e+06 1.755718e+06 1.755718e+06
 [66] 1.755693e+06 1.755693e+06 1.755693e+06 1.755693e+06 1.755693e+06
 [71] 1.755679e+06 1.755679e+06 1.755674e+06 1.755674e+06 1.751763e+06
 [76] 1.751763e+06 1.751726e+06 1.751726e+06 1.751726e+06 1.736714e+06
 [81] 1.725926e+06 1.725926e+06 1.725926e+06 1.722592e+06 1.722592e+06
 [86] 1.722592e+06 1.722592e+06 1.722592e+06 1.714172e+06 1.688070e+06
 [91] 1.688070e+06 1.685244e+06 1.666152e+06 1.641742e+06 1.641742e+06
 [96] 1.636083e+06 1.620238e+06 1.595884e+06 1.561877e+06 1.471265e+06
[101] 1.471265e+06 1.457869e+06 1.457869e+06 1.432219e+06 1.432219e+06
[106] 1.377112e+06 1.355879e+06 1.264454e+06 1.264454e+06 1.124864e+06
[111] 1.124864e+06 1.086588e+06 1.086588e+06 1.086588e+06 1.086588e+06
[116] 1.086588e+06 1.011556e+06 1.011556e+06 1.011556e+06 9.508934e+05
[121] 9.508934e+05 9.303953e+05 9.303953e+05 9.303953e+05 9.303953e+05
[126] 9.176673e+05 9.176673e+05 8.779894e+05 8.779894e+05 7.921462e+05
[131] 7.524486e+05 7.323950e+05 7.323950e+05 7.323950e+05 7.053351e+05
[136] 7.053351e+05 6.381514e+05 6.381514e+05 6.381514e+05 6.381514e+05
[141] 6.381514e+05 6.381514e+05 6.154540e+05 6.019024e+05 5.869421e+05
[146] 5.700768e+05 5.700768e+05 5.700768e+05 5.700768e+05 5.700768e+05
[151] 5.700768e+05 5.357442e+05 5.357442e+05 5.357442e+05 5.357442e+05
[156] 5.357442e+05 5.357442e+05 5.298952e+05 5.298952e+05 5.064899e+05
[161] 4.798984e+05 4.798984e+05 4.719773e+05 4.719773e+05 4.688443e+05
[166] 4.688443e+05 4.688443e+05 4.688443e+05 4.659047e+05 4.659047e+05
[171] 3.783047e+05 3.567026e+05 3.567026e+05 3.567026e+05 3.567026e+05
[176] 3.530929e+05 3.287464e+05 3.051617e+05 3.051617e+05 3.051617e+05
[181] 3.051617e+05 3.051617e+05 3.051617e+05 3.033121e+05 3.033121e+05
[186] 3.033121e+05 3.033121e+05 2.718996e+05 2.718996e+05 2.674138e+05
[191] 2.674138e+05 2.674138e+05 2.572283e+05 2.572283e+05 2.572283e+05
[196] 2.572283e+05 2.159861e+05 2.159861e+05 2.098534e+05 2.098534e+05

$member$pop
            [,1]      [,2]     [,3]       [,4]
 [1,]   53.33025 0.3341075 6.628308 0.93207730
 [2,]   81.81879 0.4992151 7.383621 0.83751498
 [3,]   57.50276 0.1637637 9.689602 0.91169620
 [4,]   57.52605 0.5013220 7.943332 0.92862356
 [5,] 1313.74979 0.9583269 8.695045 0.02236309
 [6,]  112.46459 0.3120184 6.448441 0.71434198
 [7,]   75.29509 0.7997849 2.989804 0.87201863
 [8,]   95.54407 0.8220969 7.691285 0.79638114
 [9,]   86.64738 0.5305677 4.707846 0.80181037
[10,]   74.70342 0.4976742 7.400064 0.85539121
[11,]   86.21550 0.3478223 7.406757 0.80292337
[12,]   83.09419 0.6529513 3.523048 0.81693924
[13,]   75.73766 0.4059629 4.260047 0.82444134
[14,]   69.94059 0.5620627 8.461595 0.87669591
[15,]   42.72360 0.4928399 6.606596 1.03787090
[16,]   79.08051 0.1855164 9.121014 0.81622373
[17,]  291.03424 0.5448796 6.123322 0.45991123
[18,]  291.71136 0.5202779 3.875420 0.46136201
[19,]   72.67432 0.4645272 4.466601 0.84392449
[20,]  101.32370 0.4129090 7.430808 0.76212187
[21,]  277.08347 0.4934493 5.707191 0.47465334
[22,]  141.80968 0.3470312 3.220028 0.62390975
[23,]   47.29958 0.7022380 9.893956 0.98305986
[24,]  113.55103 0.7542738 4.127384 0.73697908
[25,]   54.80654 0.3338575 8.067106 0.92771835
[26,]   65.62983 0.3161141 4.636774 0.85365573
[27,]  939.71994 0.3831439 2.110095 0.10832088
[28,]   79.59656 0.7080262 7.645873 0.83921821
[29,]   86.27516 0.5175229 3.713787 0.79744934
[30,]   71.42720 0.5842814 9.098713 0.88023869
[31,]   48.00056 0.3167763 1.736940 0.83930594
[32,]   57.58363 0.3723748 1.833238 0.82880898
[33,]  101.21065 0.5929884 4.263884 0.76365280
[34,]  118.98015 0.7500090 7.143604 0.73637760
[35,]  145.51358 0.9470354 6.049064 0.68042757
[36,]  110.90077 0.5454327 9.379054 0.74610888
[37,]   71.86708 0.8340062 4.045646 0.87758552
[38,]  362.96864 0.7971928 8.652089 0.41176325
[39,]   91.78333 0.4312443 8.797475 0.79459647
[40,]  126.88372 0.7966689 5.752826 0.71160256

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
53.3302482  0.3341075  6.6283083  0.9320773 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.1310907 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1175.277 1212.685 1235.556 1245.814 1245.814 1260.725 1292.367 1295.156
 [9] 1258.396 1299.804 1332.305 1475.565 1532.580 1582.113 1551.398 1567.907
[17] 1643.871 1713.204 1815.464 1909.625

$residuals
 [1] -229.143532 -249.954319 -165.976569  -74.017789  -67.698222  -74.914785
 [7]  -53.009393   -6.595558  -50.689668  -21.395747   28.287529   65.219219
[13]   42.454305  113.846238   93.291094   58.123999   11.168835   42.395489
[19]   71.956111   82.268971

$rss
[1] 209853.4

$cov.unscaled
      gamma delta rho nu
gamma    NA    NA  NA NA
delta    NA    NA  NA NA
rho      NA    NA  NA NA
nu       NA    NA  NA NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
53.3302  0.3341  6.6283  0.9321 

Elasticity of Substitution: 0.1311 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  53.3302         NA      NA       NA
delta   0.3341         NA      NA       NA
rho     6.6283         NA      NA       NA
nu      0.9321         NA      NA       NA

Residual standard error: 102.4337 
Multiple R-squared: 0.8814465 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.1311         NA      NA       NA

> coef( summary( cesLandIntDeVrs ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 53.3302482         NA      NA       NA
delta  0.3341075         NA      NA       NA
rho    6.6283083         NA      NA       NA
nu     0.9320773         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
48.9394518  0.9878559  2.9501426 

$optim$bestval
[1] 165832.6

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2     par3
1   33.73472 0.4192938 2.154901
2   33.73472 0.4192938 2.154901
3   40.10567 0.5833184 2.574519
4   40.10567 0.5833184 2.574519
5   40.10567 0.5833184 2.574519
6   40.10567 0.5833184 2.574519
7   40.10567 0.5833184 2.574519
8   40.10567 0.5833184 2.574519
9   48.18819 0.9529496 2.755562
10  48.18819 0.9529496 2.755562
11  48.18819 0.9529496 2.755562
12  48.18819 0.9529496 2.755562
13  46.24705 0.9144247 1.454956
14  46.24705 0.9144247 1.454956
15  46.24705 0.9144247 1.454956
16  46.24705 0.9144247 1.454956
17  46.24705 0.9144247 1.454956
18  46.24705 0.9144247 1.454956
19  46.24705 0.9144247 1.454956
20  46.24705 0.9144247 1.454956
21  46.24705 0.9144247 1.454956
22  46.24705 0.9144247 1.454956
23  46.24705 0.9144247 1.454956
24  47.13886 0.9372653 1.568345
25  47.13886 0.9372653 1.568345
26  47.13886 0.9372653 1.568345
27  45.18334 0.8422372 2.045830
28  45.18334 0.8422372 2.045830
29  45.18334 0.8422372 2.045830
30  45.18334 0.8422372 2.045830
31  45.18334 0.8422372 2.045830
32  45.18334 0.8422372 2.045830
33  45.18334 0.8422372 2.045830
34  45.18334 0.8422372 2.045830
35  45.18334 0.8422372 2.045830
36  45.18334 0.8422372 2.045830
37  45.18334 0.8422372 2.045830
38  46.56577 0.8853527 2.297532
39  46.56577 0.8853527 2.297532
40  45.38948 0.8167159 2.577617
41  45.38948 0.8167159 2.577617
42  45.38948 0.8167159 2.577617
43  45.38948 0.8167159 2.577617
44  45.38948 0.8167159 2.577617
45  45.38948 0.8167159 2.577617
46  45.38948 0.8167159 2.577617
47  46.25816 0.8463305 2.719842
48  46.25816 0.8463305 2.719842
49  46.25816 0.8463305 2.719842
50  46.25816 0.8463305 2.768691
51  46.25816 0.8463305 2.768691
52  46.25816 0.8463305 2.768691
53  46.25816 0.8463305 2.768691
54  46.25816 0.8463305 2.768691
55  46.25816 0.8463305 2.768691
56  46.25816 0.8463305 2.768691
57  46.25816 0.8463305 2.768691
58  46.25816 0.8463305 2.768691
59  46.25816 0.8463305 2.768691
60  46.25816 0.8463305 2.768691
61  46.25816 0.8463305 2.768691
62  46.25816 0.8463305 2.768691
63  46.25816 0.8463305 2.768691
64  46.25816 0.8463305 2.768691
65  46.60864 0.8641636 2.751388
66  46.60864 0.8641636 2.751388
67  46.60864 0.8641636 2.751388
68  46.60864 0.8641636 2.751388
69  46.60864 0.8641636 2.751388
70  46.60864 0.8641636 2.751388
71  46.60864 0.8641636 2.751388
72  46.60864 0.8641636 2.751388
73  46.60864 0.8641636 2.751388
74  46.60864 0.8641636 2.751388
75  46.60864 0.8641636 2.751388
76  46.60864 0.8641636 2.751388
77  46.60864 0.8641636 2.751388
78  46.60864 0.8641636 2.751388
79  46.60864 0.8641636 2.751388
80  46.88375 0.8786574 2.741906
81  46.88375 0.8786574 2.741906
82  46.88375 0.8786574 2.741906
83  46.88375 0.8786574 2.741906
84  46.88375 0.8786574 2.741906
85  46.88375 0.8786574 2.741906
86  46.88375 0.8786574 2.741906
87  46.88375 0.8786574 2.741906
88  46.88375 0.8786574 2.741906
89  46.88375 0.8786574 2.741906
90  46.88375 0.8786574 2.741906
91  46.88375 0.8786574 2.741906
92  46.88375 0.8786574 2.741906
93  46.88375 0.8786574 2.741906
94  46.88375 0.8786574 2.741906
95  46.26216 0.8400558 2.889652
96  46.26216 0.8400558 2.889652
97  46.26216 0.8400558 2.889652
98  46.26216 0.8400558 2.889652
99  46.26216 0.8400558 2.889652
100 46.26216 0.8400558 2.889652
101 46.26216 0.8400558 2.889652
102 46.26216 0.8400558 2.889652
103 46.26216 0.8400558 2.889652
104 46.26216 0.8400558 2.889652
105 46.60184 0.8570215 2.902666
106 46.39542 0.8421586 2.989330
107 46.39542 0.8421586 2.989330
108 46.39542 0.8421586 2.989330
109 46.39542 0.8421586 2.989330
110 46.96571 0.8754686 2.935827
111 46.96571 0.8754686 2.935827
112 46.96571 0.8754686 2.935827
113 46.96571 0.8754686 2.935827
114 46.96571 0.8754686 2.935827
115 46.96571 0.8754686 2.935827
116 46.96571 0.8754686 2.935827
117 46.96571 0.8754686 2.935827
118 46.96571 0.8754686 2.935827
119 46.96571 0.8754686 2.935827
120 46.96571 0.8754686 2.935827
121 46.96571 0.8754686 2.935827
122 46.96571 0.8754686 2.935827
123 46.96571 0.8754686 2.935827
124 46.96571 0.8754649 2.935827
125 46.96571 0.8754649 2.935827
126 46.96571 0.8754649 2.935827
127 47.01080 0.8767471 2.965495
128 47.01080 0.8767471 2.965495
129 47.01080 0.8767471 2.965495
130 47.48260 0.9047239 2.911389
131 47.48260 0.9047239 2.911389
132 47.48260 0.9047239 2.911389
133 47.48260 0.9047239 2.911389
134 47.48260 0.9047239 2.911389
135 48.26186 0.9497239 2.837759
136 48.81138 0.9818792 2.723831
137 48.81138 0.9818792 2.723831
138 48.81138 0.9818792 2.723831
139 48.81138 0.9818792 2.723831
140 48.81138 0.9818792 2.723831
141 48.81138 0.9818792 2.723831
142 48.81138 0.9818792 2.723831
143 48.81138 0.9818792 2.723831
144 48.81138 0.9818792 2.723831
145 48.81138 0.9818792 2.723831
146 48.81138 0.9818792 2.723831
147 48.81138 0.9818792 2.723831
148 48.81138 0.9818792 2.723831
149 48.81138 0.9818792 2.704213
150 48.81138 0.9818792 2.704213
151 48.81138 0.9818792 2.704213
152 48.81138 0.9818792 2.704213
153 48.81138 0.9818792 2.704213
154 48.81138 0.9818792 2.704213
155 48.81138 0.9818792 2.704213
156 48.81138 0.9818792 2.704213
157 48.81138 0.9818792 2.704213
158 48.76470 0.9773830 2.989330
159 48.76470 0.9773830 2.989330
160 48.76470 0.9773830 2.989330
161 48.76470 0.9773830 2.989330
162 48.76470 0.9773830 2.989330
163 48.76470 0.9773830 2.989330
164 48.76470 0.9773830 2.989330
165 48.76470 0.9773830 2.989330
166 48.76470 0.9773830 2.989330
167 48.76470 0.9773830 2.989330
168 48.77592 0.9782790 2.934593
169 48.77592 0.9782790 2.934593
170 48.77592 0.9782790 2.934593
171 48.77592 0.9782790 2.934593
172 48.77592 0.9782790 2.934593
173 48.77592 0.9782790 2.934593
174 48.77592 0.9782790 2.934593
175 48.77592 0.9782790 2.934593
176 48.77592 0.9782790 2.934593
177 48.77592 0.9782790 2.934593
178 48.80501 0.9799496 2.945935
179 48.80501 0.9799496 2.945935
180 48.80501 0.9799496 2.945935
181 48.80501 0.9799496 2.945935
182 48.95451 0.9888538 2.917122
183 48.95451 0.9888538 2.917122
184 48.95451 0.9888538 2.917122
185 48.95451 0.9888538 2.917122
186 48.95451 0.9888538 2.917122
187 48.93945 0.9878559 2.950143
188 48.93945 0.9878559 2.950143
189 48.93945 0.9878559 2.950143
190 48.93945 0.9878559 2.950143
191 48.93945 0.9878559 2.950143
192 48.93945 0.9878559 2.950143
193 48.93945 0.9878559 2.950143
194 48.93945 0.9878559 2.950143
195 48.93945 0.9878559 2.950143
196 48.93945 0.9878559 2.950143
197 48.93945 0.9878559 2.950143
198 48.93945 0.9878559 2.950143
199 48.93945 0.9878559 2.950143
200 48.93945 0.9878559 2.950143

$member$bestvalit
  [1] 195824.3 195824.3 167407.1 167407.1 167407.1 167407.1 167407.1 167407.1
  [9] 166022.5 166022.5 166022.5 166022.5 165990.9 165990.9 165990.9 165990.9
 [17] 165990.9 165990.9 165990.9 165990.9 165990.9 165990.9 165990.9 165928.6
 [25] 165928.6 165928.6 165885.1 165885.1 165885.1 165885.1 165885.1 165885.1
 [33] 165885.1 165885.1 165885.1 165885.1 165885.1 165882.7 165882.7 165880.1
 [41] 165880.1 165880.1 165880.1 165880.1 165880.1 165880.1 165867.4 165867.4
 [49] 165867.4 165840.1 165840.1 165840.1 165840.1 165840.1 165840.1 165840.1
 [57] 165840.1 165840.1 165840.1 165840.1 165840.1 165840.1 165840.1 165840.1
 [65] 165837.6 165837.6 165837.6 165837.6 165837.6 165837.6 165837.6 165837.6
 [73] 165837.6 165837.6 165837.6 165837.6 165837.6 165837.6 165837.6 165837.1
 [81] 165837.1 165837.1 165837.1 165837.1 165837.1 165837.1 165837.1 165837.1
 [89] 165837.1 165837.1 165837.1 165837.1 165837.1 165837.1 165836.5 165836.5
 [97] 165836.5 165836.5 165836.5 165836.5 165836.5 165836.5 165836.5 165836.5
[105] 165835.6 165835.3 165835.3 165835.3 165835.3 165834.8 165834.8 165834.8
[113] 165834.8 165834.8 165834.8 165834.8 165834.8 165834.8 165834.8 165834.8
[121] 165834.8 165834.8 165834.8 165834.8 165834.8 165834.8 165834.5 165834.5
[129] 165834.5 165834.3 165834.3 165834.3 165834.3 165834.3 165833.9 165833.1
[137] 165833.1 165833.1 165833.1 165833.1 165833.1 165833.1 165833.1 165833.1
[145] 165833.1 165833.1 165833.1 165833.1 165833.0 165833.0 165833.0 165833.0
[153] 165833.0 165833.0 165833.0 165833.0 165833.0 165832.9 165832.9 165832.9
[161] 165832.9 165832.9 165832.9 165832.9 165832.9 165832.9 165832.9 165832.7
[169] 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7
[177] 165832.7 165832.7 165832.7 165832.7 165832.7 165832.6 165832.6 165832.6
[185] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[193] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6

$member$pop
          [,1]      [,2]     [,3]
 [1,] 48.77592 0.9782790 2.934593
 [2,] 48.77622 0.9783600 2.916244
 [3,] 48.90620 0.9869303 2.835301
 [4,] 48.58250 0.9678147 2.845958
 [5,] 48.78560 0.9790466 2.919867
 [6,] 48.95451 0.9888538 2.917122
 [7,] 48.66550 0.9726753 2.814237
 [8,] 48.93945 0.9878559 2.950143
 [9,] 48.30895 0.9539757 2.758889
[10,] 48.85656 0.9828246 2.977561
[11,] 48.79963 0.9800565 2.878582
[12,] 48.91507 0.9863075 2.938893
[13,] 37.51337 0.4991983 2.575650
[14,] 48.72722 0.9755365 2.937258
[15,] 48.93278 0.9875475 2.950080
[16,] 48.84486 0.9822381 2.948124
[17,] 48.87993 0.9844014 2.916094
[18,] 42.75607 0.6765562 2.793631
[19,] 48.96667 0.9892101 2.969938
[20,] 48.75019 0.9772985 2.852629
[21,] 48.81594 0.9811498 2.895234
[22,] 48.81138 0.9818792 2.704213
[23,] 48.84403 0.9820519 2.925533
[24,] 48.79722 0.9798490 2.901933
[25,] 48.96361 0.9890410 2.960610
[26,] 48.92782 0.9873706 2.912361
[27,] 48.78575 0.9793619 2.902630
[28,] 48.72114 0.9750439 2.946714
[29,] 48.92212 0.9872638 2.857674
[30,] 47.16488 0.8858113 2.949239

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
48.9394518  0.9878559  2.9501426 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.2531554 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1149.936 1189.250 1213.329 1224.141 1224.141 1239.866 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.937 1833.508 1935.724

$residuals
 [1] -203.802524 -226.519138 -143.750279  -52.344405  -46.024828  -54.056487
 [7]  -33.925587   12.328991  -29.703135   -2.737669   45.046623   72.896210
[13]   46.210012  114.060842   95.716159   59.366925    6.799220   32.662634
[19]   53.912467   56.169763

$rss
[1] 165832.6

$cov.unscaled
           gamma     delta        rho
gamma  430511155  28809941 -775681119
delta   28809941   1927973  -51909468
rho   -775681119 -51909468 1397755188

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
48.9395  0.9879  2.9501 

Elasticity of Substitution: 0.2532 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.894e+01  1.889e+06       0        1
delta 9.879e-01  1.264e+05       0        1
rho   2.950e+00  3.404e+06       0        1

Residual standard error: 91.05838 
Multiple R-squared: 0.9063155 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 2.532e-01  2.182e+05       0        1

> coef( cesLandLaborDe2 )
     gamma      delta        rho 
48.9394518  0.9878559  2.9501426 
> vcov( cesLandLaborDe2 )
              gamma         delta           rho
gamma  3.569638e+12  238881314833 -6.431659e+12
delta  2.388813e+11   15986033961 -4.304140e+11
rho   -6.431659e+12 -430414004730  1.158967e+13
> coef( summary( cesLandLaborDe2 ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 48.9394518  1889348.7 2.590282e-05 0.9999793
delta  0.9878559   126435.9 7.813097e-06 0.9999938
rho    2.9501426  3404359.9 8.665778e-07 0.9999993
> fitted( cesLandLaborDe2 )
 [1] 1149.936 1189.250 1213.329 1224.141 1224.141 1239.866 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.937 1833.508 1935.724
> residuals( cesLandLaborDe2 )
 [1] -203.802524 -226.519138 -143.750279  -52.344405  -46.024828  -54.056487
 [7]  -33.925587   12.328991  -29.703135   -2.737669   45.046623   72.896210
[13]   46.210012  114.060842   95.716159   59.366925    6.799220   32.662634
[19]   53.912467   56.169763
> 
> # constant returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # variable returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

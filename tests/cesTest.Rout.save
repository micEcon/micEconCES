
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
Loading required package: minpack.lm
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print.default( cesLandLabor ) 
$optim
$optim$par
    gamma     delta       rho 
46.236274  1.491768 -6.564428 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      78       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
    gamma     delta       rho 
46.236274  1.491768 -6.564428 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.899 1189.212 1213.291 1224.102 1224.102 1239.827 1273.243 1276.191
 [9] 1237.370 1281.105 1315.504 1467.841 1528.776 1581.848 1548.924 1566.614
[17] 1648.189 1722.883 1833.450 1935.663

$residuals
 [1] -203.765956 -226.481258 -143.711651  -52.305364  -45.985797  -54.016953
 [7]  -33.884989   12.369637  -29.663705   -2.696870   45.088546   72.942988
[13]   46.258746  114.111213   95.765388   59.416649    6.851355   32.717009
[19]   53.970261   56.230770

$cov.unscaled
          gamma     delta       rho
gamma 19429.313  91736.49  8338.063
delta 91736.486 433138.47 39368.586
rho    8338.063  39368.59  3578.268

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Coefficients:
 gamma  delta    rho 
46.236  1.492 -6.564 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Estimation method:  Nelder-Mead 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma    46.236  12692.537    0.004    0.997
delta     1.492  59928.458 2.49e-05    1.000
rho      -6.564   5446.985   -0.001    0.999

Residual standard error: 91.05834 

> coef( cesLandLabor ) 
    gamma     delta       rho 
46.236274  1.491768 -6.564428 
> vcov( cesLandLabor ) 
          gamma      delta       rho
gamma 161100504  760644194  69136059
delta 760644194 3591420111 326429405
rho    69136059  326429405  29669644
> coef( summary( cesLandLabor ) )
       Estimate Std. Error       t value  Pr(>|t|)
gamma 46.236274  12692.537  3.642792e-03 0.9970935
delta  1.491768  59928.458  2.489248e-05 0.9999801
rho   -6.564428   5446.985 -1.205149e-03 0.9990384
> fitted( cesLandLabor )
 [1] 1149.899 1189.212 1213.291 1224.102 1224.102 1239.827 1273.243 1276.191
 [9] 1237.370 1281.105 1315.504 1467.841 1528.776 1581.848 1548.924 1566.614
[17] 1648.189 1722.883 1833.450 1935.663
> residuals( cesLandLabor )
 [1] -203.765956 -226.481258 -143.711651  -52.305364  -45.985797  -54.016953
 [7]  -33.884989   12.369637  -29.663705   -2.696870   45.088546   72.942988
[13]   46.258746  114.111213   95.765388   59.416649    6.851355   32.717009
[19]   53.970261   56.230770
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandLaborVrs )
$optim
$optim$par
     gamma      delta        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 

$optim$value
[1] 94700.51

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1080.386 1125.789 1153.072 1167.355 1167.355 1185.138 1223.166 1228.426
 [9] 1182.734 1235.991 1276.431 1466.271 1541.166 1605.166 1563.549 1583.438
[17] 1685.304 1779.281 1920.328 2052.697

$residuals
 [1] -134.2534678 -163.0583704  -83.4925254    4.4410634   10.7606303
 [6]    0.6718922   16.1914330   60.1344843   24.9717934   42.4172384
[11]   84.1616291   74.5133496   33.8681940   90.7934249   81.1403492
[16]   42.5928145  -30.2637490  -23.6811525  -32.9074350  -60.8027548

$cov.unscaled
           gamma     delta         rho       phi
gamma   30953.86   2289430   -581552.1   3308141
delta 2289430.12 169357739 -43031239.3 244835589
rho   -581552.14 -43031239  10938939.1 -62263849
phi   3308141.42 244835589 -62263849.0 354586201

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
  gamma   delta     rho     phi 
36.5786  0.6046 -0.9350  1.2704 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Estimation method:  Nelder-Mead 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  3.658e+01  1.211e+04     0.003    0.998
delta  6.046e-01  8.955e+05  6.75e-07    1.000
rho   -9.350e-01  2.276e+05 -4.11e-06    1.000
phi    1.270e+00  1.296e+06  9.80e-07    1.000

Residual standard error: 68.81152 

> coef( cesLandLaborVrs )
     gamma      delta        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 
> vcov( cesLandLaborVrs )
            gamma         delta           rho           phi
gamma   146567301   10840510453   -2753664309   15664134636
delta 10840510453  801913246492 -203754023939 1159302805599
rho   -2753664309 -203754023939   51796157914 -294820925355
phi   15664134636 1159302805599 -294820925355 1678974777069
> coef( summary( cesLandLaborVrs ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma 36.5786357   12106.50  3.021405e-03 0.9975893
delta  0.6045810  895496.09  6.751353e-07 0.9999995
rho   -0.9349716  227587.69 -4.108182e-06 0.9999967
phi    1.2704379 1295752.59  9.804633e-07 0.9999992
> fitted( cesLandLaborVrs )
 [1] 1080.386 1125.789 1153.072 1167.355 1167.355 1185.138 1223.166 1228.426
 [9] 1182.734 1235.991 1276.431 1466.271 1541.166 1605.166 1563.549 1583.438
[17] 1685.304 1779.281 1920.328 2052.697
> residuals( cesLandLaborVrs )
 [1] -134.2534678 -163.0583704  -83.4925254    4.4410634   10.7606303
 [6]    0.6718922   16.1914330   60.1344843   24.9717934   42.4172384
[11]   84.1616291   74.5133496   33.8681940   90.7934249   81.1403492
[16]   42.5928145  -30.2637490  -23.6811525  -32.9074350  -60.8027548
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
     gamma      delta        rho 
  47.50869  548.70721 -186.49980 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     758      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
  47.50869  548.70721 -186.49980 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812031 -226.528908 -143.760266  -52.354412  -46.034845  -54.066631
 [7]  -33.936006   12.318502  -29.713284   -2.748202   45.035836   72.884174
[13]   46.197490  114.047831   95.703325   59.353877    6.785316   32.647977
[19]   53.896798   56.153211

$cov.unscaled
            gamma       delta          rho
gamma 18403.98187 8.544089750 158.55860724
delta     8.54409 0.003966613   0.07361119
rho     158.55861 0.073611188   1.36605394

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
  47.51  548.71 -186.50 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation method:  CG 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma    47.509  12353.088   0.004   0.9969    
delta   548.707      5.735  95.678   <2e-16 ***
rho    -186.500    106.427  -1.752   0.0797 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 

> coef( cesLandLaborCg )
     gamma      delta        rho 
  47.50869  548.70721 -186.49980 
> vcov( cesLandLaborCg )
             gamma       delta          rho
gamma 152598786.35 70844.32788 1314707.3929
delta     70844.33    32.88964     610.3558
rho     1314707.39   610.35585   11326.7974
> coef( summary( cesLandLaborCg ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma   47.50869 12353.088130  0.003845896 0.9969314
delta  548.70721     5.734949 95.677787504 0.0000000
rho   -186.49980   106.427428 -1.752365992 0.0797109
> fitted( cesLandLaborCg )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborCg )
 [1] -203.812031 -226.528908 -143.760266  -52.354412  -46.034845  -54.066631
 [7]  -33.936006   12.318502  -29.713284   -2.748202   45.035836   72.884174
[13]   46.197490  114.047831   95.703325   59.353877    6.785316   32.647977
[19]   53.896798   56.153211
> 
> # using the SANN optimization method
> set.seed( 123 )
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
     gamma      delta        rho 
37.6955089  1.0272590  0.6452962 

$optim$value
[1] 128995.3

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
37.6955089  1.0272590  0.6452962 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1109.338 1153.191 1182.809 1188.985 1188.985 1208.923 1251.673 1248.227
 [9] 1204.429 1247.373 1287.679 1439.747 1510.329 1580.205 1544.296 1574.300
[17] 1673.100 1767.230 1909.543 2044.300

$residuals
 [1] -163.205072 -190.460382 -113.229692  -17.188867  -10.869301  -23.112985
 [7]  -12.315032   40.334027    3.276938   31.035241   72.914022  101.037546
[13]   64.705785  115.754248  100.393399   51.730711  -18.060283  -11.629941
[19]  -22.122762  -52.405886

$cov.unscaled
            gamma      delta         rho
gamma    29205.79   11709728    659649.6
delta 11709727.71 4759261461 269895863.5
rho     659649.57  269895864  15354927.5

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
  gamma   delta     rho 
37.6955  1.0273  0.6453 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation method:  SANN 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.770e+01  1.372e+04    0.003    0.998
delta 1.027e+00  5.540e+06 1.85e-07    1.000
rho   6.453e-01  3.147e+05 2.05e-06    1.000

Residual standard error: 80.31043 

> coef( cesLandLaborSann )
     gamma      delta        rho 
37.6955089  1.0272590  0.6452962 
> vcov( cesLandLaborSann )
            gamma        delta          rho
gamma   188370479 7.552499e+10 4.254584e+09
delta 75524987098 3.069612e+13 1.740765e+12
rho    4254584451 1.740765e+12 9.903567e+10
> coef( summary( cesLandLaborSann ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 37.6955089   13724.81 2.746523e-03 0.9978086
delta  1.0272590 5540407.57 1.854122e-07 0.9999999
rho    0.6452962  314699.33 2.050517e-06 0.9999984
> fitted( cesLandLaborSann )
 [1] 1109.338 1153.191 1182.809 1188.985 1188.985 1208.923 1251.673 1248.227
 [9] 1204.429 1247.373 1287.679 1439.747 1510.329 1580.205 1544.296 1574.300
[17] 1673.100 1767.230 1909.543 2044.300
> residuals( cesLandLaborSann )
 [1] -163.205072 -190.460382 -113.229692  -17.188867  -10.869301  -23.112985
 [7]  -12.315032   40.334027    3.276938   31.035241   72.914022  101.037546
[13]   64.705785  115.754248  100.393399   51.730711  -18.060283  -11.629941
[19]  -22.122762  -52.405886
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
     gamma      delta        rho 
  47.10913  561.14577 -149.76314 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      31        8 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
  47.10913  561.14577 -149.76314 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.945 1189.259 1213.340 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.420 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.524 1935.741

$residuals
 [1] -203.812100 -226.528979 -143.760339  -52.354486  -46.034919  -54.066706
 [7]  -33.936083   12.318425  -29.713359   -2.748279   45.035757   72.884085
[13]   46.197398  114.047736   95.703232   59.353783    6.785217   32.647873
[19]   53.896688   56.153095

$cov.unscaled
            gamma        delta         rho
gamma 18717.49706 10.492337401 248.8544452
delta    10.49234  0.005881617   0.1394986
rho     248.85445  0.139498609   3.3085906

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
  47.11  561.15 -149.76 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation method:  BFGS 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma    47.109  12457.862   0.004    0.997    
delta   561.146      6.983  80.354   <2e-16 ***
rho    -149.763    165.631  -0.904    0.366    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 

> coef( cesLandLaborBfgs )
     gamma      delta        rho 
  47.10913  561.14577 -149.76314 
> vcov( cesLandLaborBfgs )
             gamma       delta         rho
gamma 155198334.45 86998.45307 2063405.983
delta     86998.45    48.76812    1156.669
rho     2063405.98  1156.66917   27433.569
> coef( summary( cesLandLaborBfgs ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma   47.10913 12457.862355  0.003781478 0.9969828
delta  561.14577     6.983417 80.354035235 0.0000000
rho   -149.76314   165.630822 -0.904198470 0.3658902
> fitted( cesLandLaborBfgs )
 [1] 1149.945 1189.259 1213.340 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.420 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.524 1935.741
> residuals( cesLandLaborBfgs )
 [1] -203.812100 -226.528979 -143.760339  -52.354486  -46.034919  -54.066706
 [7]  -33.936083   12.318425  -29.713359   -2.748279   45.035757   72.884085
[13]   46.197398  114.047736   95.703232   59.353783    6.785217   32.647873
[19]   53.896688   56.153095
> 
> # using the L-BFGS-B optimization method with constrained delta
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
    gamma     delta       rho 
49.142950  1.000000 -4.610031 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      20       20 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
    gamma     delta       rho 
49.142950  1.000000 -4.610031 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$cov.unscaled
             gamma        delta          rho
gamma 1.720028e+04 1.833548e+05 5.227548e-10
delta 1.833548e+05 1.954560e+06 5.572561e-09
rho   5.227548e-10 5.572561e-09 1.656946e-23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
gamma delta   rho 
49.14  1.00 -4.61 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation method:  L-BFGS-B 

Coefficients:
        Estimate Std. Error    t value Pr(>|t|)    
gamma  4.914e+01  1.194e+04  4.000e-03    0.997    
delta  1.000e+00  1.273e+05   7.86e-06    1.000    
rho   -4.610e+00  3.707e-10 -1.244e+10   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 

> coef( cesLandLaborBfgsCon )
    gamma     delta       rho 
49.142950  1.000000 -4.610031 
> vcov( cesLandLaborBfgsCon )
             gamma        delta          rho
gamma 1.426181e+08 1.520308e+09 4.334483e-06
delta 1.520308e+09 1.620646e+10 4.620554e-05
rho   4.334483e-06 4.620554e-05 1.373876e-19
> coef( summary( cesLandLaborBfgsCon ) )
       Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.142950 1.194228e+04  4.115038e-03 0.9967167
delta  1.000000 1.273046e+05  7.855175e-06 0.9999937
rho   -4.610031 3.706584e-10 -1.243741e+10 0.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translogUnr
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$test
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$translog

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$cov.unscaled
             gamma        delta          rho          phi
gamma 1.935064e+25 6.486592e+19 3.771655e+21 4.344692e+20
delta 6.486592e+19 2.174887e+14 1.265041e+16 1.456888e+15
rho   3.771655e+21 1.265041e+16 7.362197e+17 8.475517e+16
phi   4.344692e+20 1.456888e+15 8.475517e+16 9.759739e+15

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho        phi 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation method:  Kmenta 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  1.028e+00  -0.046    0.964    
phi    1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 1291888 

> coef( cesLandLaborKmenta )
        gamma         delta           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
delta -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 1.027944e+00 -0.04573784 9.635192e-01
phi    1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = startVal, fn = residFun, data = estData, jac = jac,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 3.10004273343899, 4.37548743293658, -0.451844116401714 
residual sum-of-squares: 123041
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 3.1000427  4.3754874 -0.4518441 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1101.156 1147.287 1179.191 1183.694 1183.694 1205.314 1251.259 1245.840
 [9] 1200.060 1242.988 1285.547 1438.304 1511.846 1585.423 1548.874 1580.847
[17] 1681.583 1776.672 1918.410 2050.404

$residuals
 [1] -155.023328 -184.556920 -109.612227  -11.897036   -5.577469  -19.504329
 [7]  -11.901264   42.720954    7.646490   35.420382   75.045634  102.480229
[13]   63.188389  110.536893   95.815020   45.183966  -26.543547  -21.072276
[19]  -30.989613  -58.509794

$cov.unscaled
         gamma    delta       rho
gamma  4325032  6269902  59728204
delta  6269902  9089634  86599713
rho   59728204 86599713 825416116

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 3.1000  4.3755 -0.4518 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation method:  LM 

Coefficients:
        Estimate Std. Error   t value Pr(>|t|)
gamma  3.100e+00  1.631e+05  1.90e-05        1
delta  4.375e+00  2.365e+05  1.85e-05        1
rho   -4.518e-01  2.253e+06 -2.01e-07        1

Residual standard error: 78.43496 

> coef( cesLandLaborLm )
     gamma      delta        rho 
 3.1000427  4.3754874 -0.4518441 
> vcov( cesLandLaborLm )
             gamma        delta          rho
gamma  26607782212  38572709896 3.674505e+11
delta  38572709896  55919821914 5.327652e+11
rho   367450513295 532765204111 5.077996e+12
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error       t value  Pr(>|t|)
gamma  3.1000427   163118.9  1.900480e-05 0.9999848
delta  4.3754874   236473.7  1.850306e-05 0.9999852
rho   -0.4518441  2253440.9 -2.005130e-07 0.9999998
> fitted( cesLandLaborLm )
 [1] 1101.156 1147.287 1179.191 1183.694 1183.694 1205.314 1251.259 1245.840
 [9] 1200.060 1242.988 1285.547 1438.304 1511.846 1585.423 1548.874 1580.847
[17] 1681.583 1776.672 1918.410 2050.404
> residuals( cesLandLaborLm )
 [1] -155.023328 -184.556920 -109.612227  -11.897036   -5.577469  -19.504329
 [7]  -11.901264   42.720954    7.646490   35.420382   75.045634  102.480229
[13]   63.188389  110.536893   95.815020   45.183966  -26.543547  -21.072276
[19]  -30.989613  -58.509794
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
39.1271322  0.4565819  3.4462902 

$optim$value
[1] 165844.5

$optim$counts
function gradient 
      58       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
39.1271322  0.4565819  3.4462902 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.443 1188.742 1212.811 1223.619 1223.619 1239.338 1272.741 1275.687
 [9] 1236.881 1280.599 1314.985 1467.262 1528.173 1581.223 1548.310 1565.992
[17] 1647.530 1722.192 1832.713 1934.885

$residuals
 [1] -203.310489 -226.011448 -143.231926  -51.822708  -45.502956  -53.527940
 [7]  -33.382760   12.873919  -29.175169   -2.190577   45.607866   73.522459
[13]   46.861995  114.736467   96.379492   60.039151    7.509985   33.408155
[19]   54.707322   57.009117

$cov.unscaled
           gamma    delta        rho
gamma   27109.54  -674077  -69991.16
delta -674077.01 16760885 1740326.09
rho    -69991.16  1740326  180702.56

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Coefficients:
  gamma   delta     rho 
39.1271  0.4566  3.4463 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Estimation method:  Nelder-Mead 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.913e+01  1.499e+04    0.003    0.998
delta 4.566e-01  3.728e+05 1.22e-06    1.000
rho   3.446e+00  3.871e+04 8.90e-05    1.000

Residual standard error: 91.06165 

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 39.1271322   14993.28 2.609645e-03 0.9979178
delta  0.4565819  372806.94 1.224714e-06 0.9999990
rho    3.4462902   38709.51 8.902955e-05 0.9999290
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandIntVrs )
$optim
$optim$par
    gamma     delta       rho       phi 
36.132869  2.315477  2.014573  1.241926 

$optim$value
[1] 97911.1

$optim$counts
function gradient 
     131       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
    gamma     delta       rho       phi 
36.132869  2.315477  2.014573  1.241926 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1081.020 1127.040 1155.472 1168.195 1168.206 1186.871 1226.729 1230.310
 [9] 1183.979 1236.201 1277.523 1463.755 1539.579 1606.298 1564.988 1587.291
[17] 1690.760 1786.560 1930.109 2064.640

$residuals
 [1] -134.886503 -164.309212  -85.893253    3.601790    9.910141   -1.060549
 [7]   12.628947   58.250637   23.726863   42.207985   83.069114   77.028758
[13]   35.455677   89.661303   79.701519   38.740575  -35.719840  -30.960037
[19]  -42.689068  -72.746431

$cov.unscaled
           gamma       delta        rho       phi
gamma   31857.66   -306226.8   293071.9   3454335
delta -306226.76   2943556.9 -2817109.0 -33203967
rho    293071.93  -2817109.0  2696100.3  31775136
phi   3454335.31 -33203967.2 31775136.1 375659240

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
 gamma  delta    rho    phi 
36.133  2.315  2.015  1.242 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Estimation method:  Nelder-Mead 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.613e+01  1.249e+04    0.003    0.998
delta 2.315e+00  1.200e+05 1.93e-05    1.000
rho   2.015e+00  1.149e+05 1.75e-05    1.000
phi   1.242e+00  1.356e+06 9.16e-07    1.000

Residual standard error: 69.96825 

> coef( summary( cesLandIntVrs ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 36.132869   12488.43 2.893307e-03 0.9976915
delta  2.315477  120043.10 1.928871e-05 0.9999846
rho    2.014573  114886.50 1.753533e-05 0.9999860
phi    1.241926 1356119.69 9.157936e-07 0.9999993
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
    gamma     delta       rho 
 53.58074 163.07101  58.92213 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     758      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
 53.58074 163.07101  58.92213 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528908 -143.760266  -52.354412  -46.034845  -54.066631
 [7]  -33.936006   12.318502  -29.713284   -2.748202   45.035836   72.884174
[13]   46.197490  114.047831   95.703325   59.353877    6.785316   32.647977
[19]   53.896798   56.153211

$cov.unscaled
            gamma       delta         rho
gamma 14469.06701 -80.6852190 1137.541019
delta   -80.68522   0.4499326   -6.343377
rho    1137.54102  -6.3433769   89.432136

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
 gamma  delta    rho 
 53.58 163.07  58.92 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation method:  CG 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)   
gamma    53.58   10953.17   0.005  0.99610   
delta   163.07      61.08   2.670  0.00759 **
rho      58.92     861.13   0.068  0.94545   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 

> coef( summary( cesLandIntCg ) )
       Estimate Std. Error     t value    Pr(>|t|)
gamma  53.58074 10953.1719 0.004891801 0.996096923
delta 163.07101    61.0792 2.669828785 0.007588993
rho    58.92213   861.1255 0.068424561 0.945447671
> 
> # using the SANN optimization method
> set.seed( 234 )
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandIntSann )
$optim
$optim$par
     gamma      delta        rho 
39.4034688  0.4298509  3.8197376 

$optim$value
[1] 165834.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
39.4034688  0.4298509  3.8197376 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1150.128 1189.449 1213.533 1224.346 1224.346 1240.075 1273.497 1276.446
 [9] 1237.617 1281.361 1315.767 1468.134 1529.081 1582.164 1549.232 1566.926
[17] 1648.515 1723.223 1833.811 1936.045

$residuals
 [1] -203.994956 -226.718503 -143.953565  -52.549881  -46.230253  -54.264560
 [7]  -34.139257   12.115076  -29.910658   -2.952388   44.825978   72.650018
[13]   45.953522  113.795748   95.457123   59.105342    6.525152   32.376987
[19]   53.608988   55.849428

$cov.unscaled
           gamma      delta        rho
gamma   26762.51  -642248.7  -61015.73
delta -642248.67 15412731.1 1464260.02
rho    -61015.73  1464260.0  139109.51

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Coefficients:
  gamma   delta     rho 
39.4035  0.4299  3.8197 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Estimation method:  SANN 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.940e+01  1.490e+04    0.003    0.998
delta 4.299e-01  3.575e+05 1.20e-06    1.000
rho   3.820e+00  3.396e+04 1.12e-04    1.000

Residual standard error: 91.05901 

> coef( summary( cesLandIntSann ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 39.4034688   14896.57 2.645137e-03 0.9978895
delta  0.4298509  357489.04 1.202417e-06 0.9999990
rho    3.8197376   33962.63 1.124688e-04 0.9999103
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
    gamma     delta       rho 
 55.44507 336.65007  48.22737 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      50       11 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
    gamma     delta       rho 
 55.44507 336.65007  48.22737 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.946 1189.260 1213.340 1224.152 1224.152 1239.878 1273.295 1276.243
 [9] 1237.420 1281.158 1315.558 1467.901 1528.838 1581.913 1548.987 1566.678
[17] 1648.256 1722.953 1833.525 1935.742

$residuals
 [1] -203.812918 -226.529826 -143.761203  -52.355357  -46.035790  -54.067588
 [7]  -33.936989   12.317517  -29.714239   -2.749191   45.034821   72.883041
[13]   46.196310  114.046610   95.702129   59.352668    6.784043   32.646647
[19]   53.895383   56.151717

$cov.unscaled
            gamma       delta         rho
gamma 13512.40886 -46.1448678 1874.391066
delta   -46.14487   0.1575847   -6.401044
rho    1874.39107  -6.4010443  260.008553

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
 gamma  delta    rho 
 55.45 336.65  48.23 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation method:  BFGS 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    55.45   10584.88   0.005    0.996    
delta   336.65      36.15   9.313   <2e-16 ***
rho      48.23    1468.30   0.033    0.974    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 

> coef( summary( cesLandIntBfgs ) )
       Estimate  Std. Error     t value     Pr(>|t|)
gamma  55.44507 10584.88223 0.005238137 9.958206e-01
delta 336.65007    36.14737 9.313267037 1.239595e-20
rho    48.22737  1468.29547 0.032845819 9.737975e-01
> 
> # using the L-BFGS-B optimization method with constrained delta
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
37.6785181  0.2645720  5.0053076 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     128      128 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
     gamma      delta        rho 
37.6785181  0.2645720  5.0053076 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.949 1189.263 1213.343 1224.155 1224.155 1239.880 1273.298 1276.246
 [9] 1237.423 1281.161 1315.561 1467.904 1528.842 1581.916 1548.991 1566.682
[17] 1648.259 1722.957 1833.529 1935.746

$residuals
 [1] -203.815539 -226.532556 -143.763982  -52.358181  -46.038612  -54.070446
 [7]  -33.939924   12.314589  -29.717085   -2.752130   45.031795   72.879664
[13]   46.192790  114.042983   95.698609   59.349132    6.780395   32.642889
[19]   53.891419   56.147537

$cov.unscaled
           gamma      delta        rho
gamma   29259.90  -832514.6  -58510.98
delta -832514.56 23687038.6 1664777.85
rho    -58510.98  1664777.9  117004.30

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
  gamma   delta     rho 
37.6785  0.2646  5.0053 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation method:  L-BFGS-B 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 3.768e+01  1.558e+04    0.002    0.998
delta 2.646e-01  4.432e+05 5.97e-07    1.000
rho   5.005e+00  3.115e+04 1.61e-04    1.000

Residual standard error: 91.05834 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 37.6785181   15576.01 2.419010e-03 0.9980699
delta  0.2645720  443174.87 5.969923e-07 0.9999995
rho    5.0053076   31147.32 1.606979e-04 0.9998718
> 
> # Kmenta approximation
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
Warning message:
In cesEst("qOutput", c("land", "qVarInput"), germanFarms, method = "Kmenta") :
  allowing for variable returns to scale in the Kmenta approximation although argument 'vrs' is 'FALSE'.
> print.default( cesLandIntKmenta )
$translogUnr
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$test
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$translog

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho          phi 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      delta         rho          phi
gamma  0.006287789  0.4447299  0.04356957 -0.002344101
delta  0.444729932 31.5957949  3.02153597 -0.124590619
rho    0.043569573  3.0215360  0.32935388 -0.034664500
phi   -0.002344101 -0.1245906 -0.03466450  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

$method
[1] "Kmenta"

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.671  -8438.368  -8463.716  -9413.512 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$cov.unscaled
              gamma         delta           rho           phi
gamma  8.245217e+13 -1.050611e+12 2949177976536 3710082377769
delta -1.050611e+12  1.338937e+10  -37596716026  -47275207211
rho    2.949178e+12 -3.759672e+10  105623003567  132711641179
phi    3.710082e+12 -4.727521e+10  132711641179  166960802224

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

Coefficients:
    gamma     delta       rho       phi 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

Estimation method:  Kmenta 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.573894  -0.397    0.692    
phi    1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 9241.72 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.57389361 -0.39669863 6.915897e-01
phi    1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = startVal, fn = residFun, data = estData, jac = jac,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 102.801983905987, 1.34613651874603, 0.208810685160289 
residual sum-of-squares: 153699
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
      gamma       delta         rho 
102.8019839   1.3461365   0.2088107 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$fitted.values
 [1] 1145.631 1175.368 1202.429 1201.486 1203.236 1218.404 1251.586 1262.247
 [9] 1220.424 1267.675 1296.918 1447.227 1504.833 1566.126 1547.218 1573.695
[17] 1675.493 1763.347 1882.844 1988.575

$residuals
 [1] -199.497551 -212.637975 -132.849684  -29.689964  -25.120355  -32.593684
 [7]  -12.228183   26.313558  -12.717409   10.733762   63.674779   93.557444
[13]   70.201755  129.833477   97.471091   52.335706  -20.453615   -7.746728
[19]    4.576525    3.318620

$cov.unscaled
            gamma       delta         rho
gamma    3931.792   -798261.7    491846.1
delta -798261.673 162144278.3 -99967406.5
rho    491846.122 -99967406.5  61685628.4

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
   gamma    delta      rho 
102.8020   1.3461   0.2088 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation method:  LM 

Coefficients:
       Estimate Std. Error  t value Pr(>|t|)
gamma 1.028e+02  5.497e+03    0.019    0.985
delta 1.346e+00  1.116e+06 1.21e-06    1.000
rho   2.088e-01  6.885e+05 3.03e-07    1.000

Residual standard error: 87.66397 

> coef( summary( cesLandIntLm ) )
         Estimate  Std. Error      t value  Pr(>|t|)
gamma 102.8019839    5496.882 1.870187e-02 0.9850789
delta   1.3461365 1116276.892 1.205916e-06 0.9999990
rho     0.2088107  688514.542 3.032771e-07 0.9999998
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.899 1189.212 1213.291 1224.102 1224.102 1239.827 1273.243 1276.191
 [9] 1237.370 1281.105 1315.504 1467.841 1528.776 1581.848 1548.924 1566.614
[17] 1648.189 1722.883 1833.450 1935.663
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1080.386 1125.789 1153.072 1167.355 1167.355 1185.138 1223.166 1228.426
 [9] 1182.734 1235.991 1276.431 1466.271 1541.166 1605.166 1563.549 1583.438
[17] 1685.304 1779.281 1920.328 2052.697
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

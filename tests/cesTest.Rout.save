
R version 2.10.1 (2009-12-14)
Copyright (C) 2009 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice
Loading required package: car
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'


	The following object(s) are masked from package:car :

	 logit 


	The following object(s) are masked from package:lattice :

	 melanoma 

Nonparametric Kernel Methods for Mixed Datatypes (version 0.30-3)
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms )
> print.default( cesLandLabor ) 
$optim
$optim$par
    gamma     alpha       rho 
46.236274  1.491768 -6.564428 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      78       NA 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
          gamma     alpha       rho
gamma  38858.63 183465.63 16675.458
alpha 183465.63 866471.17 78682.178
rho    16675.46  78682.18  7146.835


$coefficients
    gamma     alpha       rho 
46.236274  1.491768 -6.564428 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.899 1189.212 1213.291 1224.102 1224.102 1239.827 1273.243 1276.191
 [9] 1237.370 1281.105 1315.504 1467.841 1528.776 1581.848 1548.924 1566.614
[17] 1648.189 1722.883 1833.450 1935.663

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Coefficients:
 gamma  alpha    rho 
46.236  1.492 -6.564 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms)

Estimation method:  Nelder-Mead 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   46.236         NA      NA       NA
alpha    1.492         NA      NA       NA
rho     -6.564         NA      NA       NA

> coef( cesLandLabor ) 
    gamma     alpha       rho 
46.236274  1.491768 -6.564428 
> vcov( cesLandLabor ) 
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLabor ) )
       Estimate Std. Error t value Pr(>|t|)
gamma 46.236274         NA      NA       NA
alpha  1.491768         NA      NA       NA
rho   -6.564428         NA      NA       NA
> 
> # variable returns to scale
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandLaborVrs )
$optim
$optim$par
     gamma      alpha        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 

$optim$value
[1] 94700.51

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL

$optim$hessian
            gamma     alpha        rho        phi
gamma    61907.71   4568388   -1160579    6600081
alpha  4568388.02 338516030  -86147948  488209129
rho   -1160578.92 -86147948   21938110 -124178175
phi    6600080.58 488209129 -124178175  707419885


$coefficients
     gamma      alpha        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 

$vcov
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1080.386 1125.789 1153.072 1167.355 1167.355 1185.138 1223.166 1228.426
 [9] 1182.734 1235.991 1276.431 1466.271 1541.166 1605.166 1563.549 1583.438
[17] 1685.304 1779.281 1920.328 2052.697

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
  gamma   alpha     rho     phi 
36.5786  0.6046 -0.9350  1.2704 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE)

Estimation method:  Nelder-Mead 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  36.5786         NA      NA       NA
alpha   0.6046         NA      NA       NA
rho    -0.9350         NA      NA       NA
phi     1.2704         NA      NA       NA

> coef( cesLandLaborVrs )
     gamma      alpha        rho        phi 
36.5786357  0.6045810 -0.9349716  1.2704379 
> vcov( cesLandLaborVrs )
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA
> coef( summary( cesLandLaborVrs ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 36.5786357         NA      NA       NA
alpha  0.6045810         NA      NA       NA
rho   -0.9349716         NA      NA       NA
phi    1.2704379         NA      NA       NA
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
     gamma      alpha        rho 
  47.50869  548.70721 -186.49980 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     758      101 

$optim$convergence
[1] 1

$optim$message
NULL

$optim$hessian
            gamma        alpha         rho
gamma 36807.96375 17.088179516 317.1172145
alpha    17.08818  0.007933225   0.1472224
rho     317.11721  0.147222377   2.7321079


$coefficients
     gamma      alpha        rho 
  47.50869  548.70721 -186.49980 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   alpha     rho 
  47.51  548.71 -186.50 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation method:  CG 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    47.51         NA      NA       NA
alpha   548.71         NA      NA       NA
rho    -186.50         NA      NA       NA

> coef( cesLandLaborCg )
     gamma      alpha        rho 
  47.50869  548.70721 -186.49980 
> vcov( cesLandLaborCg )
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborCg ) )
        Estimate Std. Error t value Pr(>|t|)
gamma   47.50869         NA      NA       NA
alpha  548.70721         NA      NA       NA
rho   -186.49980         NA      NA       NA
> 
> # using the SANN optimization method
> set.seed( 123 )
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
     gamma      alpha        rho 
37.6955089  1.0272590  0.6452962 

$optim$value
[1] 128995.3

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
            gamma      alpha       rho
gamma    58411.58   23401383   1317982
alpha 23401382.50 9514611998 538196288
rho    1317981.97  538196288  30577578


$coefficients
     gamma      alpha        rho 
37.6955089  1.0272590  0.6452962 

$vcov
              gamma         alpha           rho
gamma  1.634830e-03 -7.959175e-06  6.962362e-05
alpha -7.959175e-06  6.266523e-08 -7.599079e-07
rho    6.962362e-05 -7.599079e-07  1.040687e-05

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1109.338 1153.191 1182.809 1188.985 1188.985 1208.923 1251.673 1248.227
 [9] 1204.429 1247.373 1287.679 1439.747 1510.329 1580.205 1544.296 1574.300
[17] 1673.100 1767.230 1909.543 2044.300

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
  gamma   alpha     rho 
37.6955  1.0273  0.6453 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation method:  SANN 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma 3.770e+01  4.043e-02   932.3   <2e-16 ***
alpha 1.027e+00  2.503e-04  4103.6   <2e-16 ***
rho   6.453e-01  3.226e-03   200.0   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( cesLandLaborSann )
     gamma      alpha        rho 
37.6955089  1.0272590  0.6452962 
> vcov( cesLandLaborSann )
              gamma         alpha           rho
gamma  1.634830e-03 -7.959175e-06  6.962362e-05
alpha -7.959175e-06  6.266523e-08 -7.599079e-07
rho    6.962362e-05 -7.599079e-07  1.040687e-05
> coef( summary( cesLandLaborSann ) )
        Estimate   Std. Error   t value Pr(>|t|)
gamma 37.6955089 0.0404330343  932.2948        0
alpha  1.0272590 0.0002503302 4103.6154        0
rho    0.6452962 0.0032259684  200.0318        0
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
     gamma      alpha        rho 
  47.10913  561.14577 -149.76314 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      31        8 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
            gamma       alpha         rho
gamma 37434.99411 20.98467607 497.7089204
alpha    20.98468  0.01176313   0.2789976
rho     497.70892  0.27899764   6.6172004


$coefficients
     gamma      alpha        rho 
  47.10913  561.14577 -149.76314 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.945 1189.259 1213.340 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.420 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.524 1935.741

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   alpha     rho 
  47.11  561.15 -149.76 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation method:  BFGS 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    47.11         NA      NA       NA
alpha   561.15         NA      NA       NA
rho    -149.76         NA      NA       NA

> coef( cesLandLaborBfgs )
     gamma      alpha        rho 
  47.10913  561.14577 -149.76314 
> vcov( cesLandLaborBfgs )
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborBfgs ) )
        Estimate Std. Error t value Pr(>|t|)
gamma   47.10913         NA      NA       NA
alpha  561.14577         NA      NA       NA
rho   -149.76314         NA      NA       NA
> 
> # using the L-BFGS-B optimization method with constrained alpha
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
    gamma     alpha       rho 
49.142950  1.000000 -4.610031 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      20       20 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$optim$hessian
              gamma         alpha           rho
gamma  3.440056e+04  3.667095e+05 -7.638124e-08
alpha  3.667095e+05  3.909125e+06 -1.642429e+00
rho   -7.638124e-08 -1.642429e+00 -1.246176e-07


$coefficients
    gamma     alpha       rho 
49.142950  1.000000 -4.610031 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
gamma alpha   rho 
49.14  1.00 -4.61 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation method:  L-BFGS-B 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    49.14         NA      NA       NA
alpha     1.00         NA      NA       NA
rho      -4.61         NA      NA       NA

> coef( cesLandLaborBfgsCon )
    gamma     alpha       rho 
49.142950  1.000000 -4.610031 
> vcov( cesLandLaborBfgsCon )
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA
> coef( summary( cesLandLaborBfgsCon ) )
       Estimate Std. Error t value Pr(>|t|)
gamma 49.142950         NA      NA       NA
alpha  1.000000         NA      NA       NA
rho   -4.610031         NA      NA       NA
> 
> # Kmenta approximation
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translogUnr
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$test
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)   
1     14 0.015804                                
2     16 0.040974 -2 -0.025170 11.148 0.001270 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$translog

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         alpha           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         alpha           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
alpha -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      alpha        rho        phi 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation method:  Kmenta 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
alpha  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  1.028e+00  -0.046    0.964    
phi    1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( cesLandLaborKmenta )
        gamma         alpha           rho           phi 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         alpha           rho           phi
gamma  1.960017e-10 -7.277789e-05 -8.445991e-06  2.708347e-06
alpha -7.277789e-05  2.834394e+01  4.091235e+00 -1.297656e+00
rho   -8.445991e-06  4.091235e+00  1.056668e+00 -3.284805e-01
phi    2.708347e-06 -1.297656e+00 -3.284805e-01  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
alpha  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 1.027944e+00 -0.04573784 9.635192e-01
phi    1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> 
> 
> ## CES: Land & Intermediate Inputs
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      alpha        rho 
39.1271322  0.4565819  3.4462902 

$optim$value
[1] 165844.5

$optim$counts
function gradient 
      58       NA 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
            gamma    alpha       rho
gamma    54219.07 -1347570 -139921.5
alpha -1347570.49 33457587 3472547.5
rho    -139921.45  3472548  359901.8


$coefficients
     gamma      alpha        rho 
39.1271322  0.4565819  3.4462902 

$vcov
             gamma         alpha           rho
gamma -0.019805711 -1.029379e-03  0.0022320649
alpha -0.001029379 -7.449894e-05  0.0003186116
rho    0.002232065  3.186116e-04 -0.0022036010

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1149.443 1188.742 1212.811 1223.619 1223.619 1239.338 1272.741 1275.687
 [9] 1236.881 1280.599 1314.985 1467.262 1528.173 1581.223 1548.310 1565.992
[17] 1647.530 1722.192 1832.713 1934.885

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Coefficients:
  gamma   alpha     rho 
39.1271  0.4566  3.4463 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms)

Estimation method:  Nelder-Mead 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  39.1271         NA      NA       NA
alpha   0.4566         NA      NA       NA
rho     3.4463         NA      NA       NA

> coef( summary( cesLandInt ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 39.1271322        NaN     NaN      NaN
alpha  0.4565819        NaN     NaN      NaN
rho    3.4462902        NaN     NaN      NaN
> 
> # variable returns to scale
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE )
> print.default( cesLandIntVrs )
$optim
$optim$par
    gamma     alpha       rho       phi 
36.132869  2.315477  2.014573  1.241926 

$optim$value
[1] 97911.1

$optim$counts
function gradient 
     131       NA 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
           gamma       alpha        rho       phi
gamma   63715.32   -612346.9   586024.7   6907406
alpha -612346.87   5884379.6 -5635149.7 -66392705
rho    586024.72  -5635149.7  5396554.0  63533245
phi   6907405.73 -66392705.3 63533245.1 751235920


$coefficients
    gamma     alpha       rho       phi 
36.132869  2.315477  2.014573  1.241926 

$vcov
      gamma alpha rho phi
gamma    NA    NA  NA  NA
alpha    NA    NA  NA  NA
rho      NA    NA  NA  NA
phi      NA    NA  NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

$method
[1] "Nelder-Mead"

$fitted.values
 [1] 1081.020 1127.040 1155.472 1168.195 1168.206 1186.871 1226.729 1230.310
 [9] 1183.979 1236.201 1277.523 1463.755 1539.579 1606.298 1564.988 1587.291
[17] 1690.760 1786.560 1930.109 2064.640

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Coefficients:
 gamma  alpha    rho    phi 
36.133  2.315  2.015  1.242 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE)

Estimation method:  Nelder-Mead 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   36.133         NA      NA       NA
alpha    2.315         NA      NA       NA
rho      2.015         NA      NA       NA
phi      1.242         NA      NA       NA

> coef( summary( cesLandIntVrs ) )
       Estimate Std. Error t value Pr(>|t|)
gamma 36.132869         NA      NA       NA
alpha  2.315477         NA      NA       NA
rho    2.014573         NA      NA       NA
phi    1.241926         NA      NA       NA
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
    gamma     alpha       rho 
 53.58074 163.07101  58.92213 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     758      101 

$optim$convergence
[1] 1

$optim$message
NULL

$optim$hessian
           gamma        alpha        rho
gamma 28938.1340 -161.3704380 2275.08204
alpha  -161.3704    0.8998652  -12.68675
rho    2275.0820  -12.6867538  178.86427


$coefficients
    gamma     alpha       rho 
 53.58074 163.07101  58.92213 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
 gamma  alpha    rho 
 53.58 163.07  58.92 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation method:  CG 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    53.58         NA      NA       NA
alpha   163.07         NA      NA       NA
rho      58.92         NA      NA       NA

> coef( summary( cesLandIntCg ) )
       Estimate Std. Error t value Pr(>|t|)
gamma  53.58074         NA      NA       NA
alpha 163.07101         NA      NA       NA
rho    58.92213         NA      NA       NA
> 
> # using the SANN optimization method
> set.seed( 234 )
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandIntSann )
$optim
$optim$par
     gamma      alpha        rho 
39.4034688  0.4298509  3.8197376 

$optim$value
[1] 165834.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
            gamma    alpha       rho
gamma    53525.02 -1284707 -122051.0
alpha -1284706.94 30849975 2931148.5
rho    -122050.96  2931149  278677.3


$coefficients
     gamma      alpha        rho 
39.4034688  0.4298509  3.8197376 

$vcov
             gamma         alpha           rho
gamma  0.041405449  0.0020060414 -0.0029655475
alpha  0.002006041  0.0001473566 -0.0006713318
rho   -0.002965548 -0.0006713318  0.0057659000

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$fitted.values
 [1] 1150.128 1189.449 1213.533 1224.346 1224.346 1240.075 1273.497 1276.446
 [9] 1237.617 1281.361 1315.767 1468.134 1529.081 1582.164 1549.232 1566.926
[17] 1648.515 1723.223 1833.811 1936.045

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Coefficients:
  gamma   alpha     rho 
39.4035  0.4299  3.8197 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN")

Estimation method:  SANN 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma 39.40347    0.20348  193.65   <2e-16 ***
alpha  0.42985    0.01214   35.41   <2e-16 ***
rho    3.81974    0.07593   50.30   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( summary( cesLandIntSann ) )
        Estimate Std. Error   t value      Pr(>|t|)
gamma 39.4034688 0.20348329 193.64474  0.000000e+00
alpha  0.4298509 0.01213905  35.41058 1.173726e-274
rho    3.8197376 0.07593352  50.30370  0.000000e+00
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
    gamma     alpha       rho 
 55.44507 336.65007  48.22737 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      50       11 

$optim$convergence
[1] 0

$optim$message
NULL

$optim$hessian
           gamma       alpha        rho
gamma 27024.8177 -92.2898068 3748.78503
alpha   -92.2898   0.3151814  -12.80202
rho    3748.7850 -12.8020166  520.01085


$coefficients
    gamma     alpha       rho 
 55.44507 336.65007  48.22737 

$vcov
      gamma alpha rho
gamma    NA    NA  NA
alpha    NA    NA  NA
rho      NA    NA  NA

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$fitted.values
 [1] 1149.946 1189.260 1213.340 1224.152 1224.152 1239.878 1273.295 1276.243
 [9] 1237.420 1281.158 1315.558 1467.901 1528.838 1581.913 1548.987 1566.678
[17] 1648.256 1722.953 1833.525 1935.742

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
 gamma  alpha    rho 
 55.45 336.65  48.23 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation method:  BFGS 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    55.45         NA      NA       NA
alpha   336.65         NA      NA       NA
rho      48.23         NA      NA       NA

> coef( summary( cesLandIntBfgs ) )
       Estimate Std. Error t value Pr(>|t|)
gamma  55.44507         NA      NA       NA
alpha 336.65007         NA      NA       NA
rho    48.22737         NA      NA       NA
> 
> # using the L-BFGS-B optimization method with constrained alpha
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B", lower = c( -Inf, 0, -Inf ),
+    upper = c( Inf, 1, Inf ) )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      alpha        rho 
37.6785181  0.2645720  5.0053076 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
     128      128 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"

$optim$hessian
            gamma    alpha       rho
gamma    58519.81 -1665042 -117022.3
alpha -1665042.26 47376621 3329644.9
rho    -117022.32  3329645  234015.5


$coefficients
     gamma      alpha        rho 
37.6785181  0.2645720  5.0053076 

$vcov
            gamma         alpha          rho
gamma 0.800330440  0.0070796923  0.299483018
alpha 0.007079692  0.0007763862 -0.007506377
rho   0.299483018 -0.0075063767  0.256567492

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

$method
[1] "L-BFGS-B"

$fitted.values
 [1] 1149.949 1189.263 1213.343 1224.155 1224.155 1239.880 1273.298 1276.246
 [9] 1237.423 1281.161 1315.561 1467.904 1528.842 1581.916 1548.991 1566.682
[17] 1648.259 1722.957 1833.529 1935.746

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Coefficients:
  gamma   alpha     rho 
37.6785  0.2646  5.0053 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", lower = c(-Inf, 0, -Inf), upper = c(Inf, 
        1, Inf))

Estimation method:  L-BFGS-B 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma 37.67852    0.89461  42.117   <2e-16 ***
alpha  0.26457    0.02786   9.495   <2e-16 ***
rho    5.00531    0.50652   9.882   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( summary( cesLandIntBfgsCon ) )
        Estimate Std. Error   t value    Pr(>|t|)
gamma 37.6785181 0.89461189 42.117167 0.00000e+00
alpha  0.2645720 0.02786371  9.495218 2.19752e-21
rho    5.0053076 0.50652492  9.881661 4.99971e-23
> 
> # Kmenta approximation
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
Warning message:
In cesEst("qOutput", c("land", "qVarInput"), germanFarms, method = "Kmenta") :
  allowing for variable returns to scale in the Kmanta approximation although argument 'vrs' is 'FALSE'.
> print.default( cesLandIntKmenta )
$translogUnr
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$test
Linear hypothesis test

Hypothesis:
b_1_1 + b_1_2 = 0
b_1_2 + b_2_2 = 0

Model 1: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2
Model 2: restricted model

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     14 0.017794                              
2     16 0.032596 -2 -0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

$translog

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        alpha          rho          phi 
 0.005251082 -1.130309435 -0.227662809  1.697679744 

$vcov
             gamma      alpha         rho          phi
gamma  0.006287789  0.4447299  0.04356957 -0.002344101
alpha  0.444729932 31.5957949  3.02153597 -0.124590619
rho    0.043569573  3.0215360  0.32935388 -0.034664500
phi   -0.002344101 -0.1245906 -0.03466450  0.013322562

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

$method
[1] "Kmenta"

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.232  9646.074  9742.125 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.382  9775.171 10345.047 11280.007

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

Coefficients:
    gamma     alpha       rho       phi 
 0.005251 -1.130309 -0.227663  1.697680 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta", vrs = TRUE)

Estimation method:  Kmenta 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
alpha -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.573894  -0.397    0.692    
phi    1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
alpha -1.130309435 5.62101369 -0.20108640 8.406310e-01
rho   -0.227662809 0.57389361 -0.39669863 6.915897e-01
phi    1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.899 1189.212 1213.291 1224.102 1224.102 1239.827 1273.243 1276.191
 [9] 1237.370 1281.105 1315.504 1467.841 1528.776 1581.848 1548.924 1566.614
[17] 1648.189 1722.883 1833.450 1935.663
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1080.386 1125.789 1153.072 1167.355 1167.355 1185.138 1223.166 1228.426
 [9] 1182.734 1235.991 1276.431 1466.271 1541.166 1605.166 1563.549 1583.438
[17] 1685.304 1779.281 1920.328 2052.697
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 

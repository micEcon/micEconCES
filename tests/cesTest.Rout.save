
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: miscTools
Loading required package: micEcon

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ## CES: Land & Labor (Nelder-Mead)
> cesLandLabor <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "NM" )
> print.default( cesLandLabor ) 
$optim
$optim$par
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$optim$value
[1] 165914.1

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037

$residuals
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572248   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974

$rss
[1] 165914.1

$cov.unscaled
           gamma        delta         rho
gamma 51678531.4 -180241.6945 -949890.256
delta  -180241.7     628.6578    3313.388
rho    -949890.3    3313.3878   17468.022

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLabor )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Coefficients:
    gamma     delta       rho 
100.25014   0.06909  -3.74631 

Elasticity of Substitution: NA 

> summary( cesLandLabor )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLabor, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> print( summary( cesLandLabor ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  1.003e+02  6.548e+05       0        1
delta  6.909e-02  2.284e+03       0        1
rho   -3.746e+00  1.204e+04       0        1

Residual standard error: 91.08077 
Multiple R-squared: 0.9062694 

> summary( cesLandLabor )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLabor ) 
       gamma        delta          rho 
100.25014078   0.06909165  -3.74630543 
> vcov( cesLandLabor ) 
             gamma       delta         rho
gamma 428709900309 -1495232097 -7880010251
delta  -1495232097     5215160    27486891
rho    -7880010251    27486891   144909571
> coef( summary( cesLandLabor ) )
          Estimate Std. Error       t value  Pr(>|t|)
gamma 100.25014078 654759.422  1.531099e-04 0.9998778
delta   0.06909165   2283.673  3.025462e-05 0.9999759
rho    -3.74630543  12037.839 -3.112108e-04 0.9997517
> fitted( cesLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> residuals( cesLandLabor )
 [1] -203.487632 -226.181584 -143.394879  -51.993294  -45.673727  -53.692850
 [7]  -33.536951   12.709340  -29.343762   -2.364983   45.440228   73.339720
[13]   46.686201  114.572248   96.213902   59.881532    7.353085   33.252602
[19]   54.553849   56.856974
> 
> # variable returns to scale (Nelder-Mead)
> cesLandLaborVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandLaborVrs )
$optim
$optim$par
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$optim$value
[1] 83794.05

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838

$residuals
 [1] -140.7331268 -166.5103418  -81.4125842   -1.6012208    4.7183461
 [6]   -0.9785309   23.2756885   58.1833652   20.6281759   31.4557445
[11]   77.2667406   44.5535212    7.0171050   75.4916439   68.0891216
[16]   40.2932432  -29.4820846  -18.9667179  -24.0891708  -49.9441803

$rss
[1] 83794.05

$cov.unscaled
             gamma         delta           rho            nu
gamma 343.31007879 -1.045707e-01 -2.2492500347  4.497013e-02
delta  -0.10457068  3.189373e-05  0.0006871162 -1.318609e-05
rho    -2.24925003  6.871162e-04  0.0148421911 -2.612033e-04
nu      0.04497013 -1.318609e-05 -0.0002612033  2.012566e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
    gamma     delta       rho        nu 
233.84853   0.01535  -1.86100   1.43203 

Elasticity of Substitution: NA 

> summary( cesLandLaborVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  233.84853 1199.31946   0.195    0.845    
delta    0.01535    0.36555   0.042    0.967    
rho     -1.86100    7.88571  -0.236    0.813    
nu       1.43203    0.29038   4.932 8.16e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 64.72791 
Multiple R-squared: 0.9526618 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborVrs )
       gamma        delta          rho           nu 
233.84852805   0.01535116  -1.86099822   1.43203442 
> vcov( cesLandLaborVrs )
             gamma         delta          rho           nu
gamma 1438367.1571 -438.12004131 -9423.688898 188.41146055
delta    -438.1200    0.13362525     2.878812  -0.05524578
rho     -9423.6889    2.87881246    62.184368  -1.09436403
nu        188.4115   -0.05524578    -1.094364   0.08432055
> coef( summary( cesLandLaborVrs ) )
          Estimate   Std. Error     t value     Pr(>|t|)
gamma 233.84852805 1199.3194558  0.19498435 8.454052e-01
delta   0.01535116    0.3655479  0.04199493 9.665027e-01
rho    -1.86099822    7.8857066 -0.23599638 8.134355e-01
nu      1.43203442    0.2903800  4.93158744 8.156404e-07
> fitted( cesLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> residuals( cesLandLaborVrs )
 [1] -140.7331268 -166.5103418  -81.4125842   -1.6012208    4.7183461
 [6]   -0.9785309   23.2756885   58.1833652   20.6281759   31.4557445
[11]   77.2667406   44.5535212    7.0171050   75.4916439   68.0891216
[16]   40.2932432  -29.4820846  -18.9667179  -24.0891708  -49.9441803
> 
> # using the CG optimization method
> cesLandLaborCg <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "CG" )
> print.default( cesLandLaborCg )
$optim
$optim$par
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$optim$value
[1] 610413.5

$optim$counts
function gradient 
     641      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 

$iter
function gradient 
     641      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.8904487 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154

$residuals
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032

$rss
[1] 610748.6

$cov.unscaled
            gamma        delta          rho
gamma 1034.396378 -2.569522632 -3.466063911
delta   -2.569523  0.006384715  0.008614995
rho     -3.466064  0.008614995  0.011627993

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Coefficients:
   gamma    delta      rho 
274.3732   0.4588   0.1230 

Elasticity of Substitution: 0.8904 

> summary( cesLandLaborCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 641 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  274.3732  5620.3032   0.049    0.961
delta    0.4588    13.9633   0.033    0.974
rho      0.1230    18.8438   0.007    0.995

Residual standard error: 174.7496 
Multiple R-squared: 0.654967 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.8904    14.9412    0.06    0.952

> coef( cesLandLaborCg )
      gamma       delta         rho 
274.3731596   0.4587837   0.1230293 
> vcov( cesLandLaborCg )
            gamma       delta          rho
gamma 31587807.73 -78466.6193 -105844.6865
delta   -78466.62    194.9728     263.0798
rho    -105844.69    263.0798     355.0890
> coef( summary( cesLandLaborCg ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 274.3731596 5620.30317 0.048818213 0.9610642
delta   0.4587837   13.96327 0.032856473 0.9737890
rho     0.1230293   18.84381 0.006528901 0.9947907
> fitted( cesLandLaborCg )
 [1] 1262.946 1284.519 1288.607 1315.248 1315.248 1315.953 1317.729 1341.555
 [9] 1320.568 1365.953 1379.551 1529.581 1558.702 1561.018 1537.193 1520.006
[17] 1554.827 1580.395 1616.835 1649.154
> residuals( cesLandLaborCg )
 [1] -316.81333 -321.78893 -219.02745 -143.45128 -137.13171 -130.14268
 [7]  -78.37100  -52.99374 -112.86149  -87.54444  -18.95850   11.20282
[13]   16.33226  134.94154  107.49638  106.02497  100.21283  175.20439
[19]  270.58534  342.74032
> 
> # using the SANN optimization method
> cesLandLaborSann <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "SANN" )
> print.default( cesLandLaborSann )
$optim
$optim$par
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$optim$value
[1] 177510.9

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 

$iter
[1] 10000

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158

$residuals
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685

$rss
[1] 177510.9

$cov.unscaled
             gamma         delta          rho
gamma 11108.427425 -2.1880051743 -92.89635344
delta    -2.188005  0.0004311784   0.01831334
rho     -92.896353  0.0183133366   0.77803365

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Coefficients:
     gamma      delta        rho 
273.558496   0.008014  -2.790217 

Elasticity of Substitution: NA 

> summary( cesLandLaborSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "SANN")

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.736e+02  9.929e+03   0.028    0.978
delta  8.014e-03  1.956e+00   0.004    0.997
rho   -2.790e+00  8.310e+01  -0.034    0.973

Residual standard error: 94.21012 
Multiple R-squared: 0.8997179 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborSann )
        gamma         delta           rho 
273.558495721   0.008014374  -2.790216743 
> vcov( cesLandLaborSann )
            gamma         delta          rho
gamma 98593372.89 -19419.743388 -824505.9777
delta   -19419.74      3.826944     162.5409
rho    -824505.98    162.540885    6905.4745
> coef( summary( cesLandLaborSann ) )
           Estimate  Std. Error      t value  Pr(>|t|)
gamma 273.558495721 9929.419565  0.027550301 0.9780208
delta   0.008014374    1.956258  0.004096788 0.9967312
rho    -2.790216743   83.099184 -0.033576945 0.9732145
> fitted( cesLandLaborSann )
 [1] 1155.792 1193.791 1216.511 1228.346 1228.346 1243.063 1274.493 1278.702
 [9] 1241.068 1284.850 1317.886 1469.906 1528.928 1579.261 1546.828 1562.788
[17] 1642.165 1714.748 1822.420 1922.158
> residuals( cesLandLaborSann )
 [1] -209.659206 -231.060620 -146.931496  -56.549035  -50.229468  -57.253392
 [7]  -35.135274    9.859227  -33.361926   -6.441483   42.706870   70.878357
[13]   46.106712  116.698647   97.860794   63.243221   12.874903   40.851817
[19]   64.999852   69.735685
> 
> # using the BFGS optimization method
> cesLandLaborBfgs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandLaborBfgs )
$optim
$optim$par
      gamma       delta         rho 
89.47347640  0.07175499 -4.39599314 

$optim$value
[1] 165843.9

$optim$counts
function gradient 
     433      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma       delta         rho 
89.47347640  0.07175499 -4.39599314 

$iter
function gradient 
     433      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578

$residuals
 [1] -203.728713 -226.440899 -143.668789  -52.263267  -45.943700  -53.973092
 [7]  -33.837672   12.415704  -29.620465   -2.652005   45.136259   72.996870
[13]   46.316961  114.174128   95.826581   59.480113    6.919845   32.790074
[19]   54.049756   56.315937

$rss
[1] 165843.9

$cov.unscaled
           gamma       delta         rho
gamma 1714454192 -7742355.71 -39489576.4
delta   -7742356    34964.63    178348.3
rho    -39489576   178348.28    909950.7

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Coefficients:
   gamma    delta      rho 
89.47348  0.07175 -4.39599 

Elasticity of Substitution: NA 

> summary( cesLandLaborBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence NOT achieved after 433 function and 100 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  8.947e+01  3.770e+06       0        1
delta  7.175e-02  1.703e+04       0        1
rho   -4.396e+00  8.686e+04       0        1

Residual standard error: 91.06148 
Multiple R-squared: 0.9063091 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborBfgs )
      gamma       delta         rho 
89.47347640  0.07175499 -4.39599314 
> vcov( cesLandLaborBfgs )
              gamma        delta           rho
gamma  1.421659e+13 -64201111426 -327455207604
delta -6.420111e+10    289933489    1478898446
rho   -3.274552e+11   1478898446    7545487238
> coef( summary( cesLandLaborBfgs ) )
         Estimate Std. Error       t value  Pr(>|t|)
gamma 89.47347640 3770488.81  2.372994e-05 0.9999811
delta  0.07175499   17027.43  4.214081e-06 0.9999966
rho   -4.39599314   86864.76 -5.060732e-05 0.9999596
> fitted( cesLandLaborBfgs )
 [1] 1149.862 1189.171 1213.248 1224.060 1224.060 1239.783 1273.196 1276.145
 [9] 1237.327 1281.061 1315.456 1467.787 1528.718 1581.785 1548.863 1566.551
[17] 1648.120 1722.810 1833.371 1935.578
> residuals( cesLandLaborBfgs )
 [1] -203.728713 -226.440899 -143.668789  -52.263267  -45.943700  -53.973092
 [7]  -33.837672   12.415704  -29.620465   -2.652005   45.136259   72.996870
[13]   46.316961  114.174128   95.826581   59.480113    6.919845   32.790074
[19]   54.049756   56.315937
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandLaborBfgsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "L-BFGS-B" )
> print.default( cesLandLaborBfgsCon )
$optim
$optim$par
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      60       60 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -1.00000 

$iter
function gradient 
      60       60 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
        Inf 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.327539e+00 -2.851353e-02 -3.438986e+09
delta -2.851353e-02  6.124539e-04  7.303801e+07
rho   -3.438986e+09  7.303801e+07  2.418195e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
gamma delta   rho 
49.14  1.00 -1.00 

Elasticity of Substitution: Inf 

> summary( cesLandLaborBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 60 function and 60 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  4.914e+01  1.049e+02   0.468    0.639
delta  1.000e+00  2.253e+00   0.444    0.657
rho   -1.000e+00  4.478e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)                          NA       NA

> coef( cesLandLaborBfgsCon )
   gamma    delta      rho 
49.14295  1.00000 -1.00000 
> vcov( cesLandLaborBfgsCon )
              gamma         delta           rho
gamma  1.100745e+04 -2.364233e+02 -2.851476e+13
delta -2.364233e+02  5.078234e+00  6.056033e+11
rho   -2.851476e+13  6.056033e+11  2.005075e+27
> coef( summary( cesLandLaborBfgsCon ) )
      Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.14295 1.049164e+02  4.684011e-01 0.6394978
delta  1.00000 2.253494e+00  4.437554e-01 0.6572194
rho   -1.00000 4.477806e+13 -2.233236e-14 1.0000000
> fitted( cesLandLaborBfgsCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborBfgsCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # Kmenta approximation with CRS
> cesLandLaborKmentaCrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandLaborKmentaCrs )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F    Pr(>F)    
1     17 0.051750                                  
2     14 0.015804  3  0.035946 10.614 0.0006663 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -26.76460        21.26958       -20.26958        -6.68519         6.68519 
      eq1_b_2_2 
       -6.68519 

$coefficients
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 

$vcov
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05

$ela
E_1_2 (all) 
   1.015751 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448

$residuals
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456

$rss
[1] 2.128614e+18

$cov.unscaled
              gamma         delta           rho
gamma  5.725091e-35 -2.531622e-23  1.896296e-26
delta -2.531622e-23  1.119602e-11 -8.387752e-15
rho    1.896296e-26 -8.387752e-15  6.285538e-18

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
     gamma      delta        rho 
 2.378e-12  2.127e+01 -1.551e-02 

Elasticity of Substitution: 1.016 

> summary( cesLandLaborKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.0006662873

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  2.378e-12  2.198e-11   0.108 0.913849    
delta  2.127e+01  6.217e+00   3.421 0.000624 ***
rho   -1.551e-02  4.448e-03  -3.486 0.000490 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 326237150 
Multiple R-squared: -1.202527e+12 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all) 1.015751   0.004589   221.3   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( cesLandLaborKmentaCrs )
        gamma         delta           rho 
 2.378381e-12  2.126958e+01 -1.550637e-02 
> vcov( cesLandLaborKmentaCrs )
              gamma         delta           rho
gamma  4.833165e-22 -1.366604e-10 -9.778817e-14
delta -1.366604e-10  3.865291e+01  2.764912e-02
rho   -9.778817e-14  2.764912e-02  1.978536e-05
> coef( summary( cesLandLaborKmentaCrs ) )
           Estimate   Std. Error    t value     Pr(>|t|)
gamma  2.378381e-12 2.198446e-11  0.1081846 0.9138492274
delta  2.126958e+01 6.217146e+00  3.4211156 0.0006236481
rho   -1.550637e-02 4.448074e-03 -3.4860859 0.0004901436
> fitted( cesLandLaborKmentaCrs )
 [1]   12325757   16837641   22724773   18920176   18920176   23467316
 [7]   36515797   28321557   21388645   22493809   30376466   37616643
[13]   55984744   98323479   87885165  127854985  210576996  342586582
[19]  674471878 1211394448
> residuals( cesLandLaborKmentaCrs )
 [1]   -12324811   -16836678   -22723703   -18919004   -18918998   -23466130
 [7]   -36514557   -28320269   -21387437   -22492531   -30375106   -37615102
[13]   -55983169   -98321783   -87883520  -127853359  -210575341  -342584827
[19]  -674469990 -1211392456
> 
> # Kmenta approximation with VRS
> cesLandLaborKmenta <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    vrs = TRUE, method = "Kmenta" )
> print.default( cesLandLaborKmenta )
$translog
Estimated Translog function with 20 observations.
        a_0         a_1         a_2       b_1_1       b_1_2       b_2_2 
-16.6619242   6.6736594  47.6852700   0.4633037 -15.5762602  10.3461931 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)   
1     16 0.040974                               
2     14 0.015804  2   0.02517 11.148 0.00127 **
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       -13.5420         12.3860        -10.7303         -3.7741          3.7741 
      eq1_b_2_2 
        -3.7741 

$coefficients
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 

$vcov
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01

$ela
E_1_2 (all) 
   1.049335 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9

$residuals
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0

$rss
[1] 3.337947e+13

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.676092e-19 -1.955939e-13  1.108543e-15  3.205901e-15
delta -1.955939e-13  1.059474e-07 -5.757032e-10 -2.108674e-09
rho    1.108543e-15 -5.757032e-10  3.454249e-12  6.592558e-12
nu     3.205901e-15 -2.108674e-09  6.592558e-12  1.148068e-10

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
     gamma      delta        rho         nu 
 1.315e-06  7.481e+00 -4.702e-02  1.656e+00 

Elasticity of Substitution: 1.049 

> summary( cesLandLaborKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.001270271

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.315e-06  1.400e-05   0.094    0.925    
delta  7.481e+00  5.324e+00   1.405    0.160    
rho   -4.702e-02  3.626e-02  -1.296    0.195    
nu     1.656e+00  3.196e-01   5.180 2.22e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 1291888 
Multiple R-squared: -18857212 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)  1.04934    0.03993   26.28   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( cesLandLaborKmenta )
        gamma         delta           rho            nu 
 1.314540e-06  7.480918e+00 -4.701592e-02  1.655682e+00 
> vcov( cesLandLaborKmenta )
              gamma         delta           rho            nu
gamma  1.960017e-10 -7.277789e-05 -4.929840e-07  2.708347e-06
delta -7.277789e-05  2.834394e+01  1.929965e-01 -1.297656e+00
rho   -4.929840e-07  1.929965e-01  1.315084e-03 -9.017468e-03
nu     2.708347e-06 -1.297656e+00 -9.017468e-03  1.021663e-01
> coef( summary( cesLandLaborKmenta ) )
           Estimate   Std. Error     t value     Pr(>|t|)
gamma  1.314540e-06 1.400006e-05  0.09389528 9.251923e-01
delta  7.480918e+00 5.323903e+00  1.40515674 1.599747e-01
rho   -4.701592e-02 3.626408e-02 -1.29648715 1.948077e-01
nu     1.655682e+00 3.196346e-01  5.17992004 2.219810e-07
> fitted( cesLandLaborKmenta )
 [1]  220367.1  267862.6  318575.5  293623.9  293623.9  331938.5  427120.8
 [8]  377097.5  316142.8  337492.3  404487.3  510921.3  653420.9  900828.0
[15]  831222.5 1015749.1 1381972.3 1854547.9 2793606.8 3981968.9
> residuals( cesLandLaborKmenta )
 [1]  -219420.9  -266899.8  -317505.9  -292452.2  -292445.8  -330752.7
 [7]  -425881.5  -375808.9  -314935.1  -336213.9  -403126.7  -509380.5
[13]  -651845.8  -899132.0  -829577.8 -1014123.1 -1380317.2 -1852792.3
[19] -2791719.4 -3979977.0
> 
> # using the Levenberg-Marquardt optimization method
> cesLandLaborLm <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLandLaborLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 2.6196967015242, 4.85556569530865, -0.461292104484702 
residual sum-of-squares: 122985
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
   1.856294 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757

$residuals
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051

$rss
[1] 122985.2

$cov.unscaled
            gamma       delta          rho
gamma  13.9283777 -15.9958951  0.286083716
delta -15.9958951  18.3706636 -0.328580649
rho     0.2860837  -0.3285806  0.005878778

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
 2.6197  4.8556 -0.4613 

Elasticity of Substitution: 1.856 

> summary( cesLandLaborLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   2.6197   292.6589   0.009    0.993
delta   4.8556   336.1042   0.014    0.988
rho    -0.4613     6.0125  -0.077    0.939

Residual standard error: 78.41723 
Multiple R-squared: 0.9305214 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.856     20.718    0.09    0.929

> coef( cesLandLaborLm )
     gamma      delta        rho 
 2.6196967  4.8555657 -0.4612921 
> vcov( cesLandLaborLm )
           gamma      delta         rho
gamma  85649.233 -98362.938  1759.20351
delta -98362.938 112966.009 -2020.52824
rho     1759.204  -2020.528    36.15014
> coef( summary( cesLandLaborLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma  2.6196967 292.658902  0.008951365 0.9928579
delta  4.8555657 336.104164  0.014446610 0.9884737
rho   -0.4612921   6.012499 -0.076722196 0.9388445
> fitted( cesLandLaborLm )
 [1] 1101.247 1147.408 1179.339 1183.826 1183.826 1205.466 1251.448 1246.010
 [9] 1200.204 1243.138 1285.725 1438.512 1512.093 1585.712 1549.153 1581.147
[17] 1681.912 1777.021 1918.770 2050.757
> residuals( cesLandLaborLm )
 [1] -155.113939 -184.677530 -109.760067  -12.029328   -5.709762  -19.656299
 [7]  -12.090355   42.551082    7.502673   35.270058   74.867224  102.271807
[13]   62.941670  110.247096   95.536168   44.884402  -26.872637  -21.420720
[19]  -31.349643  -58.863051
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandLaborNewton <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandLaborNewton )
$nlm
$nlm$minimum
[1] 168419.6

$nlm$estimate
[1]  2.743532e+02  9.529823e-04 -4.039114e+00

$nlm$gradient
[1] -1.537162e+02 -1.358147e+07  2.522722e+04

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
        gamma         delta           rho 
 2.743532e+02  9.529823e-04 -4.039114e+00 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.934 1189.881 1213.603 1224.669 1224.669 1240.132 1273.050 1276.302
 [9] 1237.793 1281.522 1315.567 1467.768 1528.228 1580.668 1547.863 1565.177
[17] 1646.271 1720.526 1830.517 1932.257

$residuals
 [1] -204.800907 -227.150699 -144.023570  -52.872921  -46.553354  -54.322190
 [7]  -33.691693   12.259248  -30.086387   -3.113132   45.025277   73.016436
[13]   46.807108  115.291879   96.826333   60.854237    8.769005   35.073814
[19]   56.903382   59.636778

$rss
[1] 168419.6

$cov.unscaled
              gamma         delta           rho
gamma 117724.943519 -3.9714832249 -1.414773e+03
delta     -3.971483  0.0001340453  4.776838e-02
rho    -1414.773481  0.0477683753  1.702711e+01

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Coefficients:
     gamma      delta        rho 
274.353208   0.000953  -4.039114 

Elasticity of Substitution: NA 

> summary( cesLandLaborNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  2.744e+02  3.149e+04   0.009    0.993
delta  9.530e-04  1.062e+00   0.001    0.999
rho   -4.039e+00  3.787e+02  -0.011    0.991

Residual standard error: 91.76589 
Multiple R-squared: 0.904854 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> coef( cesLandLaborNewton )
        gamma         delta           rho 
 2.743532e+02  9.529823e-04 -4.039114e+00 
> vcov( cesLandLaborNewton )
             gamma         delta           rho
gamma 991359313.62 -33443.778066 -1.191378e+07
delta    -33443.78      1.128793  4.022565e+02
rho   -11913778.21    402.256500  1.433849e+05
> coef( summary( cesLandLaborNewton ) )
           Estimate   Std. Error       t value  Pr(>|t|)
gamma  2.743532e+02 31485.858947  0.0087135373 0.9930477
delta  9.529823e-04     1.062447  0.0008969697 0.9992843
rho   -4.039114e+00   378.662033 -0.0106668041 0.9914893
> fitted( cesLandLaborNewton )
 [1] 1150.934 1189.881 1213.603 1224.669 1224.669 1240.132 1273.050 1276.302
 [9] 1237.793 1281.522 1315.567 1467.768 1528.228 1580.668 1547.863 1565.177
[17] 1646.271 1720.526 1830.517 1932.257
> residuals( cesLandLaborNewton )
 [1] -204.800907 -227.150699 -144.023570  -52.872921  -46.553354  -54.322190
 [7]  -33.691693   12.259248  -30.086387   -3.113132   45.025277   73.016436
[13]   46.807108  115.291879   96.826333   60.854237    8.769005   35.073814
[19]   56.903382   59.636778
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandLaborPort <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandLaborPort )
$nlminb
$nlminb$par
      gamma       delta         rho 
79.35638001  0.06594526 -5.67361308 

$nlminb$objective
[1] 165832.7

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 140

$nlminb$evaluations
function gradient 
     200      141 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
      gamma       delta         rho 
79.35638001  0.06594526 -5.67361308 

$iter
[1] 140

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
         NA 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725

$residuals
 [1] -203.802832 -226.519338 -143.750453  -52.344545  -46.024979  -54.056602
 [7]  -33.925642   12.328852  -29.703291   -2.737852   45.046511   72.896103
[13]   46.209972  114.060815   95.716029   59.366765    6.798915   32.662225
[19]   53.911997   56.169281

$rss
[1] 165832.7

$cov.unscaled
              gamma        delta          rho
gamma 2857131502936 -16328879316 -90440010130
delta  -16328879316     93322187    516892630
rho    -90440010130    516892630   2863311531

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
   gamma    delta      rho 
79.35638  0.06595 -5.67361 

Elasticity of Substitution: NA 

> summary( cesLandLaborPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 140 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  7.936e+01  1.539e+08       0        1
delta  6.595e-02  8.797e+05       0        1
rho   -5.674e+00  4.873e+06       0        1

Residual standard error: 91.05841 
Multiple R-squared: 0.9063154 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)       NA         NA      NA       NA

> summary( cesLandLaborPort, ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 140 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  7.936e+01  1.539e+08       0        1
delta  6.595e-02  8.797e+05       0        1
rho   -5.674e+00  4.873e+06       0        1

Residual standard error: 91.05841 
Multiple R-squared: 0.9063154 

> print( summary( cesLandLaborPort ), ela = FALSE )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 140 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  7.936e+01  1.539e+08       0        1
delta  6.595e-02  8.797e+05       0        1
rho   -5.674e+00  4.873e+06       0        1

Residual standard error: 91.05841 
Multiple R-squared: 0.9063154 

> summary( cesLandLaborPort )$elaCov
            E_1_2 (all)
E_1_2 (all)          NA
> coef( cesLandLaborPort )
      gamma       delta         rho 
79.35638001  0.06594526 -5.67361308 
> vcov( cesLandLaborPort )
              gamma         delta           rho
gamma  2.369029e+16 -1.353931e+14 -7.498954e+14
delta -1.353931e+14  7.737933e+11  4.285884e+12
rho   -7.498954e+14  4.285884e+12  2.374153e+13
> coef( summary( cesLandLaborPort ) )
         Estimate  Std. Error       t value  Pr(>|t|)
gamma 79.35638001 153916492.1  5.155807e-07 0.9999996
delta  0.06594526    879655.2  7.496716e-08 0.9999999
rho   -5.67361308   4872528.0 -1.164409e-06 0.9999991
> fitted( cesLandLaborPort )
 [1] 1149.936 1189.250 1213.330 1224.141 1224.141 1239.867 1273.283 1276.232
 [9] 1237.409 1281.146 1315.546 1467.888 1528.825 1581.899 1548.973 1566.664
[17] 1648.241 1722.938 1833.508 1935.725
> residuals( cesLandLaborPort )
 [1] -203.802832 -226.519338 -143.750453  -52.344545  -46.024979  -54.056602
 [7]  -33.925642   12.328852  -29.703291   -2.737852   45.046511   72.896103
[13]   46.209972  114.060815   95.716029   59.366765    6.798915   32.662225
[19]   53.911997   56.169281
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandLaborPortCon <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandLaborPortCon )
$nlminb
$nlminb$par
     gamma      delta        rho 
49.1429501  1.0000000 -0.7989597 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 62

$nlminb$evaluations
function gradient 
     101       62 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000 -0.7989597 

$iter
[1] 62

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
   4.974127 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  5.757138e-01 -1.034053e-02  1.994109e+10
delta -1.034053e-02  1.857479e-04 -3.509572e+08
rho    1.994109e+10 -3.509572e+08  1.242928e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Coefficients:
 gamma  delta    rho 
49.143  1.000 -0.799 

Elasticity of Substitution: 4.974 

> summary( cesLandLaborPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 62 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)
gamma  4.914e+01  6.909e+01   0.711    0.477
delta  1.000e+00  1.241e+00   0.806    0.420
rho   -7.990e-01  3.210e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 4.974e+00  7.943e+14       0        1

> coef( cesLandLaborPortCon )
     gamma      delta        rho 
49.1429501  1.0000000 -0.7989597 
> vcov( cesLandLaborPortCon )
              gamma         delta           rho
gamma  4.773599e+03 -8.573973e+01  1.653439e+14
delta -8.573973e+01  1.540150e+00 -2.910003e+12
rho    1.653439e+14 -2.910003e+12  1.030589e+27
> coef( summary( cesLandLaborPortCon ) )
        Estimate   Std. Error       t value  Pr(>|t|)
gamma 49.1429501 6.909124e+01  7.112762e-01 0.4769131
delta  1.0000000 1.241028e+00  8.057836e-01 0.4203676
rho   -0.7989597 3.210278e+13 -2.488755e-14 1.0000000
> fitted( cesLandLaborPortCon )
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741
> residuals( cesLandLaborPortCon )
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained by hand
> cesLandLaborPortCon2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", lower = c( 0.1, 0.1, -0.5 ), upper = c( 300, 0.9, 4 ) )
> print.default( cesLandLaborPortCon2 )
$nlminb
$nlminb$par
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$nlminb$objective
[1] 174341.5

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 37

$nlminb$evaluations
function gradient 
      71       38 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
   gamma    delta      rho 
57.69045  0.90000 -0.50000 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          2 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
274.3737   0.5000   0.2500 

$lower
[1]  0.1  0.1 -0.5

$upper
[1] 300.0   0.9   4.0

$fitted.values
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552

$residuals
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776

$rss
[1] 174341.5

$cov.unscaled
           gamma       delta        rho
gamma 261.317657 -4.43884283 -16.513536
delta  -4.438843  0.07540909   0.280593
rho   -16.513536  0.28059303   1.044383

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortCon2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Coefficients:
gamma delta   rho 
57.69  0.90 -0.50 

Elasticity of Substitution: 2 

> summary( cesLandLaborPortCon2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "PORT", lower = c(0.1, 0.1, -0.5), upper = c(300, 
        0.9, 4))

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence achieved after 37 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    57.69    1509.28   0.038    0.970
delta     0.90      25.64   0.035    0.972
rho      -0.50      95.41  -0.005    0.996

Residual standard error: 93.36527 
Multiple R-squared: 0.9015085 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      2.0      381.7   0.005    0.996

> coef( cesLandLaborPortCon2 )
   gamma    delta      rho 
57.69045  0.90000 -0.50000 
> vcov( cesLandLaborPortCon2 )
           gamma       delta         rho
gamma 2277925.29 -38693.7204 -143949.714
delta  -38693.72    657.3466    2445.950
rho   -143949.71   2445.9501    9103.968
> coef( summary( cesLandLaborPortCon2 ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 57.69045 1509.27972  0.038223827 0.9695092
delta  0.90000   25.63877  0.035103086 0.9719975
rho   -0.50000   95.41471 -0.005240282 0.9958189
> fitted( cesLandLaborPortCon2 )
 [1] 1154.574 1193.198 1216.494 1227.931 1227.931 1243.068 1275.241 1279.015
 [9] 1240.889 1284.698 1318.283 1470.558 1530.246 1581.315 1548.746 1565.054
[17] 1644.779 1717.523 1825.136 1924.552
> residuals( cesLandLaborPortCon2 )
 [1] -208.441418 -230.467345 -146.915242  -56.134583  -49.815016  -57.257608
 [7]  -35.883241    9.546400  -33.182546   -6.289234   42.309738   70.226274
[13]   44.788508  114.644117   95.942997   60.977610   10.261059   38.077277
[19]   62.284747   67.341776
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandLaborPortVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandLaborPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
87.6979325  0.1936438 -0.5284431  1.8973811 

$nlminb$objective
[1] 63254.13

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 111

$nlminb$evaluations
function gradient 
     200      111 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
87.6979325  0.1936438 -0.5284431  1.8973811 

$iter
[1] 111

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   2.120635 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1060.837 1103.181 1117.976 1156.400 1156.400 1163.745 1180.016 1212.242
 [9] 1168.696 1246.592 1279.592 1560.918 1634.136 1664.681 1612.322 1596.124
[17] 1690.539 1770.047 1889.525 2001.862

$residuals
 [1] -114.704482 -140.450858  -48.397320   15.396487   21.716054   22.064846
 [7]   59.341693   76.319358   39.010675   31.816814   81.000335  -20.134129
[13]  -59.101466   31.278714   32.366752   29.907152  -35.499364  -14.447448
[19]   -2.104794   -9.967780

$rss
[1] 63254.13

$cov.unscaled
           gamma         delta           rho            nu
gamma 93.1888006 -0.2932639428 -0.6130378521  2.572020e-02
delta -0.2932639  0.0009232916  0.0019297146 -8.235450e-05
rho   -0.6130379  0.0019297146  0.0040374272 -1.657894e-04
nu     0.0257202 -0.0000823545 -0.0001657894  1.893001e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
87.6979  0.1936 -0.5284  1.8974 

Elasticity of Substitution: 2.121 

> summary( cesLandLaborPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 111 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  87.6979   542.8893   0.162    0.872    
delta   0.1936     1.7088   0.113    0.910    
rho    -0.5284     3.5734  -0.148    0.882    
nu      1.8974     0.2447   7.754 8.87e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 56.23794 
Multiple R-squared: 0.9642656 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    2.121     16.070   0.132    0.895

> coef( cesLandLaborPortVrs )
     gamma      delta        rho         nu 
87.6979325  0.1936438 -0.5284431  1.8973811 
> vcov( cesLandLaborPortVrs )
             gamma        delta           rho          nu
gamma 294728.80394 -927.5077109 -1938.8586591 81.34543391
delta   -927.50771    2.9201000     6.1031204 -0.26046309
rho    -1938.85866    6.1031204    12.7691962 -0.52434312
nu        81.34543   -0.2604631    -0.5243431  0.05987006
> coef( summary( cesLandLaborPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma 87.6979325 542.8893109  0.1615393 8.716687e-01
delta  0.1936438   1.7088300  0.1133195 9.097772e-01
rho   -0.5284431   3.5734012 -0.1478824 8.824356e-01
nu     1.8973811   0.2446836  7.7544270 8.874323e-15
> fitted( cesLandLaborPortVrs )
 [1] 1060.837 1103.181 1117.976 1156.400 1156.400 1163.745 1180.016 1212.242
 [9] 1168.696 1246.592 1279.592 1560.918 1634.136 1664.681 1612.322 1596.124
[17] 1690.539 1770.047 1889.525 2001.862
> residuals( cesLandLaborPortVrs )
 [1] -114.704482 -140.450858  -48.397320   15.396487   21.716054   22.064846
 [7]   59.341693   76.319358   39.010675   31.816814   81.000335  -20.134129
[13]  -59.101466   31.278714   32.366752   29.907152  -35.499364  -14.447448
[19]   -2.104794   -9.967780
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandLaborPortVrsCon <- cesEst( "qOutput", c( "land", "qLabor" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandLaborPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
42.8530353  0.4239466 -0.1618847  1.8838864 

$nlminb$objective
[1] 62375.27

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 144

$nlminb$evaluations
function gradient 
     200      144 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
42.8530353  0.4239466 -0.1618847  1.8838864 

$iter
[1] 144

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   1.193153 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
274.3737   0.5000   0.2500   1.0000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1059.126 1102.380 1118.235 1155.569 1155.569 1163.726 1181.453 1212.527
 [9] 1168.259 1245.626 1279.567 1559.192 1633.414 1665.542 1613.272 1598.039
[17] 1692.486 1771.543 1889.229 1998.716

$residuals
 [1] -112.992768 -139.649344  -48.656271   16.227450   22.547017   22.084091
 [7]   57.904405   76.034096   39.447292   32.782945   81.026091  -18.408084
[13]  -58.379362   30.417306   31.416702   27.991844  -37.446121  -15.943436
[19]   -1.809100   -6.821682

$rss
[1] 62375.27

$cov.unscaled
            gamma         delta          rho            nu
gamma 34.07597968 -0.2822796913 -0.377203554  1.568381e-02
delta -0.28227969  0.0023395840  0.003125245 -1.329976e-04
rho   -0.37720355  0.0031252452  0.004179045 -1.713500e-04
nu     0.01568381 -0.0001329976 -0.000171350  1.892427e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
42.8530  0.4239 -0.1619  1.8839 

Elasticity of Substitution: 1.193 

> summary( cesLandLaborPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 144 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  42.8530   325.9983   0.131    0.895    
delta   0.4239     2.7012   0.157    0.875    
rho    -0.1619     3.6102  -0.045    0.964    
nu      1.8839     0.2429   7.755 8.87e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 55.84589 
Multiple R-squared: 0.9647621 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.193      5.140   0.232    0.816

> coef( cesLandLaborPortVrsCon )
     gamma      delta        rho         nu 
42.8530353  0.4239466 -0.1618847  1.8838864 
> vcov( cesLandLaborPortVrsCon )
             gamma        delta           rho          nu
gamma 106274.92180 -880.3635993 -1176.4086789 48.91409484
delta   -880.36360    7.2966091     9.7469007 -0.41478813
rho    -1176.40868    9.7469007    13.0334541 -0.53440006
nu        48.91409   -0.4147881    -0.5344001  0.05902033
> coef( summary( cesLandLaborPortVrsCon ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 42.8530353 325.998346  0.13145170 8.954180e-01
delta  0.4239466   2.701224  0.15694615 8.752873e-01
rho   -0.1618847   3.610188 -0.04484107 9.642340e-01
nu     1.8838864   0.242941  7.75450166 8.869107e-15
> fitted( cesLandLaborPortVrsCon )
 [1] 1059.126 1102.380 1118.235 1155.569 1155.569 1163.726 1181.453 1212.527
 [9] 1168.259 1245.626 1279.567 1559.192 1633.414 1665.542 1613.272 1598.039
[17] 1692.486 1771.543 1889.229 1998.716
> residuals( cesLandLaborPortVrsCon )
 [1] -112.992768 -139.649344  -48.656271   16.227450   22.547017   22.084091
 [7]   57.904405   76.034096   39.447292   32.782945   81.026091  -18.408084
[13]  -58.379362   30.417306   31.416702   27.991844  -37.446121  -15.943436
[19]   -1.809100   -6.821682
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesLandLaborDe <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDe )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3 
111.7988915   0.4665881  -0.8278404 

$optim$bestval
[1] 212108.4

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2        par3
1   4.205953e+08 0.46596245  5.74048104
2   5.398456e+07 0.69488329  3.83814856
3   5.398456e+07 0.69488329  3.83814856
4   5.398456e+07 0.69488329  3.83814856
5   5.008255e+07 0.44220007  6.34861146
6   5.008255e+07 0.25040543  6.34861146
7   8.196142e+06 0.12893351  8.39484311
8   8.196142e+06 0.12893351  8.39484311
9   8.196142e+06 0.12893351  8.39484311
10  8.196142e+06 0.12893351  8.39484311
11  8.196142e+06 0.12893351  9.51366822
12  8.196142e+06 0.12893351  9.51366822
13  8.196142e+06 0.12893351  9.51366822
14  8.196142e+06 0.12893351  9.51366822
15  1.434442e+06 0.01767915  9.81393644
16  1.434442e+06 0.01767915  9.81393644
17  1.434442e+06 0.01767915  9.81393644
18  1.434442e+06 0.01767915  9.81393644
19  1.434442e+06 0.01767915  9.81393644
20  1.188224e+06 0.03867476  8.36080702
21  1.188224e+06 0.03867476  8.36080702
22  1.188224e+06 0.03867476  8.36080702
23  1.036369e+04 0.67670535  8.61620916
24  1.036369e+04 0.66745164  8.61620916
25  1.036369e+04 0.54322934  8.50047027
26  1.036369e+04 0.54322934  8.50047027
27  1.036369e+04 0.37858144  8.50047027
28  1.036369e+04 0.37858144  8.50047027
29  1.036369e+04 0.37858144  8.50047027
30  1.036369e+04 0.31653319  9.47999416
31  8.172875e+03 0.06124387  9.25467855
32  8.172875e+03 0.06124387  9.25467855
33  8.172875e+03 0.06124387  9.25467855
34  8.172875e+03 0.06124387  9.25467855
35  8.172875e+03 0.06124387  9.25467855
36  8.172875e+03 0.06124387  9.25467855
37  4.009896e+03 0.11884218  7.32249451
38  4.009896e+03 0.11884218  7.32249451
39  3.515457e+03 0.13621485  7.29175317
40  3.515457e+03 0.13621485  7.29175317
41  7.545202e+02 0.46352088  5.85492920
42  7.545202e+02 0.46352088  5.85492920
43  7.545202e+02 0.46352088  3.28756735
44  7.545202e+02 0.46352088  3.28756735
45  7.545202e+02 0.46352088  3.28756735
46  7.545202e+02 0.46352088  3.28756735
47  7.545202e+02 0.46352088  3.28756735
48  7.545202e+02 0.46352088  3.28756735
49  7.545202e+02 0.46352088  3.28756735
50  7.545202e+02 0.46352088  3.28756735
51  7.545202e+02 0.46352088  3.28756735
52  7.545202e+02 0.46352088  3.28756735
53  7.545202e+02 0.46352088  3.28756735
54  7.545202e+02 0.46352088  3.28756735
55  7.545202e+02 0.46352088  3.28756735
56  7.545202e+02 0.46352088  3.28756735
57  7.545202e+02 0.46352088  3.28756735
58  7.545202e+02 0.46352088  3.28756735
59  7.545202e+02 0.46352088  3.28756735
60  7.545202e+02 0.46352088  3.28756735
61  7.438786e+02 0.62041425  4.63370944
62  7.438786e+02 0.62041425  4.63370944
63  4.293537e+02 0.57053457  1.07974557
64  6.618406e+02 0.24439188  0.68470883
65  6.365447e+02 0.14643407  0.02862873
66  6.365447e+02 0.14643407  0.02862873
67  6.365447e+02 0.13365906  0.02862873
68  6.365447e+02 0.13365906  0.02862873
69  6.365447e+02 0.13365906  0.02862873
70  6.365447e+02 0.13365906  0.02862873
71  6.365447e+02 0.13365906  0.02862873
72  5.919640e+02 0.07687402 -0.44465699
73  5.919640e+02 0.07687402 -0.44465699
74  5.919640e+02 0.07687402 -0.44465699
75  5.919640e+02 0.07687402 -0.44465699
76  5.919640e+02 0.07687402 -0.44465699
77  5.919640e+02 0.07687402 -0.44465699
78  5.919640e+02 0.07687402 -0.44465699
79  5.919640e+02 0.07687402 -0.44465699
80  5.919640e+02 0.07687402 -0.44465699
81  5.919640e+02 0.07687402 -0.44465699
82  5.919640e+02 0.07687402 -0.44465699
83  5.919640e+02 0.07687402 -0.44465699
84  5.919640e+02 0.07687402 -0.44465699
85  5.919640e+02 0.07687402 -0.44465699
86  5.919640e+02 0.07687402 -0.44465699
87  5.919640e+02 0.07687402 -0.44465699
88  5.919640e+02 0.07687402 -0.44465699
89  5.919640e+02 0.07687402 -0.44465699
90  5.919640e+02 0.07687402 -0.44465699
91  5.919640e+02 0.07687402 -0.44465699
92  5.919640e+02 0.07687402 -0.44465699
93  5.919640e+02 0.07687402 -0.44465699
94  5.919640e+02 0.07687402 -0.44465699
95  5.919640e+02 0.07687402 -0.44465699
96  5.919640e+02 0.07687402 -0.44465699
97  4.735399e+02 0.10605382 -0.61844039
98  4.735399e+02 0.10605382 -0.61844039
99  4.735399e+02 0.10605382 -0.61844039
100 4.735399e+02 0.10605382 -0.61844039
101 4.735399e+02 0.10605382 -0.61844039
102 4.735399e+02 0.10605382 -0.61844039
103 2.345924e+02 0.27576062 -0.64417380
104 2.345924e+02 0.27576062 -0.64417380
105 2.345924e+02 0.27576062 -0.64417380
106 3.411996e+02 0.15461725 -0.64417380
107 3.411996e+02 0.15461725 -0.64417380
108 3.411996e+02 0.15461725 -0.64417380
109 3.411996e+02 0.15461725 -0.64417380
110 3.411996e+02 0.15461725 -0.64417380
111 3.411996e+02 0.15461725 -0.64417380
112 3.411996e+02 0.15461725 -0.64417380
113 3.411996e+02 0.15461725 -0.64417380
114 3.411996e+02 0.15461725 -0.64417380
115 3.411996e+02 0.15461725 -0.64417380
116 3.411996e+02 0.15461725 -0.64417380
117 3.411996e+02 0.15461725 -0.64417380
118 3.411996e+02 0.15461725 -0.64417380
119 3.411996e+02 0.15461725 -0.64417380
120 3.411996e+02 0.15461725 -0.64417380
121 3.411996e+02 0.15461725 -0.64417380
122 3.411996e+02 0.15461725 -0.64417380
123 3.411996e+02 0.15461725 -0.64417380
124 3.411996e+02 0.15461725 -0.64417380
125 3.411996e+02 0.15461725 -0.64417380
126 3.411996e+02 0.15461725 -0.64417380
127 3.411996e+02 0.15461725 -0.64417380
128 3.181436e+02 0.13918534 -0.78844318
129 1.730870e+02 0.28500392 -0.90196488
130 1.730870e+02 0.28500392 -0.90196488
131 1.730870e+02 0.28500392 -0.90196488
132 1.730870e+02 0.28500392 -0.90196488
133 1.730870e+02 0.28500392 -0.90196488
134 1.730870e+02 0.28500392 -0.90196488
135 1.730870e+02 0.28500392 -0.90196488
136 1.730870e+02 0.28500392 -0.90196488
137 1.730870e+02 0.28500392 -0.90196488
138 1.730870e+02 0.28500392 -0.90196488
139 1.730870e+02 0.28500392 -0.90196488
140 1.730870e+02 0.28500392 -0.90196488
141 1.730870e+02 0.28500392 -0.90196488
142 1.730870e+02 0.28500392 -0.90196488
143 1.730870e+02 0.28500392 -0.90196488
144 1.730870e+02 0.28500392 -0.90196488
145 1.730870e+02 0.28500392 -0.90196488
146 1.730870e+02 0.28500392 -0.90196488
147 1.730870e+02 0.28500392 -0.90196488
148 1.730870e+02 0.28500392 -0.90196488
149 1.730870e+02 0.28500392 -0.90196488
150 1.730870e+02 0.28500392 -0.90196488
151 1.730870e+02 0.28500392 -0.90196488
152 1.599183e+02 0.33277481 -0.78816181
153 1.599183e+02 0.33277481 -0.78816181
154 1.599183e+02 0.33277481 -0.78816181
155 1.599183e+02 0.33277481 -0.78816181
156 1.599183e+02 0.33277481 -0.78816181
157 1.599183e+02 0.33277481 -0.78816181
158 1.599183e+02 0.33277481 -0.78816181
159 1.599183e+02 0.33277481 -0.78816181
160 1.394679e+02 0.39413497 -0.72596050
161 1.394679e+02 0.39413497 -0.72596050
162 1.394679e+02 0.39413497 -0.72596050
163 1.394679e+02 0.39413497 -0.72596050
164 1.394679e+02 0.39413497 -0.72596050
165 1.394679e+02 0.39413497 -0.72596050
166 1.394679e+02 0.39413497 -0.72596050
167 1.394679e+02 0.39413497 -0.72596050
168 1.394679e+02 0.39413497 -0.72596050
169 1.394679e+02 0.39413497 -0.72596050
170 1.394679e+02 0.39413497 -0.72596050
171 1.394679e+02 0.39413497 -0.72596050
172 1.394679e+02 0.39413497 -0.72596050
173 1.394679e+02 0.39413497 -0.72596050
174 1.394679e+02 0.39413497 -0.72596050
175 1.394679e+02 0.39413497 -0.72596050
176 1.394679e+02 0.39413497 -0.72596050
177 1.394679e+02 0.39413497 -0.72596050
178 1.394679e+02 0.39413497 -0.72596050
179 1.394679e+02 0.39413497 -0.72596050
180 1.394679e+02 0.39413497 -0.72596050
181 1.394679e+02 0.39413497 -0.72596050
182 1.394679e+02 0.39413497 -0.72596050
183 1.394679e+02 0.39413497 -0.72596050
184 1.394679e+02 0.39413497 -0.72596050
185 1.394679e+02 0.39413497 -0.72596050
186 1.394679e+02 0.39413497 -0.72596050
187 1.394679e+02 0.39413497 -0.72596050
188 1.394679e+02 0.39413497 -0.72596050
189 1.394679e+02 0.39413497 -0.72596050
190 1.394679e+02 0.39413497 -0.72596050
191 1.394679e+02 0.39413497 -0.72596050
192 1.394679e+02 0.39413497 -0.72596050
193 1.394679e+02 0.39413497 -0.72596050
194 1.394679e+02 0.39413497 -0.72596050
195 1.394679e+02 0.39413497 -0.72596050
196 1.394679e+02 0.39413497 -0.72596050
197 1.394679e+02 0.39413497 -0.72596050
198 1.394679e+02 0.39413497 -0.72596050
199 1.117989e+02 0.46658813 -0.82784043
200 1.117989e+02 0.46658813 -0.82784043

$member$bestvalit
  [1] 1.063872e+19 2.614598e+17 2.614598e+17 2.614598e+17 1.457044e+17
  [6] 1.327512e+17 3.354695e+15 3.354695e+15 3.354695e+15 3.354695e+15
 [11] 3.341744e+15 3.341744e+15 3.341744e+15 3.341744e+15 9.968681e+13
 [16] 9.968681e+13 9.968681e+13 9.968681e+13 9.968681e+13 6.878188e+13
 [21] 6.878188e+13 6.878188e+13 5.741471e+09 5.700842e+09 5.276706e+09
 [26] 5.276706e+09 4.876416e+09 4.876416e+09 4.876416e+09 4.710809e+09
 [31] 2.585218e+09 2.585218e+09 2.585218e+09 2.585218e+09 2.585218e+09
 [36] 2.585218e+09 4.845902e+08 4.845902e+08 3.456011e+08 3.456011e+08
 [41] 1.362849e+06 1.362849e+06 1.072168e+06 1.072168e+06 1.072168e+06
 [46] 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06
 [51] 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06
 [56] 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06 1.072168e+06
 [61] 1.071010e+06 1.071010e+06 1.030804e+06 1.030796e+06 9.776732e+05
 [66] 9.776732e+05 9.064053e+05 9.064053e+05 9.064053e+05 9.064053e+05
 [71] 9.064053e+05 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05
 [76] 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05
 [81] 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05
 [86] 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05
 [91] 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05 7.766950e+05
 [96] 7.766950e+05 6.054125e+05 6.054125e+05 6.054125e+05 6.054125e+05
[101] 6.054125e+05 6.054125e+05 6.001783e+05 6.001783e+05 6.001783e+05
[106] 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05
[111] 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05
[116] 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05
[121] 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05 4.621268e+05
[126] 4.621268e+05 4.621268e+05 4.071819e+05 3.293844e+05 3.293844e+05
[131] 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05
[136] 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05
[141] 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05
[146] 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05 3.293844e+05
[151] 3.293844e+05 2.428971e+05 2.428971e+05 2.428971e+05 2.428971e+05
[156] 2.428971e+05 2.428971e+05 2.428971e+05 2.428971e+05 2.338004e+05
[161] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[166] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[171] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[176] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[181] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[186] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[191] 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05 2.338004e+05
[196] 2.338004e+05 2.338004e+05 2.338004e+05 2.121084e+05 2.121084e+05

$member$pop
          [,1]       [,2]       [,3]
 [1,] 194.4273 0.36859487 -0.4693114
 [2,] 186.3206 0.36911786 -0.5101754
 [3,] 442.5330 0.19741613 -0.2069146
 [4,] 111.7989 0.46658813 -0.8278404
 [5,] 383.4190 0.15830706 -0.5477822
 [6,] 689.1450 0.62938990  3.4971333
 [7,] 898.6108 0.12794641  6.7796057
 [8,] 235.7988 0.19013268 -0.9044883
 [9,] 222.3487 0.41282653 -0.2139910
[10,] 640.6577 0.09487230 -0.1742835
[11,] 404.1125 0.47710736  0.5842981
[12,] 165.0626 0.33329185 -0.7561493
[13,] 238.2638 0.52852197  0.1873233
[14,] 883.3589 0.22248332  6.8363150
[15,] 148.5038 0.39024621 -0.6855626
[16,] 170.9808 0.44389492 -0.4432644
[17,] 143.6651 0.49286344 -0.4789011
[18,] 233.7503 0.26171467 -0.6937017
[19,] 927.0680 0.04235714  8.7200443
[20,] 195.6495 0.37128552 -0.4586522
[21,] 875.1767 0.14077901  3.2616300
[22,] 139.4679 0.39413497 -0.7259605
[23,] 159.9183 0.33277481 -0.7881618
[24,] 882.5631 0.23437387  6.9967214
[25,] 304.1638 0.31188998 -0.2161811
[26,] 251.4767 0.16737035 -0.9051192
[27,] 104.3350 0.46230023 -0.7601963
[28,] 418.2402 0.11265550 -0.6787588
[29,] 876.3559 0.20392190  4.5871468
[30,] 355.8182 0.17533653 -0.5288944

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma       delta         rho 
111.7988915   0.4665881  -0.8278404 

$iter
[1] 200

$ela
E_1_2 (all) 
   5.808565 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1186.394 1223.648 1245.093 1258.489 1258.489 1272.198 1301.414 1307.549
 [9] 1270.772 1315.492 1347.326 1501.886 1559.094 1605.561 1573.417 1586.298
[17] 1662.470 1731.377 1833.300 1927.447

$residuals
 [1] -240.260940 -260.917527 -175.514109  -86.692072  -80.372505  -86.388208
 [7]  -62.055823  -18.988010  -63.065403  -37.083355   13.266665   38.898525
[13]   15.940909   90.398075   71.271909   39.733135   -7.430595   24.222960
[19]   54.120650   64.446620

$rss
[1] 212108.4

$cov.unscaled
           gamma       delta         rho
gamma 998.695395 -7.02575155 -9.46140017
delta  -7.025752  0.04943271  0.06658349
rho    -9.461400  0.06658349  0.08971157

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma    delta      rho 
111.7989   0.4666  -0.8278 

Elasticity of Substitution: 5.809 

> summary( cesLandLaborDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma  111.7989  3254.4710   0.034    0.973
delta    0.4666    22.8966   0.020    0.984
rho     -0.8278    30.8452  -0.027    0.979

Residual standard error: 102.9826 
Multiple R-squared: 0.8801727 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    5.809   1040.701   0.006    0.996

> coef( cesLandLaborDe )
      gamma       delta         rho 
111.7988915   0.4665881  -0.8278404 
> vcov( cesLandLaborDe )
            gamma       delta          rho
gamma 10591581.78 -74511.0296 -100342.1005
delta   -74511.03    524.2545     706.1457
rho    -100342.10    706.1457     951.4287
> coef( summary( cesLandLaborDe ) )
         Estimate Std. Error     t value  Pr(>|t|)
gamma 111.7988915 3254.47104  0.03435240 0.9725961
delta   0.4665881   22.89660  0.02037805 0.9837418
rho    -0.8278404   30.84524 -0.02683852 0.9785885
> fitted( cesLandLaborDe )
 [1] 1186.394 1223.648 1245.093 1258.489 1258.489 1272.198 1301.414 1307.549
 [9] 1270.772 1315.492 1347.326 1501.886 1559.094 1605.561 1573.417 1586.298
[17] 1662.470 1731.377 1833.300 1927.447
> residuals( cesLandLaborDe )
 [1] -240.260940 -260.917527 -175.514109  -86.692072  -80.372505  -86.388208
 [7]  -62.055823  -18.988010  -63.065403  -37.083355   13.266665   38.898525
[13]   15.940909   90.398075   71.271909   39.733135   -7.430595   24.222960
[19]   54.120650   64.446620
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandLaborDeVrs <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandLaborDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
12.2021592  0.7514214  0.3929132  2.0900649 

$optim$bestval
[1] 68679.18

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1        par2       par3       par4
1   2.461368e+08 0.475316574  6.9265590 1.11096461
2   2.461368e+08 0.475316574  6.9265590 1.11096461
3   2.461368e+08 0.475316574  6.9265590 1.11096461
4   2.461368e+08 0.475316574  6.9265590 1.11096461
5   1.298031e+08 0.858146628  6.8981930 0.82971262
6   1.627138e+08 0.418678463  8.7403896 0.43966625
7   1.627138e+08 0.418678463  8.7403896 0.43966625
8   1.627138e+08 0.418678463  8.7403896 0.43966625
9   6.178686e+07 0.121899260  5.6447525 1.79358992
10  2.284917e+07 0.111135424  3.4496131 2.17990669
11  2.284917e+07 0.111135424  3.4496131 2.17990669
12  2.284917e+07 0.111135424  3.4496131 2.17990669
13  2.284917e+07 0.111135424  3.4496131 2.17990669
14  1.674395e+07 0.196691145  9.1304633 0.02522545
15  1.674395e+07 0.196691145  9.1304633 0.02522545
16  1.674395e+07 0.196691145  9.1304633 0.02522545
17  1.674395e+07 0.196691145  9.1304633 0.02522545
18  1.674395e+07 0.196691145  9.1304633 0.02522545
19  1.544524e+06 0.418678463  8.7403896 0.21551263
20  1.544524e+06 0.418678463  8.7403896 0.21551263
21  1.544524e+06 0.418678463  8.7403896 0.21551263
22  1.544524e+06 0.418678463  8.7403896 0.21551263
23  1.544524e+06 0.418678463  8.7403896 0.21551263
24  1.544524e+06 0.418678463  8.7403896 0.21551263
25  1.544524e+06 0.418678463  8.7403896 0.21551263
26  1.544524e+06 0.418678463  8.7403896 0.21551263
27  1.544524e+06 0.418678463  8.7403896 0.21551263
28  1.544524e+06 0.418678463  8.7403896 0.21551263
29  1.544524e+06 0.418678463  8.7403896 0.19821888
30  1.544524e+06 0.418678463  8.7403896 0.10366054
31  1.544524e+06 0.418678463  8.7403896 0.10366054
32  1.544524e+06 0.418678463  8.7403896 0.10366054
33  2.508541e+05 0.847963280 -0.5240874 0.12401440
34  2.508541e+05 0.847963280 -0.5240874 0.12401440
35  2.508541e+05 0.847963280  6.1975540 0.16098861
36  2.508541e+05 0.847963280  6.1975540 0.16098861
37  2.508541e+05 0.847963280  6.1975540 0.16098861
38  2.508541e+05 0.847963280  6.1975540 0.16098861
39  2.508541e+05 0.847963280  6.1975540 0.13861539
40  2.508541e+05 0.004993443  6.1975540 0.13861539
41  2.508541e+05 0.004993443  6.1975540 0.13861539
42  2.508541e+05 0.004993443  6.1975540 0.13861539
43  2.508541e+05 0.004993443  6.1975540 0.13861539
44  1.608678e+05 0.387820210  9.9737127 0.13382162
45  1.608678e+05 0.387820210  9.9737127 0.13382162
46  1.608678e+05 0.387820210  9.9737127 0.13382162
47  6.749909e+04 0.062426002  6.3851872 0.17081900
48  6.749909e+04 0.062426002  6.3851872 0.17081900
49  6.749909e+04 0.062426002  7.2370854 0.12990950
50  6.749909e+04 0.062426002  7.2370854 0.12990950
51  2.190732e+02 0.506629047  7.2278263 0.01614479
52  2.190732e+02 0.617316324  7.2278263 0.01614479
53  2.190732e+02 0.617316324  7.2278263 0.01614479
54  2.190732e+02 0.617316324  6.3403664 1.46539233
55  2.190732e+02 0.617316324  6.3403664 1.46539233
56  2.190732e+02 0.617316324  6.3403664 1.46539233
57  2.190732e+02 0.854987868  6.3403664 1.46539233
58  2.190732e+02 0.960158681  6.3403664 1.46539233
59  2.190732e+02 0.960158681  6.3403664 1.46539233
60  2.190732e+02 0.960158681  6.3403664 1.46539233
61  2.190732e+02 0.960158681  6.1313936 1.46539233
62  2.190732e+02 0.960158681  6.1313936 1.46539233
63  2.190732e+02 0.960158681  6.1313936 1.46539233
64  2.190732e+02 0.960158681  6.1313936 1.46539233
65  2.190732e+02 0.960158681  6.1313936 1.46539233
66  2.190732e+02 0.960158681  6.1313936 1.46539233
67  2.190732e+02 0.960158681  4.4194847 1.46539233
68  2.190732e+02 0.960158681  4.4194847 1.46539233
69  2.190732e+02 0.960158681  4.4194847 1.46539233
70  9.591457e+02 0.262735501  6.7230900 0.62608207
71  9.591457e+02 0.262735501  4.4795716 0.62608207
72  9.591457e+02 0.355423439  4.4795716 0.62608207
73  5.917446e+02 0.137855790  8.1778732 1.83189237
74  5.917446e+02 0.137855790  8.1778732 1.83189237
75  5.917446e+02 0.137855790  6.9233913 1.83189237
76  5.917446e+02 0.137855790  6.9233913 1.83189237
77  5.917446e+02 0.137855790  6.9233913 1.83189237
78  5.917446e+02 0.137855790  6.9233913 1.83189237
79  5.917446e+02 0.137855790  6.9233913 1.83189237
80  4.915350e+02 0.228336891  8.3701424 2.14787835
81  4.915350e+02 0.228336891  8.3701424 2.14787835
82  4.915350e+02 0.228336891  8.3701424 2.14787835
83  4.915350e+02 0.228336891  8.3701424 2.14787835
84  4.915350e+02 0.419423204  8.0379071 2.14787835
85  3.824929e+02 0.508769632  9.2186719 2.55513582
86  3.824929e+02 0.508769632  9.2186719 2.55513582
87  3.824929e+02 0.508769632  9.2186719 2.55513582
88  3.824929e+02 0.508769632  9.2186719 2.55513582
89  3.824929e+02 0.508769632  9.2186719 2.55513582
90  3.824929e+02 0.508769632  9.2186719 2.55513582
91  3.824929e+02 0.508769632  9.2186719 2.55513582
92  3.824929e+02 0.508769632  9.2186719 2.55513582
93  3.824929e+02 0.508769632  9.2186719 2.55513582
94  3.824929e+02 0.508769632  9.2186719 2.55513582
95  2.243054e+02 0.706283306  7.8042600 3.01900573
96  2.243054e+02 0.706283306  7.8042600 3.01900573
97  2.243054e+02 0.706283306  7.8042600 3.01900573
98  2.243054e+02 0.706283306  7.8042600 3.01900573
99  2.243054e+02 0.714000872  7.5333723 3.01900573
100 2.243054e+02 0.714000872  7.5333723 3.01900573
101 1.220216e+01 0.739282041  0.3929132 2.09006486
102 1.220216e+01 0.739282041  0.3929132 2.09006486
103 1.220216e+01 0.739282041  0.3929132 2.09006486
104 1.220216e+01 0.739282041  0.3929132 2.09006486
105 1.220216e+01 0.739282041  0.3929132 2.09006486
106 1.220216e+01 0.739282041  0.3929132 2.09006486
107 1.220216e+01 0.739282041  0.3929132 2.09006486
108 1.220216e+01 0.739282041  0.3929132 2.09006486
109 1.220216e+01 0.739282041  0.3929132 2.09006486
110 1.220216e+01 0.739282041  0.3929132 2.09006486
111 1.220216e+01 0.739282041  0.3929132 2.09006486
112 1.220216e+01 0.739282041  0.3929132 2.09006486
113 1.220216e+01 0.739282041  0.3929132 2.09006486
114 1.220216e+01 0.739282041  0.3929132 2.09006486
115 1.220216e+01 0.739282041  0.3929132 2.09006486
116 1.220216e+01 0.739282041  0.3929132 2.09006486
117 1.220216e+01 0.739282041  0.3929132 2.09006486
118 1.220216e+01 0.739282041  0.3929132 2.09006486
119 1.220216e+01 0.739282041  0.3929132 2.09006486
120 1.220216e+01 0.739282041  0.3929132 2.09006486
121 1.220216e+01 0.739282041  0.3929132 2.09006486
122 1.220216e+01 0.739282041  0.3929132 2.09006486
123 1.220216e+01 0.739282041  0.3929132 2.09006486
124 1.220216e+01 0.739282041  0.3929132 2.09006486
125 1.220216e+01 0.739282041  0.3929132 2.09006486
126 1.220216e+01 0.739282041  0.3929132 2.09006486
127 1.220216e+01 0.739282041  0.3929132 2.09006486
128 1.220216e+01 0.739282041  0.3929132 2.09006486
129 1.220216e+01 0.739282041  0.3929132 2.09006486
130 1.220216e+01 0.739282041  0.3929132 2.09006486
131 1.220216e+01 0.739282041  0.3929132 2.09006486
132 1.220216e+01 0.739282041  0.3929132 2.09006486
133 1.220216e+01 0.739282041  0.3929132 2.09006486
134 1.220216e+01 0.739282041  0.3929132 2.09006486
135 1.220216e+01 0.739282041  0.3929132 2.09006486
136 1.220216e+01 0.739282041  0.3929132 2.09006486
137 1.220216e+01 0.739282041  0.3929132 2.09006486
138 1.220216e+01 0.739282041  0.3929132 2.09006486
139 1.220216e+01 0.739282041  0.3929132 2.09006486
140 1.220216e+01 0.739282041  0.3929132 2.09006486
141 1.220216e+01 0.739282041  0.3929132 2.09006486
142 1.220216e+01 0.739282041  0.3929132 2.09006486
143 1.220216e+01 0.739282041  0.3929132 2.09006486
144 1.220216e+01 0.739282041  0.3929132 2.09006486
145 1.220216e+01 0.739282041  0.3929132 2.09006486
146 1.220216e+01 0.739282041  0.3929132 2.09006486
147 1.220216e+01 0.739282041  0.3929132 2.09006486
148 1.220216e+01 0.739282041  0.3929132 2.09006486
149 1.220216e+01 0.739282041  0.3929132 2.09006486
150 1.220216e+01 0.739282041  0.3929132 2.09006486
151 1.220216e+01 0.739282041  0.3929132 2.09006486
152 1.220216e+01 0.739282041  0.3929132 2.09006486
153 1.220216e+01 0.739282041  0.3929132 2.09006486
154 1.220216e+01 0.739282041  0.3929132 2.09006486
155 1.220216e+01 0.739282041  0.3929132 2.09006486
156 1.220216e+01 0.745508957  0.3929132 2.09006486
157 1.220216e+01 0.745508957  0.3929132 2.09006486
158 1.220216e+01 0.745508957  0.3929132 2.09006486
159 1.220216e+01 0.745508957  0.3929132 2.09006486
160 1.220216e+01 0.745508957  0.3929132 2.09006486
161 1.220216e+01 0.745508957  0.3929132 2.09006486
162 1.220216e+01 0.745508957  0.3929132 2.09006486
163 1.220216e+01 0.745508957  0.3929132 2.09006486
164 1.220216e+01 0.745508957  0.3929132 2.09006486
165 1.220216e+01 0.745508957  0.3929132 2.09006486
166 1.220216e+01 0.745508957  0.3929132 2.09006486
167 1.220216e+01 0.745508957  0.3929132 2.09006486
168 1.220216e+01 0.745508957  0.3929132 2.09006486
169 1.220216e+01 0.745508957  0.3929132 2.09006486
170 1.220216e+01 0.745508957  0.3929132 2.09006486
171 1.220216e+01 0.745508957  0.3929132 2.09006486
172 1.220216e+01 0.745508957  0.3929132 2.09006486
173 1.220216e+01 0.745508957  0.3929132 2.09006486
174 1.220216e+01 0.745508957  0.3929132 2.09006486
175 1.220216e+01 0.745508957  0.3929132 2.09006486
176 1.220216e+01 0.745508957  0.3929132 2.09006486
177 1.220216e+01 0.745508957  0.3929132 2.09006486
178 1.220216e+01 0.745508957  0.3929132 2.09006486
179 1.220216e+01 0.745508957  0.3929132 2.09006486
180 1.220216e+01 0.751421374  0.3929132 2.09006486
181 1.220216e+01 0.751421374  0.3929132 2.09006486
182 1.220216e+01 0.751421374  0.3929132 2.09006486
183 1.220216e+01 0.751421374  0.3929132 2.09006486
184 1.220216e+01 0.751421374  0.3929132 2.09006486
185 1.220216e+01 0.751421374  0.3929132 2.09006486
186 1.220216e+01 0.751421374  0.3929132 2.09006486
187 1.220216e+01 0.751421374  0.3929132 2.09006486
188 1.220216e+01 0.751421374  0.3929132 2.09006486
189 1.220216e+01 0.751421374  0.3929132 2.09006486
190 1.220216e+01 0.751421374  0.3929132 2.09006486
191 1.220216e+01 0.751421374  0.3929132 2.09006486
192 1.220216e+01 0.751421374  0.3929132 2.09006486
193 1.220216e+01 0.751421374  0.3929132 2.09006486
194 1.220216e+01 0.751421374  0.3929132 2.09006486
195 1.220216e+01 0.751421374  0.3929132 2.09006486
196 1.220216e+01 0.751421374  0.3929132 2.09006486
197 1.220216e+01 0.751421374  0.3929132 2.09006486
198 1.220216e+01 0.751421374  0.3929132 2.09006486
199 1.220216e+01 0.751421374  0.3929132 2.09006486
200 1.220216e+01 0.751421374  0.3929132 2.09006486

$member$bestvalit
  [1] 3.974915e+18 3.974915e+18 3.974915e+18 3.974915e+18 1.119909e+18
  [6] 8.229149e+17 8.229149e+17 8.229149e+17 4.074862e+17 8.436697e+16
 [11] 8.436697e+16 8.436697e+16 8.436697e+16 5.738461e+15 5.738461e+15
 [16] 5.738461e+15 5.738461e+15 5.738461e+15 5.910516e+13 5.910516e+13
 [21] 5.910516e+13 5.910516e+13 5.910516e+13 5.910516e+13 5.910516e+13
 [26] 5.910516e+13 5.910516e+13 5.910516e+13 5.808833e+13 5.283358e+13
 [31] 5.283358e+13 5.283358e+13 2.704136e+12 2.704136e+12 1.582412e+12
 [36] 1.582412e+12 1.582412e+12 1.582412e+12 1.530425e+12 1.406453e+12
 [41] 1.406453e+12 1.406453e+12 1.406453e+12 5.800320e+11 5.800320e+11
 [46] 5.800320e+11 1.021288e+11 1.021288e+11 9.834359e+10 9.834359e+10
 [51] 3.018941e+07 3.018342e+07 3.018342e+07 1.726029e+07 1.726029e+07
 [56] 1.726029e+07 1.283773e+07 6.816345e+06 6.816345e+06 6.816345e+06
 [61] 6.330324e+06 6.330324e+06 6.330324e+06 6.330324e+06 6.330324e+06
 [66] 6.330324e+06 1.714658e+06 1.714658e+06 1.714658e+06 1.596866e+06
 [71] 1.513240e+06 1.422733e+06 7.544838e+05 7.544838e+05 7.384590e+05
 [76] 7.384590e+05 7.384590e+05 7.384590e+05 7.384590e+05 7.006623e+05
 [81] 7.006623e+05 7.006623e+05 7.006623e+05 6.505645e+05 5.469452e+05
 [86] 5.469452e+05 5.469452e+05 5.469452e+05 5.469452e+05 5.469452e+05
 [91] 5.469452e+05 5.469452e+05 5.469452e+05 5.469452e+05 5.463639e+05
 [96] 5.463639e+05 5.463639e+05 5.463639e+05 5.104715e+05 5.104715e+05
[101] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[106] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[111] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[116] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[121] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[126] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[131] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[136] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[141] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[146] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[151] 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05 3.345817e+05
[156] 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05
[161] 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05
[166] 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05
[171] 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05
[176] 1.216461e+05 1.216461e+05 1.216461e+05 1.216461e+05 6.867918e+04
[181] 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04
[186] 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04
[191] 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04
[196] 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04 6.867918e+04

$member$pop
           [,1]        [,2]       [,3]     [,4]
 [1,] 338.59690 0.458003558  6.0457925 2.618944
 [2,] 124.58036 0.475846231 -0.2112257 1.191010
 [3,] 678.11722 0.254144077  6.9511928 1.539047
 [4,] 462.93084 0.690135222  7.9674097 1.932211
 [5,] 459.27505 0.107444351  8.4701756 2.472332
 [6,] 124.49847 0.841989921  4.4726097 2.833299
 [7,] 684.43966 0.156874405  9.0284233 1.651618
 [8,] 297.70779 0.459492150  5.8154065 2.858608
 [9,]  20.34546 0.831325319  1.1095246 2.220487
[10,] 509.76242 0.119689282  9.7498731 2.266200
[11,] 295.83736 0.622394225  6.5596892 2.634262
[12,] 496.34103 0.474341286  6.1442472 1.902381
[13,] 382.49292 0.485360278  9.3742092 2.555136
[14,] 387.70355 0.769220591  4.1578567 1.592610
[15,] 190.00484 0.465194600  6.7692081 3.707813
[16,] 653.11365 0.213469982  7.8867695 1.644143
[17,] 385.68068 0.670633167  7.4512932 2.172264
[18,] 547.92850 0.426700382  9.3022734 1.926427
[19,] 187.69548 0.303016392 -0.1823020 1.340842
[20,] 533.94807 0.007484674  9.8312728 2.252805
[21,] 441.10507 0.427692627  6.4481583 2.205639
[22,] 287.82200 0.569620618  6.1196819 2.730825
[23,] 131.95050 0.752557017  1.2901619 1.612253
[24,] 465.58273 0.400559012  9.4160183 2.244954
[25,] 587.79980 0.052630941  4.3672228 1.952513
[26,] 333.94618 0.724900929  7.2133588 2.346373
[27,] 382.81154 0.796899901  7.7938082 2.023096
[28,] 389.94981 0.678585747  4.5108884 1.887106
[29,]  12.20216 0.751421374  0.3929132 2.090065
[30,] 208.83577 0.449568369  7.7303325 3.666615
[31,] 351.71606 0.669423068  8.2948767 2.456707
[32,] 335.37162 0.326906873  1.5071080 2.098929
[33,] 224.30538 0.714000872  7.5333723 3.019006
[34,] 446.22174 0.480741890  6.9649105 2.163398
[35,] 630.44793 0.383223327  2.9085741 1.406268
[36,] 631.60330 0.139260071  8.5237059 1.788176
[37,] 524.29563 0.435147257  9.1637032 1.977482
[38,] 285.29820 0.311670351  5.2898615 3.098054
[39,] 352.94306 0.549086647  6.2872640 2.502658
[40,] 418.19041 0.392775367  8.4830825 2.465797

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
12.2021592  0.7514214  0.3929132  2.0900649 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.7179198 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1045.855 1091.195 1106.186 1148.994 1148.994 1156.121 1171.347 1208.394
 [9] 1161.978 1247.497 1282.290 1595.180 1673.855 1700.520 1643.156 1618.853
[17] 1715.102 1792.542 1905.859 2009.228

$residuals
 [1]  -99.721572 -128.464444  -36.607179   22.802537   29.122104   29.689093
 [7]   68.010787   80.167328   45.728291   30.911769   78.302968  -54.396339
[13]  -98.820611   -4.560924    1.533024    7.178292  -60.062259  -36.942675
[19]  -18.439095  -17.333868

$rss
[1] 68679.18

$cov.unscaled
             gamma         delta           rho            nu
gamma  2.054805283 -4.760498e-02 -0.0833682937  3.767858e-03
delta -0.047604981  1.104639e-03  0.0019330625 -9.146888e-05
rho   -0.083368294  1.933062e-03  0.0033856460 -1.551209e-04
nu     0.003767858 -9.146888e-05 -0.0001551209  1.845635e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
12.2022  0.7514  0.3929  2.0901 

Elasticity of Substitution: 0.7179 

> summary( cesLandLaborDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  12.2022    84.0007   0.145    0.885    
delta   0.7514     1.9476   0.386    0.700    
rho     0.3929     3.4097   0.115    0.908    
nu      2.0901     0.2518   8.302   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 58.59999 
Multiple R-squared: 0.9612008 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7179     1.7574   0.409    0.683

> coef( cesLandLaborDeVrs )
     gamma      delta        rho         nu 
12.2021592  0.7514214  0.3929132  2.0900649 
> vcov( cesLandLaborDeVrs )
           gamma        delta          rho          nu
gamma 7056.11673 -163.4735436 -286.2832879 12.93866803
delta -163.47354    3.7932855    6.6380569 -0.31410038
rho   -286.28329    6.6380569   11.6261689 -0.53267875
nu      12.93867   -0.3141004   -0.5326788  0.06337835
> coef( summary( cesLandLaborDeVrs ) )
        Estimate Std. Error   t value     Pr(>|t|)
gamma 12.2021592 84.0006948 0.1452626 8.845035e-01
delta  0.7514214  1.9476359 0.3858120 6.996359e-01
rho    0.3929132  3.4097168 0.1152334 9.082601e-01
nu     2.0900649  0.2517506 8.3021256 1.022650e-16
> fitted( cesLandLaborDeVrs )
 [1] 1045.855 1091.195 1106.186 1148.994 1148.994 1156.121 1171.347 1208.394
 [9] 1161.978 1247.497 1282.290 1595.180 1673.855 1700.520 1643.156 1618.853
[17] 1715.102 1792.542 1905.859 2009.228
> residuals( cesLandLaborDeVrs )
 [1]  -99.721572 -128.464444  -36.607179   22.802537   29.122104   29.689093
 [7]   68.010787   80.167328   45.728291   30.911769   78.302968  -54.396339
[13]  -98.820611   -4.560924    1.533024    7.178292  -60.062259  -36.942675
[19]  -18.439095  -17.333868
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
    par1     par2     par3 
49.61683  0.99000 -0.99000 

$optim$bestval
[1] 166012.8

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2       par3
1   47.77068 0.8506712 -0.5465697
2   47.77068 0.8506712 -0.5465697
3   42.08974 0.9892506  0.2955056
4   42.08974 0.9892506  0.2955056
5   42.08974 0.9892506 -0.5547412
6   42.08974 0.9892506 -0.5547412
7   48.96019 0.9612270 -0.3346201
8   48.96019 0.9612270 -0.3346201
9   48.96019 0.9612270 -0.3346201
10  49.54288 0.9701569 -0.6708325
11  49.54288 0.9701569 -0.6708325
12  49.76553 0.9701869 -0.5880398
13  49.54288 0.9701569 -0.8203199
14  49.72575 0.9807876 -0.7060454
15  49.72575 0.9807876 -0.7060454
16  49.72575 0.9807876 -0.7060454
17  49.72575 0.9807876 -0.7060454
18  49.72575 0.9807876 -0.7060454
19  49.72575 0.9807876 -0.7060454
20  49.58742 0.9871658 -0.7852000
21  49.95532 0.9823197 -0.7847357
22  49.94253 0.9823197 -0.8132985
23  49.94253 0.9823197 -0.8132985
24  49.97340 0.9808714 -0.8682482
25  49.97340 0.9808714 -0.8682482
26  49.79960 0.9876288 -0.8676924
27  49.79960 0.9876288 -0.8676924
28  49.79960 0.9876288 -0.8676924
29  49.79960 0.9876288 -0.8676924
30  49.79960 0.9876288 -0.8676924
31  49.79946 0.9875803 -0.9104649
32  49.79946 0.9875803 -0.9104649
33  49.85337 0.9855605 -0.9829173
34  49.80349 0.9864619 -0.9660565
35  49.80349 0.9864619 -0.9660565
36  49.72425 0.9884341 -0.9838541
37  49.72425 0.9884341 -0.9838541
38  49.71236 0.9886541 -0.9855400
39  49.62214 0.9895607 -0.9806511
40  49.62214 0.9895607 -0.9806511
41  49.62214 0.9895607 -0.9806511
42  49.62214 0.9895607 -0.9806511
43  49.64458 0.9899095 -0.9813688
44  49.64458 0.9899095 -0.9813688
45  49.64458 0.9899095 -0.9813688
46  49.64458 0.9899095 -0.9813688
47  49.64458 0.9899095 -0.9813688
48  49.62605 0.9899095 -0.9813688
49  49.62605 0.9899095 -0.9813688
50  49.62605 0.9899095 -0.9813688
51  49.62605 0.9899095 -0.9813688
52  49.62605 0.9899095 -0.9813688
53  49.62605 0.9899095 -0.9813688
54  49.62605 0.9899095 -0.9813688
55  49.63365 0.9899417 -0.9884265
56  49.63365 0.9899417 -0.9884265
57  49.62969 0.9898398 -0.9894763
58  49.62969 0.9898398 -0.9894763
59  49.62969 0.9898398 -0.9894763
60  49.62969 0.9898398 -0.9894763
61  49.62969 0.9898398 -0.9894763
62  49.61883 0.9899975 -0.9893797
63  49.61883 0.9899975 -0.9893797
64  49.61883 0.9899975 -0.9893797
65  49.61883 0.9899975 -0.9893797
66  49.61883 0.9899975 -0.9893797
67  49.61883 0.9899975 -0.9893797
68  49.61883 0.9899975 -0.9893797
69  49.61883 0.9899975 -0.9893797
70  49.61883 0.9899975 -0.9893797
71  49.61883 0.9899975 -0.9893797
72  49.61883 0.9899984 -0.9893797
73  49.61564 0.9899971 -0.9896470
74  49.61564 0.9899971 -0.9896470
75  49.61869 0.9899986 -0.9898835
76  49.61869 0.9899986 -0.9898835
77  49.61869 0.9899986 -0.9898835
78  49.61869 0.9899986 -0.9898835
79  49.61869 0.9899986 -0.9898835
80  49.61726 0.9899996 -0.9897616
81  49.61627 0.9899963 -0.9899227
82  49.61726 0.9899996 -0.9899596
83  49.61726 0.9899996 -0.9899596
84  49.61726 0.9899996 -0.9899596
85  49.61726 0.9899996 -0.9899596
86  49.61726 0.9899996 -0.9899596
87  49.61726 0.9899996 -0.9899596
88  49.61726 0.9899996 -0.9899596
89  49.61726 0.9899996 -0.9899596
90  49.61726 0.9899996 -0.9899596
91  49.61705 0.9899998 -0.9899933
92  49.61705 0.9899998 -0.9899933
93  49.61705 0.9899998 -0.9899933
94  49.61705 0.9899998 -0.9899933
95  49.61711 0.9900000 -0.9899983
96  49.61711 0.9900000 -0.9899983
97  49.61711 0.9900000 -0.9899983
98  49.61711 0.9900000 -0.9899983
99  49.61711 0.9900000 -0.9899983
100 49.61702 0.9900000 -0.9899993
101 49.61702 0.9900000 -0.9899993
102 49.61702 0.9900000 -0.9899993
103 49.61702 0.9900000 -0.9899993
104 49.61702 0.9900000 -0.9899993
105 49.61702 0.9900000 -0.9899993
106 49.61702 0.9900000 -0.9899993
107 49.61702 0.9900000 -0.9899993
108 49.61702 0.9900000 -0.9899993
109 49.61702 0.9900000 -0.9899993
110 49.61702 0.9900000 -0.9899993
111 49.61702 0.9900000 -0.9899993
112 49.61702 0.9900000 -0.9899993
113 49.61702 0.9900000 -0.9899993
114 49.61696 0.9900000 -0.9899999
115 49.61696 0.9900000 -0.9899999
116 49.61683 0.9900000 -0.9900000
117 49.61683 0.9900000 -0.9900000
118 49.61683 0.9900000 -0.9900000
119 49.61683 0.9900000 -0.9900000
120 49.61683 0.9900000 -0.9900000
121 49.61680 0.9900000 -0.9899998
122 49.61680 0.9900000 -0.9899998
123 49.61686 0.9900000 -0.9899999
124 49.61679 0.9900000 -0.9900000
125 49.61683 0.9900000 -0.9900000
126 49.61683 0.9900000 -0.9900000
127 49.61683 0.9900000 -0.9900000
128 49.61683 0.9900000 -0.9900000
129 49.61683 0.9900000 -0.9900000
130 49.61683 0.9900000 -0.9900000
131 49.61684 0.9900000 -0.9900000
132 49.61684 0.9900000 -0.9900000
133 49.61683 0.9900000 -0.9900000
134 49.61683 0.9900000 -0.9900000
135 49.61683 0.9900000 -0.9900000
136 49.61684 0.9900000 -0.9900000
137 49.61683 0.9900000 -0.9900000
138 49.61683 0.9900000 -0.9900000
139 49.61683 0.9900000 -0.9900000
140 49.61682 0.9900000 -0.9900000
141 49.61682 0.9900000 -0.9900000
142 49.61682 0.9900000 -0.9900000
143 49.61683 0.9900000 -0.9900000
144 49.61683 0.9900000 -0.9900000
145 49.61683 0.9900000 -0.9900000
146 49.61683 0.9900000 -0.9900000
147 49.61683 0.9900000 -0.9900000
148 49.61683 0.9900000 -0.9900000
149 49.61683 0.9900000 -0.9900000
150 49.61683 0.9900000 -0.9900000
151 49.61683 0.9900000 -0.9900000
152 49.61683 0.9900000 -0.9900000
153 49.61683 0.9900000 -0.9900000
154 49.61683 0.9900000 -0.9900000
155 49.61683 0.9900000 -0.9900000
156 49.61683 0.9900000 -0.9900000
157 49.61683 0.9900000 -0.9900000
158 49.61683 0.9900000 -0.9900000
159 49.61683 0.9900000 -0.9900000
160 49.61683 0.9900000 -0.9900000
161 49.61683 0.9900000 -0.9900000
162 49.61683 0.9900000 -0.9900000
163 49.61684 0.9900000 -0.9900000
164 49.61683 0.9900000 -0.9900000
165 49.61683 0.9900000 -0.9900000
166 49.61683 0.9900000 -0.9900000
167 49.61683 0.9900000 -0.9900000
168 49.61683 0.9900000 -0.9900000
169 49.61683 0.9900000 -0.9900000
170 49.61683 0.9900000 -0.9900000
171 49.61683 0.9900000 -0.9900000
172 49.61683 0.9900000 -0.9900000
173 49.61683 0.9900000 -0.9900000
174 49.61683 0.9900000 -0.9900000
175 49.61683 0.9900000 -0.9900000
176 49.61683 0.9900000 -0.9900000
177 49.61683 0.9900000 -0.9900000
178 49.61683 0.9900000 -0.9900000
179 49.61683 0.9900000 -0.9900000
180 49.61683 0.9900000 -0.9900000
181 49.61683 0.9900000 -0.9900000
182 49.61683 0.9900000 -0.9900000
183 49.61683 0.9900000 -0.9900000
184 49.61683 0.9900000 -0.9900000
185 49.61683 0.9900000 -0.9900000
186 49.61683 0.9900000 -0.9900000
187 49.61683 0.9900000 -0.9900000
188 49.61683 0.9900000 -0.9900000
189 49.61683 0.9900000 -0.9900000
190 49.61683 0.9900000 -0.9900000
191 49.61683 0.9900000 -0.9900000
192 49.61683 0.9900000 -0.9900000
193 49.61683 0.9900000 -0.9900000
194 49.61683 0.9900000 -0.9900000
195 49.61683 0.9900000 -0.9900000
196 49.61683 0.9900000 -0.9900000
197 49.61683 0.9900000 -0.9900000
198 49.61683 0.9900000 -0.9900000
199 49.61683 0.9900000 -0.9900000
200 49.61683 0.9900000 -0.9900000

$member$bestvalit
  [1] 2369620.7 2369620.7 1603097.5 1603097.5 1188221.3 1188221.3  400321.6
  [8]  400321.6  400321.6  205213.1  205213.1  203071.9  193018.9  172761.1
 [15]  172761.1  172761.1  172761.1  172761.1  172761.1  167647.2  167100.8
 [22]  166961.2  166961.2  166909.6  166909.6  166152.7  166152.7  166152.7
 [29]  166152.7  166152.7  166126.0  166126.0  166105.7  166095.5  166095.5
 [36]  166059.8  166059.8  166054.2  166032.5  166032.5  166032.5  166032.5
 [43]  166025.8  166025.8  166025.8  166025.8  166025.8  166019.1  166019.1
 [50]  166019.1  166019.1  166019.1  166019.1  166019.1  166017.7  166017.7
 [57]  166016.4  166016.4  166016.4  166016.4  166016.4  166013.2  166013.2
 [64]  166013.2  166013.2  166013.2  166013.2  166013.2  166013.2  166013.2
 [71]  166013.2  166013.2  166013.0  166013.0  166012.9  166012.9  166012.9
 [78]  166012.9  166012.9  166012.9  166012.9  166012.8  166012.8  166012.8
 [85]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [92]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
 [99]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[106]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[113]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[120]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[127]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[134]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[141]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[148]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[155]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[162]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[169]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[176]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[183]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[190]  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8  166012.8
[197]  166012.8  166012.8  166012.8  166012.8

$member$pop
          [,1] [,2]  [,3]
 [1,] 49.61683 0.99 -0.99
 [2,] 49.61683 0.99 -0.99
 [3,] 49.61683 0.99 -0.99
 [4,] 49.61683 0.99 -0.99
 [5,] 49.61683 0.99 -0.99
 [6,] 49.61683 0.99 -0.99
 [7,] 49.61683 0.99 -0.99
 [8,] 49.61683 0.99 -0.99
 [9,] 49.61683 0.99 -0.99
[10,] 49.61683 0.99 -0.99
[11,] 49.61683 0.99 -0.99
[12,] 49.61683 0.99 -0.99
[13,] 49.61683 0.99 -0.99
[14,] 49.61683 0.99 -0.99
[15,] 49.61683 0.99 -0.99
[16,] 49.61683 0.99 -0.99
[17,] 49.61683 0.99 -0.99
[18,] 49.61683 0.99 -0.99
[19,] 49.61683 0.99 -0.99
[20,] 49.61683 0.99 -0.99
[21,] 49.61683 0.99 -0.99
[22,] 49.61683 0.99 -0.99
[23,] 49.61683 0.99 -0.99
[24,] 49.61683 0.99 -0.99
[25,] 49.61683 0.99 -0.99
[26,] 49.61683 0.99 -0.99
[27,] 49.61683 0.99 -0.99
[28,] 49.61683 0.99 -0.99
[29,] 49.61683 0.99 -0.99
[30,] 49.61683 0.99 -0.99

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.61683  0.99000 -0.99000 

$iter
[1] 200

$ela
E_1_2 (all) 
        100 

$call
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505

$residuals
 [1] -203.915909 -226.616322 -143.829363  -52.437991  -46.118424  -54.136476
 [7]  -33.977296   12.258408  -29.789582   -2.826017   44.976902   72.827184
[13]   46.168855  114.063679   95.711301   59.392018    6.863191   32.766934
[19]   54.076596   56.389279

$rss
[1] 166012.8

$cov.unscaled
            gamma      delta         rho
gamma  2206.43823 -64.363587 -2181.17772
delta   -64.36359   1.877625    63.63713
rho   -2181.17772  63.637129  2157.45029

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.62  0.99 -0.99 

Elasticity of Substitution: 100 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qLabor"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma    49.62    4279.58   0.012    0.991
delta     0.99     124.84   0.008    0.994
rho      -0.99    4231.81   0.000    1.000

Residual standard error: 91.10784 
Multiple R-squared: 0.9062137 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      100   42318097       0        1

> coef( cesLandLaborDe2 )
   gamma    delta      rho 
49.61683  0.99000 -0.99000 
> vcov( cesLandLaborDe2 )
            gamma      delta         rho
gamma  18314844.8 -534258.83 -18105166.5
delta   -534258.8   15585.49    528228.8
rho   -18105166.5  528228.77  17908213.6
> coef( summary( cesLandLaborDe2 ) )
      Estimate Std. Error       t value  Pr(>|t|)
gamma 49.61683  4279.5846  0.0115938432 0.9907497
delta  0.99000   124.8418  0.0079300336 0.9936728
rho   -0.99000  4231.8097 -0.0002339425 0.9998133
> fitted( cesLandLaborDe2 )
 [1] 1150.049 1189.347 1213.409 1224.234 1224.234 1239.946 1273.335 1276.303
 [9] 1237.496 1281.235 1315.616 1467.957 1528.866 1581.896 1548.978 1566.639
[17] 1648.177 1722.833 1833.344 1935.505
> residuals( cesLandLaborDe2 )
 [1] -203.915909 -226.616322 -143.829363  -52.437991  -46.118424  -54.136476
 [7]  -33.977296   12.258408  -29.789582   -2.826017   44.976902   72.827184
[13]   46.168855  114.063679   95.711301   59.392018    6.863191   32.766934
[19]   54.076596   56.389279
> 
> # Land & Labor with constant returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # Land & Labor with variable returns to scale (nls)
> try( cesLandLaborNls <- cesEst( "qOutput", c( "land", "qLabor" ), germanFarms,
+    method = "nls", vrs = TRUE ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ## CES: Land & Intermediate Inputs (Nelder-Mead)
> cesLandInt <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "NM" )
> print.default( cesLandInt )
$optim
$optim$par
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$optim$value
[1] 165837.1

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
32.2112443  0.2007986  3.8002155 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   0.208324 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.991 1189.308 1213.389 1224.202 1224.202 1239.928 1273.347 1276.294
 [9] 1237.470 1281.209 1315.611 1467.960 1528.900 1581.976 1549.047 1566.737
[17] 1648.314 1723.010 1833.584 1935.804

$residuals
 [1] -203.857692 -226.577458 -143.809367  -52.405382  -46.085619  -54.118090
 [7]  -33.988813   12.266519  -29.764120   -2.800311   44.981721   72.823807
[13]   46.134322  113.983604   95.642459   59.293843    6.726339   32.589395
[19]   53.836272   56.089539

$rss
[1] 165837.1

$cov.unscaled
          gamma      delta       rho
gamma 823971532 23546905.8 -47474415
delta  23546906   672910.1  -1356720
rho   -47474415 -1356720.4   2735648

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandInt )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Coefficients:
  gamma   delta     rho 
32.2112  0.2008  3.8002 

Elasticity of Substitution: 0.2083 

> summary( cesLandInt )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "NM")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.221e+01  2.614e+06       0        1
delta 2.008e-01  7.470e+04       0        1
rho   3.800e+00  1.506e+05       0        1

Residual standard error: 91.05962 
Multiple R-squared: 0.9063129 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.2083  6536.3378       0        1

> coef( summary( cesLandInt ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 32.2112443 2613857.75 1.232326e-05 0.9999902
delta  0.2007986   74697.21 2.688167e-06 0.9999979
rho    3.8002155  150610.74 2.523203e-05 0.9999799
> 
> # variable returns to scale (Nelder-Mead)
> cesLandIntVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "Nelder-Mead" )
> print.default( cesLandIntVrs )
$optim
$optim$par
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$optim$value
[1] 71996.09

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
1.00222243 0.02172708 1.68395638 1.31338920 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3725843 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1071.232 1132.942 1158.581 1188.294 1185.925 1206.370 1248.780 1241.706
 [9] 1197.131 1247.181 1298.188 1498.943 1584.844 1643.849 1577.764 1587.232
[17] 1662.708 1740.882 1877.201 2014.367

$residuals
 [1] -125.098800 -170.212010  -89.001525  -16.497694   -7.809181  -20.559639
 [7]   -9.421852   46.854482   10.575676   31.227691   62.404207   41.840784
[13]   -9.809586   52.110575   66.925476   38.799490   -7.667922   14.717864
[19]   10.219763  -22.473193

$rss
[1] 71996.09

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.557365e-02  2.381767e-03 -3.596108e-02 -5.423481e-05
delta  2.381767e-03  2.236163e-04 -3.380880e-03 -2.652909e-06
rho   -3.596108e-02 -3.380880e-03  5.113017e-02  3.444284e-05
nu    -5.423481e-05 -2.652909e-06  3.444284e-05  3.443412e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Coefficients:
  gamma   delta     rho      nu 
1.00222 0.02173 1.68396 1.31339 

Elasticity of Substitution: 0.3726 

> summary( cesLandIntVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead")

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.00222    9.59480   0.104    0.917    
delta  0.02173    0.89720   0.024    0.981    
rho    1.68396   13.56682   0.124    0.901    
nu     1.31339    0.11134  11.797   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 59.99837 
Multiple R-squared: 0.9593269 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3726     1.8833   0.198    0.843

> coef( summary( cesLandIntVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 1.00222243  9.5947980  0.10445477 9.168085e-01
delta 0.02172708  0.8972040  0.02421643 9.806800e-01
rho   1.68395638 13.5668208  0.12412314 9.012178e-01
nu    1.31338920  0.1113356 11.79667220 4.060538e-32
> 
> # using the CG optimization method
> cesLandIntCg <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "CG" )
> print.default( cesLandIntCg )
$optim
$optim$par
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$optim$value
[1] 257636.4

$optim$counts
function gradient 
     642      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
13.6204547  0.4822055  0.2903920 

$iter
function gradient 
     642      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.7749583 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1152.384 1210.600 1228.548 1263.218 1259.609 1276.387 1310.081 1297.303
 [9] 1264.781 1301.155 1345.806 1501.400 1568.778 1604.872 1544.337 1544.922
[17] 1587.983 1638.166 1731.911 1827.097

$residuals
 [1] -206.251177 -247.869497 -158.968377  -91.421443  -81.493408  -90.577085
 [7]  -70.722854   -8.741790  -57.074590  -22.746935   14.786341   39.384578
[13]    6.256262   91.087268  100.352431   81.108751   67.057276  117.433842
[19]  155.508817  164.796529

$rss
[1] 257689.4

$cov.unscaled
           gamma       delta         rho
gamma 12.0755050  0.58270901 -0.74897014
delta  0.5827090  0.02812166 -0.03614913
rho   -0.7489701 -0.03614913  0.04647293

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Coefficients:
  gamma   delta     rho 
13.6205  0.4822  0.2904 

Elasticity of Substitution: 0.775 

> summary( cesLandIntCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG")

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Convergence NOT achieved after 642 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  13.6205   394.4446   0.035    0.972
delta   0.4822    19.0350   0.025    0.980
rho     0.2904    24.4700   0.012    0.991

Residual standard error: 113.5098 
Multiple R-squared: 0.8544223 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.775     14.696   0.053    0.958

> coef( summary( cesLandIntCg ) )
        Estimate Std. Error    t value  Pr(>|t|)
gamma 13.6204547  394.44456 0.03453072 0.9724539
delta  0.4822055   19.03504 0.02533252 0.9797897
rho    0.2903920   24.46996 0.01186728 0.9905315
> 
> # using the SANN optimization method
> cesLandIntSann <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "SANN", random.seed = 234 )
> print.default( cesLandIntSann )
$optim
$optim$par
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$optim$value
[1] 166684.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma       delta         rho 
13.14842134  0.02100585  2.92470954 

$iter
[1] 10000

$ela
E_1_2 (all) 
  0.2547959 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.943 1190.545 1214.567 1225.674 1225.634 1241.385 1274.835 1277.599
 [9] 1238.821 1282.504 1317.060 1469.574 1530.640 1583.553 1550.211 1567.640
[17] 1648.547 1722.757 1833.028 1935.182

$residuals
 [1] -204.809926 -227.814947 -144.988290  -53.877173  -47.517880  -55.575364
 [7]  -35.477513   10.961512  -31.114354   -4.095907   43.532481   71.209727
[13]   44.394536  112.405974   94.477967   58.391324    6.492475   32.842722
[19]   54.392046   56.711874

$rss
[1] 166684.4

$cov.unscaled
           gamma      delta         rho
gamma 5004.97365 41.3989310 -650.115158
delta   41.39893  0.3424515   -5.378114
rho   -650.11516 -5.3781142   84.469514

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Coefficients:
   gamma    delta      rho 
13.14842  0.02101  2.92471 

Elasticity of Substitution: 0.2548 

> summary( cesLandIntSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", random.seed = 234)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 1.315e+01  6.459e+03   0.002    0.998
delta 2.101e-02  5.342e+01   0.000    1.000
rho   2.925e+00  8.390e+02   0.003    0.997

Residual standard error: 91.29195 
Multiple R-squared: 0.9058342 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.2548    54.4713   0.005    0.996

> coef( summary( cesLandIntSann ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.14842134 6458.52567 0.0020358240 0.9983756
delta  0.02100585   53.42346 0.0003931951 0.9996863
rho    2.92470954  839.03966 0.0034857822 0.9972188
> 
> # using the BFGS optimization method
> cesLandIntBfgs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "BFGS" )
> print.default( cesLandIntBfgs )
$optim
$optim$par
     gamma      delta        rho 
35.4689017  0.2380758  4.4006271 

$optim$value
[1] 165833

$optim$counts
function gradient 
     421      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
35.4689017  0.2380758  4.4006271 

$iter
function gradient 
     421      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.1851637 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.002 1189.319 1213.400 1224.212 1224.212 1239.939 1273.358 1276.306
 [9] 1237.481 1281.221 1315.623 1467.973 1528.914 1581.991 1549.063 1566.755
[17] 1648.336 1723.037 1833.613 1935.836

$residuals
 [1] -203.869429 -226.588425 -143.820938  -52.415790  -46.096201  -54.128778
 [7]  -33.999824   12.254645  -29.775249   -2.812296   44.969951   72.810661
[13]   46.120892  113.968704   95.626086   59.275944    6.703855   32.563227
[19]   53.806853   56.058282

$rss
[1] 165833

$cov.unscaled
            gamma      delta         rho
gamma 48986734141 1679901631 -2999992502
delta  1679901631   57608970  -102880239
rho   -2999992502 -102880239   183741916

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Coefficients:
  gamma   delta     rho 
35.4689  0.2381  4.4006 

Elasticity of Substitution: 0.1852 

> summary( cesLandIntBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS")

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Convergence NOT achieved after 421 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.547e+01  2.015e+07       0        1
delta 2.381e-01  6.911e+05       0        1
rho   4.401e+00  1.234e+06       0        1

Residual standard error: 91.05851 
Multiple R-squared: 0.9063152 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.852e-01  4.232e+04       0        1

> coef( summary( cesLandIntBfgs ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 35.4689017 20153932.0 1.759900e-06 0.9999986
delta  0.2380758   691139.3 3.444686e-07 0.9999997
rho    4.4006271  1234311.2 3.565249e-06 0.9999972
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesLandIntBfgsCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "L-BFGS-B" )
> print.default( cesLandIntBfgsCon )
$optim
$optim$par
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      24       24 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho 
49.1429501  1.0000000  0.6510633 

$iter
function gradient 
      24       24 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.6056703 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  5.112695e-01  7.728997e-03 -2.391270e+10
delta  7.728997e-03  1.170254e-04 -2.778032e+08
rho   -2.391270e+10 -2.778032e+08  4.216215e+22

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Coefficients:
  gamma   delta     rho 
49.1430  1.0000  0.6511 

Elasticity of Substitution: 0.6057 

> summary( cesLandIntBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B")

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Convergence achieved after 24 function and 24 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  6.511e+01   0.755     0.45
delta 1.000e+00  9.851e-01   1.015     0.31
rho   6.511e-01  1.870e+13   0.000     1.00

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 6.057e-01  6.859e+12       0        1

> coef( summary( cesLandIntBfgsCon ) )
        Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.1429501 6.510954e+01 7.547735e-01 0.4503849
delta  1.0000000 9.850533e-01 1.015173e+00 0.3100231
rho    0.6510633 1.869739e+13 3.482108e-14 1.0000000
> 
> # Kmenta approximation with CRS
> cesLandIntKmentaCrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta" )
> print.default( cesLandIntKmentaCrs )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
a_1  + a_2 = 1
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F   Pr(>F)    
1     17 0.107030                                 
2     14 0.017794  3  0.089235 23.402 1.02e-05 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
       18.12806         9.94637        -8.94637         2.80556        -2.80556 
      eq1_b_2_2 
        2.80556 

$coefficients
       gamma        delta          rho 
7.463081e+07 9.946367e+00 3.152891e-02 

$vcov
              gamma         delta           rho
gamma  3.667606e+18  3.152674e+10 -9.754073e+07
delta  3.152674e+10  2.710399e+02 -8.384470e-01
rho   -9.754073e+07 -8.384470e-01  2.594122e-03

$ela
E_1_2 (all) 
  0.9694348 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  5.797421  4.768829  5.259662  4.020871  4.192944  4.217838  4.365911
 [8]  5.224878  4.674069  5.312756  4.906876  5.488607  5.452881  6.664272
[15]  8.415676  9.989444 14.746590 18.676873 21.859112 23.329536

$residuals
 [1]  940.3356  957.9617 1064.3195 1167.7756 1173.9231 1181.5922 1234.9919
 [8] 1283.3360 1203.0321 1273.0958 1355.6857 1535.2955 1569.5818 1689.2951
[15] 1636.2734 1616.0417 1640.2933 1736.9229 1865.5612 1968.5645

$rss
[1] 41177199

$cov.unscaled
             gamma        delta          rho
gamma 3.934483e+19 5.390935e+11 1.955727e+09
delta 5.390935e+11 7.386815e+03 2.679956e+01
rho   1.955727e+09 2.679956e+01 9.723890e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmentaCrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Coefficients:
    gamma     delta       rho 
7.463e+07 9.946e+00 3.153e-02 

Elasticity of Substitution: 0.9694 

> summary( cesLandIntKmentaCrs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 1.019788e-05

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 7.463e+07  1.915e+09   0.039    0.969
delta 9.946e+00  1.646e+01   0.604    0.546
rho   3.153e-02  5.093e-02   0.619    0.536

Residual standard error: 1434.873 
Multiple R-squared: -22.26242 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)    
E_1_2 (all)  0.96943    0.04787   20.25   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

> coef( summary( cesLandIntKmentaCrs ) )
          Estimate   Std. Error    t value  Pr(>|t|)
gamma 7.463081e+07 1.915099e+09 0.03896968 0.9689146
delta 9.946367e+00 1.646329e+01 0.60415436 0.5457410
rho   3.152891e-02 5.093252e-02 0.61903301 0.5358946
> 
> # Kmenta approximation with VRS
> cesLandIntKmenta <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Kmenta", vrs = TRUE )
> print.default( cesLandIntKmenta )
$translog
Estimated Translog function with 20 observations.
         a_0          a_1          a_2        b_1_1        b_1_2        b_2_2 
-110.3756140   -0.9209255   35.4144570   -2.5638577    1.6354298   -6.1874110 

$testKmenta
Linear hypothesis test

Hypothesis:
b_1_1  + b_1_2 = 0
b_1_2  + b_2_2 = 0

Model 1: restricted model
Model 2: y ~ 1 + a_1 + a_2 + b_1_1 + b_1_2 + b_2_2

  Res.Df      RSS Df Sum of Sq      F  Pr(>F)  
1     16 0.032596                              
2     14 0.017794  2  0.014802 5.8227 0.01445 *
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

$kmenta

systemfit results 
method: OLS 

Coefficients:
eq1_(Intercept)         eq1_a_1         eq1_a_2       eq1_b_1_1       eq1_b_1_2 
      -5.249321       -1.918903        3.616583       -0.930653        0.930653 
      eq1_b_2_2 
      -0.930653 

$coefficients
       gamma        delta          rho           nu 
 0.005251082 -1.130309419 -0.227662812  1.697679744 

$vcov
             gamma      delta         rho           nu
gamma  0.006287790  0.4447299 -0.07809453 -0.002344101
delta  0.444729948 31.5957947 -5.54483746 -0.124590618
rho   -0.078094532 -5.5448375  0.97320595  0.022743064
nu    -0.002344101 -0.1245906  0.02274306  0.013322562

$ela
E_1_2 (all) 
   1.294771 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

$method
[1] "Kmenta"

$multErr
[1] FALSE

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1]  7320.364  8738.454  8678.555 10194.811  9971.969 10227.260 10655.085
 [8]  9744.231  9646.074  9742.124 10774.104 12960.007 14235.983 13820.680
[15] 11673.142 10947.650 10010.381  9775.171 10345.047 11280.007

$residuals
 [1]  -6374.231  -7775.724  -7608.976  -9023.014  -8793.853  -9041.450
 [7]  -9415.727  -8455.670  -8438.368  -8463.716  -9413.511 -11419.223
[13] -12660.948 -12124.721 -10028.453  -9321.619  -8355.342  -8019.571
[19]  -8457.627  -9288.113

$rss
[1] 1708187953

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.231400e-07  2.790747e-05  3.716973e-06 -1.091277e-08
delta  2.790747e-05  3.492003e-03  4.651127e-04 -1.076335e-06
rho    3.716973e-06  4.651127e-04  6.195762e-05 -1.465858e-07
nu    -1.091277e-08 -1.076335e-06 -1.465858e-07  5.425219e-08

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntKmenta )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Coefficients:
    gamma     delta       rho        nu 
 0.005251 -1.130309 -0.227663  1.697680 

Elasticity of Substitution: 1.295 

> summary( cesLandIntKmenta )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Kmenta")

Estimation by the linear Kmenta approximation
Test of the null hypothesis that the restrictions of the Translog
function required by the Kmenta approximation are true:
P-value = 0.01444873

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  0.005251   0.079296   0.066    0.947    
delta -1.130309   5.621014  -0.201    0.841    
rho   -0.227663   0.986512  -0.231    0.817    
nu     1.697680   0.115423  14.708   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 9241.72 
Multiple R-squared: -964.0143 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.295      1.654   0.783    0.434

> coef( summary( cesLandIntKmenta ) )
          Estimate Std. Error     t value     Pr(>|t|)
gamma  0.005251082 0.07929558  0.06622162 9.472014e-01
delta -1.130309419 5.62101367 -0.20108640 8.406310e-01
rho   -0.227662812 0.98651201 -0.23077551 8.174892e-01
nu     1.697679744 0.11542340 14.70828018 5.703867e-49
> 
> # using the Levenberg-Marquardt optimization method
> cesLandIntLm <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "LM", control = nls.lm.control( maxiter = 200 ) )
> print.default( cesLandIntLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 47.3694347886622, 0.851862754101602, 4.36180424036389 
residual sum-of-squares: 165832
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
47.3694348  0.8518628  4.3618042 

$iter
[1] 40

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.1865044 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.947 1189.261 1213.341 1224.153 1224.153 1239.878 1273.296 1276.244
 [9] 1237.421 1281.159 1315.559 1467.902 1528.839 1581.914 1548.988 1566.679
[17] 1648.257 1722.954 1833.526 1935.743

$residuals
 [1] -203.813682 -226.530626 -143.762016  -52.356187  -46.036619  -54.068428
 [7]  -33.937851   12.316659  -29.715074   -2.750052   45.033933   72.882050
[13]   46.195276  114.045548   95.701105   59.351643    6.782998   32.645578
[19]   53.894261   56.150534

$rss
[1] 165832.4

$cov.unscaled
             gamma       delta          rho
gamma  87462418140  7460122055 -19147958213
delta   7460122055   636316897  -1633372065
rho   -19147958213 -1633372065   4196609266

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho 
47.3694  0.8519  4.3618 

Elasticity of Substitution: 0.1865 

> summary( cesLandIntLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "LM", control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Convergence achieved after 40 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.737e+01  2.693e+07       0        1
delta 8.519e-01  2.297e+06       0        1
rho   4.362e+00  5.899e+06       0        1

Residual standard error: 91.05833 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.865e-01  2.052e+05       0        1

> coef( summary( cesLandIntLm ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 47.3694348   26929633 1.759008e-06 0.9999986
delta  0.8518628    2296976 3.708627e-07 0.9999997
rho    4.3618042    5898872 7.394303e-07 0.9999994
> 
> # using the Newton-type optimization method implemented in nlm()
> cesLandIntNewton <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "Newton" )
> print.default( cesLandIntNewton )
$nlm
$nlm$minimum
[1] 166068.8

$nlm$estimate
[1] 13.88323559  0.01147885  3.53213191

$nlm$gradient
[1]    1824.618 -644475.716   -9759.210

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
      gamma       delta         rho 
13.88323559  0.01147885  3.53213191 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.2206467 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1150.358 1189.754 1213.822 1224.711 1224.701 1240.436 1273.866 1276.767
 [9] 1237.951 1281.680 1316.125 1468.533 1529.512 1582.552 1549.510 1567.131
[17] 1648.526 1723.086 1833.579 1935.789

$residuals
 [1] -204.225018 -227.023599 -144.242858  -52.914963  -46.585264  -54.625820
 [7]  -34.508249   11.793684  -30.244410   -3.271230   44.467592   72.250902
[13]   45.522698  113.407871   95.179314   58.900368    6.514337   32.513475
[19]   53.840909   56.105132

$rss
[1] 166068.8

$cov.unscaled
           gamma      delta         rho
gamma 53924.6010 268.548200 -7652.76667
delta   268.5482   1.337446   -38.11526
rho   -7652.7667 -38.115258  1086.32362

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Coefficients:
   gamma    delta      rho 
13.88324  0.01148  3.53213 

Elasticity of Substitution: 0.2206 

> summary( cesLandIntNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton")

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 1.388e+01  2.116e+04   0.001    0.999
delta 1.148e-02  1.054e+02   0.000    1.000
rho   3.532e+00  3.003e+03   0.001    0.999

Residual standard error: 91.12322 
Multiple R-squared: 0.906182 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.2206   146.2189   0.002    0.999

> coef( summary( cesLandIntNewton ) )
         Estimate Std. Error      t value  Pr(>|t|)
gamma 13.88323559 21160.3354 0.0006560971 0.9994765
delta  0.01147885   105.3822 0.0001089259 0.9999131
rho    3.53213191  3003.3690 0.0011760566 0.9990616
> 
> # using the PORT optimization rountine implemented in nlminb(), UNconstrained
> cesLandIntPort <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", lower = -Inf, upper = Inf )
> print.default( cesLandIntPort )
$nlminb
$nlminb$par
    gamma     delta       rho 
41.959916  0.395407  5.871676 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     193      151 

$nlminb$message
[1] "iteration limit reached without convergence (10)"


$coefficients
    gamma     delta       rho 
41.959916  0.395407  5.871676 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (10)"

$ela
E_1_2 (all) 
  0.1455249 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1149.946 1189.261 1213.341 1224.152 1224.152 1239.878 1273.295 1276.244
 [9] 1237.421 1281.158 1315.558 1467.901 1528.839 1581.913 1548.987 1566.679
[17] 1648.256 1722.953 1833.525 1935.743

$residuals
 [1] -203.813105 -226.530020 -143.761401  -52.355557  -46.035990  -54.067791
 [7]  -33.937197   12.317309  -29.714442   -2.749400   45.034606   72.882801
[13]   46.196060  114.046352   95.701878   59.352414    6.783779   32.646373
[19]   53.895093   56.151411

$rss
[1] 165832.4

$cov.unscaled
             gamma       delta          rho
gamma 504485268198 30406335574 -39890614901
delta  30406335574  1835241017  -2445745266
rho   -39890614901 -2445745266   3817748708

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho 
41.9599  0.3954  5.8717 

Elasticity of Substitution: 0.1455 

> summary( cesLandIntPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.196e+01  6.468e+07       0        1
delta 3.954e-01  3.901e+06       0        1
rho   5.872e+00  5.626e+06       0        1

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.455e-01  1.192e+05       0        1

> coef( summary( cesLandIntPort ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 41.959916   64676110 6.487699e-07 0.9999995
delta  0.395407    3900912 1.013627e-07 0.9999999
rho    5.871676    5626306 1.043611e-06 0.9999992
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesLandIntPortCon <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT" )
> print.default( cesLandIntPortCon )
$nlminb
$nlminb$par
    gamma     delta       rho 
36.101239  0.216581  4.960220 

$nlminb$objective
[1] 165832.5

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 140

$nlminb$evaluations
function gradient 
     200      140 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
    gamma     delta       rho 
36.101239  0.216581  4.960220 

$iter
[1] 140

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   0.167779 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho 
13.61709  0.50000  0.25000 

$lower
[1]  0  0 -1

$upper
[1] Inf   1 Inf

$fitted.values
 [1] 1149.951 1189.266 1213.346 1224.158 1224.158 1239.884 1273.301 1276.250
 [9] 1237.426 1281.164 1315.564 1467.908 1528.846 1581.920 1548.994 1566.686
[17] 1648.264 1722.961 1833.533 1935.751

$residuals
 [1] -203.818393 -226.535517 -143.767000  -52.361236  -46.041665  -54.073540
 [7]  -33.943100   12.311412  -29.720168   -2.755318   45.028516   72.876006
[13]   46.188978  114.039047   95.694770   59.345261    6.776358   32.638698
[19]   53.886975   56.142847

$rss
[1] 165832.5

$cov.unscaled
             gamma      delta         rho
gamma 120532526962 4111685707 -7858484123
delta   4111685707  140262673  -268105509
rho    -7858484123 -268105509   512831916

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Coefficients:
  gamma   delta     rho 
36.1012  0.2166  4.9602 

Elasticity of Substitution: 0.1678 

> summary( cesLandIntPortCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 140 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.610e+01  3.161e+07       0        1
delta 2.166e-01  1.078e+06       0        1
rho   4.960e+00  2.062e+06       0        1

Residual standard error: 91.05835 
Multiple R-squared: 0.9063155 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.678e-01  5.805e+04       0        1

> coef( summary( cesLandIntPortCon ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 36.101239   31613453 1.141958e-06 0.9999991
delta  0.216581    1078427 2.008304e-07 0.9999998
rho    4.960220    2062089 2.405435e-06 0.9999981
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, UNconstrained
> cesLandIntPortVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "PORT", vrs = TRUE, lower = -Inf, upper = Inf )
> print.default( cesLandIntPortVrs )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.9639229  0.8466269 -0.3682770  1.5805507 

$nlminb$objective
[1] 50264.36

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 133

$nlminb$evaluations
function gradient 
     200      133 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
 1.9639229  0.8466269 -0.3682770  1.5805507 

$iter
[1] 133

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   1.582972 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$fitted.values
 [1] 1004.240 1092.115 1115.452 1174.869 1168.094 1193.024 1242.887 1217.590
 [9] 1172.334 1222.881 1293.692 1537.794 1650.538 1702.960 1592.250 1587.436
[17] 1647.014 1724.647 1880.610 2046.252

$residuals
 [1]  -58.107488 -129.384912  -45.872930   -3.072164   10.022078   -7.214018
 [7]   -3.528955   70.970701   35.372612   55.527092   66.900128    2.989798
[13]  -75.503058   -7.000210   52.439505   38.594674    8.025856   30.953229
[19]    6.809985  -54.357887

$rss
[1] 50264.36

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0979912032  1.572131e-02 -0.0387741988 -1.157277e-04
delta  0.0157213135  2.532439e-03 -0.0062509847 -1.287027e-05
rho   -0.0387741988 -6.250985e-03  0.0154331519  2.920740e-05
nu    -0.0001157277 -1.287027e-05  0.0000292074  3.449636e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Coefficients:
  gamma   delta     rho      nu 
 1.9639  0.8466 -0.3683  1.5806 

Elasticity of Substitution: 1.583 

> summary( cesLandIntPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", lower = -Inf, upper = Inf)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 133 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.96392   15.69310   0.125    0.900    
delta  0.84663    2.52281   0.336    0.737    
rho   -0.36828    6.22791  -0.059    0.953    
nu     1.58055    0.09311  16.975   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.13201 
Multiple R-squared: 0.9716039 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.583     15.606   0.101    0.919

> coef( summary( cesLandIntPortVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma  1.9639229 15.69309596  0.1251457 9.004082e-01
delta  0.8466269  2.52281028  0.3355888 7.371810e-01
rho   -0.3682770  6.22791103 -0.0591333 9.528459e-01
nu     1.5805507  0.09311116 16.9748796 1.260124e-64
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesLandIntPortVrsCon <- cesEst( "qOutput", c( "land", "qVarInput" ),
+    germanFarms, method = "PORT", vrs = TRUE )
> print.default( cesLandIntPortVrsCon )
$nlminb
$nlminb$par
     gamma      delta        rho         nu 
 1.8667321  0.8306720 -0.3299784  1.5811361 

$nlminb$objective
[1] 50231.42

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 123

$nlminb$evaluations
function gradient 
     200      123 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
 1.8667321  0.8306720 -0.3299784  1.5811361 

$iter
[1] 123

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
   1.492489 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta      rho       nu 
13.61709  0.50000  0.25000  1.00000 

$lower
[1]  0  0 -1  0

$upper
[1] Inf   1 Inf Inf

$fitted.values
 [1] 1004.280 1092.099 1115.481 1174.757 1168.010 1192.942 1242.826 1217.632
 [9] 1172.313 1222.933 1293.709 1537.914 1650.668 1703.251 1592.614 1587.841
[17] 1647.450 1725.069 1881.079 2046.818

$residuals
 [1]  -58.146540 -129.368522  -45.902219   -2.960232   10.106477   -7.132359
 [7]   -3.468490   70.928533   35.393252   55.475898   66.884055    2.870291
[13]  -75.633066   -7.291868   52.075261   38.190368    7.589623   30.531259
[19]    6.341459  -54.924451

$rss
[1] 50231.42

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0965169153  1.689983e-02 -3.848075e-02 -1.133108e-04
delta  0.0168998287  2.970275e-03 -6.768649e-03 -1.387199e-05
rho   -0.0384807506 -6.768649e-03  1.542781e-02  2.904938e-05
nu    -0.0001133108 -1.387199e-05  2.904938e-05  3.449144e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntPortVrsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Coefficients:
  gamma   delta     rho      nu 
 1.8667  0.8307 -0.3300  1.5811 

Elasticity of Substitution: 1.492 

> summary( cesLandIntPortVrsCon )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT")

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Convergence NOT achieved after 123 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.86673   15.56949   0.120    0.905    
delta  0.83067    2.73131   0.304    0.761    
rho   -0.32998    6.22479  -0.053    0.958    
nu     1.58114    0.09307  16.988   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.11558 
Multiple R-squared: 0.9716225 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.492     13.866   0.108    0.914

> coef( summary( cesLandIntPortVrsCon ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.8667321 15.56949237  0.11989678 9.045649e-01
delta  0.8306720  2.73131024  0.30412951 7.610292e-01
rho   -0.3299784  6.22479170 -0.05301036 9.577237e-01
nu     1.5811361  0.09307401 16.98794446 1.008623e-64
> 
> # using the DE optimization method implemented in DEoptim()
> cesLandIntDe <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDe )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
45.4587987  0.5796263  6.9987629 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0   -1 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2     par3
1   4.205953e+08 0.4659625 5.740481
2   5.398456e+07 0.6948833 3.838149
3   5.398456e+07 0.6948833 3.838149
4   5.398456e+07 0.6948833 3.838149
5   5.398456e+07 0.6948833 3.838149
6   5.398456e+07 0.6948833 4.017726
7   1.443935e+07 0.7078890 3.159860
8   1.443935e+07 0.7078890 3.159860
9   1.443935e+07 0.7078890 3.159860
10  1.443935e+07 0.7078890 3.159860
11  1.386028e+07 0.4659625 5.740481
12  1.386028e+07 0.4659625 6.747603
13  4.528790e+06 0.7343952 7.865015
14  4.528790e+06 0.7343952 7.865015
15  4.528790e+06 0.7343952 7.952918
16  4.065533e+06 0.7170639 7.537958
17  4.065533e+06 0.7170639 7.537958
18  2.014402e+06 0.3703752 6.713998
19  4.090683e+05 0.5182726 8.031142
20  4.090683e+05 0.5182726 8.031142
21  4.090683e+05 0.5182726 8.031142
22  4.090683e+05 0.5182726 8.031142
23  4.090683e+05 0.5182726 8.031142
24  4.090683e+05 0.8137625 8.103061
25  4.090683e+05 0.8137625 8.103061
26  1.921202e+05 0.8566783 5.397381
27  1.921202e+05 0.8566783 5.397381
28  1.641124e+05 0.4592361 6.850509
29  1.641124e+05 0.4592361 6.850509
30  1.641124e+05 0.4592361 6.850509
31  4.935733e+04 0.7513291 4.746459
32  4.935733e+04 0.7513291 4.746459
33  4.935733e+04 0.7513291 4.746459
34  4.935733e+04 0.8459528 4.746459
35  4.935733e+04 0.8459528 4.746459
36  1.040467e+04 0.6442824 1.642890
37  1.040467e+04 0.6442824 1.642890
38  1.040467e+04 0.6442824 1.642890
39  1.040467e+04 0.6442824 6.677617
40  7.665275e+03 0.8284489 8.103061
41  4.753081e+03 0.6261282 9.663100
42  1.160409e+03 0.9832821 8.345013
43  1.160409e+03 0.9832821 8.345013
44  1.160409e+03 0.9832821 8.345013
45  1.160409e+03 0.9832821 8.345013
46  1.160409e+03 0.9832821 8.345013
47  1.160409e+03 0.9832821 8.345013
48  2.409708e+02 0.9563841 6.508164
49  2.409708e+02 0.9563841 6.508164
50  1.848120e+02 0.8036718 7.267487
51  1.848120e+02 0.8036718 7.267487
52  1.848120e+02 0.8036718 7.267487
53  1.848120e+02 0.8036718 7.267487
54  1.848120e+02 0.8036718 7.267487
55  1.848120e+02 0.8036718 7.267487
56  1.848120e+02 0.8036718 7.267487
57  1.780722e+02 0.8833193 6.465887
58  1.780722e+02 0.8833193 6.465887
59  6.222842e+01 0.7776531 6.725508
60  6.222842e+01 0.7776531 6.725508
61  4.261025e+01 0.5666472 7.504274
62  4.261025e+01 0.5666472 7.504274
63  4.261025e+01 0.5666472 6.741174
64  4.261025e+01 0.5666472 6.741174
65  4.261025e+01 0.5571039 6.741174
66  4.261025e+01 0.5571039 6.741174
67  4.261025e+01 0.5571039 6.741174
68  4.261025e+01 0.5571039 6.741174
69  4.261025e+01 0.5571039 6.741174
70  4.706734e+01 0.5148530 7.144533
71  4.168559e+01 0.2942586 7.291995
72  4.168559e+01 0.3072814 7.291995
73  4.168559e+01 0.3072814 7.291995
74  4.168559e+01 0.3072814 7.291995
75  4.012850e+01 0.2315680 7.249947
76  4.012850e+01 0.2315680 7.249947
77  4.012850e+01 0.2315680 7.249947
78  4.012850e+01 0.2315680 7.249947
79  4.168559e+01 0.3072814 7.179121
80  4.168559e+01 0.3072814 7.179121
81  4.168559e+01 0.3072814 7.179121
82  4.168559e+01 0.3072814 7.179121
83  4.168559e+01 0.3072814 7.179121
84  4.168559e+01 0.3072814 7.179121
85  4.168559e+01 0.3072814 7.179121
86  4.168559e+01 0.3072814 7.179121
87  4.168559e+01 0.3072814 7.179121
88  4.168559e+01 0.3072814 7.179121
89  4.168559e+01 0.3072814 7.179121
90  4.549024e+01 0.5233077 8.407255
91  4.549024e+01 0.5233077 8.407255
92  4.549024e+01 0.5233077 8.407255
93  4.494935e+01 0.5297906 7.109428
94  4.494935e+01 0.5297906 7.109428
95  4.494935e+01 0.5297906 7.109428
96  4.494935e+01 0.5297906 7.109428
97  4.494935e+01 0.5297906 7.109428
98  4.494935e+01 0.5297906 7.109428
99  4.494935e+01 0.5297906 7.109428
100 4.494935e+01 0.5297906 7.109428
101 4.452126e+01 0.4203310 8.780583
102 4.452126e+01 0.4203310 8.780583
103 4.452126e+01 0.4203310 8.780583
104 4.452126e+01 0.4203310 8.780583
105 4.452126e+01 0.4203310 8.780583
106 4.452126e+01 0.4203310 8.780583
107 4.452126e+01 0.4203310 8.780583
108 4.452126e+01 0.4203310 8.780583
109 4.452126e+01 0.4203310 8.780583
110 4.452126e+01 0.4203310 8.780583
111 4.452126e+01 0.4203310 8.780583
112 4.452126e+01 0.4203310 8.780583
113 4.452126e+01 0.4203310 8.780583
114 4.452126e+01 0.4203310 8.780583
115 4.452126e+01 0.4203310 8.780583
116 4.452126e+01 0.4203310 8.780583
117 4.458495e+01 0.4236731 8.822207
118 4.458495e+01 0.4236731 8.822207
119 4.458495e+01 0.4236731 8.822207
120 4.458495e+01 0.4236731 8.822207
121 4.458495e+01 0.4236731 8.822207
122 4.458495e+01 0.4236731 8.822207
123 4.458495e+01 0.4236731 8.822207
124 4.458495e+01 0.4236731 8.822207
125 4.458495e+01 0.4236731 8.822207
126 4.458495e+01 0.4236731 8.822207
127 4.458495e+01 0.4236731 8.822207
128 4.458495e+01 0.4236731 8.822207
129 4.458495e+01 0.4236731 8.822207
130 4.458495e+01 0.4236731 8.822207
131 4.545880e+01 0.5796263 6.998763
132 4.545880e+01 0.5796263 6.998763
133 4.545880e+01 0.5796263 6.998763
134 4.545880e+01 0.5796263 6.998763
135 4.545880e+01 0.5796263 6.998763
136 4.545880e+01 0.5796263 6.998763
137 4.545880e+01 0.5796263 6.998763
138 4.545880e+01 0.5796263 6.998763
139 4.545880e+01 0.5796263 6.998763
140 4.545880e+01 0.5796263 6.998763
141 4.545880e+01 0.5796263 6.998763
142 4.545880e+01 0.5796263 6.998763
143 4.545880e+01 0.5796263 6.998763
144 4.545880e+01 0.5796263 6.998763
145 4.545880e+01 0.5796263 6.998763
146 4.545880e+01 0.5796263 6.998763
147 4.545880e+01 0.5796263 6.998763
148 4.545880e+01 0.5796263 6.998763
149 4.545880e+01 0.5796263 6.998763
150 4.545880e+01 0.5796263 6.998763
151 4.545880e+01 0.5796263 6.998763
152 4.545880e+01 0.5796263 6.998763
153 4.545880e+01 0.5796263 6.998763
154 4.545880e+01 0.5796263 6.998763
155 4.545880e+01 0.5796263 6.998763
156 4.545880e+01 0.5796263 6.998763
157 4.545880e+01 0.5796263 6.998763
158 4.545880e+01 0.5796263 6.998763
159 4.545880e+01 0.5796263 6.998763
160 4.545880e+01 0.5796263 6.998763
161 4.545880e+01 0.5796263 6.998763
162 4.545880e+01 0.5796263 6.998763
163 4.545880e+01 0.5796263 6.998763
164 4.545880e+01 0.5796263 6.998763
165 4.545880e+01 0.5796263 6.998763
166 4.545880e+01 0.5796263 6.998763
167 4.545880e+01 0.5796263 6.998763
168 4.545880e+01 0.5796263 6.998763
169 4.545880e+01 0.5796263 6.998763
170 4.545880e+01 0.5796263 6.998763
171 4.545880e+01 0.5796263 6.998763
172 4.545880e+01 0.5796263 6.998763
173 4.545880e+01 0.5796263 6.998763
174 4.545880e+01 0.5796263 6.998763
175 4.545880e+01 0.5796263 6.998763
176 4.545880e+01 0.5796263 6.998763
177 4.545880e+01 0.5796263 6.998763
178 4.545880e+01 0.5796263 6.998763
179 4.545880e+01 0.5796263 6.998763
180 4.545880e+01 0.5796263 6.998763
181 4.545880e+01 0.5796263 6.998763
182 4.545880e+01 0.5796263 6.998763
183 4.545880e+01 0.5796263 6.998763
184 4.545880e+01 0.5796263 6.998763
185 4.545880e+01 0.5796263 6.998763
186 4.545880e+01 0.5796263 6.998763
187 4.545880e+01 0.5796263 6.998763
188 4.545880e+01 0.5796263 6.998763
189 4.545880e+01 0.5796263 6.998763
190 4.545880e+01 0.5796263 6.998763
191 4.545880e+01 0.5796263 6.998763
192 4.545880e+01 0.5796263 6.998763
193 4.545880e+01 0.5796263 6.998763
194 4.545880e+01 0.5796263 6.998763
195 4.545880e+01 0.5796263 6.998763
196 4.545880e+01 0.5796263 6.998763
197 4.545880e+01 0.5796263 6.998763
198 4.545880e+01 0.5796263 6.998763
199 4.545880e+01 0.5796263 6.998763
200 4.545880e+01 0.5796263 6.998763

$member$bestvalit
  [1] 3.970194e+21 6.059692e+19 6.059692e+19 6.059692e+19 6.059692e+19
  [6] 6.008539e+19 4.462574e+18 4.462574e+18 4.462574e+18 4.462574e+18
 [11] 4.311460e+18 4.143603e+18 3.815782e+17 3.815782e+17 3.812473e+17
 [16] 3.105163e+17 3.105163e+17 9.382200e+16 3.389336e+15 3.389336e+15
 [21] 3.389336e+15 3.389336e+15 3.389336e+15 3.027724e+15 3.027724e+15
 [26] 6.719853e+14 6.719853e+14 5.811049e+14 5.811049e+14 5.811049e+14
 [31] 4.717861e+13 4.717861e+13 4.717861e+13 4.487634e+13 4.487634e+13
 [36] 3.144711e+12 3.144711e+12 3.144711e+12 2.105357e+12 1.045458e+12
 [41] 4.197329e+11 2.133082e+10 2.133082e+10 2.133082e+10 2.133082e+10
 [46] 2.133082e+10 2.133082e+10 6.440815e+08 6.440815e+08 3.436373e+08
 [51] 3.436373e+08 3.436373e+08 3.436373e+08 3.436373e+08 3.436373e+08
 [56] 3.436373e+08 3.015877e+08 3.015877e+08 4.274938e+06 4.274938e+06
 [61] 3.400109e+05 3.400109e+05 2.994058e+05 2.994058e+05 2.884300e+05
 [66] 2.884300e+05 2.884300e+05 2.884300e+05 2.884300e+05 2.739848e+05
 [71] 1.662540e+05 1.661474e+05 1.661474e+05 1.661474e+05 1.658636e+05
 [76] 1.658636e+05 1.658636e+05 1.658636e+05 1.658343e+05 1.658343e+05
 [81] 1.658343e+05 1.658343e+05 1.658343e+05 1.658343e+05 1.658343e+05
 [86] 1.658343e+05 1.658343e+05 1.658343e+05 1.658343e+05 1.658342e+05
 [91] 1.658342e+05 1.658342e+05 1.658334e+05 1.658334e+05 1.658334e+05
 [96] 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05
[101] 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05
[106] 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05
[111] 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05
[116] 1.658325e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]     [,3]
 [1,] 41.41145 0.1839225 9.865817
 [2,] 45.82231 0.6480859 6.199888
 [3,] 44.71832 0.4601480 8.222971
 [4,] 44.42342 0.4590390 7.710407
 [5,] 45.33453 0.5566575 7.261659
 [6,] 45.62442 0.6087792 6.677081
 [7,] 43.17768 0.4107844 6.872567
 [8,] 45.45880 0.5796263 6.998763
 [9,] 46.18290 0.7080226 5.558510
[10,] 43.07062 0.4858751 5.466119
[11,] 45.31176 0.5684788 6.957528
[12,] 45.59920 0.5855273 7.152156
[13,] 41.68559 0.3072814 7.179121
[14,] 46.22746 0.7142763 5.486279
[15,] 45.16025 0.5301785 7.508431
[16,] 46.12737 0.6863390 5.943401
[17,] 45.95526 0.6718073 5.929297
[18,] 45.50200 0.5781358 7.118855
[19,] 45.70625 0.6107874 6.790344
[20,] 44.54087 0.4099366 9.067134
[21,] 45.41373 0.5798586 6.902495
[22,] 45.46836 0.5917392 6.748344
[23,] 44.83200 0.4804169 7.986616
[24,] 45.04454 0.5147065 7.632046
[25,] 42.45470 0.2315680 9.995899
[26,] 45.64632 0.6177658 6.525012
[27,] 44.57358 0.4440138 8.317188
[28,] 43.18180 0.4245671 6.624572
[29,] 45.61037 0.6006783 6.833534
[30,] 46.51225 0.7432021 5.391224

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
45.4587987  0.5796263  6.9987629 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.1250193 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1

$upper
[1] 1e+10 1e+00 1e+01

$fitted.values
 [1] 1149.942 1189.256 1213.336 1224.147 1224.147 1239.873 1273.290 1276.239
 [9] 1237.416 1281.153 1315.553 1467.896 1528.833 1581.907 1548.981 1566.673
[17] 1648.250 1722.947 1833.518 1935.735

$residuals
 [1] -203.808593 -226.525353 -143.756639  -52.350753  -46.031186  -54.062925
 [7]  -33.932200   12.322317  -29.709586   -2.744373   45.039768   72.888561
[13]   46.202060  114.052559   95.707955   59.358560    6.790242   32.653127
[19]   53.902278   56.158997

$rss
[1] 165832.4

$cov.unscaled
             gamma       delta          rho
gamma 551333469761 24064590279 5.565034e+11
delta  24064590279  2147483648 0.000000e+00
rho   556503417835           0 1.099512e+12

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
45.4588  0.5796  6.9988 

Elasticity of Substitution: 0.125 

> summary( cesLandIntDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.546e+01  6.761e+07       0        1
delta 5.796e-01  4.220e+06       0        1
rho   6.999e+00  9.548e+07       0        1

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.250e-01  1.492e+06       0        1

> coef( summary( cesLandIntDe ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 45.4587987   67612473 6.723434e-07 0.9999995
delta  0.5796263    4219729 1.373610e-07 0.9999999
rho    6.9987629   95481571 7.329962e-08 0.9999999
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesLandIntDeVrs <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", vrs = TRUE, control = DEoptim.control( trace = FALSE ) )
> print.default( cesLandIntDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3       par4 
44.8680790  0.3651480  7.4962339  0.9890283 

$optim$bestval
[1] 172950.7

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 par4 
   0    0   -1    0 

$member$upper
 par1  par2  par3  par4 
1e+10 1e+00 1e+01 1e+01 

$member$bestmemit
            par1       par2         par3        par4
1   6.405068e+09 0.38396964  4.374743370 0.104671118
2   8.229358e+09 0.75548354  1.637827986 0.022035336
3   8.229358e+09 0.75548354  1.637827986 0.022035336
4   5.590159e+08 0.47531657  4.390697984 0.094554530
5   5.590159e+08 0.47531657  4.390697984 0.094554530
6   5.590159e+08 0.47531657  4.390697984 0.094554530
7   5.590159e+08 0.47531657  4.390697984 0.094554530
8   5.590159e+08 0.47531657  4.390697984 0.094554530
9   5.590159e+08 0.47531657  4.390697984 0.094554530
10  5.590159e+08 0.47531657  4.390697984 0.094554530
11  5.590159e+08 0.47531657  4.390697984 0.094554530
12  4.019979e+08 0.39891234  4.390697984 0.094554530
13  4.019979e+08 0.39891234  4.390697984 0.094554530
14  8.440448e+07 0.09252324  6.164039335 0.239426022
15  8.440448e+07 0.73258950  7.667810921 0.239426022
16  8.440448e+07 0.73258950  7.667810921 0.239426022
17  8.440448e+07 0.73258950  7.667810921 0.239426022
18  7.423133e+07 0.12420835  7.120761806 0.106496169
19  5.975549e+07 0.74281286 -0.354343553 0.097588979
20  5.975549e+07 0.74281286 -0.354343553 0.097588979
21  6.690274e+07 0.78062266  6.480481600 0.018839832
22  1.524715e+07 0.28611269  9.876072937 0.042566018
23  1.524715e+07 0.28611269  9.876072937 0.042566018
24  3.054931e+05 0.67706409  0.191873189 0.038794243
25  3.054931e+05 0.67706409  0.191873189 0.038794243
26  3.054931e+05 0.67706409  0.191873189 0.038794243
27  3.054931e+05 0.67706409  0.191873189 0.038794243
28  3.054931e+05 0.67706409  0.191873189 0.038794243
29  3.054931e+05 0.67706409  0.191873189 0.038794243
30  3.054931e+05 0.67706409  0.191873189 0.038794243
31  6.268784e+03 0.71032085  4.040105952 0.115122377
32  6.268784e+03 0.71032085  4.040105952 0.101526178
33  6.268784e+03 0.71032085  4.040105952 0.082234453
34  6.268784e+03 0.71032085  4.040105952 0.082234453
35  6.268784e+03 0.71032085  4.040105952 0.082234453
36  6.268784e+03 0.71032085  4.040105952 0.082234453
37  6.268784e+03 0.71032085  4.040105952 0.082234453
38  6.268784e+03 0.71032085  4.040105952 0.082234453
39  6.268784e+03 0.71032085  4.040105952 0.082234453
40  6.268784e+03 0.71032085  8.538917908 0.082234453
41  6.268784e+03 0.71032085  8.538917908 0.082234453
42  6.268784e+03 0.71032085  8.538917908 0.082234453
43  6.268784e+03 0.71032085  8.538917908 0.082234453
44  6.268784e+03 0.71032085  8.538917908 0.082234453
45  6.268784e+03 0.71032085  8.538917908 0.082234453
46  6.268784e+03 0.71032085  8.538917908 0.082234453
47  6.268784e+03 0.71032085  8.538917908 0.082234453
48  6.268784e+03 0.71032085  9.250671265 0.082234453
49  6.268784e+03 0.71032085  9.250671265 0.082234453
50  6.268784e+03 0.71032085  9.250671265 0.082234453
51  6.268784e+03 0.71032085  9.250671265 0.082234453
52  6.268784e+03 0.71032085  9.250671265 0.007507748
53  6.268784e+03 0.71032085  9.250671265 0.007507748
54  6.268784e+03 0.76304406  9.250671265 0.007507748
55  6.268784e+03 0.76304406  9.250671265 0.007507748
56  6.268784e+03 0.76304406  9.250671265 0.007507748
57  6.268784e+03 0.76304406  9.250671265 0.007507748
58  6.268784e+03 0.76304406  9.250671265 0.007507748
59  5.680591e+03 0.77107616  1.510359275 0.006170338
60  5.680591e+03 0.77107616  1.510359275 0.006170338
61  5.680591e+03 0.73544164  7.046900421 0.006170338
62  4.830056e+03 0.86526628  9.777907665 0.050222590
63  1.872443e+03 0.74435581  8.317402563 0.023864048
64  1.872443e+03 0.74435581  8.317402563 0.023864048
65  1.872443e+03 0.74435581  8.317402563 0.023864048
66  1.872443e+03 0.74435581  8.317402563 0.023864048
67  1.872443e+03 0.74435581  8.317402563 0.023864048
68  1.214631e+03 0.82446922  9.074867942 0.027135082
69  1.214631e+03 0.82446922  9.074867942 0.027135082
70  1.214631e+03 0.82446922  9.074867942 0.035603435
71  1.214631e+03 0.82446922  9.074867942 0.035603435
72  1.214631e+03 0.82446922  3.800895443 0.035603435
73  1.214631e+03 0.82446922  3.800895443 0.035603435
74  1.214631e+03 0.82446922  3.800895443 0.035603435
75  1.214631e+03 0.82446922  3.800895443 0.035603435
76  1.214631e+03 0.82446922  2.114493535 0.035603435
77  1.214631e+03 0.82446922  2.114493535 0.035603435
78  1.214631e+03 0.82446922  2.114493535 0.035603435
79  1.214631e+03 0.82446922  2.114493535 0.035603435
80  1.214631e+03 0.82446922  2.114493535 0.035603435
81  1.214631e+03 0.82446922  1.974844207 0.039959110
82  1.070839e+03 0.76138929 -0.092332041 0.069727892
83  1.132324e+03 0.81796719  5.429697840 0.061510066
84  1.093093e+03 0.83064285  1.879041621 0.071618197
85  1.093093e+03 0.83064285  1.080969745 0.071618197
86  9.266222e+02 0.81811137 -0.016442300 0.102524467
87  9.274151e+02 0.85817527  4.650564971 0.122286527
88  9.274151e+02 0.77666256  5.656347036 0.122286527
89  9.274151e+02 0.77666256  5.656347036 0.122286527
90  7.735365e+02 0.48193112  0.860823138 0.153123453
91  8.499548e+02 0.91246059  8.399037145 0.157939540
92  7.684926e+02 0.27062942  7.270679889 0.165737232
93  3.641610e+02 0.32788006 -0.004211299 0.245340085
94  5.593652e+02 0.95031766 -0.482606194 0.243308922
95  4.382564e+02 0.69522535  0.172458168 0.279709016
96  4.382564e+02 0.69522535  0.172458168 0.286069654
97  4.382564e+02 0.69522535  0.172458168 0.286069654
98  4.382564e+02 0.69522535  0.172458168 0.286069654
99  4.382564e+02 0.69522535  0.172458168 0.286069654
100 5.508309e+02 0.27062942  7.270679889 0.273431490
101 5.288608e+02 0.98823913  7.484136546 0.303716050
102 3.930208e+02 0.27062942  7.270679889 0.382364028
103 3.193397e+02 0.25161209  4.179442120 0.386697844
104 3.790702e+02 0.27062942  7.270679889 0.382364028
105 3.790702e+02 0.27062942  7.270679889 0.382364028
106 3.790702e+02 0.27062942  7.270679889 0.382364028
107 3.790702e+02 0.27062942  7.270679889 0.382364028
108 3.795885e+02 0.64907990  6.897753885 0.385044386
109 3.795885e+02 0.64907990  6.897753885 0.385044386
110 2.861047e+02 0.67228752  9.309230071 0.459556464
111 2.861047e+02 0.67228752  9.309230071 0.459556464
112 2.861047e+02 0.67228752  9.309230071 0.459556464
113 2.861047e+02 0.67228752  9.309230071 0.459556464
114 2.262223e+02 0.31238167  2.092592696 0.472981038
115 2.262223e+02 0.31238167  2.092592696 0.472981038
116 2.262223e+02 0.31238167  2.092592696 0.472981038
117 2.432290e+02 0.18570587  7.217082801 0.497988273
118 2.432290e+02 0.18570587  7.217082801 0.497988273
119 2.432290e+02 0.18570587  7.217082801 0.497988273
120 1.705067e+02 0.31238167  2.092592696 0.535683102
121 1.705067e+02 0.31238167  2.092592696 0.535683102
122 1.705067e+02 0.31238167  2.092592696 0.535683102
123 1.705067e+02 0.31238167  2.092592696 0.535683102
124 2.325483e+02 0.84071937  3.510815976 0.528477177
125 2.325483e+02 0.84071937  3.510815976 0.528477177
126 2.325483e+02 0.84071937  3.510815976 0.528477177
127 2.325483e+02 0.84071937  3.510815976 0.528477177
128 1.913030e+02 0.81154670  3.220545875 0.576098846
129 1.913030e+02 0.81154670  3.220545875 0.576098846
130 1.913030e+02 0.71160447  3.649713078 0.576098846
131 1.654583e+02 0.79667346  4.978883447 0.635721695
132 1.654583e+02 0.79667346  4.978883447 0.635721695
133 1.654583e+02 0.79667346  4.978883447 0.635721695
134 1.654583e+02 0.79667346  4.978883447 0.635721695
135 1.654583e+02 0.79667346  4.978883447 0.635721695
136 1.654583e+02 0.79667346  4.978883447 0.635721695
137 1.654583e+02 0.79667346  4.978883447 0.635721695
138 1.445058e+02 0.75013143  4.357251985 0.674397329
139 1.235024e+02 0.48751141  9.250080060 0.706394245
140 1.235024e+02 0.48751141  9.250080060 0.706394245
141 1.235024e+02 0.48751141  9.250080060 0.706394245
142 1.235024e+02 0.48751141  9.250080060 0.706394245
143 1.235024e+02 0.48751141  9.250080060 0.706394245
144 1.235024e+02 0.41390049  9.250080060 0.706394245
145 1.235024e+02 0.41390049  9.250080060 0.706394245
146 1.235024e+02 0.41390049  9.250080060 0.706394245
147 1.235024e+02 0.41390049  9.250080060 0.706394245
148 1.235024e+02 0.41390049  9.250080060 0.706394245
149 1.235024e+02 0.41390049  9.250080060 0.706394245
150 1.235024e+02 0.41390049  9.250080060 0.706394245
151 1.119677e+02 0.23331633  9.266032712 0.725742258
152 1.119677e+02 0.23331633  9.266032712 0.725742258
153 1.119677e+02 0.23331633  9.266032712 0.725742258
154 1.119677e+02 0.23331633  9.266032712 0.725742258
155 1.119677e+02 0.23331633  9.266032712 0.725742258
156 1.119677e+02 0.23331633  9.266032712 0.725742258
157 1.119677e+02 0.23331633  9.266032712 0.725742258
158 1.119677e+02 0.23331633  9.266032712 0.725742258
159 1.119677e+02 0.23331633  9.266032712 0.725742258
160 1.119677e+02 0.23331633  9.266032712 0.725742258
161 1.119677e+02 0.23331633  9.266032712 0.725742258
162 1.119677e+02 0.23331633  9.266032712 0.725742258
163 1.119677e+02 0.23331633  9.266032712 0.725742258
164 1.119677e+02 0.23331633  9.266032712 0.725742258
165 1.119677e+02 0.27608784  9.266032712 0.725742258
166 1.029043e+02 0.49446626  7.594372601 0.764380475
167 1.029043e+02 0.49446626  7.594372601 0.764380475
168 9.411259e+01 0.59582020  7.342578503 0.793554185
169 9.411259e+01 0.59582020  7.342578503 0.793554185
170 9.411259e+01 0.59582020  7.342578503 0.793554185
171 9.411259e+01 0.59582020  7.342578503 0.793554185
172 8.999885e+01 0.80267897  6.413460110 0.819722779
173 8.999885e+01 0.80267897  6.413460110 0.819722779
174 8.999885e+01 0.80267897  6.413460110 0.819722779
175 8.999885e+01 0.80267897  6.413460110 0.819722779
176 8.999885e+01 0.80267897  6.413460110 0.819722779
177 8.999885e+01 0.80267897  6.413460110 0.819722779
178 8.999885e+01 0.80267897  6.413460110 0.819722779
179 7.949553e+01 0.41900251  6.219078191 0.821428232
180 7.949553e+01 0.41900251  6.219078191 0.821428232
181 7.949553e+01 0.41900251  6.219078191 0.821428232
182 8.815546e+01 0.81056423  5.801091207 0.821090930
183 8.815546e+01 0.81056423  5.801091207 0.821090930
184 8.129719e+01 0.58478660  6.042288211 0.828188633
185 8.129719e+01 0.58478660  6.042288211 0.828188633
186 8.129719e+01 0.58478660  6.042288211 0.828188633
187 8.129719e+01 0.58478660  6.042288211 0.828188633
188 8.129719e+01 0.58478660  6.042288211 0.828188633
189 5.838760e+01 0.59092818  7.759799538 0.943295535
190 6.326439e+01 0.95607816  5.990285074 0.932595603
191 6.326439e+01 0.95607816  5.990285074 0.932595603
192 6.326439e+01 0.95607816  5.990285074 0.932595603
193 6.602080e+01 0.96907408  7.803256477 0.909907660
194 4.361419e+01 0.49169229  8.562526724 1.004288652
195 4.486808e+01 0.36514804  7.496233881 0.989028253
196 4.486808e+01 0.36514804  7.496233881 0.989028253
197 4.486808e+01 0.36514804  7.496233881 0.989028253
198 4.486808e+01 0.36514804  7.496233881 0.989028253
199 4.486808e+01 0.36514804  7.496233881 0.989028253
200 4.486808e+01 0.36514804  7.496233881 0.989028253

$member$bestvalit
  [1] 1.734161e+21 1.582024e+21 1.582024e+21 1.217303e+19 1.217303e+19
  [6] 1.217303e+19 1.217303e+19 1.217303e+19 1.217303e+19 1.217303e+19
 [11] 1.217303e+19 6.342715e+18 6.342715e+18 8.563978e+17 7.257848e+17
 [16] 7.257848e+17 7.257848e+17 2.397354e+17 1.740527e+17 1.740527e+17
 [21] 1.017211e+17 6.252428e+15 6.252428e+15 2.562214e+12 2.562214e+12
 [26] 2.562214e+12 2.562214e+12 2.562214e+12 2.562214e+12 2.562214e+12
 [31] 1.248983e+09 1.118210e+09 9.542741e+08 9.542741e+08 9.542741e+08
 [36] 9.542741e+08 9.542741e+08 9.542741e+08 9.542741e+08 9.458845e+08
 [41] 9.458845e+08 9.458845e+08 9.458845e+08 9.458845e+08 9.458845e+08
 [46] 9.458845e+08 9.458845e+08 9.453073e+08 9.453073e+08 9.453073e+08
 [51] 9.453073e+08 5.051596e+08 5.051596e+08 5.050846e+08 5.050846e+08
 [56] 5.050846e+08 5.050846e+08 5.050846e+08 3.875706e+08 3.875706e+08
 [61] 3.867727e+08 3.723693e+08 9.300490e+06 9.300490e+06 9.300490e+06
 [66] 9.300490e+06 9.300490e+06 1.839721e+06 1.839721e+06 1.720636e+06
 [71] 1.720636e+06 1.718091e+06 1.718091e+06 1.718091e+06 1.718091e+06
 [76] 1.714752e+06 1.714752e+06 1.714752e+06 1.714752e+06 1.714752e+06
 [81] 1.677941e+06 1.627473e+06 1.624901e+06 1.597027e+06 1.594042e+06
 [86] 1.555354e+06 1.474873e+06 1.473769e+06 1.473769e+06 1.435813e+06
 [91] 1.402760e+06 1.400686e+06 1.375522e+06 1.287871e+06 1.189065e+06
 [96] 1.172176e+06 1.172176e+06 1.172176e+06 1.172176e+06 1.149922e+06
[101] 1.111924e+06 1.102631e+06 1.099252e+06 9.556645e+05 9.556645e+05
[106] 9.556645e+05 9.556645e+05 9.186207e+05 9.186207e+05 8.581300e+05
[111] 8.581300e+05 8.581300e+05 8.581300e+05 7.662361e+05 7.662361e+05
[116] 7.662361e+05 7.361604e+05 7.361604e+05 7.361604e+05 6.919895e+05
[121] 6.919895e+05 6.919895e+05 6.919895e+05 6.775627e+05 6.775627e+05
[126] 6.775627e+05 6.775627e+05 6.516595e+05 6.516595e+05 6.150131e+05
[131] 5.188935e+05 5.188935e+05 5.188935e+05 5.188935e+05 5.188935e+05
[136] 5.188935e+05 5.188935e+05 4.822153e+05 4.368745e+05 4.368745e+05
[141] 4.368745e+05 4.368745e+05 4.368745e+05 4.252403e+05 4.252403e+05
[146] 4.252403e+05 4.252403e+05 4.252403e+05 4.252403e+05 4.252403e+05
[151] 4.044101e+05 4.044101e+05 4.044101e+05 4.044101e+05 4.044101e+05
[156] 4.044101e+05 4.044101e+05 4.044101e+05 4.044101e+05 4.044101e+05
[161] 4.044101e+05 4.044101e+05 4.044101e+05 4.044101e+05 4.021523e+05
[166] 3.638063e+05 3.638063e+05 3.292207e+05 3.292207e+05 3.292207e+05
[171] 3.292207e+05 3.223751e+05 3.223751e+05 3.223751e+05 3.223751e+05
[176] 3.223751e+05 3.223751e+05 3.223751e+05 3.041411e+05 3.041411e+05
[181] 3.041411e+05 3.030482e+05 3.030482e+05 2.953155e+05 2.953155e+05
[186] 2.953155e+05 2.953155e+05 2.953155e+05 2.840352e+05 2.487639e+05
[191] 2.487639e+05 2.487639e+05 2.268161e+05 1.822958e+05 1.729507e+05
[196] 1.729507e+05 1.729507e+05 1.729507e+05 1.729507e+05 1.729507e+05

$member$pop
            [,1]       [,2]     [,3]       [,4]
 [1,]   35.87055 0.28396542 5.072209 1.00322123
 [2,]  103.37852 0.50845468 9.266033 0.76663390
 [3,]  102.62038 0.77149882 8.218859 0.77483489
 [4,]   63.26439 0.97327716 6.655622 0.93259560
 [5,]  116.03462 0.55339976 7.418810 0.72673447
 [6,]   58.38760 0.59092818 7.759800 0.94329553
 [7,]   65.70391 0.68524293 8.258618 0.89994249
 [8,]   90.66308 0.45143389 7.354311 0.79496073
 [9,]  531.53217 0.48875275 2.436813 0.26973340
[10,]  102.90433 0.49446626 9.039354 0.76438048
[11,]   44.52433 0.59138910 7.625128 0.98818598
[12,]   79.49553 0.49784697 4.449627 0.82142823
[13,]   90.95945 0.33239224 8.329532 0.78602799
[14,]  113.62385 0.79104841 8.351177 0.74977526
[15,]   50.88417 0.64080991 9.580863 0.96972939
[16,]   89.09573 0.60961420 9.371259 0.81403623
[17,]  725.93019 0.94635702 8.976183 0.22765630
[18,]   82.23163 0.56267722 9.223674 0.83534291
[19,]  111.62833 0.33634271 5.925783 0.71950149
[20,]   44.86808 0.36514804 7.496234 0.98902825
[21,]  419.40613 0.08882617 9.355660 0.33952226
[22,]  123.50237 0.41390049 9.250080 0.70639425
[23,] 1354.18524 0.98112113 9.169226 0.01456494
[24,]  659.58323 0.92382855 8.778159 0.23414187
[25,]   89.99885 0.80267897 6.413460 0.81972278
[26,]   56.99558 0.54535451 9.080777 0.94128254
[27,]  238.91029 0.89151574 5.463383 0.54046299
[28,]  591.55475 0.15841990 7.004534 0.24330892
[29,]   85.50306 0.41297469 7.689259 0.80987815
[30,]  103.31793 0.74930117 5.579082 0.76730018
[31,]   92.78789 0.22632964 7.527483 0.76803853
[32,]   49.81759 0.16290043 7.810175 0.93244279
[33,]   66.02080 0.96907408 7.803256 0.90990766
[34,]   74.79873 0.99653603 7.426846 0.87650835
[35,]  475.88708 0.80083991 7.417595 0.32539059
[36,]  113.59339 0.62114658 5.361064 0.73427362
[37,]  111.24498 0.58864114 6.943367 0.74224866
[38,]   97.72005 0.23659766 4.026546 0.71858748
[39,]  117.09119 0.38746005 9.033743 0.72138532
[40,]   94.11259 0.59582020 8.296661 0.79355418

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
44.8680790  0.3651480  7.4962339  0.9890283 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.1176992 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0  0 -1  0

$upper
[1] 1e+10 1e+00 1e+01 1e+01

$fitted.values
 [1] 1158.396 1197.557 1221.537 1232.301 1232.301 1247.957 1281.218 1284.152
 [9] 1245.511 1289.043 1323.270 1474.732 1535.268 1587.971 1555.278 1572.845
[17] 1653.822 1727.931 1837.568 1938.857

$residuals
 [1] -212.262962 -234.826980 -151.957668  -60.504910  -54.185343  -62.147046
 [7]  -41.860296    4.408452  -37.804794  -10.634355   37.322683   66.051824
[13]   39.766808  107.988596   89.411328   53.186009    1.217596   27.668416
[19]   49.852143   53.037468

$rss
[1] 172950.7

$cov.unscaled
      gamma delta rho nu
gamma    NA    NA  NA NA
delta    NA    NA  NA NA
rho      NA    NA  NA NA
nu       NA    NA  NA NA

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandIntDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
44.8681  0.3651  7.4962  0.9890 

Elasticity of Substitution: 0.1177 

> summary( cesLandIntDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma  44.8681         NA      NA       NA
delta   0.3651         NA      NA       NA
rho     7.4962         NA      NA       NA
nu      0.9890         NA      NA       NA

Residual standard error: 92.99212 
Multiple R-squared: 0.9022942 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.1177         NA      NA       NA

> coef( summary( cesLandIntDeVrs ) )
        Estimate Std. Error t value Pr(>|t|)
gamma 44.8680790         NA      NA       NA
delta  0.3651480         NA      NA       NA
rho    7.4962339         NA      NA       NA
nu     0.9890283         NA      NA       NA
> 
> # using the DE optimization method implemented in DEoptim(), CRS, user-specified bounds
> cesLandLaborDe2 <- cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "DE", control = DEoptim.control( trace = FALSE ),
+    lower = c( 1, 0.01, -0.99 ), upper = c( 50, 0.99, 3 ) )
> print.default( cesLandLaborDe2 )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
48.9766214  0.9899411  2.9910227 

$optim$bestval
[1] 165832.5

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
 par1  par2  par3 
 1.00  0.01 -0.99 

$member$upper
 par1  par2  par3 
50.00  0.99  3.00 

$member$bestmemit
        par1      par2      par3
1   28.02032 0.3218174 2.1794259
2   40.33050 0.5106695 2.9959118
3   48.48682 0.9843783 0.6283902
4   48.48682 0.9843783 0.6283902
5   48.48682 0.9843783 0.6283902
6   45.77238 0.8448190 2.5246093
7   45.77238 0.8448190 2.5246093
8   48.48682 0.9843783 1.1770218
9   48.48682 0.9843783 1.1770218
10  48.48682 0.9843783 1.1770218
11  48.48682 0.9843783 1.1770218
12  48.48682 0.9843783 1.1770218
13  48.48682 0.9843783 1.1770218
14  48.48682 0.9843783 1.1770218
15  48.48682 0.9843783 1.1770218
16  48.48682 0.9843783 1.1770218
17  48.48682 0.9843783 1.1770218
18  48.48682 0.9843783 1.1770218
19  48.48682 0.9843783 1.1770218
20  48.48682 0.9843783 1.1770218
21  48.48682 0.9843783 1.1770218
22  48.48682 0.9843783 1.1770218
23  48.48682 0.9843783 1.1770218
24  48.48682 0.9843783 1.1770218
25  48.48682 0.9843783 1.1770218
26  48.48682 0.9843783 1.1770218
27  48.48682 0.9843783 1.1770218
28  48.48682 0.9843783 1.1770218
29  48.48682 0.9843783 1.1770218
30  48.48682 0.9843783 1.1770218
31  48.48682 0.9843783 1.1770218
32  48.48682 0.9843783 1.1770218
33  48.48682 0.9843783 1.1770218
34  48.48682 0.9843783 1.1770218
35  48.48682 0.9843783 1.1770218
36  48.48682 0.9843783 1.1770218
37  48.48682 0.9843783 1.1770218
38  48.48682 0.9843783 1.1770218
39  48.48682 0.9843783 1.1770218
40  48.48682 0.9843783 1.1770218
41  48.48682 0.9843783 1.1770218
42  48.48682 0.9843783 1.1770218
43  48.48682 0.9843783 1.1770218
44  48.48682 0.9843783 1.1770218
45  47.99885 0.9460811 2.2386473
46  47.99885 0.9460811 2.2386473
47  47.99885 0.9460811 2.2386473
48  47.34093 0.9298315 1.9608354
49  47.34093 0.9298315 1.9608354
50  47.34093 0.9298315 1.9608354
51  47.34093 0.9298315 1.9608354
52  47.34093 0.9298315 1.9608354
53  47.34093 0.9298315 1.9608354
54  47.34093 0.9298315 1.9608354
55  47.34093 0.9298315 1.9608354
56  47.34093 0.9298315 1.9608354
57  47.34093 0.9298315 1.9608354
58  46.70218 0.8735358 2.6776433
59  46.70218 0.8735358 2.6776433
60  46.70218 0.8735358 2.6776433
61  46.70218 0.8735358 2.6776433
62  46.70218 0.8735358 2.6776433
63  46.70218 0.8735358 2.6776433
64  46.70218 0.8735358 2.6776433
65  46.70218 0.8735358 2.6776433
66  46.70218 0.8735358 2.6776433
67  46.70218 0.8735358 2.6776433
68  46.70218 0.8735358 2.6776433
69  47.99885 0.9457011 2.3976381
70  47.99885 0.9457011 2.3976381
71  47.99885 0.9457011 2.3976381
72  47.99885 0.9457011 2.3976381
73  47.99885 0.9457011 2.3976381
74  47.99885 0.9457011 2.3976381
75  47.99885 0.9457011 2.3976381
76  47.99885 0.9457011 2.3976381
77  47.99885 0.9457011 2.3976381
78  47.99885 0.9457011 2.3976381
79  47.99885 0.9457011 2.3976381
80  48.26909 0.9574088 2.4225102
81  48.26909 0.9574088 2.4225102
82  48.26909 0.9574088 2.4225102
83  48.26909 0.9574088 2.4225102
84  48.26909 0.9574088 2.4225102
85  48.26909 0.9574088 2.4225102
86  48.26909 0.9574088 2.4225102
87  48.26909 0.9574088 2.4225102
88  48.26909 0.9574088 2.4225102
89  48.26909 0.9574088 2.4225102
90  48.26909 0.9574088 2.4225102
91  48.26909 0.9574088 2.4225102
92  48.26909 0.9574088 2.4225102
93  48.26909 0.9574088 2.4225102
94  48.26909 0.9574088 2.4225102
95  48.26909 0.9574088 2.4225102
96  48.26909 0.9574088 2.4225102
97  48.26909 0.9574088 2.4225102
98  48.26909 0.9574088 2.4225102
99  48.26909 0.9574088 2.4225102
100 48.26909 0.9574088 2.4225102
101 48.26909 0.9574088 2.4225102
102 48.26909 0.9574088 2.4225102
103 48.26909 0.9574088 2.4225102
104 48.26909 0.9574088 2.4225102
105 48.26909 0.9574088 2.4225102
106 48.26909 0.9574088 2.4225102
107 48.26909 0.9574088 2.4225102
108 48.26909 0.9574088 2.4225102
109 48.26909 0.9574088 2.4225102
110 48.26909 0.9574088 2.4225102
111 48.26909 0.9574088 2.4225102
112 48.26909 0.9574088 2.4225102
113 48.26909 0.9574088 2.4225102
114 48.26909 0.9574088 2.4225102
115 48.26909 0.9574088 2.4225102
116 48.26909 0.9574088 2.4225102
117 48.26909 0.9574088 2.4225102
118 48.26909 0.9574088 2.4225102
119 48.26909 0.9574088 2.4225102
120 48.26909 0.9574088 2.4225102
121 48.26909 0.9574088 2.4225102
122 48.26909 0.9574088 2.4225102
123 48.26909 0.9574088 2.4225102
124 48.26909 0.9574088 2.4225102
125 48.44490 0.9653190 2.4663010
126 48.44490 0.9653190 2.4663010
127 48.44490 0.9653190 2.4663010
128 48.44490 0.9653190 2.4663010
129 48.44490 0.9653190 2.4663010
130 48.44490 0.9653190 2.4663010
131 48.44490 0.9653190 2.4663010
132 48.60288 0.9734666 2.4377496
133 48.60288 0.9734666 2.4377496
134 48.60288 0.9734666 2.4377496
135 48.60288 0.9734666 2.4377496
136 48.79442 0.9827628 2.4421324
137 48.79442 0.9827628 2.4421324
138 48.92154 0.9890009 2.4193554
139 48.92154 0.9890009 2.4193554
140 48.92154 0.9890009 2.4193554
141 48.92154 0.9890009 2.4193554
142 48.92154 0.9890009 2.4193554
143 48.92154 0.9890009 2.4193554
144 48.92154 0.9890009 2.4193554
145 48.92154 0.9890009 2.4193554
146 48.92154 0.9890009 2.4193554
147 48.92154 0.9890009 2.4193554
148 48.92154 0.9890009 2.4193554
149 48.92154 0.9890009 2.4193554
150 48.92154 0.9890009 2.4193554
151 48.90115 0.9862944 2.8008925
152 48.90115 0.9862944 2.8008925
153 48.90115 0.9862944 2.8008925
154 48.91882 0.9871861 2.8312873
155 48.91882 0.9871861 2.8312873
156 48.91882 0.9871861 2.8312873
157 48.91882 0.9871861 2.8312873
158 48.91882 0.9871861 2.8312873
159 48.91882 0.9871861 2.8312873
160 48.91882 0.9871861 2.8312873
161 48.91882 0.9871861 2.8312873
162 48.94307 0.9884102 2.8506277
163 48.91193 0.9863946 2.9161022
164 48.91193 0.9863946 2.9161022
165 48.91193 0.9863946 2.9161022
166 48.91193 0.9863946 2.9161022
167 48.91193 0.9863946 2.9161022
168 48.91193 0.9863946 2.9161022
169 48.91193 0.9863946 2.9161022
170 48.91193 0.9863946 2.9161022
171 48.91193 0.9863946 2.9161022
172 48.91193 0.9863946 2.9161022
173 48.91193 0.9863946 2.9161022
174 48.93229 0.9875111 2.9273231
175 48.93229 0.9875111 2.9273231
176 48.93229 0.9875111 2.9273231
177 48.94836 0.9883362 2.9613851
178 48.94836 0.9883362 2.9613851
179 48.94836 0.9883362 2.9613851
180 48.96104 0.9889945 2.9991044
181 48.96104 0.9889945 2.9991044
182 48.97662 0.9899411 2.9982971
183 48.97662 0.9899411 2.9982971
184 48.97662 0.9899411 2.9982971
185 48.97662 0.9899411 2.9982971
186 48.97662 0.9899411 2.9982971
187 48.97662 0.9899411 2.9982971
188 48.97662 0.9899411 2.9982971
189 48.97662 0.9899411 2.9982971
190 48.97662 0.9899411 2.9982971
191 48.97662 0.9899411 2.9982971
192 48.97662 0.9899411 2.9982971
193 48.97662 0.9899411 2.9982971
194 48.97662 0.9899411 2.9910227
195 48.97662 0.9899411 2.9910227
196 48.97662 0.9899411 2.9910227
197 48.97662 0.9899411 2.9910227
198 48.97662 0.9899411 2.9910227
199 48.97662 0.9899411 2.9910227
200 48.97662 0.9899411 2.9910227

$member$bestvalit
  [1] 238555.1 196179.3 168943.9 168943.9 168943.9 166602.5 166602.5 165902.5
  [9] 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5
 [17] 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5
 [25] 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5
 [33] 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5 165902.5
 [41] 165902.5 165902.5 165902.5 165902.5 165898.7 165898.7 165898.7 165863.6
 [49] 165863.6 165863.6 165863.6 165863.6 165863.6 165863.6 165863.6 165863.6
 [57] 165863.6 165846.7 165846.7 165846.7 165846.7 165846.7 165846.7 165846.7
 [65] 165846.7 165846.7 165846.7 165846.7 165840.9 165840.9 165840.9 165840.9
 [73] 165840.9 165840.9 165840.9 165840.9 165840.9 165840.9 165840.9 165836.1
 [81] 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1
 [89] 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1
 [97] 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1
[105] 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1
[113] 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1 165836.1
[121] 165836.1 165836.1 165836.1 165836.1 165835.0 165835.0 165835.0 165835.0
[129] 165835.0 165835.0 165835.0 165834.6 165834.6 165834.6 165834.6 165833.7
[137] 165833.7 165833.4 165833.4 165833.4 165833.4 165833.4 165833.4 165833.4
[145] 165833.4 165833.4 165833.4 165833.4 165833.4 165833.4 165832.7 165832.7
[153] 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7 165832.7
[161] 165832.7 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[169] 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6 165832.6
[177] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5
[185] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5
[193] 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5 165832.5

$member$pop
          [,1]      [,2]     [,3]
 [1,] 48.97058 0.9894913 2.992861
 [2,] 48.94219 0.9884782 2.876820
 [3,] 48.91905 0.9868864 2.890218
 [4,] 48.96607 0.9896091 2.836672
 [5,] 48.96104 0.9889945 2.981060
 [6,] 48.38980 0.9634641 2.412324
 [7,] 48.95178 0.9890014 2.823345
 [8,] 48.96366 0.9895179 2.886589
 [9,] 48.59486 0.9731323 2.466431
[10,] 48.94836 0.9883362 2.961385
[11,] 48.96519 0.9893121 2.967442
[12,] 48.09957 0.9561564 2.067473
[13,] 48.91193 0.9863946 2.916102
[14,] 48.95509 0.9888447 2.939473
[15,] 48.90492 0.9857438 2.973619
[16,] 48.96422 0.9894642 2.948212
[17,] 48.94395 0.9885153 2.836145
[18,] 48.94976 0.9885235 2.936252
[19,] 48.95564 0.9888679 2.977384
[20,] 48.95104 0.9886401 2.929384
[21,] 48.97662 0.9899411 2.991023
[22,] 48.93839 0.9882637 2.815341
[23,] 48.96339 0.9893678 2.941384
[24,] 48.97091 0.9896608 2.967079
[25,] 48.96106 0.9891104 2.996304
[26,] 48.96344 0.9891836 2.981311
[27,] 48.89823 0.9861351 2.797290
[28,] 48.96051 0.9890211 2.983618
[29,] 48.95360 0.9887714 2.952292
[30,] 48.92247 0.9868183 2.955355

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho 
48.9766214  0.9899411  2.9910227 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.2505623 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  1.00  0.01 -0.99

$upper
[1] 50.00  0.99  3.00

$fitted.values
 [1] 1149.933 1189.247 1213.327 1224.138 1224.138 1239.864 1273.281 1276.229
 [9] 1237.407 1281.143 1315.543 1467.885 1528.821 1581.895 1548.969 1566.661
[17] 1648.237 1722.933 1833.504 1935.720

$residuals
 [1] -203.799934 -226.516443 -143.747534  -52.341616  -46.022042  -54.053665
 [7]  -33.922689   12.331883  -29.700326   -2.734767   45.049611   72.899544
[13]   46.213488  114.064424   95.719640   59.370428    6.802857   32.666403
[19]   53.916459   56.173974

$rss
[1] 165832.5

$cov.unscaled
            gamma     delta         rho
gamma   545083433  36965703 -1199149259
delta    36965703   2506891   -81323212
rho   -1199149259 -81323212  2638349706

attr(,"class")
[1] "cesEst" "list"  
> print( cesLandLaborDe2 )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho 
48.9766  0.9899  2.9910 

Elasticity of Substitution: 0.2506 

> summary( cesLandLaborDe2 )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", lower = c(1, 0.01, -0.99), upper = c(50, 0.99, 
        3), control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.898e+01  2.126e+06       0        1
delta 9.899e-01  1.442e+05       0        1
rho   2.991e+00  4.677e+06       0        1

Residual standard error: 91.05836 
Multiple R-squared: 0.9063155 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 2.506e-01  2.936e+05       0        1

> coef( cesLandLaborDe2 )
     gamma      delta        rho 
48.9766214  0.9899411  2.9910227 
> vcov( cesLandLaborDe2 )
              gamma         delta           rho
gamma  4.519628e+12  306505761394 -9.942897e+12
delta  3.065058e+11   20786204696 -6.743016e+11
rho   -9.942897e+12 -674301619242  2.187621e+13
> coef( summary( cesLandLaborDe2 ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 48.9766214  2125941.6 2.303761e-05 0.9999816
delta  0.9899411   144174.2 6.866284e-06 0.9999945
rho    2.9910227  4677200.8 6.394899e-07 0.9999995
> fitted( cesLandLaborDe2 )
 [1] 1149.933 1189.247 1213.327 1224.138 1224.138 1239.864 1273.281 1276.229
 [9] 1237.407 1281.143 1315.543 1467.885 1528.821 1581.895 1548.969 1566.661
[17] 1648.237 1722.933 1833.504 1935.720
> residuals( cesLandLaborDe2 )
 [1] -203.799934 -226.516443 -143.747534  -52.341616  -46.022042  -54.053665
 [7]  -33.922689   12.331883  -29.700326   -2.734767   45.049611   72.899544
[13]   46.213488  114.064424   95.719640   59.370428    6.802857   32.666403
[19]   53.916459   56.173974
> 
> # constant returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> # variable returns to scale (nls)
> try( cesEst( "qOutput", c( "land", "qVarInput" ), germanFarms,
+    vrs = TRUE, method = "nls" ) )
Error in numericDeriv(form[[3L]], names(ind), env) : 
  Missing value or an infinity produced when evaluating the model
> 
> 
> ############  cesCalc  ################
> outLandLabor <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor ) )
> print( outLandLabor )
 [1] 1149.621 1188.912 1212.974 1223.790 1223.790 1239.503 1272.895 1275.852
 [9] 1237.050 1280.773 1315.152 1467.444 1528.348 1581.387 1548.475 1566.150
[17] 1647.687 1722.347 1832.866 1935.037
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLabor )[ c( 2, 3, 1 ) ] ) )
[1] TRUE
> all.equal( outLandLabor, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLabor ) ) ) )
[1] TRUE
> 
> outLandLaborVrs <- cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs ) )
> print( outLandLaborVrs )
 [1] 1086.866 1129.241 1150.992 1173.398 1173.398 1186.789 1216.082 1230.378
 [9] 1187.078 1246.953 1283.326 1496.231 1568.018 1620.468 1576.600 1585.738
[17] 1684.522 1774.567 1911.509 2041.838
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    coef( cesLandLaborVrs )[ c( 3, 1, 4, 2 ) ] ) )
[1] TRUE
> all.equal( outLandLaborVrs, cesCalc( c( "land", "qLabor" ), germanFarms,
+    unname( coef( cesLandLaborVrs ) ) ) )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
 14.016   0.093  14.095 

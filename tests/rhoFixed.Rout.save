
R version 2.13.0 (2011-04-13)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # load the micEconCES package
> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: survival
Loading required package: splines
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'

The following object(s) are masked from 'package:car':

    logit

The following object(s) are masked from 'package:survival':

    aml

The following object(s) are masked from 'package:lattice':

    melanoma

Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.40-6)
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> # names of explanatory variables
> xxNames <- c( "land", "qVarInput" )
> 
> 
> ## Nelder-Mead, CRS
> cesNm <- cesEst( "qOutput", xxNames, germanFarms, rho = 2, method = "NM" )
> print.default( cesNm ) 
$optim
$optim$par
    gamma     delta 
84.481925  2.958593 

$optim$value
[1] 165627.5

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
84.481925  2.958593  2.000000 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.983 1189.229 1213.332 1224.062 1224.074 1239.797 1273.214 1276.216
 [9] 1237.370 1281.134 1315.500 1467.838 1528.755 1581.890 1549.068 1566.832
[17] 1648.594 1723.424 1834.091 1936.348

$residuals
 [1] -203.849629 -226.498270 -143.752386  -52.265915  -45.957914  -53.986784
 [7]  -33.856295   12.344914  -29.663643   -2.725735   45.092540   72.946590
[13]   46.279369  114.069394   95.621155   59.199094    6.445430   32.175811
[19]   53.328994   55.545714

$rss
[1] 165627.5

$cov.unscaled
           gamma      delta        rho
gamma 68750796.8 5286730.56 294109.839
delta  5286730.6  406534.12  22616.394
rho     294109.8   22616.39   1258.318

attr(,"class")
[1] "cesEst" "list"  
> print( cesNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Coefficients:
 gamma  delta    rho 
84.482  2.959  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 8.448e+01  7.546e+05   0.000        1
delta 2.959e+00  5.802e+04   0.000        1
rho   2.000e+00  3.228e+03   0.001        1

Residual standard error: 91.00207 
Multiple R-squared: 0.9064313 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   358.6774   0.001    0.999

> coef( cesNm ) 
    gamma     delta       rho 
84.481925  2.958593  2.000000 
> vcov( cesNm ) 
             gamma       delta        rho
gamma 569351277146 43781409649 2435634498
delta  43781409649  3366662395  187294885
rho     2435634498   187294885   10420610
> coef( summary( cesNm ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 84.481925 754553.694 1.119628e-04 0.9999107
delta  2.958593  58022.947 5.099006e-05 0.9999593
rho    2.000000   3228.097 6.195601e-04 0.9995057
> 
> ## Nelder-Mead, VRS
> cesNmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead" )
> print.default( cesNmVrs )
$optim
$optim$par
    gamma     delta        nu 
1.5303673 0.7174523 1.5625053 

$optim$value
[1] 50203.6

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1009.037 1094.607 1118.345 1174.723 1168.433 1193.016 1242.378 1219.037
 [9] 1173.534 1224.386 1293.436 1534.487 1645.051 1698.811 1592.155 1588.728
[17] 1649.866 1727.596 1882.312 2046.168

$residuals
 [1]  -62.904221 -131.876587  -48.765589   -2.926923    9.682748   -7.205877
 [7]   -3.020195   69.523919   34.172481   54.022206   67.156645    6.296741
[13]  -70.015959   -2.851106   52.533855   37.303266    5.173364   28.003532
[19]    5.108579  -54.273530

$rss
[1] 50203.6

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0998602669  2.549692e-02 -0.0402927323 -1.085427e-04
delta  0.0254969174  6.527913e-03 -0.0103231583 -2.014954e-05
rho   -0.0402927323 -1.032316e-02  0.0163286238  2.918040e-05
nu    -0.0001085427 -2.014954e-05  0.0000291804  3.450127e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.5304  0.7175 -0.1000  1.5625 

Elasticity of Substitution: 1.111 

> summary( cesNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.53037   15.83247   0.097    0.923    
delta  0.71745    4.04799   0.177    0.859    
rho   -0.10000    6.40217  -0.016    0.988    
nu     1.56251    0.09306  16.790   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.1017 
Multiple R-squared: 0.9716383 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.904   0.141    0.888

> coef( cesNmVrs )
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 
> vcov( cesNmVrs )
             gamma        delta           rho           nu
gamma  250.6672495  64.00185344 -101.14201264 -0.272461680
delta   64.0018534  16.38623711  -25.91298592 -0.050578961
rho   -101.1420126 -25.91298592   40.98778555  0.073248070
nu      -0.2724617  -0.05057896    0.07324807  0.008660441
> coef( summary( cesNmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.5303673 15.83247452  0.09666002 9.229964e-01
delta  0.7174523  4.04799174  0.17723660 8.593225e-01
rho   -0.1000000  6.40217038 -0.01561970 9.875378e-01
nu     1.5625053  0.09306149 16.79003135 2.886924e-63
> 
> ## Nelder-Mead, TC, VRS
> cesNmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    vrs = TRUE, rho = -0.4, method = "Nelder-Mead" )
> print.default( cesNmTcVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
9.46273064 0.02024909 0.61705684 0.94230811 

$optim$value
[1] 19156.69

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 9.46273064  0.02024909  0.61705684 -0.40000000  0.94230811 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.7823 1023.2076 1051.6761 1128.5308 1144.2890 1183.0571 1236.4060
 [8] 1231.0097 1235.0431 1284.0591 1365.0780 1543.9427 1648.8287 1694.4525
[15] 1632.2507 1644.4965 1676.4293 1735.8369 1853.3693 1987.4615

$residuals
 [1]   7.350709 -60.477156  17.903110  43.265640  33.827071   2.752865
 [7]   2.951867  57.551170 -27.336879  -5.650630  -4.485379  -3.158616
[13] -73.794042   1.506857  12.438407 -18.465337 -21.389414  19.762885
[19]  34.050923   4.432479

$rss
[1] 19156.69

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   6.8850471473  1.301673e-04  4.657933e-01 -6.367464e-01 -5.288243e-03
lambda  0.0001301673  1.310891e-08  7.945057e-06 -1.123532e-05 -4.620678e-07
delta   0.4657933186  7.945057e-06  3.163971e-02 -4.323644e-02 -3.146042e-04
rho    -0.6367464406 -1.123532e-05 -4.323644e-02  5.910390e-02  4.399826e-04
nu     -0.0052882435 -4.620678e-07 -3.146042e-04  4.399826e-04  1.986404e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 9.46273  0.02025  0.61706 -0.40000  0.94231 

Elasticity of Substitution: 1.667 

> summary( cesNmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.462731  81.207980   0.117    0.907    
lambda  0.020249   0.003543   5.714 1.10e-08 ***
delta   0.617057   5.505053   0.112    0.911    
rho    -0.400000   7.524079  -0.053    0.958    
nu      0.942308   0.137936   6.831 8.41e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.9489 
Multiple R-squared: 0.9891777 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     20.900    0.08    0.936

> 
> ## Nelder-Mead, multErr, VRS
> cesNmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead", multErr = TRUE )
> print.default( cesNmMeVrs )
$optim
$optim$par
    gamma     delta        nu 
0.6320853 0.6585930 1.6884604 

$optim$value
[1] 0.03280247

$optim$counts
function gradient 
     416       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 0.6320853  0.6585930 -0.1000000  1.6884604 

$iter
[1] 416

$convergence
[1] TRUE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.1806 1076.4851 1099.5688 1167.7743 1159.7796 1186.3761 1239.2582
 [8] 1208.6715 1162.3582 1214.0103 1291.6182 1553.4891 1676.7967 1728.7846
[15] 1601.5476 1591.4764 1644.0091 1719.8211 1882.5106 2059.6606

$residuals
 [1] -3.535366e-02 -1.116830e-01 -2.765285e-02  3.438365e-03  1.568658e-02
 [6] -4.772690e-04  8.035769e-05  6.400420e-02  3.827194e-02  5.168679e-02
[11]  5.202450e-02 -8.211987e-03 -6.260794e-02 -1.917005e-02  2.658097e-02
[16]  2.148004e-02  6.687262e-03  2.059028e-02  2.604620e-03 -3.345525e-02

$rss
[1] 0.03280247

$cov.unscaled
            gamma        delta          rho          nu
gamma  40747.8559  23490.34019 -33375.88535 -133.447198
delta  23490.3402  13572.83957 -19296.45178  -63.556412
rho   -33375.8854 -19296.45178  27439.86509   86.073466
nu      -133.4472    -63.55641     86.07347    6.539542

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 0.6321  0.6586 -0.1000  1.6885 

Elasticity of Substitution: 1.111 

> summary( cesNmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 416 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6321     8.1751   0.077    0.938    
delta   0.6586     4.7182   0.140    0.889    
rho    -0.1000     6.7086  -0.015    0.988    
nu      1.6885     0.1036  16.303   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.04049844 
Multiple R-squared: 0.963771 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      8.282   0.134    0.893

> vcov( cesNmMeVrs )
            gamma       delta         rho          nu
gamma  66.8315247  38.5270640 -54.7405811 -0.21886991
delta  38.5270640  22.2611360 -31.6485682 -0.10424038
rho   -54.7405811 -31.6485682  45.0047734  0.14117113
nu     -0.2188699  -0.1042404   0.1411711  0.01072566
> 
> ## Conjugate Gradients, CRS
> cesCg <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", rho = 2 )
> print.default( cesCg )
$optim
$optim$par
     gamma      delta 
34.5396489  0.4930429 

$optim$value
[1] 166153.1

$optim$counts
function gradient 
     754      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 

$iter
function gradient 
     754      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.407
 [9] 1237.616 1281.315 1315.772 1468.139 1529.112 1582.098 1549.008 1566.589
[17] 1647.888 1722.388 1832.822 1934.988

$residuals
 [1] -203.864954 -226.691326 -143.889756  -52.609858  -46.272367  -54.310192
 [7]  -34.182586   12.154223  -29.909801   -2.906846   44.820825   72.645586
[13]   45.922856  113.861517   95.680850   59.442105    7.152052   33.212040
[19]   54.598040   56.905969

$rss
[1] 166153.1

$cov.unscaled
           gamma     delta         rho
gamma 234706.966 8637.0131 -11138.7886
delta   8637.013  317.8370   -409.9119
rho   -11138.789 -409.9119    528.7098

attr(,"class")
[1] "cesEst" "list"  
> print( cesCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 754 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.540  44157.276   0.001    0.999
delta     0.493   1624.956   0.000    1.000
rho       2.000   2095.791   0.001    0.999

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   232.8657   0.001    0.999

> coef( cesCg )
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 
> vcov( cesCg )
           gamma    delta       rho
gamma 1949864992 71753343 -92537236
delta   71753343  2640481  -3405407
rho    -92537236 -3405407   4392340
> coef( summary( cesCg ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5396489  44157.276 0.0007821961 0.9993759
delta  0.4930429   1624.956 0.0003034193 0.9997579
rho    2.0000000   2095.791 0.0009542936 0.9992386
> 
> ## Conjugate Gradients, TC, CRS
> cesCgTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "CG", rho = 0.2 )
> print.default( cesCgTc )
$optim
$optim$par
      gamma      lambda       delta 
10.81059812  0.01390654  0.49593039 

$optim$value
[1] 24727.63

$optim$counts
function gradient 
     709      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho 
10.81059812  0.01390654  0.49593039  0.20000000 

$iter
function gradient 
     709      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.8333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
10.81051  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.2

$fitted.values
 [1]  989.5014 1056.8814 1086.5674 1136.6414 1148.6832 1180.3811 1228.3889
 [8] 1230.8275 1217.9430 1269.1065 1332.7201 1507.5766 1598.1968 1654.5748
[15] 1609.6799 1629.8635 1692.3816 1766.6578 1892.0041 2023.7088

$residuals
 [1] -43.368408 -94.150906 -16.988248  35.155036  29.432829   5.428949
 [7]  10.968911  57.733399 -10.236834   9.301984  27.872560  33.207537
[13] -23.162159  41.384636  35.009228  -3.832395 -37.341743 -11.057972
[19]  -4.583874 -31.814817

$rss
[1] 24729.24

$cov.unscaled
               gamma        lambda         delta           rho
gamma   6.480681e+00  5.215003e-06  3.912553e-01 -5.028534e-01
lambda  5.215003e-06  2.287430e-09  4.340670e-07 -6.878850e-07
delta   3.912553e-01  4.340670e-07  2.362960e-02 -3.037925e-02
rho    -5.028534e-01 -6.878850e-07 -3.037925e-02  3.906814e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Coefficients:
   gamma   lambda    delta      rho 
10.81060  0.01391  0.49593  0.20000 

Elasticity of Substitution: 0.8333 

> summary( cesCgTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.2 
Convergence NOT achieved after 709 function and 101 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  10.810598  89.516013   0.121    0.904    
lambda  0.013907   0.001682   8.269   <2e-16 ***
delta   0.495930   5.405285   0.092    0.927    
rho     0.200000   6.950271   0.029    0.977    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 35.16336 
Multiple R-squared: 0.9860296 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.8333     4.8266   0.173    0.863

> 
> ## Conjugate Gradients, VRS
> cesCgVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,
+    rho = -0.1 )
Warning message:
In cesEst("qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,  :
  internal problem: the minimum of the objective function returned by the solver (203705.13978051) is not equal to the RSS calculated from the residuals (204528.553498924)
> print.default( cesCgVrs )
$optim
$optim$par
    gamma     delta        nu 
8.8515065 0.6795295 1.1311791 

$optim$value
[1] 203705.1

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1122.963 1194.112 1211.767 1259.536 1254.068 1273.210 1311.019 1290.616
 [9] 1256.670 1294.531 1348.553 1526.113 1605.787 1640.599 1561.032 1555.905
[17] 1593.248 1643.907 1747.473 1856.112

$residuals
 [1] -176.829703 -231.381442 -142.187837  -87.739686  -75.951626  -87.400098
 [7]  -71.661405   -2.055216  -48.963358  -16.122749   12.039515   14.670692
[13]  -30.752517   55.360099   83.657602   70.126526   61.791979  111.692557
[19]  139.947236  135.782096

$rss
[1] 204528.6

$cov.unscaled
             gamma         delta           rho            nu
gamma  3.501241530  2.150759e-01 -3.162004e-01 -6.611720e-04
delta  0.215075883  1.324607e-02 -1.948673e-02 -3.042148e-05
rho   -0.316200438 -1.948673e-02  2.867386e-02  4.146114e-05
nu    -0.000661172 -3.042148e-05  4.146114e-05  3.295931e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.8515  0.6795 -0.1000  1.1312 

Elasticity of Substitution: 1.111 

> summary( cesCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.8515   189.2226   0.047    0.963    
delta   0.6795    11.6387   0.058    0.953    
rho    -0.1000    17.1240  -0.006    0.995    
nu      1.1312     0.1836   6.161 7.21e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 101.1258 
Multiple R-squared: 0.8844548 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     21.141   0.053    0.958

> coef( cesCgVrs )
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 
> vcov( cesCgVrs )
             gamma        delta           rho         nu
gamma 35805.193280 2199.4579639 -3233.6009115 -6.7614281
delta  2199.457964  135.4599782  -199.2795894 -0.3111031
rho   -3233.600912 -199.2795894   293.2311184  0.4239993
nu       -6.761428   -0.3111031     0.4239993  0.0337056
> coef( summary( cesCgVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  8.8515065 189.2226025  0.04677827 9.626899e-01
delta  0.6795295  11.6387275  0.05838520 9.534418e-01
rho   -0.1000000  17.1239925 -0.00583976 9.953406e-01
nu     1.1311791   0.1835908  6.16141365 7.209838e-10
> 
> ## Simulated Annealing, CRS
> cesSann <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", rho = 2 )
> print.default( cesSann )
$optim
$optim$par
     gamma      delta 
35.9750345  0.5349214 

$optim$value
[1] 166103.7

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150.108 1189.519 1213.574 1224.493 1224.478 1240.210 1273.633 1276.512
 [9] 1237.713 1281.422 1315.874 1468.252 1529.226 1582.232 1549.164 1566.764
[17] 1648.114 1722.652 1833.119 1935.303

$residuals
 [1] -203.974896 -226.788429 -143.994408  -52.696204  -46.361476  -54.399985
 [7]  -34.275346   12.048473  -30.006594   -3.013969   44.718858   72.531607
[13]   45.808175  113.727771   95.525235   59.267615    6.926282   32.948212
[19]   54.301735   56.591233

$rss
[1] 166103.7

$cov.unscaled
          gamma      delta         rho
gamma 305442.43 11589.3086 -15016.6596
delta  11589.31   439.7326   -569.7910
rho   -15016.66  -569.7910    738.3859

attr(,"class")
[1] "cesEst" "list"  
> print( cesSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Coefficients:
  gamma   delta     rho 
35.9750  0.5349  2.0000 

Elasticity of Substitution: 0.3333 

> summary( cesSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.598e+01  5.037e+04   0.001    0.999
delta 5.349e-01  1.911e+03   0.000    1.000
rho   2.000e+00  2.476e+03   0.001    0.999

Residual standard error: 91.1328 
Multiple R-squared: 0.9061623 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   275.1528   0.001    0.999

> coef( cesSann )
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 
> vcov( cesSann )
           gamma    delta        rho
gamma 2536756674 96251380 -124716172
delta   96251380  3652062   -4732221
rho   -124716172 -4732221    6132434
> coef( summary( cesSann ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 35.9750345  50366.226 0.0007142690 0.9994301
delta  0.5349214   1911.037 0.0002799116 0.9997767
rho    2.0000000   2476.375 0.0008076321 0.9993556
> 
> ## Simulated Annealing, TC, CRS
> cesSannTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "SANN", rho = 0 )
> print.default( cesSannTc )
$optim
$optim$par
     gamma     lambda      delta 
8.54857873 0.01547997 0.50607610 

$optim$value
[1] 19128.29

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho 
8.54857873 0.01547997 0.50607610 0.00000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
8.455537 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  971.8813 1047.6385 1075.9469 1137.9544 1150.1649 1184.0424 1233.8051
 [8] 1230.7774 1223.1290 1272.5063 1343.1881 1521.6833 1618.2881 1668.5988
[15] 1612.2827 1626.6476 1673.8201 1739.8356 1860.9029 1992.9330

$residuals
 [1] -25.7483028 -84.9080648  -6.3677766  33.8421117  27.9511578   1.7675765
 [7]   5.5527490  57.7835621 -15.4228233   5.9022469  17.4045573  19.1007672
[13] -43.2534432  27.3606225  32.4063672  -0.6164541 -18.7802575  15.7641813
[19]  26.5173178  -1.0389470

$rss
[1] 19128.29

$cov.unscaled
               gamma        lambda         delta           rho
gamma   3.500017e+00  4.001765e-06  2.634223e-01 -3.385170e-01
lambda  4.001765e-06  2.308531e-09  4.150659e-07 -6.527719e-07
delta   2.634223e-01  4.150659e-07  1.983370e-02 -2.549625e-02
rho    -3.385170e-01 -6.527719e-07 -2.549625e-02  3.278491e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
8.54858 0.01548 0.50608 0.00000 

Elasticity of Substitution: 1 

> summary( cesSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.548579  57.857289   0.148    0.883    
lambda  0.015480   0.001486  10.418   <2e-16 ***
delta   0.506076   4.355368   0.116    0.907    
rho     0.000000   5.599639   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.92595 
Multiple R-squared: 0.9891938 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.0        5.6   0.179    0.858

> 
> ## Simulated Annealing, VRS
> cesSannVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesSannVrs )
$optim
$optim$par
    gamma     delta        nu 
8.7693309 0.8783289 1.3340988 

$optim$value
[1] 70750.63

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 

$iter
[1] 10000

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1063.412 1124.750 1150.808 1180.631 1178.165 1198.808 1241.617 1234.555
 [9] 1189.434 1240.116 1291.485 1494.589 1581.636 1641.728 1576.575 1588.316
[17] 1672.413 1758.387 1902.093 2043.834

$residuals
 [1] -117.27868333 -162.01943218  -81.22885081   -8.83433184   -0.04859453
 [6]  -12.99840388   -2.25907866   54.00629931   18.27206874   38.29291875
[11]   69.10748044   46.19467942   -6.60086308   54.23119520   68.11389876
[16]   37.71489156  -17.37266777   -2.78762559  -14.67269187  -51.93980310

$rss
[1] 70750.63

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.8326439396  1.424502e-01 -4.266764e-01 -6.305057e-04
delta  0.1424502193  7.184148e-03 -2.153664e-02 -2.362488e-05
rho   -0.4266763728 -2.153664e-02  6.458166e-02  6.422393e-05
nu    -0.0006305057 -2.362488e-05  6.422393e-05  3.464149e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.7693  0.8783 -0.1000  1.3341 

Elasticity of Substitution: 1.111 

> summary( cesSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.7693   100.1028   0.088    0.930    
delta   0.8783     5.0412   0.174    0.862    
rho    -0.1000    15.1149  -0.007    0.995    
nu      1.3341     0.1107  12.051   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.47715 
Multiple R-squared: 0.9600305 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     18.660    0.06    0.953

> coef( cesSannVrs )
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 
> vcov( cesSannVrs )
             gamma        delta           rho          nu
gamma 10020.567489 503.92215423 -1509.3811578 -2.23043400
delta   503.922154  25.41415176   -76.1865494 -0.08357375
rho   -1509.381158 -76.18654937   228.4596801  0.22719420
nu       -2.230434  -0.08357375     0.2271942  0.01225454
> coef( summary( cesSannVrs ) )
        Estimate  Std. Error      t value     Pr(>|t|)
gamma  8.7693309 100.1027846  0.087603267 9.301920e-01
delta  0.8783289   5.0412451  0.174228568 8.616858e-01
rho   -0.1000000  15.1148827 -0.006615996 9.947212e-01
nu     1.3340988   0.1107002 12.051456311 1.905532e-33
> 
> ## BFGS, CRS
> cesBfgs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", rho = 2 )
> print.default( cesBfgs )
$optim
$optim$par
   gamma    delta 
79.50010  2.62027 

$optim$value
[1] 165640.8

$optim$counts
function gradient 
     368      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
   gamma    delta      rho 
79.50010  2.62027  2.00000 

$iter
function gradient 
     368      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.868 1189.115 1213.214 1223.949 1223.960 1239.681 1273.095 1276.093
 [9] 1237.253 1281.011 1315.376 1467.699 1528.612 1581.737 1548.912 1566.669
[17] 1648.411 1723.225 1833.875 1936.119

$residuals
 [1] -203.735069 -226.384387 -143.634653  -52.152455  -45.843690  -53.871219
 [7]  -33.737465   12.467554  -29.546322   -2.602356   45.217009   73.085530
[13]   46.422961  114.222145   95.777552   59.362015    6.628539   32.374947
[19]   53.545231   55.774537

$rss
[1] 165640.8

$cov.unscaled
           gamma      delta        rho
gamma 47098357.1 3433239.66 260688.533
delta  3433239.7  250266.62  19003.125
rho     260688.5   19003.13   1443.072

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Coefficients:
gamma delta   rho 
79.50  2.62  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 368 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma     79.50  624556.31   0.000        1
delta      2.62   45527.12   0.000        1
rho        2.00    3457.11   0.001        1

Residual standard error: 91.00573 
Multiple R-squared: 0.9064238 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   384.1229   0.001    0.999

> coef( cesBfgs )
   gamma    delta      rho 
79.50010  2.62027  2.00000 
> vcov( cesBfgs )
             gamma       delta        rho
gamma 390070579073 28434235642 2159033422
delta  28434235642  2072718732  157384686
rho     2159033422   157384686   11951583
> coef( summary( cesBfgs ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 79.50010 624556.306 1.272905e-04 0.9998984
delta  2.62027  45527.121 5.755405e-05 0.9999541
rho    2.00000   3457.106 5.785185e-04 0.9995384
> 
> ## BFGS, VRS
> cesBfgsVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesBfgsVrs )
$optim
$optim$par
    gamma     delta        nu 
1.3490506 0.7070137 1.5786234 

$optim$value
[1] 50055.11

$optim$counts
function gradient 
     565      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.3490506  0.7070137 -0.1000000  1.5786234 

$iter
function gradient 
     565      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1005.354 1092.588 1116.158 1174.413 1167.850 1192.712 1242.538 1218.032
 [9] 1172.509 1223.366 1293.674 1537.462 1649.756 1703.024 1593.323 1588.792
[17] 1648.262 1725.380 1880.833 2046.231

$residuals
 [1]  -59.220920 -129.857045  -46.579254   -2.617012   10.265978   -6.901556
 [7]   -3.180656   70.528511   35.197021   55.042794   66.918546    3.322500
[13]  -74.721144   -7.064593   51.366577   37.239441    6.778133   30.219922
[19]    6.587091  -54.337395

$rss
[1] 50055.11

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.831117e-02  2.250345e-02 -3.480309e-02 -9.553316e-05
delta  2.250345e-02  6.484294e-03 -1.003521e-02 -1.992437e-05
rho   -3.480309e-02 -1.003521e-02  1.553414e-02  2.825631e-05
nu    -9.553316e-05 -1.992437e-05  2.825631e-05  3.448618e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 1.349  0.707 -0.100  1.579 

Elasticity of Substitution: 1.111 

> summary( cesBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 565 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.3491    13.9998   0.096    0.923    
delta   0.7070     4.0285   0.176    0.861    
rho    -0.1000     6.2352  -0.016    0.987    
nu      1.5786     0.0929  16.992   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02755 
Multiple R-squared: 0.9717221 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.698   0.144    0.885

> coef( cesBfgsVrs )
     gamma      delta        rho         nu 
 1.3490506  0.7070137 -0.1000000  1.5786234 
> vcov( cesBfgsVrs )
            gamma        delta          rho           nu
gamma 195.9937174  56.32063230 -87.10362955 -0.239096152
delta  56.3206323  16.22860242 -25.11567399 -0.049865839
rho   -87.1036295 -25.11567399  38.87815841  0.070718650
nu     -0.2390962  -0.04986584   0.07071865  0.008631048
> coef( summary( cesBfgsVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.3490506 13.99977562  0.09636230 9.232328e-01
delta  0.7070137  4.02847396  0.17550411 8.606835e-01
rho   -0.1000000  6.23523523 -0.01603789 9.872042e-01
nu     1.5786234  0.09290343 16.99208863 9.398215e-65
> 
> ## BFGS, TC, VRS
> cesBfgsTcVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4 )
> print.default( cesBfgsTcVrs )
$optim
$optim$par
      gamma      lambda       delta          nu 
15.23730625  0.01902593  0.71799934  0.91415071 

$optim$value
[1] 17026.61

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
15.23730625  0.01902593  0.71799934 -0.40000000  0.91415071 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957.1373 1034.6487 1063.7367 1131.4010 1147.0798 1183.8508 1235.0587
 [8] 1233.8992 1234.8562 1284.2276 1358.7341 1530.2612 1628.3017 1677.1233
[15] 1625.4566 1642.0430 1684.3828 1748.4858 1865.9297 1995.9954

$residuals
 [1] -11.004259 -71.918185   5.842426  40.395463  31.036274   1.959211
 [7]   4.299147  54.661696 -27.149983  -5.819089   1.858495  10.522865
[13] -53.267026  18.836076  19.232509 -16.011852 -29.342889   7.114018
[19]  21.490549  -4.101358

$rss
[1] 17026.61

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma  12.440130327  1.754550e-04  4.886806e-01 -7.783367e-01 -7.242974e-03
lambda  0.000175455  1.298587e-08  6.108029e-06 -1.001055e-05 -4.604104e-07
delta   0.488680634  6.108029e-06  1.930174e-02 -3.073543e-02 -2.453345e-04
rho    -0.778336658 -1.001055e-05 -3.073543e-02  4.895647e-02  3.972359e-04
nu     -0.007242974 -4.604104e-07 -2.453345e-04  3.972359e-04  1.990237e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
15.23731  0.01903  0.71800 -0.40000  0.91415 

Elasticity of Substitution: 1.667 

> summary( cesBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   15.237306 102.910940   0.148    0.882    
lambda   0.019026   0.003325   5.722 1.05e-08 ***
delta    0.717999   4.053660   0.177    0.859    
rho     -0.400000   6.455860  -0.062    0.951    
nu       0.914151   0.130167   7.023 2.17e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.17757 
Multiple R-squared: 0.9903811 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     17.933   0.093    0.926

> 
> ## BFGS, TC, multErr, VRS
> cesBfgsTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4,
+    multErr = TRUE )
Warning message:
In log(yHat) : NaNs produced
> print.default( cesBfgsTcMeVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
3.39834128 0.01492379 0.67020248 1.19796460 

$optim$value
[1] 0.01443339

$optim$counts
function gradient 
     231      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 3.39834128  0.01492379  0.67020248 -0.40000000  1.19796460 

$iter
function gradient 
     231      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
1.659179 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.3535 1032.2872 1058.6071 1140.9418 1149.4239 1186.1376 1241.1885
 [8] 1224.1084 1214.5904 1264.1445 1349.6623 1561.4328 1678.1142 1722.7472
[15] 1630.9573 1632.5113 1662.8602 1724.0864 1856.1553 2007.0090

$residuals
 [1]  0.0082563574 -0.0697586577  0.0103112975  0.0266839816  0.0246557290
 [6] -0.0002762344 -0.0014759901  0.0513132507 -0.0056840564  0.0112203289
[11]  0.0080659422 -0.0133124162 -0.0633933759 -0.0156716117  0.0083842126
[16] -0.0039773444 -0.0047140614  0.0181132666  0.0167036264 -0.0075595983

$rss
[1] 0.01443339

$cov.unscaled
               gamma      lambda         delta           rho            nu
gamma  1513947.45347 53.02908420 213667.991152 -310257.59175 -2883.7166957
lambda      53.02908  0.02009633      6.160347      -9.33699    -0.8061152
delta   213667.99115  6.16034683  30309.131777  -44000.78017  -337.6718872
rho    -310257.59175 -9.33698953 -44000.780168   63896.25400   500.8649624
nu       -2883.71670 -0.80611521   -337.671887     500.86496    38.8744560

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 3.39834  0.01492  0.67020 -0.40000  1.19796 

Elasticity of Substitution: 1.667 

> summary( cesBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 231 function and 100 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   3.398341  33.054047   0.103    0.918    
lambda  0.014924   0.003808   3.919 8.90e-05 ***
delta   0.670202   4.676877   0.143    0.886    
rho    -0.400000   6.790581  -0.059    0.953    
nu      1.197965   0.167495   7.152 8.54e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02686391 
Multiple R-squared: 0.9840589 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     18.863   0.088     0.93

> 
> ## L-BFGS-B with constrained parameters, CRS
> cesBfgsCon <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    rho = 2 )
> print.default( cesBfgsCon )
$optim
$optim$par
   gamma    delta 
49.14295  1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      55       55 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
function gradient 
      55       55 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  3.250869e+02  1.325451e+01 -5.896876e+12
delta  1.325451e+01  5.404160e-01 -2.402258e+11
rho   -5.896876e+12 -2.402258e+11  1.508225e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 55 function and 55 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.642e+03   0.030    0.976
delta 1.000e+00  6.694e+01   0.015    0.988
rho   2.000e+00  1.118e+14   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  1.243e+13       0        1

> coef( cesBfgsCon )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesBfgsCon )
              gamma         delta           rho
gamma  2.695496e+06  1.099014e+05 -4.889464e+16
delta  1.099014e+05  4.480923e+03 -1.991860e+15
rho   -4.889464e+16 -1.991860e+15  1.250563e+28
> coef( summary( cesBfgsCon ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.641797e+03 2.993242e-02 0.9761209
delta  1.00000 6.693970e+01 1.493882e-02 0.9880810
rho    2.00000 1.118286e+14 1.788452e-14 1.0000000
> 
> ## L-BFGS-B with constrained parameters, TC, CRS
> cesBfgsConTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 1.2 )
> print.default( cesBfgsConTc )
$optim
$optim$par
       gamma       lambda        delta 
23.444972741  0.008565996  0.454640378 

$optim$value
[1] 66746.14

$optim$counts
function gradient 
      15       15 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
       gamma       lambda        delta          rho 
23.444972741  0.008565996  0.454640378  1.200000000 

$iter
function gradient 
      15       15 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
23.44378  0.01500  0.50000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 1.2

$fitted.values
 [1] 1044.011 1090.441 1121.592 1143.087 1152.659 1177.554 1219.642 1231.767
 [9] 1205.117 1257.785 1303.445 1466.877 1541.318 1607.044 1584.757 1615.050
[17] 1709.978 1800.455 1931.170 2056.209

$residuals
 [1]  -97.878492 -127.710092  -52.012776   28.709405   25.457194    8.256459
 [7]   19.716074   56.793991    2.589161   20.623998   57.147578   73.906796
[13]   33.717077   88.915502   59.931853   10.981138  -54.937839  -44.855063
[19]  -43.749798  -64.315428

$rss
[1] 66746.14

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.235249e+03  1.338288e-04  4.593388e+01 -5.969757e+01
lambda  1.338288e-04  2.221134e-09  5.428938e-06 -8.128525e-06
delta   4.593388e+01  5.428938e-06  1.708229e+00 -2.220413e+00
rho    -5.969757e+01 -8.128525e-06 -2.220413e+00  2.886959e+00

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Coefficients:
    gamma    lambda     delta       rho 
23.444973  0.008566  0.454640  1.200000 

Elasticity of Substitution: 0.4545 

> summary( cesBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 1.2 
Convergence achieved after 15 function and 15 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)   
gamma  2.344e+01  2.030e+03   0.012  0.99079   
lambda 8.566e-03  2.723e-03   3.146  0.00165 **
delta  4.546e-01  7.550e+01   0.006  0.99520   
rho    1.200e+00  9.816e+01   0.012  0.99025   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 57.76943 
Multiple R-squared: 0.9622928 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545    20.2802   0.022    0.982

> 
> ## L-BFGS-B with constrained parameters, VRS
> cesBfgsConVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesBfgsConVrs )
$optim
$optim$par
    gamma     delta        nu 
1.2919605 0.7035411 1.5842276 

$optim$value
[1] 50044.76

$optim$counts
function gradient 
     140      140 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho         nu 
 1.2919605  0.7035411 -0.1000000  1.5842276 

$iter
function gradient 
     140      140 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935768 -129.134856  -45.803144   -2.474901   10.500375   -6.762992
 [7]   -3.202812   70.899604   35.578998   55.418745   66.865223    2.321858
[13]  -76.318912   -8.503766   50.966645   37.210747    7.301702   30.938300
[19]    7.036086  -54.431195

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0720414194  2.155691e-02 -3.311182e-02 -9.144050e-05
delta  0.0215569062  6.468114e-03 -9.941866e-03 -1.984659e-05
rho   -0.0331118204 -9.941866e-03  1.528462e-02  2.795986e-05
nu    -0.0000914405 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 140 function and 140 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42627   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesBfgsConVrs )
     gamma      delta        rho         nu 
 1.2919605  0.7035411 -0.1000000  1.5842276 
> vcov( cesBfgsConVrs )
            gamma       delta          rho          nu
gamma 180.2647794  53.9405105 -82.85365634 -0.22880589
delta  53.9405105  16.1847614 -24.87691513 -0.04966090
rho   -82.8536563 -24.8769151  38.24576394  0.06996221
nu     -0.2288059  -0.0496609   0.06996221  0.00862821
> coef( summary( cesBfgsConVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919605 13.42627198  0.09622630 9.233408e-01
delta  0.7035411  4.02302888  0.17487847 8.611751e-01
rho   -0.1000000  6.18431596 -0.01616994 9.870988e-01
nu     1.5842276  0.09288816 17.05521624 3.196877e-65
> 
> ## L-BFGS-B with constrained parameters, TC, multErr, CRS
> cesBfgsConTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 0, multErr = TRUE )
> print.default( cesBfgsConTcMe )
$optim
$optim$par
     gamma     lambda      delta 
5.85361392 0.01805526 0.39490154 

$optim$value
[1] 0.01176297

$optim$counts
function gradient 
      61       61 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma     lambda      delta        rho 
5.85361392 0.01805526 0.39490154 0.00000000 

$iter
function gradient 
      61       61 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

$method
[1] "L-BFGS-B"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.132777 0.015000 0.500000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 0

$fitted.values
 [1]  949.0079 1031.6314 1060.1223 1132.1532 1146.0116 1183.0179 1235.6641
 [8] 1230.1903 1228.2329 1278.0470 1356.1980 1540.2864 1644.2924 1692.5329
[15] 1629.0393 1641.1413 1678.8005 1741.2151 1862.8111 1999.5874

$residuals
 [1] -0.0030339779 -0.0691231633  0.0088810160  0.0344166990  0.0276288514
 [6]  0.0023573836  0.0029848444  0.0463571583 -0.0168536061  0.0002828528
[11]  0.0032351797  0.0003230963 -0.0430328403  0.0020224433  0.0095609505
[16] -0.0092497824 -0.0142544461  0.0082273778  0.0131242562 -0.0038549016

$rss
[1] 0.01176297

$cov.unscaled
               gamma        lambda         delta           rho
gamma  3624858.69704 -11.786529803 396648.969204 -5.310814e+05
lambda     -11.78653   0.003380629     -1.114713  1.294947e+00
delta   396648.96920  -1.114713351  43418.058810 -5.815104e+04
rho    -531081.35770   1.294946501 -58151.035809  7.790454e+04

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
5.85361 0.01806 0.39490 0.00000 

Elasticity of Substitution: 1 

> summary( cesBfgsConTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 61 function and 61 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.85361   46.17310   0.127    0.899    
lambda  0.01806    0.00141  12.804   <2e-16 ***
delta   0.39490    5.05334   0.078    0.938    
rho     0.00000    6.76901   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02425177 
Multiple R-squared: 0.9870083 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.769   0.148    0.883

> 
> ## Levenberg-Marquardt, CRS
> cesLm <- cesEst( "qOutput", xxNames, germanFarms,
+    control = nls.lm.control( maxiter = 200 ), rho = 2 )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 424.32931322957, 74.692348716573 
residual sum-of-squares: 165527
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
    gamma     delta       rho 
424.32931  74.69235   2.00000 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.900 1189.109 1213.221 1223.911 1223.928 1239.648 1273.063 1276.090
 [9] 1237.236 1281.010 1315.356 1467.677 1528.580 1581.740 1548.971 1566.770
[17] 1648.616 1723.504 1834.208 1936.476

$residuals
 [1] -203.766520 -226.378181 -143.641344  -52.114341  -45.812017  -53.838066
 [7]  -33.704692   12.470611  -29.529971   -2.601540   45.236582   73.106893
[13]   46.454608  114.219710   95.717623   59.261457    6.424049   32.096011
[19]   53.211949   55.418191

$rss
[1] 165527.2

$cov.unscaled
             gamma        delta          rho
gamma 1.260255e+12 447895366222 2.623230e+07
delta 4.478954e+11 159182246904 9.322980e+06
rho   2.623230e+07      9322980 5.460812e+02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
424.33  74.69   2.00 

Elasticity of Substitution: 0.3333 

> summary( cesLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.243e+02  1.021e+08   0.000    1.000
delta 7.469e+01  3.630e+07   0.000    1.000
rho   2.000e+00  2.126e+03   0.001    0.999

Residual standard error: 90.97451 
Multiple R-squared: 0.906488 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   236.2141   0.001    0.999

> coef( cesLm )
    gamma     delta       rho 
424.32931  74.69235   2.00000 
> vcov( cesLm )
             gamma        delta          rho
gamma 1.043033e+16 3.706944e+15 217107972010
delta 3.706944e+15 1.317450e+15  77160357891
rho   2.171080e+11 7.716036e+10      4519565
> coef( summary( cesLm ) )
       Estimate   Std. Error      t value  Pr(>|t|)
gamma 424.32931 1.021290e+08 4.154838e-06 0.9999967
delta  74.69235 3.629669e+07 2.057828e-06 0.9999984
rho     2.00000 2.125927e+03 9.407661e-04 0.9992494
> 
> ## Levenberg-Marquardt, VRS
> cesLmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1 )
> print.default( cesLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 1.29196188463485, 0.703541220961595, 1.58422750324928 
residual sum-of-squares: 50045
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 

$iter
[1] 32

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935810 -129.134885  -45.803175   -2.474915   10.500358   -6.763007
 [7]   -3.202825   70.899582   35.578977   55.418722   66.865210    2.321864
[13]  -76.318894   -8.503755   50.966631   37.210723    7.301659   30.938249
[19]    7.036036  -54.431237

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204157e-02  2.155693e-02 -3.311186e-02 -9.144059e-05
delta  2.155693e-02  6.468114e-03 -9.941868e-03 -1.984659e-05
rho   -3.311186e-02 -9.941868e-03  1.528463e-02  2.795986e-05
nu    -9.144059e-05 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 32 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesLmVrs )
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 
> vcov( cesLmVrs )
            gamma       delta          rho          nu
gamma 180.2651521  53.9405661 -82.85375787 -0.22880613
delta  53.9405661  16.1847613 -24.87691987 -0.04966090
rho   -82.8537579 -24.8769199  38.24577862  0.06996223
nu     -0.2288061  -0.0496609   0.06996223  0.00862821
> coef( summary( cesLmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919619 13.42628586  0.09622631 9.233408e-01
delta  0.7035412  4.02302888  0.17487849 8.611751e-01
rho   -0.1000000  6.18431715 -0.01616993 9.870988e-01
nu     1.5842275  0.09288816 17.05521509 3.196940e-65
> 
> ## Levenberg-Marquardt, TC, VRS
> cesLmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", germanFarms, 
+    vrs = TRUE, control = nls.lm.control( maxiter = 200 ), rho = 0.7 )
> print.default( cesLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 5.34979875874733, 0.0188900972833775, 0.0770802852892864, 0.919420899115952 
residual sum-of-squares: 17259
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma     lambda      delta        rho         nu 
5.34979876 0.01889010 0.07708029 0.70000000 0.91942090 

$iter
[1] 17

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.5882353 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
17.68019  0.01500  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.7

$fitted.values
 [1]  958.5501 1035.1919 1064.7052 1130.2362 1146.1401 1182.7350 1233.9782
 [8] 1234.1465 1234.1275 1284.2525 1357.8861 1530.0074 1627.6132 1678.2490
[15] 1627.6011 1644.3033 1685.6108 1748.0747 1864.5658 1994.6657

$residuals
 [1] -12.417147 -72.461456   4.873970  41.560247  31.975893   3.075033
 [7]   5.379631  54.414392 -26.421312  -5.844022   2.706463  10.776674
[13] -52.578529  17.710401  17.088051 -18.272137 -30.570958   7.525074
[19]  22.854485  -2.771711

$rss
[1] 17258.59

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma   0.509942270  3.903100e-05  3.367516e-02 -1.526529e-01 -1.640960e-03
lambda  0.000039031  1.296254e-08  1.956392e-06 -9.147753e-06 -4.596097e-07
delta   0.033675161  1.956392e-06  2.285792e-03 -1.035332e-02 -7.874554e-05
rho    -0.152652872 -9.147753e-06 -1.035332e-02  4.690891e-02  3.633625e-04
nu     -0.001640960 -4.596097e-07 -7.874554e-05  3.633625e-04  1.987170e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma  lambda   delta     rho      nu 
5.34980 0.01889 0.07708 0.70000 0.91942 

Elasticity of Substitution: 0.5882 

> summary( cesLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.7 
Convergence achieved after 17 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   5.349799  20.977231   0.255    0.799    
lambda  0.018890   0.003345   5.648 1.62e-08 ***
delta   0.077080   1.404449   0.055    0.956    
rho     0.700000   6.362318   0.110    0.912    
nu      0.919421   0.130950   7.021 2.20e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.37566 
Multiple R-squared: 0.99025 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5882     2.2015   0.267    0.789

> 
> ## Levenberg-Marquardt, multErr, VRS
> cesLmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1, multErr = TRUE )
Warning messages:
1: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
2: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
> print.default( cesLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.623563049675481, 0.657577531795485, 1.6902421018723 
residual sum-of-squares: 0.0328
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 0.6235630  0.6575775 -0.1000000  1.6902421 

$iter
[1] 34

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.0373 1076.5391 1099.6120 1168.0333 1160.0075 1186.6411 1239.5879
 [8] 1208.8691 1162.5404 1214.2078 1291.9714 1554.2150 1677.7494 1729.6993
[15] 1602.0926 1591.9000 1644.2711 1720.0411 1882.8577 2060.2266

$residuals
 [1] -0.0352074289 -0.1117331633 -0.0276921022  0.0032165918  0.0154901232
 [6] -0.0007006005 -0.0001855839  0.0638407120  0.0381152045  0.0515241382
[11]  0.0517510742 -0.0086791534 -0.0631759824 -0.0196989731  0.0262407476
[16]  0.0212138519  0.0065278919  0.0204623934  0.0024202983 -0.0337300395

$rss
[1] 0.03280093

$cov.unscaled
            gamma       delta        rho          nu
gamma  39691.2339  23174.6246 -32880.494 -131.693161
delta  23174.6246  13562.1158 -19253.781  -63.525399
rho   -32880.4938 -19253.7811  27340.236   85.914000
nu      -131.6932    -63.5254     85.914    6.539541

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 0.6236  0.6576 -0.1000  1.6902 

Elasticity of Substitution: 1.111 

> summary( cesLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 34 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6236     8.0682   0.077    0.938    
delta   0.6576     4.7162   0.139    0.889    
rho    -0.1000     6.6962  -0.015    0.988    
nu      1.6902     0.1036  16.321   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.04049749 
Multiple R-squared: 0.9637727 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      8.267   0.134    0.893

> vcov( cesLmMeVrs )
            gamma       delta        rho          nu
gamma  65.0954683  38.0074614 -53.925538 -0.21598291
delta  38.0074614  22.2425002 -31.577096 -0.10418461
rho   -53.9255379 -31.5770958  44.839258  0.14090295
nu     -0.2159829  -0.1041846   0.140903  0.01072515
> 
> ## Newton-type, CRS
> cesNewton <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton", rho = 2 )
> print.default( cesNewton )
$nlm
$nlm$minimum
[1] 166153.1

$nlm$estimate
[1] 34.5395061  0.4930391

$nlm$gradient
[1] -36.889207  -1.759474

$nlm$code
[1] 2

$nlm$iterations
[1] 4


$coefficients
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 

$iter
[1] 4

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.406
 [9] 1237.616 1281.315 1315.771 1468.138 1529.111 1582.097 1549.008 1566.589
[17] 1647.887 1722.387 1832.822 1934.988

$residuals
 [1] -203.864672 -226.691036 -143.889460  -52.609561  -46.272070  -54.309891
 [7]  -34.182276   12.154535  -29.909499   -2.906533   44.821145   72.645944
[13]   45.923228  113.861903   95.681231   59.442491    7.152462   33.212472
[19]   54.598502   56.906457

$rss
[1] 166153.1

$cov.unscaled
           gamma     delta         rho
gamma 234701.746 8636.7979 -11138.5134
delta   8636.798  317.8282   -409.9006
rho   -11138.513 -409.9006    528.6955

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 4 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.539  44156.785   0.001    0.999
delta     0.493   1624.933   0.000    1.000
rho       2.000   2095.763   0.001    0.999

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   232.8625   0.001    0.999

> coef( cesNewton )
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 
> vcov( cesNewton )
           gamma    delta       rho
gamma 1949821687 71751557 -92534952
delta   71751557  2640408  -3405314
rho    -92534952 -3405314   4392221
> coef( summary( cesNewton ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5395061  44156.785 0.0007822016 0.9993759
delta  0.4930391   1624.933 0.0003034211 0.9997579
rho    2.0000000   2095.763 0.0009543066 0.9992386
> 
> ## Newton-type, TC, CRS
> cesNewtonTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", rho = 0.8 )
> print.default( cesNewtonTc )
$nlm
$nlm$minimum
[1] 56559.9

$nlm$estimate
[1] 18.985441390  0.009430307  0.469942519

$nlm$gradient
[1] 1196.34036   10.48599   33.57147

$nlm$code
[1] 2

$nlm$iterations
[1] 13


$coefficients
       gamma       lambda        delta          rho 
18.985441390  0.009430307  0.469942519  0.800000000 

$iter
[1] 13

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
18.98474  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1035.621 1085.759 1116.646 1142.983 1152.953 1178.973 1222.048 1232.534
 [9] 1208.129 1260.542 1309.169 1474.548 1551.629 1615.823 1589.632 1618.058
[17] 1706.983 1794.205 1923.635 2049.654

$residuals
 [1]  -89.4883367 -123.0283938  -47.0665411   28.8134451   25.1627794
 [6]    6.8373248   17.3099894   56.0268333   -0.4224311   17.8667749
[11]   51.4232435   66.2360951   23.4056198   80.1361398   55.0572991
[16]    7.9733090  -51.9434514  -38.6055822  -36.2152285  -57.7597717

$rss
[1] 56559.9

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.269979e+02  3.202797e-05  5.083181e+00 -6.567128e+00
lambda  3.202797e-05  2.228655e-09  1.506074e-06 -2.319315e-06
delta   5.083181e+00  1.506074e-06  2.034901e-01 -2.629509e-01
rho    -6.567128e+00 -2.319315e-06 -2.629509e-01  3.398818e-01

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Coefficients:
   gamma   lambda    delta      rho 
18.98544  0.00943  0.46994  0.80000 

Elasticity of Substitution: 0.5556 

> summary( cesNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.8 
Convergence achieved after 13 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.899e+01  5.993e+02   0.032 0.974727    
lambda 9.430e-03  2.511e-03   3.756 0.000172 ***
delta  4.699e-01  2.399e+01   0.020 0.984370    
rho    8.000e-01  3.100e+01   0.026 0.979414    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 53.1789 
Multiple R-squared: 0.9680474 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5556     9.5688   0.058    0.954

> 
> ## Newton-type, VRS
> cesNewtonVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesNewtonVrs )
$nlm
$nlm$minimum
[1] 50044.87

$nlm$estimate
[1] 1.2971852 0.7038965 1.5837468

$nlm$gradient
[1]  1260.920 -8240.314  7183.843

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
     gamma      delta        rho         nu 
 1.2971852  0.7038965 -0.1000000  1.5837468 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.196 1091.939 1115.463 1174.291 1167.644 1192.593 1242.568 1217.707
 [9] 1172.171 1223.037 1293.735 1538.391 1651.230 1704.361 1593.717 1588.853
[17] 1647.832 1724.782 1880.491 2046.392

$residuals
 [1]  -58.062542 -129.208947  -45.884171   -2.494595   10.471641   -6.783495
 [7]   -3.210122   70.853626   35.534848   55.371917   66.857621    2.393164
[13]  -76.195559   -8.401194   50.971864   37.178290    7.207746   30.817826
[19]    6.929365  -54.497868

$rss
[1] 50044.87

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.259990e-02  2.164137e-02 -3.326460e-02 -9.181148e-05
delta  2.164137e-02  6.468753e-03 -9.949743e-03 -1.985241e-05
rho   -3.326460e-02 -9.949743e-03  1.530734e-02  2.798681e-05
nu    -9.181148e-05 -1.985241e-05  2.798681e-05  3.448145e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2972  0.7039 -0.1000  1.5837 

Elasticity of Substitution: 1.111 

> summary( cesNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29719   13.47823   0.096    0.923    
delta  0.70390    4.02323   0.175    0.861    
rho   -0.10000    6.18892  -0.016    0.987    
nu     1.58375    0.09289  17.050   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02243 
Multiple R-squared: 0.9717279 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.641   0.145    0.884

> coef( cesNewtonVrs )
     gamma      delta        rho         nu 
 1.2971852  0.7038965 -0.1000000  1.5837468 
> vcov( cesNewtonVrs )
            gamma        delta          rho           nu
gamma 181.6626289  54.15197043 -83.23611941 -0.229734683
delta  54.1519704  16.18639520 -24.89668016 -0.049675570
rho   -83.2361194 -24.89668016  38.30269984  0.070029809
nu     -0.2297347  -0.04967557   0.07002981  0.008628098
> coef( summary( cesNewtonVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2971852 13.47822796  0.09624301 9.233276e-01
delta  0.7038965  4.02323193  0.17495796 8.611127e-01
rho   -0.1000000  6.18891750 -0.01615791 9.871084e-01
nu     1.5837468  0.09288756 17.05015060 3.486339e-65
> 
> ## Newton-type, TC, multErr, CRS
> cesNewtonTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", multErr = TRUE, rho = 0.3 )
> print.default( cesNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.01492337

$nlm$estimate
[1] 2.54914763 0.02056833 0.09054212

$nlm$gradient
[1] -0.0050508118 -0.0001117741 -0.0005658895

$nlm$code
[1] 2

$nlm$iterations
[1] 10


$coefficients
     gamma     lambda      delta        rho 
2.54914763 0.02056833 0.09054212 0.30000000 

$iter
[1] 10

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7692308 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

$method
[1] "Newton"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.497499 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.3

$fitted.values
 [1]  925.5654 1018.7387 1045.9746 1133.3518 1148.0378 1188.4420 1244.0290
 [8] 1232.1667 1237.6007 1285.8361 1374.1764 1564.4658 1677.7208 1718.8777
[15] 1640.3487 1645.1761 1662.3315 1713.9479 1830.5658 1968.9766

$residuals
 [1]  0.021978393 -0.056547063  0.022316230  0.033358564  0.025862331
 [6] -0.002217121 -0.003761976  0.044751896 -0.024451742 -0.005793186
[11] -0.009934188 -0.015252956 -0.063158905 -0.013422962  0.002642524
[16] -0.011705284 -0.004396015  0.024011158  0.030585874  0.011572061

$rss
[1] 0.01492337

$cov.unscaled
               gamma       lambda         delta           rho
gamma   2.973339e+05 -3.750430785  5.783963e+04 -224601.02726
lambda -3.750431e+00  0.003381098 -6.145425e-01       2.09496
delta   5.783963e+04 -0.614542465  1.125773e+04  -43732.71805
rho    -2.246010e+05  2.094960130 -4.373272e+04  169934.14995

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Coefficients:
  gamma  lambda   delta     rho 
2.54915 0.02057 0.09054 0.30000 

Elasticity of Substitution: 0.7692 

> summary( cesNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0.3 
Convergence achieved after 10 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   2.549148  14.895003   0.171    0.864    
lambda  0.020568   0.001588  12.949   <2e-16 ***
delta   0.090542   2.898303   0.031    0.975    
rho     0.300000  11.260528   0.027    0.979    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02731608 
Multiple R-squared: 0.9835177 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7692     6.6630   0.115    0.908

> 
> ## PORT, CRS
> cesPort <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", rho = 2 )
> print.default( cesPort )
$nlminb
$nlminb$par
   gamma    delta 
49.14295  1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 28

$nlminb$evaluations
function gradient 
      37       28 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 28

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 3.202073e+02 1.305668e+01 4.645382e+12
delta 1.305668e+01 5.323957e-01 1.894863e+11
rho   4.645382e+12 1.894863e+11 1.187250e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 28 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.629e+03   0.030    0.976
delta 1.000e+00  6.644e+01   0.015    0.988
rho   2.000e+00  9.922e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  1.102e+13       0        1

> coef( cesPort )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesPort )
             gamma        delta          rho
gamma 2.655037e+06 1.082610e+05 3.851773e+16
delta 1.082610e+05 4.414422e+03 1.571148e+15
rho   3.851773e+16 1.571148e+15 9.844221e+27
> coef( summary( cesPort ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.629428e+03 3.015963e-02 0.9759397
delta  1.00000 6.644112e+01 1.505092e-02 0.9879916
rho    2.00000 9.921805e+13 2.015762e-14 1.0000000
> 
> ## PORT, VRS
> cesPortVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesPortVrs )
$nlminb
$nlminb$par
    gamma     delta        nu 
1.2919627 0.7035412 1.5842274 

$nlminb$objective
[1] 50044.76

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 92

$nlminb$evaluations
function gradient 
     141       93 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
     gamma      delta        rho         nu 
 1.2919627  0.7035412 -0.1000000  1.5842274 

$iter
[1] 92

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935852 -129.134923  -45.803211   -2.474949   10.500325   -6.763039
 [7]   -3.202853   70.899551   35.578944   55.418692   66.865185    2.321857
[13]  -76.318891   -8.503747   50.966630   37.210722    7.301664   30.938261
[19]    7.036064  -54.431191

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204166e-02  2.155694e-02 -3.311188e-02 -9.144065e-05
delta  2.155694e-02  6.468115e-03 -9.941869e-03 -1.984659e-05
rho   -3.311188e-02 -9.941869e-03  1.528463e-02  2.795986e-05
nu    -9.144065e-05 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 92 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesPortVrs )
     gamma      delta        rho         nu 
 1.2919627  0.7035412 -0.1000000  1.5842274 
> vcov( cesPortVrs )
            gamma       delta          rho          nu
gamma 180.2653704  53.9406034 -82.85381455 -0.22880627
delta  53.9406034  16.1847641 -24.87692395 -0.04966090
rho   -82.8538146 -24.8769240  38.24578463  0.06996224
nu     -0.2288063  -0.0496609   0.06996224  0.00862821
> coef( summary( cesPortVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919627 13.42629399  0.09622631 9.233408e-01
delta  0.7035412  4.02302922  0.17487848 8.611751e-01
rho   -0.1000000  6.18431764 -0.01616993 9.870988e-01
nu     1.5842274  0.09288816 17.05521382 3.197009e-65
> 
> ## PORT, TC, VRS
> cesPortTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0 )
> print.default( cesPortTcVrs )
$nlminb
$nlminb$par
     gamma     lambda      delta         nu 
9.84254171 0.01898455 0.42366821 0.91558127 

$nlminb$objective
[1] 17104.64

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 49

$nlminb$evaluations
function gradient 
      97       50 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
     gamma     lambda      delta        rho         nu 
9.84254171 0.01898455 0.42366821 0.00000000 0.91558127 

$iter
[1] 49

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
8.455537 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  957.673 1034.846 1064.092 1130.967 1146.739 1183.448 1234.663 1234.007
 [9] 1234.632 1284.275 1358.451 1530.128 1627.985 1677.466 1626.230 1642.883
[17] 1684.866 1748.377 1865.448 1995.492

$residuals
 [1] -11.540024 -72.115303   5.487454  40.829072  31.376735   2.361977
 [7]   4.694524  54.553730 -26.925647  -5.866121   2.141736  10.655812
[13] -52.950210  18.493711  18.459262 -16.851797 -29.826437   7.222737
[19]  21.971824  -3.598481

$rss
[1] 17104.64

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   5.8107724305  1.183735e-04  3.994515e-01 -5.274814e-01 -4.890809e-03
lambda  0.0001183735  1.297628e-08  7.123790e-06 -9.689557e-06 -4.600820e-07
delta   0.3994514647  7.123790e-06  2.762628e-02 -3.647066e-02 -2.863705e-04
rho    -0.5274813830 -9.689557e-06 -3.647066e-02  4.816090e-02  3.846669e-04
nu     -0.0048908091 -4.600820e-07 -2.863705e-04  3.846669e-04  1.989012e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
9.84254 0.01898 0.42367 0.00000 0.91558 

Elasticity of Substitution: 1 

> summary( cesPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 49 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.842542  70.495096   0.140    0.889    
lambda  0.018985   0.003331   5.699 1.21e-08 ***
delta   0.423668   4.860749   0.087    0.931    
rho     0.000000   6.417846   0.000    1.000    
nu      0.915581   0.130425   7.020 2.22e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.24435 
Multiple R-squared: 0.990337 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.418   0.156    0.876

> 
> ## PORT, TC, multErr, VRS
> cesPortTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0, multErr = TRUE )
> print.default( cesPortTcMeVrs )
$nlminb
$nlminb$par
     gamma     lambda      delta         nu 
8.75839838 0.02001751 0.37062474 0.90645176 

$nlminb$objective
[1] 0.01151423

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 97

$nlminb$evaluations
function gradient 
     122       98 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
     gamma     lambda      delta        rho         nu 
8.75839838 0.02001751 0.37062474 0.00000000 0.90645176 

$iter
[1] 97

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

$method
[1] "PORT"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
2.132777 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  949.3256 1028.8841 1058.0479 1128.7104 1145.1563 1182.9784 1235.0519
 [8] 1233.4779 1236.7098 1286.1706 1362.9597 1535.2195 1635.2477 1683.3914
[15] 1629.9033 1645.5598 1683.0701 1744.4141 1860.4063 1990.9647

$residuals
 [1] -0.0033687287 -0.0664565932  0.0108396999  0.0374622432  0.0283754169
 [6]  0.0023907575  0.0034803975  0.0436882993 -0.0237316430 -0.0060533034
[11] -0.0017382225  0.0036180660 -0.0375170025  0.0074381494  0.0090306993
[16] -0.0119384669 -0.0167945006  0.0063918449  0.0144160356  0.0004666668

$rss
[1] 0.01151423

$cov.unscaled
               gamma       lambda         delta           rho            nu
gamma   9449273.3707 131.66163931 738453.172745 -1.015753e+06 -7200.1380052
lambda      131.6616   0.02008696      8.138856 -1.171049e+01    -0.8056946
delta    738453.1727   8.13885645  58095.964823 -7.988785e+04  -451.8192097
rho    -1015753.3820 -11.71049160 -79887.854880  1.098866e+05   635.3385601
nu        -7200.1380  -0.80569459   -451.819210  6.353386e+02    38.8561641

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
8.75840 0.02002 0.37062 0.00000 0.90645 

Elasticity of Substitution: 1 

> summary( cesPortTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 97 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.758398  73.756746   0.119    0.905    
lambda  0.020018   0.003401   5.886 3.95e-09 ***
delta   0.370625   5.783297   0.064    0.949    
rho     0.000000   7.953804   0.000    1.000    
nu      0.906452   0.149566   6.061 1.36e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02399399 
Multiple R-squared: 0.987283 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      7.954   0.126      0.9

> 
> ## DE, CRS
> cesDe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), rho = 2 )
> print.default( cesDe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
49.14295  1.00000 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   2.461368e+08 0.4777960
2   2.461368e+08 0.4777960
3   2.461368e+08 0.4777960
4   5.490614e+07 0.6860692
5   5.490614e+07 0.7143200
6   5.490614e+07 0.7143200
7   5.490614e+07 0.8545217
8   5.490614e+07 0.8545217
9   5.490614e+07 0.8545217
10  4.889844e+07 0.9911174
11  1.882526e+07 0.8281794
12  1.520592e+07 0.9453482
13  9.204574e+06 0.9867136
14  3.717930e+06 0.9911174
15  3.717930e+06 0.9911174
16  5.310791e+05 0.3135201
17  5.310791e+05 0.3135201
18  5.310791e+05 0.3135201
19  5.310791e+05 0.3135201
20  5.310791e+05 0.3135201
21  4.133519e+05 0.6683495
22  4.133519e+05 0.6683495
23  4.133519e+05 0.6683495
24  3.740911e+05 0.9415638
25  3.740911e+05 0.9415638
26  1.788024e+05 0.5541435
27  2.029005e+04 0.3763764
28  2.029005e+04 0.3763764
29  2.029005e+04 0.3763764
30  1.113322e+04 0.3029976
31  1.113322e+04 0.3029976
32  1.253000e+04 0.7710239
33  1.484909e+03 0.6132581
34  1.484909e+03 0.6132581
35  1.484909e+03 0.6132581
36  1.484909e+03 0.6132581
37  1.484909e+03 0.6132581
38  1.484909e+03 0.6132581
39  1.250759e+03 0.4917885
40  1.348185e+03 0.5830486
41  1.205382e+03 0.6464788
42  3.168435e+02 0.7477369
43  3.168435e+02 0.7477369
44  3.168435e+02 0.7477369
45  2.685659e+02 0.5830486
46  2.292573e+02 0.6320021
47  1.336541e+02 0.6421265
48  7.825878e+01 0.5818186
49  3.286531e+01 0.4515592
50  3.286531e+01 0.4515592
51  3.286531e+01 0.4515592
52  3.286531e+01 0.4515592
53  3.286531e+01 0.4515592
54  3.286531e+01 0.4515592
55  3.286531e+01 0.4515592
56  3.286531e+01 0.4515592
57  3.286531e+01 0.4515592
58  3.286531e+01 0.4515592
59  2.421965e+01 0.2398335
60  2.421965e+01 0.2398335
61  2.421965e+01 0.2398335
62  3.905778e+01 0.6284972
63  3.905778e+01 0.6284972
64  3.905778e+01 0.6284972
65  3.905778e+01 0.6284972
66  3.905778e+01 0.6284972
67  3.905778e+01 0.6284972
68  3.905778e+01 0.6284972
69  3.905778e+01 0.6284972
70  3.905778e+01 0.6284972
71  3.905778e+01 0.6297235
72  3.905778e+01 0.6297235
73  3.889066e+01 0.6251920
74  3.889066e+01 0.6251920
75  3.889066e+01 0.6251920
76  4.003707e+01 0.6630852
77  4.003707e+01 0.6630852
78  4.003707e+01 0.6630852
79  4.003707e+01 0.6630852
80  4.003707e+01 0.6630852
81  4.003707e+01 0.6630852
82  4.003707e+01 0.6630852
83  4.003707e+01 0.6630852
84  4.003707e+01 0.6630852
85  4.003707e+01 0.6630852
86  4.003707e+01 0.6630852
87  4.003707e+01 0.6630852
88  4.089243e+01 0.6927168
89  4.176544e+01 0.7213766
90  4.176544e+01 0.7213766
91  4.287882e+01 0.7611116
92  4.287882e+01 0.7611116
93  4.287882e+01 0.7611116
94  4.419685e+01 0.8073447
95  4.348215e+01 0.7822921
96  4.348215e+01 0.7822921
97  4.373711e+01 0.7919094
98  4.457508e+01 0.8224306
99  4.462293e+01 0.8239752
100 4.462293e+01 0.8239752
101 4.562172e+01 0.8611305
102 4.562172e+01 0.8611305
103 4.683206e+01 0.9077293
104 4.683206e+01 0.9077293
105 4.683206e+01 0.9077293
106 4.759237e+01 0.9385012
107 4.850444e+01 0.9738799
108 4.850444e+01 0.9738799
109 4.882512e+01 0.9874319
110 4.909235e+01 0.9980399
111 4.913798e+01 0.9996341
112 4.913798e+01 0.9996341
113 4.913798e+01 0.9996341
114 4.913798e+01 0.9996341
115 4.913798e+01 0.9996341
116 4.913798e+01 0.9996341
117 4.913798e+01 0.9996341
118 4.913798e+01 0.9996341
119 4.913798e+01 0.9996341
120 4.913798e+01 0.9996341
121 4.913798e+01 0.9996341
122 4.913798e+01 0.9996341
123 4.913798e+01 0.9996341
124 4.913798e+01 0.9996341
125 4.913798e+01 0.9996341
126 4.913798e+01 0.9996341
127 4.913798e+01 0.9996341
128 4.913798e+01 0.9996341
129 4.913798e+01 0.9996341
130 4.913798e+01 0.9996341
131 4.913798e+01 0.9996341
132 4.913798e+01 0.9996341
133 4.913798e+01 0.9996341
134 4.913798e+01 0.9996341
135 4.913798e+01 0.9996341
136 4.911941e+01 0.9991339
137 4.911941e+01 0.9991339
138 4.911941e+01 0.9991339
139 4.912463e+01 0.9992692
140 4.912463e+01 0.9992692
141 4.912463e+01 0.9992692
142 4.912463e+01 0.9992692
143 4.912463e+01 0.9992692
144 4.912463e+01 0.9992692
145 4.912578e+01 0.9993419
146 4.912578e+01 0.9993419
147 4.912623e+01 0.9993225
148 4.912973e+01 0.9994589
149 4.912973e+01 0.9994589
150 4.914056e+01 0.9998754
151 4.914027e+01 0.9999027
152 4.914027e+01 0.9999027
153 4.914027e+01 0.9999027
154 4.914027e+01 0.9999027
155 4.914027e+01 0.9999027
156 4.914027e+01 0.9999027
157 4.914233e+01 0.9999501
158 4.914233e+01 0.9999501
159 4.914359e+01 0.9999916
160 4.914359e+01 0.9999916
161 4.914359e+01 0.9999916
162 4.914359e+01 0.9999916
163 4.914359e+01 0.9999916
164 4.914359e+01 0.9999916
165 4.914279e+01 0.9999927
166 4.914279e+01 0.9999927
167 4.914279e+01 0.9999927
168 4.914279e+01 0.9999927
169 4.914279e+01 0.9999927
170 4.914279e+01 0.9999927
171 4.914279e+01 0.9999927
172 4.914279e+01 0.9999927
173 4.914279e+01 0.9999927
174 4.914277e+01 0.9999997
175 4.914277e+01 0.9999997
176 4.914277e+01 0.9999997
177 4.914277e+01 0.9999997
178 4.914277e+01 0.9999997
179 4.914277e+01 0.9999997
180 4.914277e+01 0.9999997
181 4.914295e+01 0.9999983
182 4.914306e+01 0.9999997
183 4.914306e+01 0.9999997
184 4.914289e+01 0.9999995
185 4.914289e+01 0.9999995
186 4.914295e+01 0.9999999
187 4.914295e+01 0.9999999
188 4.914295e+01 0.9999999
189 4.914295e+01 0.9999999
190 4.914295e+01 0.9999999
191 4.914295e+01 0.9999999
192 4.914295e+01 0.9999999
193 4.914295e+01 0.9999999
194 4.914295e+01 0.9999999
195 4.914297e+01 1.0000000
196 4.914297e+01 1.0000000
197 4.914297e+01 1.0000000
198 4.914297e+01 1.0000000
199 4.914297e+01 1.0000000
200 4.914296e+01 1.0000000

$member$bestvalit
  [1] 2.176446e+21 2.176446e+21 2.176446e+21 7.551486e+19 7.253623e+19
  [6] 7.253623e+19 6.066155e+19 6.066155e+19 6.066155e+19 4.149465e+19
 [11] 7.357331e+18 4.206481e+18 1.476849e+18 2.398800e+17 2.398800e+17
 [16] 1.540799e+16 1.540799e+16 1.540799e+16 1.540799e+16 1.540799e+16
 [21] 4.392170e+15 4.392170e+15 4.392170e+15 2.555516e+15 2.555516e+15
 [26] 9.904231e+14 1.869927e+13 1.869927e+13 1.869927e+13 6.971590e+12
 [31] 6.971590e+12 3.476389e+12 5.860743e+10 5.860743e+10 5.860743e+10
 [36] 5.860743e+10 5.860743e+10 5.860743e+10 5.163736e+10 5.060666e+10
 [41] 3.612582e+10 1.730270e+09 1.730270e+09 1.730270e+09 1.572438e+09
 [46] 9.832997e+08 2.378797e+08 4.918704e+07 1.676665e+05 1.676665e+05
 [51] 1.676665e+05 1.676665e+05 1.676665e+05 1.676665e+05 1.676665e+05
 [56] 1.676665e+05 1.676665e+05 1.676665e+05 1.672993e+05 1.672993e+05
 [61] 1.672993e+05 1.661768e+05 1.661768e+05 1.661768e+05 1.661768e+05
 [66] 1.661768e+05 1.661768e+05 1.661768e+05 1.661768e+05 1.661768e+05
 [71] 1.660563e+05 1.660563e+05 1.660229e+05 1.660229e+05 1.660229e+05
 [76] 1.659905e+05 1.659905e+05 1.659905e+05 1.659905e+05 1.659905e+05
 [81] 1.659905e+05 1.659905e+05 1.659905e+05 1.659905e+05 1.659905e+05
 [86] 1.659905e+05 1.659905e+05 1.659874e+05 1.659555e+05 1.659555e+05
 [91] 1.659311e+05 1.659311e+05 1.659311e+05 1.659268e+05 1.659195e+05
 [96] 1.659195e+05 1.659148e+05 1.658995e+05 1.658994e+05 1.658994e+05
[101] 1.658851e+05 1.658851e+05 1.658648e+05 1.658648e+05 1.658648e+05
[106] 1.658589e+05 1.658414e+05 1.658414e+05 1.658376e+05 1.658331e+05
[111] 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05
[116] 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05
[121] 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05
[126] 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05
[131] 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05 1.658327e+05
[136] 1.658327e+05 1.658327e+05 1.658327e+05 1.658326e+05 1.658326e+05
[141] 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05 1.658326e+05
[146] 1.658326e+05 1.658326e+05 1.658325e+05 1.658325e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]
 [1,] 49.14294 0.9999999
 [2,] 49.14297 1.0000000
 [3,] 49.14294 0.9999998
 [4,] 49.14296 0.9999999
 [5,] 30.37565 0.3838513
 [6,] 49.14295 1.0000000
 [7,] 49.14295 1.0000000
 [8,] 24.21965 0.2398335
 [9,] 49.14294 0.9999999
[10,] 49.14293 1.0000000
[11,] 49.14297 0.9999999
[12,] 49.14292 0.9999998
[13,] 49.14300 0.9999998
[14,] 49.14296 0.9999999
[15,] 49.14295 1.0000000
[16,] 49.14296 0.9999998
[17,] 49.14296 0.9999999
[18,] 49.14296 1.0000000
[19,] 49.14293 0.9999998
[20,] 49.14295 0.9999998

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.420 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.524 1935.741

$residuals
 [1] -203.812066 -226.528944 -143.760303  -52.354449  -46.034883  -54.066669
 [7]  -33.936045   12.318463  -29.713322   -2.748242   45.035796   72.884129
[13]   46.197443  114.047782   95.703278   59.353829    6.785265   32.647924
[19]   53.896742   56.153152

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  2.273452e+06  1.102611e+05 -5.515025e+12
delta  1.102611e+05  5.347615e+03 -2.674811e+11
rho   -5.515025e+12 -2.674811e+11  1.338033e+19

attr(,"class")
[1] "cesEst" "list"  
> print( cesDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.373e+05       0        1
delta 1.000e+00  6.659e+03       0        1
rho   2.000e+00  3.331e+11       0        1

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  3.701e+10       0        1

> coef( cesDe )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesDe )
              gamma         delta           rho
gamma  1.885060e+10  9.142429e+08 -4.572848e+16
delta  9.142429e+08  4.434038e+07 -2.217851e+15
rho   -4.572848e+16 -2.217851e+15  1.109446e+23
> coef( summary( cesDe ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.372975e+05 3.579305e-04 0.9997144
delta  1.00000 6.658858e+03 1.501759e-04 0.9998802
rho    2.00000 3.330834e+11 6.004502e-12 1.0000000
> 
> ## DE, TC, CRS
> cesDeTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "DE", control = DEoptim.control( trace = FALSE ), rho = 0.5 )
> print.default( cesDeTc )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
4.61101828 0.01595185 0.16474117 

$optim$bestval
[1] 18173.49

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
            par1          par2      par3
1   1.028646e+09 -0.0651072585 0.9849570
2   6.682047e+07 -0.3275057781 0.2794037
3   6.682047e+07 -0.3275057781 0.2794037
4   2.785785e+08 -0.3557143741 0.8746823
5   2.785785e+08 -0.3735820843 0.8746823
6   2.257741e+08 -0.4960300925 0.6754324
7   1.922947e+08 -0.3146400389 0.9690692
8   8.206244e+07 -0.3443389755 0.5237248
9   3.259216e+07 -0.4277690958 0.5578934
10  5.181404e+06 -0.2154437182 0.5668149
11  5.181404e+06 -0.2154437182 0.5668149
12  6.742456e+06 -0.4960300925 0.8182516
13  5.181404e+06 -0.4634495980 0.7821311
14  5.181404e+06 -0.4634495980 0.7821311
15  5.181404e+06 -0.4634495980 0.7821311
16  5.181404e+06 -0.4634495980 0.7821311
17  5.181404e+06 -0.4634495980 0.7821311
18  5.181404e+06 -0.4634495980 0.7821311
19  5.181404e+06 -0.4634495980 0.7821311
20  4.803088e+05 -0.4630300592 0.7845493
21  4.803088e+05 -0.4630300592 0.7845493
22  4.803088e+05 -0.4630300592 0.7845493
23  4.803088e+05 -0.4630300592 0.7845493
24  2.546211e+05 -0.4757507058 0.8295090
25  2.546211e+05 -0.4757507058 0.8295090
26  2.546211e+05 -0.4757507058 0.8295090
27  2.546211e+05 -0.4757507058 0.8295090
28  2.546211e+05 -0.4757507058 0.8295090
29  2.546211e+05 -0.4757507058 0.8295090
30  1.645708e+05 -0.4466683337 0.8443994
31  1.645708e+05 -0.4466683337 0.8443994
32  2.717390e+02 -0.4925584463 0.7975618
33  2.717390e+02 -0.4925584463 0.7975618
34  2.717390e+02 -0.4925584463 0.7975618
35  2.717390e+02 -0.4925584463 0.8911664
36  2.717390e+02 -0.4925584463 0.8911664
37  2.717390e+02 -0.4925584463 0.8911664
38  2.717390e+02 -0.4925584463 0.8911664
39  2.717390e+02 -0.4925584463 0.8911664
40  2.717390e+02 -0.4925584463 0.8911664
41  2.717390e+02 -0.4925584463 0.8911664
42  2.717390e+02 -0.4925584463 0.8911664
43  2.717390e+02 -0.4925584463 0.8911664
44  2.717390e+02 -0.4925584463 0.8911664
45  2.717390e+02 -0.4925584463 0.8911664
46  2.717390e+02 -0.4925584463 0.8911664
47  2.717390e+02 -0.4925584463 0.8911664
48  2.717390e+02 -0.4925584463 0.8911664
49  2.717390e+02 -0.4925584463 0.8911664
50  1.034938e+02 -0.4924710700 0.8507027
51  1.034938e+02 -0.4924710700 0.8507027
52  1.034938e+02 -0.4913451885 0.8954079
53  1.034938e+02 -0.4913451885 0.8954079
54  1.034938e+02 -0.4913451885 0.8954079
55  1.034938e+02 -0.4913451885 0.8954079
56  1.034938e+02 -0.4913451885 0.8954079
57  1.034938e+02 -0.4852301405 0.8954079
58  1.034938e+02 -0.4852301405 0.8954079
59  1.034938e+02 -0.4852301405 0.8954079
60  1.034938e+02 -0.4852301405 0.8954079
61  1.034938e+02 -0.4852301405 0.8954079
62  1.034938e+02 -0.4852301405 0.8954079
63  1.034938e+02 -0.4852301405 0.8954079
64  1.034938e+02 -0.4852301405 0.8954079
65  1.074828e+02 -0.4777573555 0.9529879
66  1.074828e+02 -0.4757916221 0.9529879
67  1.074828e+02 -0.4757916221 0.9529879
68  1.034938e+02 -0.4506671168 0.8954079
69  1.034938e+02 -0.4506671168 0.8954079
70  1.168898e+02 -0.4278040866 0.9308821
71  1.194313e+02 -0.4239708859 0.9491421
72  9.340334e+01 -0.3868566542 0.9306250
73  1.264439e+02 -0.3393605000 0.9855074
74  7.183587e+01 -0.2718863601 0.9933320
75  1.064368e+02 -0.1698758270 0.8572127
76  9.705682e+01 -0.0596069797 0.8283655
77  7.463025e+01 -0.0950829824 0.8475717
78  7.183587e+01 -0.0203231815 0.9347890
79  7.183587e+01 -0.0203231815 0.9347890
80  4.617721e+01  0.0047994576 0.9048829
81  4.617721e+01  0.0047994576 0.9048829
82  4.617721e+01  0.0047994576 0.9491746
83  4.617721e+01  0.0047994576 0.9491746
84  4.406577e+01 -0.0008346936 0.9218583
85  4.406577e+01 -0.0008346936 0.9218583
86  4.406577e+01 -0.0008346936 0.9218583
87  3.965113e+01  0.0111114231 0.9615663
88  3.965113e+01  0.0111114231 0.9615663
89  3.965113e+01  0.0111114231 0.9615663
90  3.965113e+01  0.0111114231 0.9615663
91  3.892097e+01  0.0081380637 0.9308017
92  3.892097e+01  0.0081380637 0.9308017
93  4.272569e+01  0.0091299625 0.9808767
94  4.272569e+01  0.0091299625 0.9808767
95  4.272569e+01  0.0091299625 0.9808767
96  4.272569e+01  0.0091299625 0.9808767
97  4.272569e+01  0.0091299625 0.9808767
98  4.272569e+01  0.0091299625 0.9808767
99  4.272569e+01  0.0091299625 0.9808767
100 4.272569e+01  0.0091299625 0.9808767
101 4.272569e+01  0.0091299625 0.9808767
102 4.272569e+01  0.0091299625 0.9808767
103 4.186735e+01  0.0083951116 0.9674582
104 4.186735e+01  0.0083951116 0.9674582
105 4.186735e+01  0.0083951116 0.9674582
106 4.030548e+01  0.0085075710 0.9420113
107 3.834084e+01  0.0083951116 0.9125213
108 3.834084e+01  0.0083951116 0.9125213
109 3.834084e+01  0.0083951116 0.9125213
110 3.834084e+01  0.0083951116 0.9125213
111 3.834084e+01  0.0083951116 0.9125213
112 3.615914e+01  0.0093554667 0.8841778
113 3.615914e+01  0.0093554667 0.8841778
114 3.449211e+01  0.0091230517 0.8574270
115 3.449211e+01  0.0091230517 0.8574270
116 3.449211e+01  0.0091230517 0.8574270
117 3.210365e+01  0.0091074546 0.8169324
118 3.210365e+01  0.0091074546 0.8169324
119 2.895957e+01  0.0100842878 0.7688134
120 2.992930e+01  0.0086883993 0.7769394
121 2.770789e+01  0.0091074546 0.7375282
122 2.548736e+01  0.0096488704 0.7012511
123 2.548736e+01  0.0096488704 0.7012511
124 2.442115e+01  0.0100006353 0.6853710
125 2.442115e+01  0.0100006353 0.6853710
126 2.326427e+01  0.0096010462 0.6613527
127 2.326427e+01  0.0096010462 0.6613527
128 2.239640e+01  0.0099463386 0.6456382
129 2.239640e+01  0.0099463386 0.6456382
130 2.107617e+01  0.0094140506 0.6118399
131 2.107617e+01  0.0094140506 0.6118399
132 2.124970e+01  0.0094250289 0.6180910
133 2.124970e+01  0.0094250289 0.6180910
134 2.019406e+01  0.0102375646 0.5979430
135 1.993125e+01  0.0096396567 0.5913842
136 1.993125e+01  0.0096396567 0.5913842
137 1.912947e+01  0.0103132043 0.5785986
138 1.772385e+01  0.0115875431 0.5512188
139 1.761470e+01  0.0109372364 0.5452773
140 1.662829e+01  0.0110302932 0.5258363
141 1.613093e+01  0.0115552155 0.5154259
142 1.613093e+01  0.0115552155 0.5154259
143 1.657302e+01  0.0107978085 0.5214073
144 1.657302e+01  0.0107978085 0.5214073
145 1.465174e+01  0.0119471398 0.4819184
146 1.431743e+01  0.0115805620 0.4711660
147 1.428208e+01  0.0112137628 0.4686405
148 1.428208e+01  0.0112137628 0.4686405
149 1.428208e+01  0.0112137628 0.4686405
150 1.428208e+01  0.0112137628 0.4686405
151 1.428208e+01  0.0112137628 0.4686405
152 1.428208e+01  0.0112137628 0.4686405
153 1.380959e+01  0.0113707275 0.4558863
154 1.380959e+01  0.0113707275 0.4558863
155 1.380959e+01  0.0113707275 0.4558863
156 1.271047e+01  0.0112764542 0.4262725
157 1.248127e+01  0.0115805620 0.4209596
158 1.091456e+01  0.0122466315 0.3812298
159 1.091456e+01  0.0122466315 0.3812298
160 1.091456e+01  0.0122466315 0.3812298
161 1.091456e+01  0.0122466315 0.3812298
162 1.091456e+01  0.0122466315 0.3812298
163 9.812991e+00  0.0123022690 0.3464955
164 9.527694e+00  0.0131612059 0.3416505
165 8.741833e+00  0.0127431098 0.3130912
166 8.741833e+00  0.0127431098 0.3130912
167 7.355935e+00  0.0130501243 0.2675587
168 7.355935e+00  0.0130501243 0.2675587
169 7.355935e+00  0.0130501243 0.2675587
170 7.355935e+00  0.0130501243 0.2675587
171 6.279974e+00  0.0157495020 0.2358542
172 6.279974e+00  0.0157495020 0.2358542
173 6.279974e+00  0.0157495020 0.2358542
174 6.342207e+00  0.0140562442 0.2327457
175 6.342207e+00  0.0140562442 0.2327457
176 6.342207e+00  0.0140562442 0.2327457
177 5.628265e+00  0.0158082746 0.2098058
178 5.628265e+00  0.0158082746 0.2098058
179 5.628265e+00  0.0158082746 0.2098058
180 5.628265e+00  0.0158082746 0.2098058
181 5.628265e+00  0.0158082746 0.2098058
182 5.628265e+00  0.0158082746 0.2098058
183 5.444151e+00  0.0158555450 0.2014177
184 5.444151e+00  0.0158555450 0.2014177
185 5.188241e+00  0.0154520870 0.1893739
186 5.188241e+00  0.0154520870 0.1893739
187 4.845403e+00  0.0160336255 0.1760900
188 4.845403e+00  0.0160336255 0.1760900
189 4.845403e+00  0.0160336255 0.1760900
190 4.845403e+00  0.0160336255 0.1760900
191 4.845403e+00  0.0160336255 0.1760900
192 4.845403e+00  0.0160336255 0.1760900
193 4.845403e+00  0.0160336255 0.1760900
194 4.845403e+00  0.0160336255 0.1760900
195 4.767097e+00  0.0159223290 0.1719475
196 4.767097e+00  0.0159223290 0.1719475
197 4.767097e+00  0.0159223290 0.1719475
198 4.611018e+00  0.0159518505 0.1647412
199 4.611018e+00  0.0159518505 0.1647412
200 4.611018e+00  0.0159518505 0.1647412

$member$bestvalit
  [1] 5.176024e+21 8.548316e+19 8.548316e+19 6.551790e+19 6.099578e+19
  [6] 5.628492e+19 2.695794e+19 2.647148e+19 2.544851e+18 1.616056e+17
 [11] 1.616056e+17 2.834562e+16 2.140140e+16 2.140140e+16 2.140140e+16
 [16] 2.140140e+16 2.140140e+16 2.140140e+16 2.140140e+16 1.824029e+14
 [21] 1.824029e+14 1.824029e+14 1.824029e+14 4.143371e+13 4.143371e+13
 [26] 4.143371e+13 4.143371e+13 4.143371e+13 4.143371e+13 1.809536e+13
 [31] 1.809536e+13 6.175566e+07 6.175566e+07 6.175566e+07 5.197200e+07
 [36] 5.197200e+07 5.197200e+07 5.197200e+07 5.197200e+07 5.197200e+07
 [41] 5.197200e+07 5.197200e+07 5.197200e+07 5.197200e+07 5.197200e+07
 [46] 5.197200e+07 5.197200e+07 5.197200e+07 5.197200e+07 3.724903e+07
 [51] 3.724903e+07 3.715633e+07 3.715633e+07 3.715633e+07 3.715633e+07
 [56] 3.715633e+07 3.708922e+07 3.708922e+07 3.708922e+07 3.708922e+07
 [61] 3.708922e+07 3.708922e+07 3.708922e+07 3.708922e+07 3.698595e+07
 [66] 3.696253e+07 3.696253e+07 3.666883e+07 3.666883e+07 3.643696e+07
 [71] 3.636439e+07 3.560962e+07 3.468928e+07 3.314217e+07 2.547471e+07
 [76] 1.774262e+07 1.287056e+07 4.948166e+06 4.948166e+06 1.226073e+06
 [81] 1.226073e+06 3.659770e+05 3.659770e+05 1.929487e+05 1.929487e+05
 [86] 1.929487e+05 8.857112e+04 8.857112e+04 8.857112e+04 8.857112e+04
 [91] 8.495919e+04 8.495919e+04 7.312838e+04 7.312838e+04 7.312838e+04
 [96] 7.312838e+04 7.312838e+04 7.312838e+04 7.312838e+04 7.312838e+04
[101] 7.312838e+04 7.312838e+04 7.134337e+04 7.134337e+04 7.134337e+04
[106] 6.970270e+04 6.828731e+04 6.828731e+04 6.828731e+04 6.828731e+04
[111] 6.828731e+04 6.786379e+04 6.786379e+04 6.589577e+04 6.589577e+04
[116] 6.589577e+04 6.363912e+04 6.363912e+04 6.227731e+04 6.164672e+04
[121] 6.072922e+04 5.750918e+04 5.750918e+04 5.646599e+04 5.646599e+04
[126] 5.534441e+04 5.534441e+04 5.411045e+04 5.411045e+04 5.277219e+04
[131] 5.277219e+04 5.226772e+04 5.226772e+04 5.119090e+04 5.037651e+04
[136] 5.037651e+04 4.947160e+04 4.892501e+04 4.714791e+04 4.625224e+04
[141] 4.524916e+04 4.524916e+04 4.481683e+04 4.481683e+04 4.374230e+04
[146] 4.167675e+04 4.140381e+04 4.140381e+04 4.140381e+04 4.140381e+04
[151] 4.140381e+04 4.140381e+04 3.968178e+04 3.968178e+04 3.968178e+04
[156] 3.748753e+04 3.684411e+04 3.463205e+04 3.463205e+04 3.463205e+04
[161] 3.463205e+04 3.463205e+04 3.067625e+04 3.052798e+04 2.818051e+04
[166] 2.818051e+04 2.515631e+04 2.515631e+04 2.515631e+04 2.515631e+04
[171] 2.306918e+04 2.306918e+04 2.306918e+04 2.188597e+04 2.188597e+04
[176] 2.188597e+04 2.055120e+04 2.055120e+04 2.055120e+04 2.055120e+04
[181] 2.055120e+04 2.055120e+04 1.950740e+04 1.950740e+04 1.886164e+04
[186] 1.886164e+04 1.832415e+04 1.832415e+04 1.832415e+04 1.832415e+04
[191] 1.832415e+04 1.832415e+04 1.832415e+04 1.832415e+04 1.819164e+04
[196] 1.819164e+04 1.819164e+04 1.817349e+04 1.817349e+04 1.817349e+04

$member$pop
          [,1]       [,2]      [,3]
 [1,] 5.117358 0.01564078 0.1846381
 [2,] 5.562988 0.01589001 0.2055788
 [3,] 5.188241 0.01545209 0.1893739
 [4,] 4.898021 0.01506535 0.1755124
 [5,] 4.611018 0.01595185 0.1647412
 [6,] 5.229091 0.01607441 0.1927565
 [7,] 4.845403 0.01603363 0.1760900
 [8,] 4.732187 0.01639718 0.1725383
 [9,] 5.983733 0.01459886 0.2214156
[10,] 5.392475 0.01554821 0.1980671
[11,] 5.530557 0.01509167 0.2035179
[12,] 5.509502 0.01621576 0.2056433
[13,] 4.692824 0.01557818 0.1663544
[14,] 5.085948 0.01434548 0.1823535
[15,] 4.719430 0.01560078 0.1688741
[16,] 5.325861 0.01597456 0.1969359
[17,] 5.170038 0.01568005 0.1887033
[18,] 4.767097 0.01592233 0.1719475
[19,] 5.254248 0.01586693 0.1939270
[20,] 5.493737 0.01521323 0.2023107
[21,] 5.072154 0.01619974 0.1869304
[22,] 4.382465 0.01575744 0.1539685
[23,] 5.625447 0.01581639 0.2094571
[24,] 4.516946 0.01562818 0.1585708
[25,] 4.657894 0.01645290 0.1693363
[26,] 5.462585 0.01543985 0.2004527
[27,] 8.920943 0.01238265 0.3168558
[28,] 4.476557 0.01730827 0.1623464
[29,] 5.770314 0.01600095 0.2160366
[30,] 5.046251 0.01530261 0.1819127

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma     lambda      delta        rho 
4.61101828 0.01595185 0.16474117 0.50000000 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.6666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] 0.5

$fitted.values
 [1]  971.0384 1047.9126 1076.5366 1139.6601 1152.3871 1186.8987 1237.3547
 [8] 1234.5336 1227.6385 1277.5573 1349.4419 1529.4836 1627.4672 1678.3235
[15] 1621.0951 1635.1089 1679.8313 1744.3223 1865.0639 1998.1398

$residuals
 [1] -24.9053796 -85.1820844  -6.9573865  32.1363711  25.7288925  -1.0886891
 [7]   2.0030845  54.0272838 -19.9322868   0.8512224  11.1507227  11.3005408
[13] -52.4325194  17.6358530  23.5940080  -9.0777526 -24.7913972  11.2775356
[19]  22.3563340  -6.2457771

$rss
[1] 18173.49

$cov.unscaled
               gamma        lambda         delta           rho
gamma   5.535955e-01  1.472221e-06  5.754201e-02 -1.343133e-01
lambda  1.472221e-06  2.299527e-09  2.305413e-07 -6.570806e-07
delta   5.754201e-02  2.305413e-07  5.984597e-03 -1.397487e-02
rho    -1.343133e-01 -6.570806e-07 -1.397487e-02  3.264266e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma  lambda   delta     rho 
4.61102 0.01595 0.16474 0.50000 

Elasticity of Substitution: 0.6667 

> summary( cesDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.5 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   4.611018  22.428510   0.206    0.837    
lambda  0.015952   0.001446  11.035   <2e-16 ***
delta   0.164741   2.331963   0.071    0.944    
rho     0.500000   5.446241   0.092    0.927    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.14423 
Multiple R-squared: 0.9897332 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.6667     2.4206   0.275    0.783

> 
> ## DE, VRS
> cesDeVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "DE", vrs = TRUE,
+    control = DEoptim.control( trace = FALSE ), rho = -0.1, random.seed = 234 )
> print.default( cesDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
46.0892248  0.9530405  0.9746070 

$optim$bestval
[1] 207242.9

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2        par3
1   5.828479e+09 0.5829899 0.011983411
2   1.589413e+09 0.9108227 0.363190768
3   3.965465e+09 0.1539118 0.037345842
4   3.965465e+09 0.1539118 0.037345842
5   4.085345e+07 0.7865131 0.200371139
6   4.085345e+07 0.7865131 0.200371139
7   4.085345e+07 0.9062096 0.200371139
8   4.085345e+07 0.9062096 0.200371139
9   4.085345e+07 0.9062096 0.200371139
10  5.451705e+07 0.8615842 0.022404650
11  5.451705e+07 0.8615842 0.022404650
12  5.451705e+07 0.8615842 0.022404650
13  5.451705e+07 0.8615842 0.022404650
14  5.451705e+07 0.8615842 0.022404650
15  1.009947e+07 0.9583177 0.415792148
16  2.036948e+07 0.9892300 0.115573398
17  2.036948e+07 0.9892300 0.115573398
18  7.953248e+06 0.8749271 0.287371032
19  7.953248e+06 0.8749271 0.287371032
20  7.953248e+06 0.8749271 0.287371032
21  7.953248e+06 0.8749271 0.287371032
22  9.507648e+06 0.9484058 0.047863223
23  4.790955e+06 0.7732426 0.151437162
24  1.231298e+06 0.8889283 0.045952319
25  1.231298e+06 0.8889283 0.045952319
26  9.430654e+05 0.8997545 0.044897670
27  9.430654e+05 0.8997545 0.044897670
28  9.430654e+05 0.8997545 0.044897670
29  9.430654e+05 0.8997545 0.044897670
30  9.430654e+05 0.8997545 0.044897670
31  9.430654e+05 0.8997545 0.044897670
32  9.430654e+05 0.8997545 0.044897670
33  9.430654e+05 0.8997545 0.044897670
34  9.430654e+05 0.8997545 0.044897670
35  9.430654e+05 0.8997545 0.044897670
36  7.600749e+05 0.9735351 0.026165744
37  6.676452e+05 0.9360360 0.022701507
38  2.818758e+05 0.7981294 0.015569975
39  2.818758e+05 0.8388798 0.015569975
40  2.818758e+05 0.8388798 0.015569975
41  1.369570e+05 0.1942327 0.004774084
42  1.369570e+05 0.1942327 0.004774084
43  1.369570e+05 0.1942327 0.004774084
44  1.369570e+05 0.1942327 0.004774084
45  1.369570e+05 0.1942327 0.004774084
46  9.681640e+04 0.9360360 0.018716926
47  9.681640e+04 0.9360360 0.018716926
48  9.681640e+04 0.9360360 0.018716926
49  1.465018e+04 0.8365504 0.046573245
50  1.465018e+04 0.8365504 0.046573245
51  5.727804e+03 0.2086935 0.009186131
52  5.727804e+03 0.2086935 0.009186131
53  5.727804e+03 0.2086935 0.009186131
54  5.727804e+03 0.3738076 0.009186131
55  5.727804e+03 0.3738076 0.009186131
56  4.163775e+03 0.1678245 0.006992485
57  4.163775e+03 0.1678245 0.006992485
58  2.620562e+03 0.1468139 0.064123422
59  1.669640e+03 0.8313692 0.002838732
60  1.669640e+03 0.8313692 0.002838732
61  1.669640e+03 0.8313692 0.002838732
62  1.669640e+03 0.8313692 0.002838732
63  1.669640e+03 0.8313692 0.002838732
64  1.669640e+03 0.8313692 0.002838732
65  1.669640e+03 0.8313692 0.002838732
66  1.669640e+03 0.8313692 0.002838732
67  1.669640e+03 0.8313692 0.002838732
68  1.669640e+03 0.8313692 0.002838732
69  1.669640e+03 0.8313692 0.002838732
70  1.528147e+03 0.7947774 0.005191623
71  1.528147e+03 0.7947774 0.005191623
72  1.528147e+03 0.7947774 0.005191623
73  1.528147e+03 0.7947774 0.005191623
74  1.314119e+03 0.8238889 0.010256782
75  1.314119e+03 0.8238889 0.010256782
76  1.314119e+03 0.8238889 0.010256782
77  1.413105e+03 0.6135013 0.004922494
78  1.375944e+03 0.9708812 0.007854877
79  1.375944e+03 0.9708812 0.007854877
80  1.375944e+03 0.9708812 0.007854877
81  1.314119e+03 0.8238889 0.019208305
82  1.314119e+03 0.8238889 0.019208305
83  1.314119e+03 0.8238889 0.019208305
84  1.262878e+03 0.9793167 0.028035694
85  1.262878e+03 0.9793167 0.028035694
86  1.219204e+03 0.6575318 0.034580441
87  1.067891e+03 0.5528048 0.056092610
88  9.572741e+02 0.3603592 0.068508690
89  9.481431e+02 0.5006999 0.075648811
90  9.293053e+02 0.5657307 0.087988033
91  9.293053e+02 0.5657307 0.087988033
92  7.556319e+02 0.3588142 0.118167122
93  9.108512e+02 0.6425568 0.097736053
94  9.309204e+02 0.7225382 0.098015946
95  5.746732e+02 0.2839311 0.152854644
96  7.191250e+02 0.5796140 0.139297082
97  7.191250e+02 0.5796140 0.139297082
98  7.379378e+02 0.7359222 0.147290483
99  7.917687e+02 0.8190209 0.141927342
100 9.132061e+02 0.9765016 0.132241102
101 9.132061e+02 0.9765016 0.132241102
102 7.359401e+02 0.9087041 0.166641989
103 6.355200e+02 0.8780707 0.205596838
104 5.183517e+02 0.7518619 0.242030607
105 5.183517e+02 0.7518619 0.242030607
106 5.578114e+02 0.8654370 0.248325982
107 5.578114e+02 0.8654370 0.248325982
108 5.578114e+02 0.8654370 0.248325982
109 4.452069e+02 0.7817897 0.279093742
110 4.452069e+02 0.7817897 0.279093742
111 4.452069e+02 0.7817897 0.279093742
112 4.452069e+02 0.7817897 0.279093742
113 4.452069e+02 0.7817897 0.279093742
114 4.452069e+02 0.7817897 0.279093742
115 3.189222e+02 0.7597002 0.344941570
116 3.124487e+02 0.7241073 0.356144477
117 3.124487e+02 0.7241073 0.356144477
118 3.191568e+02 0.9099496 0.388905372
119 2.961910e+02 0.9887299 0.469967832
120 2.586304e+02 0.9653632 0.485613044
121 2.586304e+02 0.9653632 0.485613044
122 2.586304e+02 0.9653632 0.485613044
123 2.586304e+02 0.9653632 0.485613044
124 2.586304e+02 0.9653632 0.485613044
125 2.586304e+02 0.9653632 0.485613044
126 2.586304e+02 0.9653632 0.485613044
127 2.586304e+02 0.9653632 0.485613044
128 2.586304e+02 0.9653632 0.485613044
129 1.529946e+02 0.9653632 0.625470132
130 8.723606e+01 0.8477639 0.706388186
131 8.723606e+01 0.8477639 0.706388186
132 8.723606e+01 0.8477639 0.706388186
133 8.723606e+01 0.8477639 0.706388186
134 1.139213e+02 0.9356125 0.712242303
135 1.139213e+02 0.9356125 0.712242303
136 1.247717e+02 0.9658188 0.691214389
137 1.247717e+02 0.9658188 0.691214389
138 1.247717e+02 0.9658188 0.691214389
139 1.247717e+02 0.9658188 0.691214389
140 1.247717e+02 0.9658188 0.691214389
141 1.247717e+02 0.9658188 0.691214389
142 1.247717e+02 0.9658188 0.691214389
143 1.247717e+02 0.9658188 0.691214389
144 1.247717e+02 0.9658188 0.691214389
145 1.247717e+02 0.9658188 0.691214389
146 1.247717e+02 0.9658188 0.691214389
147 1.247717e+02 0.9658188 0.691214389
148 1.247717e+02 0.9658188 0.691214389
149 1.108120e+02 0.9670547 0.723512704
150 1.108120e+02 0.9670547 0.723512704
151 1.108120e+02 0.9670547 0.723512704
152 1.108120e+02 0.9670547 0.723512704
153 1.251107e+02 0.9995008 0.729765476
154 1.251107e+02 0.9995008 0.729765476
155 1.251107e+02 0.9995008 0.729765476
156 1.251107e+02 0.9995008 0.729765476
157 1.251107e+02 0.9995008 0.729765476
158 1.251107e+02 0.9995008 0.729765476
159 1.251107e+02 0.9995008 0.729765476
160 1.251107e+02 0.9995008 0.729765476
161 1.251107e+02 0.9995008 0.729765476
162 1.251107e+02 0.9995008 0.729765476
163 8.148486e+01 0.9767521 0.843733720
164 8.148486e+01 0.9767521 0.843733720
165 1.030822e+02 0.9995008 0.776524428
166 1.030822e+02 0.9995008 0.776524428
167 1.030822e+02 0.9995008 0.776524428
168 1.035589e+02 0.9995008 0.776524428
169 1.035589e+02 0.9995008 0.776524428
170 1.035589e+02 0.9995008 0.776524428
171 1.035589e+02 0.9995008 0.776524428
172 1.035589e+02 0.9995008 0.776524428
173 1.035589e+02 0.9995008 0.776524428
174 1.035589e+02 0.9995008 0.776524428
175 1.035589e+02 0.9995008 0.776524428
176 1.035589e+02 0.9995008 0.776524428
177 8.318937e+01 0.9738874 0.821678728
178 8.318937e+01 0.9738874 0.821678728
179 8.148486e+01 0.9767521 0.832551472
180 8.148486e+01 0.9767521 0.832551472
181 8.148486e+01 0.9767521 0.832551472
182 8.148486e+01 0.9767521 0.832551472
183 8.148486e+01 0.9767521 0.832551472
184 8.148486e+01 0.9767521 0.832551472
185 6.238627e+01 0.9341006 0.866990827
186 6.238627e+01 0.9341006 0.866990827
187 6.238627e+01 0.9341006 0.866990827
188 6.238627e+01 0.9341006 0.866990827
189 6.238627e+01 0.9341006 0.866990827
190 6.238627e+01 0.9341006 0.866990827
191 5.599486e+01 0.9447439 0.911999175
192 5.599486e+01 0.9447439 0.911999175
193 5.599486e+01 0.9447439 0.911999175
194 5.599486e+01 0.9447439 0.911999175
195 5.599486e+01 0.9447439 0.911999175
196 4.608922e+01 0.9530405 0.974606963
197 4.608922e+01 0.9530405 0.974606963
198 4.608922e+01 0.9530405 0.974606963
199 4.608922e+01 0.9530405 0.974606963
200 4.608922e+01 0.9530405 0.974606963

$member$bestvalit
  [1] 7.622905e+20 7.366910e+20 4.960412e+20 4.960412e+20 1.743140e+17
  [6] 1.743140e+17 1.471680e+17 1.471680e+17 1.471680e+17 7.065743e+16
 [11] 7.065743e+16 7.065743e+16 7.065743e+16 7.065743e+16 3.801898e+16
 [16] 1.819296e+16 1.819296e+16 1.133985e+16 1.133985e+16 1.133985e+16
 [21] 1.133985e+16 2.537867e+15 1.622508e+15 4.276004e+13 4.276004e+13
 [26] 2.478383e+13 2.478383e+13 2.478383e+13 2.478383e+13 2.478383e+13
 [31] 2.478383e+13 2.478383e+13 2.478383e+13 2.478383e+13 2.478383e+13
 [36] 1.379534e+13 1.045244e+13 1.787476e+12 1.779520e+12 1.779520e+12
 [41] 3.892835e+11 3.892835e+11 3.892835e+11 3.892835e+11 3.892835e+11
 [46] 2.086200e+11 2.086200e+11 2.086200e+11 5.245252e+09 5.245252e+09
 [51] 4.315928e+08 4.315928e+08 4.315928e+08 4.265855e+08 4.265855e+08
 [56] 1.735496e+08 1.735496e+08 1.232532e+08 3.280084e+06 3.280084e+06
 [61] 3.280084e+06 3.280084e+06 3.280084e+06 3.280084e+06 3.280084e+06
 [66] 3.280084e+06 3.280084e+06 3.280084e+06 3.280084e+06 2.194784e+06
 [71] 2.194784e+06 2.194784e+06 2.194784e+06 1.786293e+06 1.786293e+06
 [76] 1.786293e+06 1.782021e+06 1.750495e+06 1.750495e+06 1.750495e+06
 [81] 1.727035e+06 1.727035e+06 1.727035e+06 1.711572e+06 1.711572e+06
 [86] 1.703134e+06 1.665495e+06 1.663331e+06 1.644142e+06 1.605013e+06
 [91] 1.605013e+06 1.594368e+06 1.579626e+06 1.567370e+06 1.560749e+06
 [96] 1.510256e+06 1.510256e+06 1.482062e+06 1.468463e+06 1.461021e+06
[101] 1.461021e+06 1.457245e+06 1.335880e+06 1.293026e+06 1.293026e+06
[106] 1.248755e+06 1.248755e+06 1.248755e+06 1.202300e+06 1.202300e+06
[111] 1.202300e+06 1.202300e+06 1.202300e+06 1.202300e+06 1.157809e+06
[116] 1.118679e+06 1.118679e+06 1.096862e+06 8.009655e+05 7.656640e+05
[121] 7.656640e+05 7.656640e+05 7.656640e+05 7.656640e+05 7.656640e+05
[126] 7.656640e+05 7.656640e+05 7.656640e+05 6.482792e+05 5.419653e+05
[131] 5.419653e+05 5.419653e+05 5.419653e+05 5.020076e+05 5.020076e+05
[136] 4.875328e+05 4.875328e+05 4.875328e+05 4.875328e+05 4.875328e+05
[141] 4.875328e+05 4.875328e+05 4.875328e+05 4.875328e+05 4.875328e+05
[146] 4.875328e+05 4.875328e+05 4.875328e+05 4.694071e+05 4.694071e+05
[151] 4.694071e+05 4.694071e+05 4.147513e+05 4.147513e+05 4.147513e+05
[156] 4.147513e+05 4.147513e+05 4.147513e+05 4.147513e+05 4.147513e+05
[161] 4.147513e+05 4.147513e+05 3.904139e+05 3.904139e+05 3.547324e+05
[166] 3.547324e+05 3.547324e+05 3.499583e+05 3.499583e+05 3.499583e+05
[171] 3.499583e+05 3.499583e+05 3.499583e+05 3.499583e+05 3.499583e+05
[176] 3.499583e+05 3.114914e+05 3.114914e+05 3.034831e+05 3.034831e+05
[181] 3.034831e+05 3.034831e+05 3.034831e+05 3.034831e+05 2.869337e+05
[186] 2.869337e+05 2.869337e+05 2.869337e+05 2.869337e+05 2.869337e+05
[191] 2.553741e+05 2.553741e+05 2.553741e+05 2.553741e+05 2.553741e+05
[196] 2.072429e+05 2.072429e+05 2.072429e+05 2.072429e+05 2.072429e+05

$member$pop
           [,1]      [,2]      [,3]
 [1,]  39.06842 0.9208779 0.9714673
 [2,] 511.24767 0.8308415 0.2577087
 [3,]  92.23568 0.9971746 0.8138441
 [4,] 154.91368 0.7132034 0.5163833
 [5,] 363.25048 0.9692289 0.3956317
 [6,] 236.80850 0.8631045 0.4549626
 [7,]  62.38627 0.9341006 0.8669908
 [8,] 431.65899 0.8329469 0.2956447
 [9,] 103.55894 0.9995008 0.7765244
[10,] 294.72546 0.9297340 0.4376412
[11,] 270.78834 0.8474331 0.4170362
[12,] 129.07657 0.8940674 0.6482108
[13,]  43.49451 0.9081353 0.9340400
[14,]  73.07066 0.9682124 0.8563520
[15,]  94.76415 0.9366020 0.7444325
[16,]  55.99486 0.9447439 0.9119992
[17,]  57.82296 0.9185093 0.8733456
[18,] 296.19102 0.9983353 0.4699678
[19,]  20.96550 0.8577551 1.1031309
[20,] 124.77167 0.9536663 0.6912144
[21,]  46.08922 0.9530405 0.9746070
[22,] 755.63194 0.3588142 0.1117832
[23,]  78.29168 0.9692688 0.8405995
[24,] 254.09087 0.9447765 0.4845701
[25,]  99.17385 0.9527013 0.7602592
[26,] 106.07088 0.9187778 0.6960968
[27,] 127.73567 0.9410021 0.6724407
[28,] 109.37235 0.9929860 0.7627021
[29,]  74.08854 0.8745536 0.7692233
[30,]  97.01458 0.9784870 0.7885979

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
46.0892248  0.9530405 -0.1000000  0.9746070 

$iter
[1] 200

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] -0.1

$fitted.values
 [1] 1179.011 1222.250 1244.977 1260.803 1260.038 1275.938 1309.293 1308.908
 [9] 1271.554 1313.579 1349.991 1502.083 1563.887 1612.920 1574.511 1588.474
[17] 1661.263 1730.086 1835.860 1935.258

$residuals
 [1] -232.878234 -259.519172 -175.397985  -89.006050  -81.922329  -90.127760
 [7]  -69.934784  -20.347319  -63.847416  -35.170634   10.601720   38.701092
[13]   11.148142   83.039273   70.178222   37.556633   -6.222728   25.513612
[19]   51.560289   56.636194

$rss
[1] 207242.9

$cov.unscaled
             gamma         delta           rho            nu
gamma 71.388469983  9.179656e-01 -6.5594594138 -3.285788e-03
delta  0.917965552  1.183698e-02 -0.0846593418 -3.234482e-05
rho   -6.559459414 -8.465934e-02  0.6056947449  2.101675e-04
nu    -0.003285788 -3.234482e-05  0.0002101675  3.257120e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
46.0892  0.9530 -0.1000  0.9746 

Elasticity of Substitution: 1.111 

> summary( cesDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  46.0892   860.0800   0.054    0.957    
delta   0.9530    11.0750   0.086    0.931    
rho    -0.1000    79.2231  -0.001    0.999    
nu      0.9746     0.1837   5.305 1.13e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 101.7946 
Multiple R-squared: 0.8829213 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     97.806   0.011    0.991

> coef( cesDeVrs )
     gamma      delta        rho         nu 
46.0892248  0.9530405 -0.1000000  0.9746070 
> vcov( cesDeVrs )
             gamma        delta           rho           nu
gamma 739737.61441 9512.0913455 -67970.063790 -34.04780526
delta   9512.09135  122.6565086   -877.252300  -0.33516167
rho   -67970.06379 -877.2523004   6276.296239   2.17778602
nu       -34.04781   -0.3351617      2.177786   0.03375075
> coef( summary( cesDeVrs ) )
        Estimate  Std. Error      t value     Pr(>|t|)
gamma 46.0892248 860.0800047  0.053587137 9.572641e-01
delta  0.9530405  11.0750399  0.086053006 9.314243e-01
rho   -0.1000000  79.2230790 -0.001262258 9.989929e-01
nu     0.9746070   0.1837138  5.305029643 1.126547e-07
> 
> ## DE, multErr, CRS
> cesDeMe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), multErr = TRUE, rho = -0.2 )
> print.default( cesDeMe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
48.30514  1.00000 

$optim$bestval
[1] 0.1157039

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   1.029247e+09 0.8998250
2   1.280125e+09 0.9778742
3   1.280125e+09 0.9778742
4   1.202989e+08 0.8703372
5   1.202989e+08 0.8703372
6   4.653491e+06 0.9778742
7   4.653491e+06 0.9778742
8   4.653491e+06 0.9778742
9   3.654020e+06 0.9492851
10  3.654020e+06 0.9492851
11  3.654020e+06 0.9492851
12  3.654020e+06 0.9492851
13  3.654020e+06 0.9492851
14  2.765519e+06 0.9866883
15  2.765519e+06 0.9866883
16  2.765519e+06 0.9866883
17  2.765519e+06 0.9866883
18  2.765519e+06 0.9866883
19  2.765519e+06 0.9866883
20  2.765519e+06 0.9866883
21  4.466610e+05 0.9972190
22  2.017874e+05 0.9976021
23  2.017874e+05 0.9976021
24  2.017874e+05 0.9976021
25  2.017874e+05 0.9976021
26  5.059917e+04 0.9983407
27  5.059917e+04 0.9983407
28  5.059917e+04 0.9983407
29  5.059917e+04 0.9983407
30  5.059917e+04 0.9983407
31  3.666976e+04 0.9999510
32  3.666976e+04 0.9999510
33  3.666976e+04 0.9999510
34  3.666976e+04 0.9999510
35  3.666976e+04 0.9999510
36  3.666976e+04 0.9999510
37  3.666976e+04 0.9999510
38  6.384537e+03 0.9968737
39  6.384537e+03 0.9968737
40  6.384537e+03 0.9968737
41  6.384537e+03 0.9968737
42  4.385110e+03 0.9685091
43  2.066947e+03 0.8807279
44  1.475968e+02 0.8952413
45  1.475968e+02 0.8952413
46  1.475968e+02 0.8952413
47  1.475968e+02 0.8952413
48  1.475968e+02 0.8952413
49  1.475968e+02 0.8952413
50  1.475968e+02 0.8952413
51  1.179341e+02 0.8757959
52  2.083301e+01 0.8999260
53  2.083301e+01 0.8999260
54  2.083301e+01 0.8999260
55  3.043743e+01 0.9156235
56  3.043743e+01 0.9156235
57  3.043743e+01 0.9156235
58  3.166032e+01 0.8984151
59  3.166032e+01 0.8984151
60  3.166032e+01 0.8984151
61  3.166032e+01 0.8984151
62  3.166032e+01 0.8984151
63  3.166032e+01 0.8984151
64  3.166032e+01 0.8984151
65  3.166032e+01 0.8984151
66  4.492339e+01 0.9843751
67  4.492339e+01 0.9843751
68  4.492339e+01 0.9843751
69  4.492339e+01 0.9843751
70  4.492339e+01 0.9843751
71  4.492339e+01 0.9843751
72  4.492339e+01 0.9843751
73  4.492339e+01 0.9843751
74  4.492339e+01 0.9843751
75  4.492339e+01 0.9843751
76  4.539519e+01 0.9854915
77  4.645490e+01 0.9898690
78  4.761378e+01 0.9973787
79  4.761378e+01 0.9973787
80  4.761378e+01 0.9973787
81  4.761378e+01 0.9973787
82  4.761378e+01 0.9973787
83  4.801104e+01 0.9991913
84  4.829142e+01 0.9996241
85  4.821082e+01 0.9996241
86  4.821082e+01 0.9996241
87  4.821082e+01 0.9996241
88  4.821082e+01 0.9996241
89  4.822565e+01 0.9996387
90  4.822565e+01 0.9996387
91  4.825592e+01 0.9997133
92  4.825592e+01 0.9997133
93  4.825592e+01 0.9997133
94  4.825592e+01 0.9997133
95  4.825592e+01 0.9997133
96  4.827662e+01 0.9999610
97  4.827662e+01 0.9999610
98  4.827662e+01 0.9999610
99  4.827662e+01 0.9999610
100 4.827662e+01 0.9999610
101 4.827662e+01 0.9999610
102 4.827662e+01 0.9999610
103 4.827662e+01 0.9999610
104 4.827662e+01 0.9999610
105 4.827640e+01 0.9999696
106 4.827640e+01 0.9999696
107 4.829065e+01 0.9999794
108 4.829065e+01 0.9999794
109 4.829577e+01 0.9999819
110 4.829274e+01 0.9999876
111 4.830268e+01 0.9999996
112 4.830268e+01 0.9999996
113 4.830268e+01 0.9999996
114 4.830268e+01 0.9999996
115 4.830584e+01 0.9999996
116 4.830584e+01 0.9999996
117 4.830584e+01 0.9999996
118 4.830584e+01 0.9999996
119 4.830584e+01 0.9999996
120 4.830584e+01 0.9999996
121 4.830584e+01 0.9999996
122 4.830584e+01 0.9999996
123 4.830537e+01 0.9999997
124 4.830419e+01 0.9999999
125 4.830391e+01 1.0000000
126 4.830543e+01 0.9999999
127 4.830543e+01 0.9999999
128 4.830523e+01 1.0000000
129 4.830500e+01 1.0000000
130 4.830507e+01 1.0000000
131 4.830501e+01 1.0000000
132 4.830501e+01 1.0000000
133 4.830543e+01 1.0000000
134 4.830510e+01 1.0000000
135 4.830510e+01 1.0000000
136 4.830527e+01 1.0000000
137 4.830511e+01 1.0000000
138 4.830525e+01 1.0000000
139 4.830516e+01 1.0000000
140 4.830516e+01 1.0000000
141 4.830516e+01 1.0000000
142 4.830516e+01 1.0000000
143 4.830516e+01 1.0000000
144 4.830514e+01 1.0000000
145 4.830514e+01 1.0000000
146 4.830514e+01 1.0000000
147 4.830514e+01 1.0000000
148 4.830514e+01 1.0000000
149 4.830514e+01 1.0000000
150 4.830514e+01 1.0000000
151 4.830514e+01 1.0000000
152 4.830514e+01 1.0000000
153 4.830514e+01 1.0000000
154 4.830514e+01 1.0000000
155 4.830514e+01 1.0000000
156 4.830514e+01 1.0000000
157 4.830514e+01 1.0000000
158 4.830514e+01 1.0000000
159 4.830514e+01 1.0000000
160 4.830514e+01 1.0000000
161 4.830514e+01 1.0000000
162 4.830514e+01 1.0000000
163 4.830514e+01 1.0000000
164 4.830514e+01 1.0000000
165 4.830514e+01 1.0000000
166 4.830514e+01 1.0000000
167 4.830514e+01 1.0000000
168 4.830514e+01 1.0000000
169 4.830514e+01 1.0000000
170 4.830514e+01 1.0000000
171 4.830514e+01 1.0000000
172 4.830514e+01 1.0000000
173 4.830514e+01 1.0000000
174 4.830514e+01 1.0000000
175 4.830514e+01 1.0000000
176 4.830514e+01 1.0000000
177 4.830514e+01 1.0000000
178 4.830514e+01 1.0000000
179 4.830514e+01 1.0000000
180 4.830514e+01 1.0000000
181 4.830514e+01 1.0000000
182 4.830514e+01 1.0000000
183 4.830514e+01 1.0000000
184 4.830514e+01 1.0000000
185 4.830514e+01 1.0000000
186 4.830514e+01 1.0000000
187 4.830514e+01 1.0000000
188 4.830514e+01 1.0000000
189 4.830514e+01 1.0000000
190 4.830514e+01 1.0000000
191 4.830514e+01 1.0000000
192 4.830514e+01 1.0000000
193 4.830514e+01 1.0000000
194 4.830514e+01 1.0000000
195 4.830514e+01 1.0000000
196 4.830514e+01 1.0000000
197 4.830514e+01 1.0000000
198 4.830514e+01 1.0000000
199 4.830514e+01 1.0000000
200 4.830514e+01 1.0000000

$member$bestvalit
  [1] 5986.1080027 5909.9604944 5909.9604944 4665.0289305 4665.0289305
  [6] 2678.7071759 2678.7071759 2678.7071759 2623.9368894 2623.9368894
 [11] 2623.9368894 2623.9368894 2623.9368894 2426.2396028 2426.2396028
 [16] 2426.2396028 2426.2396028 2426.2396028 2426.2396028 2426.2396028
 [21] 1672.4946112 1393.9174369 1393.9174369 1393.9174369 1393.9174369
 [26]  969.3677259  969.3677259  969.3677259  969.3677259  969.3677259
 [31]  879.8869065  879.8869065  879.8869065  879.8869065  879.8869065
 [36]  879.8869065  879.8869065  479.9134798  479.9134798  479.9134798
 [41]  479.9134798  431.8651101  362.9497253   48.8865545   48.8865545
 [46]   48.8865545   48.8865545   48.8865545   48.8865545   48.8865545
 [51]   40.1958555    3.5900225    3.5900225    3.5900225    0.3341141
 [56]    0.3341141    0.3341141    0.1355922    0.1355922    0.1355922
 [61]    0.1355922    0.1355922    0.1355922    0.1355922    0.1355922
 [66]    0.1182108    0.1182108    0.1182108    0.1182108    0.1182108
 [71]    0.1182108    0.1182108    0.1182108    0.1182108    0.1182108
 [76]    0.1178290    0.1177649    0.1162165    0.1162165    0.1162165
 [81]    0.1162165    0.1162165    0.1159399    0.1157927    0.1157561
 [86]    0.1157561    0.1157561    0.1157561    0.1157525    0.1157525
 [91]    0.1157437    0.1157437    0.1157437    0.1157437    0.1157437
 [96]    0.1157126    0.1157126    0.1157126    0.1157126    0.1157126
[101]    0.1157126    0.1157126    0.1157126    0.1157126    0.1157122
[106]    0.1157122    0.1157075    0.1157075    0.1157066    0.1157064
[111]    0.1157040    0.1157040    0.1157040    0.1157040    0.1157039
[116]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[121]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[126]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[131]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[136]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[141]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[146]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[151]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[156]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[161]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[166]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[171]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[176]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[181]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[186]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[191]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[196]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039

$member$pop
          [,1] [,2]
 [1,] 48.30514    1
 [2,] 48.30514    1
 [3,] 48.30514    1
 [4,] 48.30514    1
 [5,] 48.30514    1
 [6,] 48.30514    1
 [7,] 48.30514    1
 [8,] 48.30514    1
 [9,] 48.30514    1
[10,] 48.30514    1
[11,] 48.30514    1
[12,] 48.30514    1
[13,] 48.30514    1
[14,] 48.30514    1
[15,] 48.30514    1
[16,] 48.30514    1
[17,] 48.30514    1
[18,] 48.30514    1
[19,] 48.30514    1
[20,] 48.30514    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
48.30514  1.00000 -0.20000 

$iter
[1] 200

$ela
E_1_2 (all) 
       1.25 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] TRUE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] -0.2

$fitted.values
 [1] 1130.340 1168.984 1192.654 1203.281 1203.281 1218.739 1251.586 1254.484
 [9] 1216.323 1259.315 1293.129 1442.874 1502.773 1554.942 1522.578 1539.968
[17] 1620.154 1693.578 1802.265 1902.739

$residuals
 [1] -0.177890779 -0.194117040 -0.108915660 -0.026513940 -0.021135372
 [6] -0.027390308 -0.009818258  0.026801371 -0.007109802  0.015048092
[11]  0.050855860  0.065654176  0.046965342  0.086810119  0.077146481
[16]  0.054380669  0.021303707  0.035967059  0.046166940  0.045791345

$rss
[1] 0.1157039

$cov.unscaled
              gamma         delta           rho
gamma  7.348578e+04  3.512642e+02 -4.310148e+15
delta  3.512642e+02  1.702281e+00 -3.062842e+13
rho   -4.310148e+15 -3.062842e+13  5.110811e+27

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
48.31  1.00 -0.20 

Elasticity of Substitution: 1.25 

> summary( cesDeMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.2 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.831e+01  2.062e+01   2.343   0.0191 *  
delta  1.000e+00  9.924e-02  10.077   <2e-16 ***
rho   -2.000e-01  5.438e+12   0.000   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.07606046 
Multiple R-squared: 0.8722098 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.250e+00  8.496e+12       0        1

> vcov( cesDeMe )
              gamma         delta           rho
gamma  4.251295e+02  2.032132e+00 -2.493504e+13
delta  2.032132e+00  9.848026e-03 -1.771913e+11
rho   -2.493504e+13 -1.771913e+11  2.956703e+25
> 
> 

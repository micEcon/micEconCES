
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # load the micEconCES package
> library( micEconCES )
Loading required package: miscTools
Loading required package: micEcon

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> # names of explanatory variables
> xxNames <- c( "land", "qVarInput" )
> 
> 
> ## Nelder-Mead, CRS
> cesNm <- cesEst( "qOutput", xxNames, germanFarms, rho = 2, method = "NM" )
> print.default( cesNm ) 
$optim
$optim$par
    gamma     delta 
84.481925  2.958593 

$optim$value
[1] 165627.5

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
84.481925  2.958593  2.000000 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.983 1189.229 1213.332 1224.062 1224.074 1239.797 1273.214 1276.216
 [9] 1237.370 1281.134 1315.500 1467.838 1528.755 1581.890 1549.068 1566.832
[17] 1648.594 1723.424 1834.091 1936.348

$residuals
 [1] -203.849629 -226.498270 -143.752386  -52.265915  -45.957914  -53.986784
 [7]  -33.856295   12.344914  -29.663643   -2.725735   45.092540   72.946590
[13]   46.279369  114.069394   95.621155   59.199094    6.445430   32.175811
[19]   53.328994   55.545714

$rss
[1] 165627.5

$cov.unscaled
           gamma      delta        rho
gamma 68755135.8 5287064.22 294128.401
delta  5287064.2  406559.78  22617.821
rho     294128.4   22617.82   1258.398

attr(,"class")
[1] "cesEst" "list"  
> print( cesNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Coefficients:
 gamma  delta    rho 
84.482  2.959  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 8.448e+01  7.546e+05   0.000        1
delta 2.959e+00  5.802e+04   0.000        1
rho   2.000e+00  3.228e+03   0.001        1

Residual standard error: 91.00207 
Multiple R-squared: 0.9064313 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   358.6888   0.001    0.999

> coef( cesNm ) 
    gamma     delta       rho 
84.481925  2.958593  2.000000 
> vcov( cesNm ) 
             gamma       delta        rho
gamma 569387210132 43784172790 2435788217
delta  43784172790  3366874873  187306705
rho     2435788217   187306705   10421267
> coef( summary( cesNm ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 84.481925 754577.504 1.119592e-04 0.9999107
delta  2.958593  58024.778 5.098845e-05 0.9999593
rho    2.000000   3228.199 6.195405e-04 0.9995057
> 
> ## Nelder-Mead, VRS
> cesNmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead" )
> print.default( cesNmVrs )
$optim
$optim$par
    gamma     delta        nu 
1.5303673 0.7174523 1.5625053 

$optim$value
[1] 50203.6

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1009.037 1094.607 1118.345 1174.723 1168.433 1193.016 1242.378 1219.037
 [9] 1173.534 1224.386 1293.436 1534.487 1645.051 1698.811 1592.155 1588.728
[17] 1649.866 1727.596 1882.312 2046.168

$residuals
 [1]  -62.904221 -131.876587  -48.765589   -2.926923    9.682748   -7.205877
 [7]   -3.020195   69.523919   34.172481   54.022206   67.156645    6.296741
[13]  -70.015959   -2.851106   52.533855   37.303266    5.173364   28.003532
[19]    5.108579  -54.273530

$rss
[1] 50203.6

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0998602670  2.549692e-02 -0.0402927323 -1.085427e-04
delta  0.0254969175  6.527913e-03 -0.0103231583 -2.014954e-05
rho   -0.0402927323 -1.032316e-02  0.0163286238  2.918040e-05
nu    -0.0001085427 -2.014954e-05  0.0000291804  3.450127e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.5304  0.7175 -0.1000  1.5625 

Elasticity of Substitution: 1.111 

> summary( cesNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.53037   15.83247   0.097    0.923    
delta  0.71745    4.04799   0.177    0.859    
rho   -0.10000    6.40217  -0.016    0.988    
nu     1.56251    0.09306  16.790   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.1017 
Multiple R-squared: 0.9716383 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.904   0.141    0.888

> coef( cesNmVrs )
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 
> vcov( cesNmVrs )
             gamma        delta           rho           nu
gamma  250.6672498  64.00185350 -101.14201275 -0.272461680
delta   64.0018535  16.38623712  -25.91298595 -0.050578961
rho   -101.1420127 -25.91298595   40.98778559  0.073248070
nu      -0.2724617  -0.05057896    0.07324807  0.008660441
> coef( summary( cesNmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.5303673 15.83247453  0.09666002 9.229964e-01
delta  0.7174523  4.04799174  0.17723660 8.593225e-01
rho   -0.1000000  6.40217038 -0.01561970 9.875378e-01
nu     1.5625053  0.09306149 16.79003135 2.886924e-63
> 
> ## Nelder-Mead, TC, VRS
> cesNmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    vrs = TRUE, rho = -0.4, method = "Nelder-Mead" )
> print.default( cesNmTcVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
9.46273064 0.02024909 0.61705684 0.94230811 

$optim$value
[1] 19156.69

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 9.46273064  0.02024909  0.61705684 -0.40000000  0.94230811 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.7823 1023.2076 1051.6761 1128.5308 1144.2890 1183.0571 1236.4060
 [8] 1231.0097 1235.0431 1284.0591 1365.0780 1543.9427 1648.8287 1694.4525
[15] 1632.2507 1644.4965 1676.4293 1735.8369 1853.3693 1987.4615

$residuals
 [1]   7.350709 -60.477156  17.903110  43.265640  33.827071   2.752865
 [7]   2.951866  57.551170 -27.336879  -5.650630  -4.485379  -3.158616
[13] -73.794042   1.506857  12.438407 -18.465337 -21.389414  19.762885
[19]  34.050923   4.432479

$rss
[1] 19156.69

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   6.8850471414  1.301673e-04  4.657933e-01 -6.367464e-01 -5.288243e-03
lambda  0.0001301673  1.310891e-08  7.945057e-06 -1.123532e-05 -4.620678e-07
delta   0.4657933182  7.945057e-06  3.163971e-02 -4.323644e-02 -3.146042e-04
rho    -0.6367464401 -1.123532e-05 -4.323644e-02  5.910390e-02  4.399826e-04
nu     -0.0052882435 -4.620678e-07 -3.146042e-04  4.399826e-04  1.986404e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 9.46273  0.02025  0.61706 -0.40000  0.94231 

Elasticity of Substitution: 1.667 

> summary( cesNmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.462731  81.207980   0.117    0.907    
lambda  0.020249   0.003543   5.714 1.10e-08 ***
delta   0.617057   5.505053   0.112    0.911    
rho    -0.400000   7.524079  -0.053    0.958    
nu      0.942308   0.137936   6.831 8.41e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30.9489 
Multiple R-squared: 0.9891777 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     20.900    0.08    0.936

> 
> ## Nelder-Mead, multErr, VRS
> cesNmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead", multErr = TRUE )
> print.default( cesNmMeVrs )
$optim
$optim$par
    gamma     delta        nu 
0.6320853 0.6585930 1.6884604 

$optim$value
[1] 0.03280247

$optim$counts
function gradient 
     416       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 0.6320853  0.6585930 -0.1000000  1.6884604 

$iter
[1] 416

$convergence
[1] TRUE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.1806 1076.4851 1099.5688 1167.7743 1159.7796 1186.3761 1239.2582
 [8] 1208.6715 1162.3582 1214.0103 1291.6182 1553.4891 1676.7967 1728.7846
[15] 1601.5476 1591.4764 1644.0091 1719.8211 1882.5106 2059.6606

$residuals
 [1] -3.535366e-02 -1.116830e-01 -2.765285e-02  3.438365e-03  1.568658e-02
 [6] -4.772690e-04  8.035769e-05  6.400420e-02  3.827194e-02  5.168679e-02
[11]  5.202450e-02 -8.211987e-03 -6.260794e-02 -1.917005e-02  2.658097e-02
[16]  2.148004e-02  6.687262e-03  2.059028e-02  2.604620e-03 -3.345525e-02

$rss
[1] 0.03280247

$cov.unscaled
            gamma        delta          rho          nu
gamma  40747.8559  23490.34018 -33375.88535 -133.447198
delta  23490.3402  13572.83957 -19296.45178  -63.556412
rho   -33375.8853 -19296.45178  27439.86508   86.073466
nu      -133.4472    -63.55641     86.07347    6.539542

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 0.6321  0.6586 -0.1000  1.6885 

Elasticity of Substitution: 1.111 

> summary( cesNmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 416 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6321     8.1751   0.077    0.938    
delta   0.6586     4.7182   0.140    0.889    
rho    -0.1000     6.7086  -0.015    0.988    
nu      1.6885     0.1036  16.303   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.04049844 
Multiple R-squared: 0.963771 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      8.282   0.134    0.893

> vcov( cesNmMeVrs )
            gamma       delta         rho          nu
gamma  66.8315247  38.5270640 -54.7405810 -0.21886991
delta  38.5270640  22.2611360 -31.6485682 -0.10424038
rho   -54.7405810 -31.6485682  45.0047734  0.14117113
nu     -0.2188699  -0.1042404   0.1411711  0.01072566
> 
> ## Conjugate Gradients, CRS
> cesCg <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", rho = 2 )
> print.default( cesCg )
$optim
$optim$par
     gamma      delta 
34.5396489  0.4930429 

$optim$value
[1] 166153.1

$optim$counts
function gradient 
     754      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 

$iter
function gradient 
     754      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.407
 [9] 1237.616 1281.315 1315.772 1468.139 1529.112 1582.098 1549.008 1566.589
[17] 1647.888 1722.388 1832.822 1934.988

$residuals
 [1] -203.864954 -226.691326 -143.889756  -52.609858  -46.272367  -54.310192
 [7]  -34.182586   12.154223  -29.909801   -2.906846   44.820825   72.645586
[13]   45.922856  113.861517   95.680850   59.442105    7.152052   33.212040
[19]   54.598040   56.905969

$rss
[1] 166153.1

$cov.unscaled
           gamma     delta         rho
gamma 234708.578 8637.0724 -11138.8651
delta   8637.072  317.8392   -409.9147
rho   -11138.865 -409.9147    528.7135

attr(,"class")
[1] "cesEst" "list"  
> print( cesCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 754 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.540  44157.427   0.001    0.999
delta     0.493   1624.961   0.000    1.000
rho       2.000   2095.798   0.001    0.999

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   232.8665   0.001    0.999

> coef( cesCg )
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 
> vcov( cesCg )
           gamma    delta       rho
gamma 1949878382 71753836 -92537871
delta   71753836  2640499  -3405431
rho    -92537871 -3405431   4392370
> coef( summary( cesCg ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5396489  44157.427 0.0007821934 0.9993759
delta  0.4930429   1624.961 0.0003034183 0.9997579
rho    2.0000000   2095.798 0.0009542903 0.9992386
> 
> ## Conjugate Gradients, TC, CRS
> cesCgTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "CG", rho = 0.2 )
> print.default( cesCgTc )
$optim
$optim$par
      gamma      lambda       delta 
10.81059812  0.01390654  0.49593039 

$optim$value
[1] 24727.63

$optim$counts
function gradient 
     709      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho 
10.81059812  0.01390654  0.49593039  0.20000000 

$iter
function gradient 
     709      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.8333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
10.81051  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.2

$fitted.values
 [1]  989.5014 1056.8814 1086.5674 1136.6414 1148.6832 1180.3811 1228.3889
 [8] 1230.8275 1217.9430 1269.1065 1332.7201 1507.5766 1598.1968 1654.5748
[15] 1609.6799 1629.8635 1692.3816 1766.6578 1892.0041 2023.7088

$residuals
 [1] -43.368408 -94.150906 -16.988248  35.155036  29.432829   5.428949
 [7]  10.968911  57.733399 -10.236834   9.301984  27.872560  33.207537
[13] -23.162159  41.384636  35.009228  -3.832395 -37.341743 -11.057972
[19]  -4.583874 -31.814817

$rss
[1] 24729.24

$cov.unscaled
               gamma        lambda         delta           rho
gamma   6.480681e+00  5.215003e-06  3.912553e-01 -5.028534e-01
lambda  5.215003e-06  2.287430e-09  4.340670e-07 -6.878850e-07
delta   3.912553e-01  4.340670e-07  2.362960e-02 -3.037925e-02
rho    -5.028534e-01 -6.878850e-07 -3.037925e-02  3.906814e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Coefficients:
   gamma   lambda    delta      rho 
10.81060  0.01391  0.49593  0.20000 

Elasticity of Substitution: 0.8333 

> summary( cesCgTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.2 
Convergence NOT achieved after 709 function and 101 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  10.810598  89.516013   0.121    0.904    
lambda  0.013907   0.001682   8.269   <2e-16 ***
delta   0.495930   5.405285   0.092    0.927    
rho     0.200000   6.950271   0.029    0.977    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 35.16336 
Multiple R-squared: 0.9860296 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.8333     4.8266   0.173    0.863

> 
> ## Conjugate Gradients, VRS
> cesCgVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,
+    rho = -0.1 )
Warning message:
In cesEst("qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,  :
  internal problem: the minimum of the objective function returned by the solver (203705.139781204) is not equal to the RSS calculated from the residuals (204528.553499677)
> print.default( cesCgVrs )
$optim
$optim$par
    gamma     delta        nu 
8.8515065 0.6795295 1.1311791 

$optim$value
[1] 203705.1

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1122.963 1194.112 1211.767 1259.536 1254.068 1273.210 1311.019 1290.616
 [9] 1256.670 1294.531 1348.553 1526.113 1605.787 1640.599 1561.032 1555.905
[17] 1593.248 1643.907 1747.473 1856.112

$residuals
 [1] -176.829703 -231.381442 -142.187837  -87.739686  -75.951626  -87.400098
 [7]  -71.661405   -2.055216  -48.963358  -16.122749   12.039515   14.670692
[13]  -30.752517   55.360099   83.657602   70.126526   61.791979  111.692557
[19]  139.947236  135.782096

$rss
[1] 204528.6

$cov.unscaled
             gamma         delta           rho            nu
gamma  3.501241531  2.150759e-01 -3.162004e-01 -6.611720e-04
delta  0.215075883  1.324607e-02 -1.948673e-02 -3.042148e-05
rho   -0.316200438 -1.948673e-02  2.867386e-02  4.146114e-05
nu    -0.000661172 -3.042148e-05  4.146114e-05  3.295931e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.8515  0.6795 -0.1000  1.1312 

Elasticity of Substitution: 1.111 

> summary( cesCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.8515   189.2226   0.047    0.963    
delta   0.6795    11.6387   0.058    0.953    
rho    -0.1000    17.1240  -0.006    0.995    
nu      1.1312     0.1836   6.161 7.21e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 101.1258 
Multiple R-squared: 0.8844548 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     21.141   0.053    0.958

> coef( cesCgVrs )
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 
> vcov( cesCgVrs )
             gamma        delta           rho         nu
gamma 35805.193292 2199.4579647 -3233.6009127 -6.7614281
delta  2199.457965  135.4599782  -199.2795895 -0.3111031
rho   -3233.600913 -199.2795895   293.2311185  0.4239993
nu       -6.761428   -0.3111031     0.4239993  0.0337056
> coef( summary( cesCgVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  8.8515065 189.2226025  0.04677827 9.626899e-01
delta  0.6795295  11.6387275  0.05838520 9.534418e-01
rho   -0.1000000  17.1239925 -0.00583976 9.953406e-01
nu     1.1311791   0.1835908  6.16141365 7.209838e-10
> 
> ## Simulated Annealing, CRS
> cesSann <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", rho = 2 )
> print.default( cesSann )
$optim
$optim$par
     gamma      delta 
35.9750345  0.5349214 

$optim$value
[1] 166103.7

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150.108 1189.519 1213.574 1224.493 1224.478 1240.210 1273.633 1276.512
 [9] 1237.713 1281.422 1315.874 1468.252 1529.226 1582.232 1549.164 1566.764
[17] 1648.114 1722.652 1833.119 1935.303

$residuals
 [1] -203.974896 -226.788429 -143.994408  -52.696204  -46.361476  -54.399985
 [7]  -34.275346   12.048473  -30.006594   -3.013969   44.718858   72.531607
[13]   45.808175  113.727771   95.525235   59.267615    6.926282   32.948212
[19]   54.301735   56.591233

$rss
[1] 166103.7

$cov.unscaled
          gamma      delta         rho
gamma 305445.36 11589.4194 -15016.8031
delta  11589.42   439.7368   -569.7965
rho   -15016.80  -569.7965    738.3930

attr(,"class")
[1] "cesEst" "list"  
> print( cesSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Coefficients:
  gamma   delta     rho 
35.9750  0.5349  2.0000 

Elasticity of Substitution: 0.3333 

> summary( cesSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.598e+01  5.037e+04   0.001    0.999
delta 5.349e-01  1.911e+03   0.000    1.000
rho   2.000e+00  2.476e+03   0.001    0.999

Residual standard error: 91.1328 
Multiple R-squared: 0.9061623 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   275.1541   0.001    0.999

> coef( cesSann )
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 
> vcov( cesSann )
           gamma    delta        rho
gamma 2536780927 96252300 -124717365
delta   96252300  3652097   -4732266
rho   -124717365 -4732266    6132492
> coef( summary( cesSann ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 35.9750345  50366.466 0.0007142656 0.9994301
delta  0.5349214   1911.046 0.0002799103 0.9997767
rho    2.0000000   2476.387 0.0008076282 0.9993556
> 
> ## Simulated Annealing, TC, CRS
> cesSannTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "SANN", rho = 0 )
> print.default( cesSannTc )
$optim
$optim$par
     gamma     lambda      delta 
8.54857873 0.01547997 0.50607610 

$optim$value
[1] 19128.29

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho 
8.54857873 0.01547997 0.50607610 0.00000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
8.455537 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  971.8813 1047.6385 1075.9469 1137.9544 1150.1649 1184.0424 1233.8051
 [8] 1230.7774 1223.1290 1272.5063 1343.1881 1521.6833 1618.2881 1668.5988
[15] 1612.2827 1626.6476 1673.8201 1739.8356 1860.9029 1992.9330

$residuals
 [1] -25.7483028 -84.9080648  -6.3677766  33.8421117  27.9511578   1.7675765
 [7]   5.5527490  57.7835621 -15.4228233   5.9022469  17.4045573  19.1007672
[13] -43.2534432  27.3606225  32.4063672  -0.6164541 -18.7802575  15.7641813
[19]  26.5173178  -1.0389470

$rss
[1] 19128.29

$cov.unscaled
               gamma        lambda         delta           rho
gamma   3.500017e+00  4.001765e-06  2.634223e-01 -3.385170e-01
lambda  4.001765e-06  2.308531e-09  4.150659e-07 -6.527719e-07
delta   2.634223e-01  4.150659e-07  1.983370e-02 -2.549625e-02
rho    -3.385170e-01 -6.527719e-07 -2.549625e-02  3.278491e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
8.54858 0.01548 0.50608 0.00000 

Elasticity of Substitution: 1 

> summary( cesSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.548579  57.857290   0.148    0.883    
lambda  0.015480   0.001486  10.418   <2e-16 ***
delta   0.506076   4.355368   0.116    0.907    
rho     0.000000   5.599639   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30.92595 
Multiple R-squared: 0.9891938 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.0        5.6   0.179    0.858

> 
> ## Simulated Annealing, VRS
> cesSannVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesSannVrs )
$optim
$optim$par
    gamma     delta        nu 
8.7693309 0.8783289 1.3340988 

$optim$value
[1] 70750.63

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 

$iter
[1] 10000

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1063.412 1124.750 1150.808 1180.631 1178.165 1198.808 1241.617 1234.555
 [9] 1189.434 1240.116 1291.485 1494.589 1581.636 1641.728 1576.575 1588.316
[17] 1672.413 1758.387 1902.093 2043.834

$residuals
 [1] -117.27868333 -162.01943218  -81.22885081   -8.83433184   -0.04859453
 [6]  -12.99840388   -2.25907866   54.00629931   18.27206874   38.29291875
[11]   69.10748044   46.19467942   -6.60086308   54.23119520   68.11389876
[16]   37.71489156  -17.37266777   -2.78762559  -14.67269187  -51.93980310

$rss
[1] 70750.63

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.8326439397  1.424502e-01 -4.266764e-01 -6.305057e-04
delta  0.1424502193  7.184148e-03 -2.153664e-02 -2.362488e-05
rho   -0.4266763728 -2.153664e-02  6.458166e-02  6.422393e-05
nu    -0.0006305057 -2.362488e-05  6.422393e-05  3.464149e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.7693  0.8783 -0.1000  1.3341 

Elasticity of Substitution: 1.111 

> summary( cesSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.7693   100.1028   0.088    0.930    
delta   0.8783     5.0412   0.174    0.862    
rho    -0.1000    15.1149  -0.007    0.995    
nu      1.3341     0.1107  12.051   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 59.47715 
Multiple R-squared: 0.9600305 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     18.660    0.06    0.953

> coef( cesSannVrs )
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 
> vcov( cesSannVrs )
             gamma        delta           rho          nu
gamma 10020.567490 503.92215424 -1509.3811578 -2.23043400
delta   503.922154  25.41415176   -76.1865494 -0.08357375
rho   -1509.381158 -76.18654938   228.4596801  0.22719420
nu       -2.230434  -0.08357375     0.2271942  0.01225454
> coef( summary( cesSannVrs ) )
        Estimate  Std. Error      t value     Pr(>|t|)
gamma  8.7693309 100.1027846  0.087603267 9.301920e-01
delta  0.8783289   5.0412451  0.174228568 8.616858e-01
rho   -0.1000000  15.1148827 -0.006615996 9.947212e-01
nu     1.3340988   0.1107002 12.051456311 1.905532e-33
> 
> ## BFGS, CRS
> cesBfgs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", rho = 2 )
> print.default( cesBfgs )
$optim
$optim$par
   gamma    delta 
79.50010  2.62027 

$optim$value
[1] 165640.8

$optim$counts
function gradient 
     368      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
   gamma    delta      rho 
79.50010  2.62027  2.00000 

$iter
function gradient 
     368      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.868 1189.115 1213.214 1223.949 1223.960 1239.681 1273.095 1276.093
 [9] 1237.253 1281.011 1315.376 1467.699 1528.612 1581.737 1548.912 1566.669
[17] 1648.411 1723.225 1833.875 1936.119

$residuals
 [1] -203.735069 -226.384387 -143.634653  -52.152455  -45.843689  -53.871219
 [7]  -33.737465   12.467554  -29.546322   -2.602356   45.217010   73.085530
[13]   46.422961  114.222145   95.777552   59.362015    6.628539   32.374947
[19]   53.545231   55.774538

$rss
[1] 165640.8

$cov.unscaled
           gamma      delta        rho
gamma 47097269.0 3433160.40 260682.491
delta  3433160.4  250260.85  19002.685
rho     260682.5   19002.69   1443.038

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Coefficients:
gamma delta   rho 
79.50  2.62  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 368 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma     79.50  624549.09   0.000        1
delta      2.62   45526.60   0.000        1
rho        2.00    3457.07   0.001        1

Residual standard error: 91.00573 
Multiple R-squared: 0.9064238 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   384.1184   0.001    0.999

> coef( cesBfgs )
   gamma    delta      rho 
79.50010  2.62027  2.00000 
> vcov( cesBfgs )
             gamma       delta        rho
gamma 390061567529 28433579170 2158983382
delta  28433579170  2072670909  157381041
rho     2158983382   157381041   11951305
> coef( summary( cesBfgs ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 79.50010 624549.091 1.272920e-04 0.9998984
delta  2.62027  45526.596 5.755471e-05 0.9999541
rho    2.00000   3457.066 5.785253e-04 0.9995384
> 
> ## BFGS, VRS
> cesBfgsVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesBfgsVrs )
$optim
$optim$par
    gamma     delta        nu 
1.3996924 0.7098902 1.5737278 

$optim$value
[1] 50080.4

$optim$counts
function gradient 
     565      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.3996924  0.7098902 -0.1000000  1.5737278 

$iter
function gradient 
     565      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1006.478 1093.236 1116.848 1174.572 1168.086 1192.865 1242.552 1218.374
 [9] 1172.866 1223.710 1293.654 1536.619 1648.400 1701.788 1592.965 1588.741
[17] 1648.655 1725.918 1881.116 2046.029

$residuals
 [1]  -60.344653 -130.505276  -47.268988   -2.775703   10.030252   -7.054767
 [7]   -3.194111   70.187083   34.840173   54.698131   66.938542    4.164763
[13]  -73.365684   -5.829016   51.724414   37.290372    6.385136   29.681755
[19]    6.304320  -54.134855

$rss
[1] 50080.4

$cov.unscaled
              gamma         delta           rho            nu
gamma  8.409086e-02  2.334735e-02 -3.631802e-02 -9.916634e-05
delta  2.334735e-02  6.500033e-03 -1.011804e-02 -1.999315e-05
rho   -3.631802e-02 -1.011804e-02  1.575341e-02  2.851379e-05
nu    -9.916634e-05 -1.999315e-05  2.851379e-05  3.448912e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.3997  0.7099 -0.1000  1.5737 

Elasticity of Substitution: 1.111 

> summary( cesBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 565 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.39969   14.51086   0.096    0.923    
delta  0.70989    4.03438   0.176    0.860    
rho   -0.10000    6.28067  -0.016    0.987    
nu     1.57373    0.09293  16.934   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.04018 
Multiple R-squared: 0.9717079 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.754   0.143    0.886

> coef( cesBfgsVrs )
     gamma      delta        rho         nu 
 1.3996924  0.7098902 -0.1000000  1.5737278 
> vcov( cesBfgsVrs )
            gamma        delta         rho           nu
gamma 210.5651912  58.46223005 -90.9410381 -0.248314493
delta  58.4622301  16.27621136 -25.3357630 -0.050063257
rho   -90.9410381 -25.33576299  39.4468416  0.071399101
nu     -0.2483145  -0.05006326   0.0713991  0.008636143
> coef( summary( cesBfgsVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.3996924 14.51086459  0.09645823 9.231566e-01
delta  0.7098902  4.03437868  0.17596023 8.603252e-01
rho   -0.1000000  6.28067207 -0.01592186 9.872967e-01
nu     1.5737278  0.09293085 16.93439493 2.509252e-64
> 
> ## BFGS, TC, VRS
> cesBfgsTcVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4 )
> print.default( cesBfgsTcVrs )
$optim
$optim$par
      gamma      lambda       delta          nu 
15.23748492  0.01902593  0.71799891  0.91414793 

$optim$value
[1] 17026.61

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
15.23748492  0.01902593  0.71799891 -0.40000000  0.91414793 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957.1379 1034.6492 1063.7372 1131.4014 1147.0802 1183.8512 1235.0590
 [8] 1233.8996 1234.8566 1284.2280 1358.7344 1530.2610 1628.3013 1677.1228
[15] 1625.4563 1642.0427 1684.3824 1748.4853 1865.9289 1995.9942

$residuals
 [1] -11.004876 -71.918692   5.841944  40.395062  31.035856   1.958824
 [7]   4.298834  54.661333 -27.150424  -5.819456   1.858247  10.523054
[13] -53.266620  18.836580  19.232796 -16.011578 -29.342510   7.114545
[19]  21.491394  -4.100157

$rss
[1] 17026.61

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma  12.4404421787  1.754571e-04  4.886889e-01 -7.783490e-01 -7.243061e-03
lambda  0.0001754571  1.298586e-08  6.108049e-06 -1.001058e-05 -4.604103e-07
delta   0.4886888679  6.108049e-06  1.930191e-02 -3.073567e-02 -2.453354e-04
rho    -0.7783490387 -1.001058e-05 -3.073567e-02  4.895680e-02  3.972371e-04
nu     -0.0072430608 -4.604103e-07 -2.453354e-04  3.972371e-04  1.990237e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
15.23748  0.01903  0.71800 -0.40000  0.91415 

Elasticity of Substitution: 1.667 

> summary( cesBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   15.237485 102.912229   0.148    0.882    
lambda   0.019026   0.003325   5.722 1.05e-08 ***
delta    0.717999   4.053678   0.177    0.859    
rho     -0.400000   6.455882  -0.062    0.951    
nu       0.914148   0.130167   7.023 2.17e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.17757 
Multiple R-squared: 0.9903811 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     17.933   0.093    0.926

> 
> ## BFGS, TC, multErr, VRS
> cesBfgsTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4,
+    multErr = TRUE )
Warning message:
In log(yHat) : NaNs produced
> print.default( cesBfgsTcMeVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
3.39831750 0.01492357 0.67020838 1.19797157 

$optim$value
[1] 0.01443344

$optim$counts
function gradient 
     231      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 3.39831750  0.01492357  0.67020838 -0.40000000  1.19797157 

$iter
function gradient 
     231      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
1.659179 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.3544 1032.2879 1058.6078 1140.9422 1149.4241 1186.1376 1241.1885
 [8] 1224.1083 1214.5897 1264.1439 1349.6615 1561.4327 1678.1141 1722.7473
[15] 1630.9572 1632.5111 1662.8606 1724.0872 1856.1567 2007.0108

$residuals
 [1]  0.0082554755 -0.0697593972  0.0103105884  0.0266836177  0.0246555598
 [6] -0.0002762657 -0.0014759895  0.0513133396 -0.0056834762  0.0112208272
[11]  0.0080665489 -0.0133123524 -0.0633933419 -0.0156717041  0.0083843168
[16] -0.0039772070 -0.0047142921  0.0181128130  0.0167028936 -0.0075604947

$rss
[1] 0.01443344

$cov.unscaled
               gamma      lambda        delta           rho            nu
gamma  1513894.42082 53.02822796 213659.54443 -3.102481e+05 -2883.6705766
lambda      53.02823  0.02009633      6.16021 -9.336861e+00    -0.8061152
delta   213659.54443  6.16020982  30307.79975 -4.399924e+04  -337.6644871
rho    -310248.12404 -9.33686104 -43999.24352  6.389460e+04   500.8582573
nu       -2883.67058 -0.80611519   -337.66449  5.008583e+02    38.8744551

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 3.39832  0.01492  0.67021 -0.40000  1.19797 

Elasticity of Substitution: 1.667 

> summary( cesBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 231 function and 100 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   3.398317  33.053516   0.103    0.918    
lambda  0.014924   0.003808   3.919 8.90e-05 ***
delta   0.670208   4.676781   0.143    0.886    
rho    -0.400000   6.790503  -0.059    0.953    
nu      1.197972   0.167495   7.152 8.53e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02686395 
Multiple R-squared: 0.9840589 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     18.863   0.088     0.93

> 
> ## L-BFGS-B with constrained parameters, CRS
> cesBfgsCon <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    rho = 2 )
> print.default( cesBfgsCon )
$optim
$optim$par
   gamma    delta 
49.14295  1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      42       42 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
function gradient 
      42       42 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 3.202073e+02 1.305668e+01 4.645382e+12
delta 1.305668e+01 5.323957e-01 1.894863e+11
rho   4.645382e+12 1.894863e+11 1.187250e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 42 function and 42 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.629e+03   0.030    0.976
delta 1.000e+00  6.644e+01   0.015    0.988
rho   2.000e+00  9.922e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  1.102e+13       0        1

> coef( cesBfgsCon )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesBfgsCon )
             gamma        delta          rho
gamma 2.655037e+06 1.082610e+05 3.851773e+16
delta 1.082610e+05 4.414422e+03 1.571148e+15
rho   3.851773e+16 1.571148e+15 9.844221e+27
> coef( summary( cesBfgsCon ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.629428e+03 3.015963e-02 0.9759397
delta  1.00000 6.644112e+01 1.505092e-02 0.9879916
rho    2.00000 9.921805e+13 2.015762e-14 1.0000000
> 
> ## L-BFGS-B with constrained parameters, TC, CRS
> cesBfgsConTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 1.2 )
> print.default( cesBfgsConTc )
$optim
$optim$par
       gamma       lambda        delta 
23.444972741  0.008565996  0.454640378 

$optim$value
[1] 66746.14

$optim$counts
function gradient 
      15       15 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
       gamma       lambda        delta          rho 
23.444972741  0.008565996  0.454640378  1.200000000 

$iter
function gradient 
      15       15 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
23.44378  0.01500  0.50000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 1.2

$fitted.values
 [1] 1044.011 1090.441 1121.592 1143.087 1152.659 1177.554 1219.642 1231.767
 [9] 1205.117 1257.785 1303.445 1466.877 1541.318 1607.044 1584.757 1615.050
[17] 1709.978 1800.455 1931.170 2056.209

$residuals
 [1]  -97.878492 -127.710092  -52.012776   28.709405   25.457194    8.256459
 [7]   19.716074   56.793991    2.589161   20.623998   57.147578   73.906796
[13]   33.717077   88.915502   59.931853   10.981138  -54.937839  -44.855063
[19]  -43.749798  -64.315428

$rss
[1] 66746.14

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.235249e+03  1.338288e-04  4.593388e+01 -5.969756e+01
lambda  1.338288e-04  2.221134e-09  5.428938e-06 -8.128525e-06
delta   4.593388e+01  5.428938e-06  1.708229e+00 -2.220413e+00
rho    -5.969756e+01 -8.128525e-06 -2.220413e+00  2.886959e+00

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Coefficients:
    gamma    lambda     delta       rho 
23.444973  0.008566  0.454640  1.200000 

Elasticity of Substitution: 0.4545 

> summary( cesBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 1.2 
Convergence achieved after 15 function and 15 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)   
gamma  2.344e+01  2.030e+03   0.012  0.99079   
lambda 8.566e-03  2.723e-03   3.146  0.00165 **
delta  4.546e-01  7.550e+01   0.006  0.99520   
rho    1.200e+00  9.816e+01   0.012  0.99025   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 57.76943 
Multiple R-squared: 0.9622928 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545    20.2802   0.022    0.982

> 
> ## L-BFGS-B with constrained parameters, VRS
> cesBfgsConVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesBfgsConVrs )
$optim
$optim$par
   gamma    delta       nu 
1.291948 0.703540 1.584229 

$optim$value
[1] 50044.76

$optim$counts
function gradient 
     137      137 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
    gamma     delta       rho        nu 
 1.291948  0.703540 -0.100000  1.584229 

$iter
function gradient 
     137      137 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.272 1167.616 1192.573 1242.561 1217.662
 [9] 1172.127 1222.990 1293.728 1538.463 1651.354 1704.464 1593.723 1588.821
[17] 1647.738 1724.661 1880.384 2046.325

$residuals
 [1]  -57.935748 -129.135000  -45.803264   -2.475211   10.500093   -6.763299
 [7]   -3.203157   70.899380   35.578765   55.418524   66.864885    2.321307
[13]  -76.319606   -8.504384   50.966313   37.210533    7.301693   30.938392
[19]    7.036171  -54.431191

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204006e-02  2.155670e-02 -3.311144e-02 -9.143956e-05
delta  2.155670e-02  6.468114e-03 -9.941845e-03 -1.984657e-05
rho   -3.311144e-02 -9.941845e-03  1.528456e-02  2.795977e-05
nu    -9.143956e-05 -1.984657e-05  2.795977e-05  3.448196e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2919  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 137 function and 137 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29195   13.42615   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18430  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesBfgsConVrs )
    gamma     delta       rho        nu 
 1.291948  0.703540 -0.100000  1.584229 
> vcov( cesBfgsConVrs )
            gamma        delta        rho           nu
gamma 180.2613793  53.94000275 -82.852695 -0.228803549
delta  53.9400027  16.18476196 -24.876862 -0.049660852
rho   -82.8526954 -24.87686162  38.245598  0.069962003
nu     -0.2288035  -0.04966085   0.069962  0.008628206
> coef( summary( cesBfgsConVrs ) )
       Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.291948 13.42614536  0.09622627 9.233409e-01
delta  0.703540  4.02302895  0.17487818 8.611754e-01
rho   -0.100000  6.18430255 -0.01616997 9.870988e-01
nu     1.584229  0.09288814 17.05522987 3.196131e-65
> 
> ## L-BFGS-B with constrained parameters, TC, multErr, CRS
> cesBfgsConTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 0, multErr = TRUE )
> print.default( cesBfgsConTcMe )
$optim
$optim$par
     gamma     lambda      delta 
5.85357860 0.01805535 0.39489997 

$optim$value
[1] 0.01176297

$optim$counts
function gradient 
      61       61 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma     lambda      delta        rho 
5.85357860 0.01805535 0.39489997 0.00000000 

$iter
function gradient 
      61       61 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

$method
[1] "L-BFGS-B"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.132777 0.015000 0.500000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 0

$fitted.values
 [1]  949.007 1031.631 1060.121 1132.153 1146.011 1183.017 1235.664 1230.190
 [9] 1228.233 1278.047 1356.198 1540.286 1644.293 1692.533 1629.040 1641.142
[17] 1678.801 1741.215 1862.812 1999.588

$residuals
 [1] -0.0030329990 -0.0691223540  0.0088817663  0.0344172616  0.0276293420
 [6]  0.0023577846  0.0029851611  0.0463574521 -0.0168534286  0.0002829769
[11]  0.0032351783  0.0003230086 -0.0430330323  0.0020222244  0.0095607357
[16] -0.0092500273 -0.0142546586  0.0082271452  0.0131239694 -0.0038552718

$rss
[1] 0.01176297

$cov.unscaled
               gamma        lambda         delta           rho
gamma  3624814.96940 -11.786458731 396646.577786 -5.310789e+05
lambda     -11.78646   0.003380629     -1.114713  1.294948e+00
delta   396646.57779  -1.114713357  43418.059036 -5.815112e+04
rho    -531078.88818   1.294948294 -58151.116306  7.790476e+04

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
5.85358 0.01806 0.39490 0.00000 

Elasticity of Substitution: 1 

> summary( cesBfgsConTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 61 function and 61 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.85358   46.17282   0.127    0.899    
lambda  0.01806    0.00141  12.805   <2e-16 ***
delta   0.39490    5.05334   0.078    0.938    
rho     0.00000    6.76901   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02425177 
Multiple R-squared: 0.9870083 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.769   0.148    0.883

> 
> ## Levenberg-Marquardt, CRS
> cesLm <- cesEst( "qOutput", xxNames, germanFarms,
+    control = nls.lm.control( maxiter = 200 ), rho = 2 )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 424.329313237888, 74.692348719481 
residual sum-of-squares: 165527
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
    gamma     delta       rho 
424.32931  74.69235   2.00000 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.900 1189.109 1213.221 1223.911 1223.928 1239.648 1273.063 1276.090
 [9] 1237.236 1281.010 1315.356 1467.677 1528.580 1581.740 1548.971 1566.770
[17] 1648.616 1723.504 1834.208 1936.476

$residuals
 [1] -203.766520 -226.378181 -143.641344  -52.114341  -45.812017  -53.838066
 [7]  -33.704692   12.470611  -29.529971   -2.601540   45.236582   73.106893
[13]   46.454608  114.219710   95.717623   59.261457    6.424049   32.096011
[19]   53.211949   55.418191

$rss
[1] 165527.2

$cov.unscaled
             gamma        delta          rho
gamma 1.225608e+12 435581606255 2.551110e+07
delta 4.355816e+11 154805930223 9.066669e+06
rho   2.551110e+07      9066669 5.310695e+02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
424.33  74.69   2.00 

Elasticity of Substitution: 0.3333 

> summary( cesLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.243e+02  1.007e+08   0.000    1.000
delta 7.469e+01  3.579e+07   0.000    1.000
rho   2.000e+00  2.097e+03   0.001    0.999

Residual standard error: 90.97451 
Multiple R-squared: 0.906488 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   232.9447   0.001    0.999

> coef( cesLm )
    gamma     delta       rho 
424.32931  74.69235   2.00000 
> vcov( cesLm )
             gamma        delta          rho
gamma 1.014357e+16 3.605031e+15 211139132140
delta 3.605031e+15 1.281230e+15  75039029104
rho   2.111391e+11 7.503903e+10      4395323
> coef( summary( cesLm ) )
       Estimate   Std. Error      t value  Pr(>|t|)
gamma 424.32931 1.007153e+08 4.213156e-06 0.9999966
delta  74.69235 3.579427e+07 2.086712e-06 0.9999983
rho     2.00000 2.096503e+03 9.539697e-04 0.9992388
> 
> ## Levenberg-Marquardt, VRS
> cesLmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1 )
> print.default( cesLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 1.29196188463489, 0.703541220961598, 1.58422750324928 
residual sum-of-squares: 50045
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 

$iter
[1] 32

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935810 -129.134885  -45.803175   -2.474915   10.500358   -6.763007
 [7]   -3.202825   70.899582   35.578977   55.418722   66.865210    2.321864
[13]  -76.318894   -8.503755   50.966631   37.210723    7.301659   30.938249
[19]    7.036036  -54.431237

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204157e-02  2.155693e-02 -3.311186e-02 -9.144059e-05
delta  2.155693e-02  6.468114e-03 -9.941868e-03 -1.984659e-05
rho   -3.311186e-02 -9.941868e-03  1.528463e-02  2.795986e-05
nu    -9.144059e-05 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 32 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesLmVrs )
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 
> vcov( cesLmVrs )
            gamma       delta          rho          nu
gamma 180.2651517  53.9405660 -82.85375770 -0.22880613
delta  53.9405660  16.1847613 -24.87691982 -0.04966090
rho   -82.8537577 -24.8769198  38.24577854  0.06996223
nu     -0.2288061  -0.0496609   0.06996223  0.00862821
> coef( summary( cesLmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919619 13.42628585  0.09622631 9.233408e-01
delta  0.7035412  4.02302887  0.17487849 8.611751e-01
rho   -0.1000000  6.18431714 -0.01616993 9.870988e-01
nu     1.5842275  0.09288816 17.05521509 3.196940e-65
> 
> ## Levenberg-Marquardt, TC, VRS
> cesLmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", germanFarms, 
+    vrs = TRUE, control = nls.lm.control( maxiter = 200 ), rho = 0.7 )
> print.default( cesLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 5.34979875874737, 0.0188900972833775, 0.0770802852892863, 0.91942089911595 
residual sum-of-squares: 17259
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma     lambda      delta        rho         nu 
5.34979876 0.01889010 0.07708029 0.70000000 0.91942090 

$iter
[1] 17

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.5882353 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
17.68019  0.01500  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.7

$fitted.values
 [1]  958.5501 1035.1919 1064.7052 1130.2362 1146.1401 1182.7350 1233.9782
 [8] 1234.1465 1234.1275 1284.2525 1357.8861 1530.0074 1627.6132 1678.2490
[15] 1627.6011 1644.3033 1685.6108 1748.0747 1864.5658 1994.6657

$residuals
 [1] -12.417147 -72.461456   4.873970  41.560247  31.975893   3.075033
 [7]   5.379631  54.414392 -26.421312  -5.844022   2.706463  10.776674
[13] -52.578529  17.710401  17.088051 -18.272137 -30.570958   7.525074
[19]  22.854485  -2.771711

$rss
[1] 17258.59

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma   0.509942270  3.903100e-05  3.367516e-02 -1.526529e-01 -1.640960e-03
lambda  0.000039031  1.296254e-08  1.956392e-06 -9.147753e-06 -4.596097e-07
delta   0.033675161  1.956392e-06  2.285792e-03 -1.035332e-02 -7.874554e-05
rho    -0.152652872 -9.147753e-06 -1.035332e-02  4.690891e-02  3.633625e-04
nu     -0.001640960 -4.596097e-07 -7.874554e-05  3.633625e-04  1.987170e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma  lambda   delta     rho      nu 
5.34980 0.01889 0.07708 0.70000 0.91942 

Elasticity of Substitution: 0.5882 

> summary( cesLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.7 
Convergence achieved after 17 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   5.349799  20.977231   0.255    0.799    
lambda  0.018890   0.003345   5.648 1.62e-08 ***
delta   0.077080   1.404449   0.055    0.956    
rho     0.700000   6.362318   0.110    0.912    
nu      0.919421   0.130950   7.021 2.20e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.37566 
Multiple R-squared: 0.99025 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5882     2.2015   0.267    0.789

> 
> ## Levenberg-Marquardt, multErr, VRS
> cesLmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1, multErr = TRUE )
Warning messages:
1: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
2: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
> print.default( cesLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.623563049675441, 0.657577531795479, 1.69024210187231 
residual sum-of-squares: 0.0328
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 0.6235630  0.6575775 -0.1000000  1.6902421 

$iter
[1] 34

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.0373 1076.5391 1099.6120 1168.0333 1160.0075 1186.6411 1239.5879
 [8] 1208.8691 1162.5404 1214.2078 1291.9714 1554.2150 1677.7494 1729.6993
[15] 1602.0926 1591.9000 1644.2711 1720.0411 1882.8577 2060.2266

$residuals
 [1] -0.0352074289 -0.1117331633 -0.0276921022  0.0032165918  0.0154901232
 [6] -0.0007006005 -0.0001855839  0.0638407120  0.0381152045  0.0515241382
[11]  0.0517510742 -0.0086791534 -0.0631759824 -0.0196989731  0.0262407476
[16]  0.0212138519  0.0065278919  0.0204623934  0.0024202983 -0.0337300395

$rss
[1] 0.03280093

$cov.unscaled
            gamma       delta        rho          nu
gamma  39691.2337  23174.6245 -32880.494 -131.693161
delta  23174.6245  13562.1157 -19253.781  -63.525399
rho   -32880.4936 -19253.7810  27340.236   85.914000
nu      -131.6932    -63.5254     85.914    6.539541

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 0.6236  0.6576 -0.1000  1.6902 

Elasticity of Substitution: 1.111 

> summary( cesLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 34 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6236     8.0682   0.077    0.938    
delta   0.6576     4.7162   0.139    0.889    
rho    -0.1000     6.6962  -0.015    0.988    
nu      1.6902     0.1036  16.321   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.04049749 
Multiple R-squared: 0.9637727 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      8.267   0.134    0.893

> vcov( cesLmMeVrs )
            gamma       delta        rho          nu
gamma  65.0954680  38.0074612 -53.925538 -0.21598290
delta  38.0074612  22.2425001 -31.577096 -0.10418461
rho   -53.9255377 -31.5770957  44.839258  0.14090295
nu     -0.2159829  -0.1041846   0.140903  0.01072515
> 
> ## Newton-type, CRS
> cesNewton <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton", rho = 2 )
> print.default( cesNewton )
$nlm
$nlm$minimum
[1] 166153.1

$nlm$estimate
[1] 34.5395061  0.4930391

$nlm$gradient
[1] -36.889207  -1.759474

$nlm$code
[1] 2

$nlm$iterations
[1] 4


$coefficients
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 

$iter
[1] 4

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.406
 [9] 1237.616 1281.315 1315.771 1468.138 1529.111 1582.097 1549.008 1566.589
[17] 1647.887 1722.387 1832.822 1934.988

$residuals
 [1] -203.864672 -226.691036 -143.889460  -52.609561  -46.272070  -54.309891
 [7]  -34.182276   12.154535  -29.909499   -2.906533   44.821145   72.645944
[13]   45.923228  113.861903   95.681231   59.442491    7.152462   33.212472
[19]   54.598502   56.906457

$rss
[1] 166153.1

$cov.unscaled
          gamma     delta         rho
gamma 234701.27 8636.7803 -11138.4908
delta   8636.78  317.8276   -409.8998
rho   -11138.49 -409.8998    528.6944

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.3333 

> summary( cesNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 4 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.539  44156.740   0.001    0.999
delta     0.493   1624.932   0.000    1.000
rho       2.000   2095.760   0.001    0.999

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.3333   232.8623   0.001    0.999

> coef( cesNewton )
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 
> vcov( cesNewton )
           gamma    delta       rho
gamma 1949817729 71751412 -92534765
delta   71751412  2640403  -3405307
rho    -92534765 -3405307   4392212
> coef( summary( cesNewton ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5395061  44156.740 0.0007822023 0.9993759
delta  0.4930391   1624.932 0.0003034214 0.9997579
rho    2.0000000   2095.760 0.0009543075 0.9992386
> 
> ## Newton-type, TC, CRS
> cesNewtonTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", rho = 0.8 )
> print.default( cesNewtonTc )
$nlm
$nlm$minimum
[1] 56559.9

$nlm$estimate
[1] 18.985441390  0.009430307  0.469942519

$nlm$gradient
[1] 1196.34036   10.48599   33.57147

$nlm$code
[1] 2

$nlm$iterations
[1] 13


$coefficients
       gamma       lambda        delta          rho 
18.985441390  0.009430307  0.469942519  0.800000000 

$iter
[1] 13

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
18.98474  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1035.621 1085.759 1116.646 1142.983 1152.953 1178.973 1222.048 1232.534
 [9] 1208.129 1260.542 1309.169 1474.548 1551.629 1615.823 1589.632 1618.058
[17] 1706.983 1794.205 1923.635 2049.654

$residuals
 [1]  -89.4883367 -123.0283938  -47.0665411   28.8134451   25.1627794
 [6]    6.8373248   17.3099894   56.0268333   -0.4224311   17.8667749
[11]   51.4232435   66.2360951   23.4056198   80.1361398   55.0572991
[16]    7.9733090  -51.9434514  -38.6055822  -36.2152285  -57.7597717

$rss
[1] 56559.9

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.269979e+02  3.202797e-05  5.083181e+00 -6.567128e+00
lambda  3.202797e-05  2.228655e-09  1.506074e-06 -2.319315e-06
delta   5.083181e+00  1.506074e-06  2.034901e-01 -2.629509e-01
rho    -6.567128e+00 -2.319315e-06 -2.629509e-01  3.398818e-01

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Coefficients:
   gamma   lambda    delta      rho 
18.98544  0.00943  0.46994  0.80000 

Elasticity of Substitution: 0.5556 

> summary( cesNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.8 
Convergence achieved after 13 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.899e+01  5.993e+02   0.032 0.974727    
lambda 9.430e-03  2.511e-03   3.756 0.000172 ***
delta  4.699e-01  2.399e+01   0.020 0.984370    
rho    8.000e-01  3.100e+01   0.026 0.979414    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 53.1789 
Multiple R-squared: 0.9680474 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5556     9.5688   0.058    0.954

> 
> ## Newton-type, VRS
> cesNewtonVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesNewtonVrs )
$nlm
$nlm$minimum
[1] 50087.17

$nlm$estimate
[1] 1.3947214 0.7102233 1.5748196

$nlm$gradient
[1]  -27515.9  208200.4 -172615.3

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
     gamma      delta        rho         nu 
 1.3947214  0.7102233 -0.1000000  1.5748196 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1005.714 1092.435 1116.059 1173.739 1167.259 1192.037 1241.726 1217.577
 [9] 1172.055 1222.915 1292.845 1535.842 1647.636 1701.076 1592.279 1588.088
[17] 1648.093 1725.428 1880.717 2045.717

$residuals
 [1]  -59.580927 -129.704682  -46.479409   -1.942116   10.857041   -6.226687
 [7]   -2.368036   70.984351   35.651411   55.493059   67.747624    4.941897
[13]  -72.601707   -5.116338   52.410090   37.943310    6.946878   30.171913
[19]    6.703078  -53.823272

$rss
[1] 50087.17

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0835462748  2.326101e-02 -3.620834e-02 -9.890280e-05
delta  0.0232610088  6.494107e-03 -1.011570e-02 -1.999498e-05
rho   -0.0362083431 -1.011570e-02  1.576049e-02  2.853455e-05
nu    -0.0000989028 -1.999498e-05  2.853455e-05  3.452792e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.3947  0.7102 -0.1000  1.5748 

Elasticity of Substitution: 1.111 

> summary( cesNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.39472   14.46478   0.096    0.923    
delta  0.71022    4.03281   0.176    0.860    
rho   -0.10000    6.28251  -0.016    0.987    
nu     1.57482    0.09299  16.935   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.04357 
Multiple R-squared: 0.971704 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.756   0.143    0.886

> coef( cesNewtonVrs )
     gamma      delta        rho         nu 
 1.3947214  0.7102233 -0.1000000  1.5748196 
> vcov( cesNewtonVrs )
            gamma       delta          rho          nu
gamma 209.2298369  58.2539088 -90.67867773 -0.24768809
delta  58.2539088  16.2635732 -25.33333458 -0.05007460
rho   -90.6786777 -25.3333346  39.46993182  0.07146076
nu     -0.2476881  -0.0500746   0.07146076  0.00864703
> coef( summary( cesNewtonVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.3947214 14.46477919  0.09642189 9.231855e-01
delta  0.7102233  4.03281207  0.17611118 8.602066e-01
rho   -0.1000000  6.28250999 -0.01591721 9.873004e-01
nu     1.5748196  0.09298941 16.93547325 2.463690e-64
> 
> ## Newton-type, TC, multErr, CRS
> cesNewtonTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", multErr = TRUE, rho = 0.3 )
> print.default( cesNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.01492337

$nlm$estimate
[1] 2.54914763 0.02056833 0.09054212

$nlm$gradient
[1] -0.0050508118 -0.0001117741 -0.0005658895

$nlm$code
[1] 2

$nlm$iterations
[1] 10


$coefficients
     gamma     lambda      delta        rho 
2.54914763 0.02056833 0.09054212 0.30000000 

$iter
[1] 10

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7692308 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

$method
[1] "Newton"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.497499 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.3

$fitted.values
 [1]  925.5654 1018.7387 1045.9746 1133.3518 1148.0378 1188.4420 1244.0290
 [8] 1232.1667 1237.6007 1285.8361 1374.1764 1564.4658 1677.7208 1718.8777
[15] 1640.3487 1645.1761 1662.3315 1713.9479 1830.5658 1968.9766

$residuals
 [1]  0.021978393 -0.056547063  0.022316230  0.033358564  0.025862331
 [6] -0.002217121 -0.003761976  0.044751896 -0.024451742 -0.005793186
[11] -0.009934188 -0.015252956 -0.063158905 -0.013422962  0.002642524
[16] -0.011705284 -0.004396015  0.024011158  0.030585874  0.011572061

$rss
[1] 0.01492337

$cov.unscaled
               gamma       lambda         delta           rho
gamma   2.973339e+05 -3.750430781  5.783963e+04 -224601.02692
lambda -3.750431e+00  0.003381098 -6.145425e-01       2.09496
delta   5.783963e+04 -0.614542464  1.125773e+04  -43732.71799
rho    -2.246010e+05  2.094960126 -4.373272e+04  169934.14970

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Coefficients:
  gamma  lambda   delta     rho 
2.54915 0.02057 0.09054 0.30000 

Elasticity of Substitution: 0.7692 

> summary( cesNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0.3 
Convergence achieved after 10 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   2.549148  14.895003   0.171    0.864    
lambda  0.020568   0.001588  12.949   <2e-16 ***
delta   0.090542   2.898303   0.031    0.975    
rho     0.300000  11.260528   0.027    0.979    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02731608 
Multiple R-squared: 0.9835177 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7692     6.6630   0.115    0.908

> 
> ## PORT, CRS
> cesPort <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", rho = 2 )
> print.default( cesPort )
$nlminb
$nlminb$par
   gamma    delta 
49.14295  1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 28

$nlminb$evaluations
function gradient 
      37       28 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 28

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 3.202073e+02 1.305668e+01 4.645382e+12
delta 1.305668e+01 5.323957e-01 1.894863e+11
rho   4.645382e+12 1.894863e+11 1.187250e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 28 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.629e+03   0.030    0.976
delta 1.000e+00  6.644e+01   0.015    0.988
rho   2.000e+00  9.922e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  1.102e+13       0        1

> coef( cesPort )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesPort )
             gamma        delta          rho
gamma 2.655037e+06 1.082610e+05 3.851773e+16
delta 1.082610e+05 4.414422e+03 1.571148e+15
rho   3.851773e+16 1.571148e+15 9.844221e+27
> coef( summary( cesPort ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.629428e+03 3.015963e-02 0.9759397
delta  1.00000 6.644112e+01 1.505092e-02 0.9879916
rho    2.00000 9.921805e+13 2.015762e-14 1.0000000
> 
> ## PORT, VRS
> cesPortVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesPortVrs )
$nlminb
$nlminb$par
    gamma     delta        nu 
1.2919621 0.7035412 1.5842275 

$nlminb$objective
[1] 50044.76

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 94

$nlminb$evaluations
function gradient 
     144       95 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
     gamma      delta        rho         nu 
 1.2919621  0.7035412 -0.1000000  1.5842275 

$iter
[1] 94

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935815 -129.134889  -45.803178   -2.474917   10.500356   -6.763009
 [7]   -3.202826   70.899580   35.578975   55.418721   66.865210    2.321869
[13]  -76.318886   -8.503746   50.966637   37.210729    7.301666   30.938257
[19]    7.036049  -54.431220

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204159e-02  2.155693e-02 -3.311187e-02 -9.144061e-05
delta  2.155693e-02  6.468114e-03 -9.941868e-03 -1.984659e-05
rho   -3.311187e-02 -9.941868e-03  1.528463e-02  2.795986e-05
nu    -9.144061e-05 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

Elasticity of Substitution: 1.111 

> summary( cesPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 94 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111      7.635   0.146    0.884

> coef( cesPortVrs )
     gamma      delta        rho         nu 
 1.2919621  0.7035412 -0.1000000  1.5842275 
> vcov( cesPortVrs )
            gamma       delta          rho          nu
gamma 180.2652037  53.9405750 -82.85377172 -0.22880617
delta  53.9405750  16.1847620 -24.87692099 -0.04966090
rho   -82.8537717 -24.8769210  38.24578045  0.06996223
nu     -0.2288062  -0.0496609   0.06996223  0.00862821
> coef( summary( cesPortVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919621 13.42628779  0.09622631 9.233408e-01
delta  0.7035412  4.02302896  0.17487849 8.611751e-01
rho   -0.1000000  6.18431730 -0.01616993 9.870988e-01
nu     1.5842275  0.09288816 17.05521474 3.196959e-65
> 
> ## PORT, TC, VRS
> cesPortTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0 )
> print.default( cesPortTcVrs )
$nlminb
$nlminb$par
     gamma     lambda      delta         nu 
9.84254171 0.01898455 0.42366821 0.91558127 

$nlminb$objective
[1] 17104.64

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 49

$nlminb$evaluations
function gradient 
      97       50 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
     gamma     lambda      delta        rho         nu 
9.84254171 0.01898455 0.42366821 0.00000000 0.91558127 

$iter
[1] 49

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
8.455537 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  957.673 1034.846 1064.092 1130.967 1146.739 1183.448 1234.663 1234.007
 [9] 1234.632 1284.275 1358.451 1530.128 1627.985 1677.466 1626.230 1642.883
[17] 1684.866 1748.377 1865.448 1995.492

$residuals
 [1] -11.540024 -72.115303   5.487454  40.829072  31.376735   2.361977
 [7]   4.694524  54.553730 -26.925647  -5.866121   2.141736  10.655812
[13] -52.950210  18.493711  18.459262 -16.851797 -29.826437   7.222737
[19]  21.971824  -3.598481

$rss
[1] 17104.64

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   5.8107724154  1.183735e-04  3.994515e-01 -5.274814e-01 -4.890809e-03
lambda  0.0001183735  1.297628e-08  7.123790e-06 -9.689557e-06 -4.600820e-07
delta   0.3994514637  7.123790e-06  2.762628e-02 -3.647066e-02 -2.863705e-04
rho    -0.5274813816 -9.689557e-06 -3.647066e-02  4.816090e-02  3.846669e-04
nu     -0.0048908091 -4.600820e-07 -2.863705e-04  3.846669e-04  1.989011e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
9.84254 0.01898 0.42367 0.00000 0.91558 

Elasticity of Substitution: 1 

> summary( cesPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 49 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.842542  70.495096   0.140    0.889    
lambda  0.018985   0.003331   5.699 1.21e-08 ***
delta   0.423668   4.860749   0.087    0.931    
rho     0.000000   6.417846   0.000    1.000    
nu      0.915581   0.130425   7.020 2.22e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.24435 
Multiple R-squared: 0.990337 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.418   0.156    0.876

> 
> ## PORT, TC, multErr, VRS
> cesPortTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0, multErr = TRUE )
> print.default( cesPortTcMeVrs )
$nlminb
$nlminb$par
    gamma    lambda     delta        nu 
8.7583999 0.0200175 0.3706250 0.9064519 

$nlminb$objective
[1] 0.01151423

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 96

$nlminb$evaluations
function gradient 
     121       97 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
    gamma    lambda     delta       rho        nu 
8.7583999 0.0200175 0.3706250 0.0000000 0.9064519 

$iter
[1] 96

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

$method
[1] "PORT"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
2.132777 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  949.3257 1028.8841 1058.0479 1128.7105 1145.1564 1182.9784 1235.0519
 [8] 1233.4779 1236.7098 1286.1705 1362.9596 1535.2195 1635.2476 1683.3913
[15] 1629.9032 1645.5597 1683.0701 1744.4140 1860.4063 1990.9647

$residuals
 [1] -0.0033687819 -0.0664566325  0.0108396637  0.0374622267  0.0283754080
 [6]  0.0023907562  0.0034804013  0.0436883045 -0.0237316204 -0.0060532806
[11] -0.0017381899  0.0036180914 -0.0375169719  0.0074381772  0.0090307289
[16] -0.0119384363 -0.0167944822  0.0063918581  0.0144160449  0.0004666769

$rss
[1] 0.01151423

$cov.unscaled
               gamma       lambda         delta           rho            nu
gamma   9449276.5342 131.66166127 738453.175542 -1.015753e+06 -7200.1392058
lambda      131.6617   0.02008696      8.138855 -1.171049e+01    -0.8056946
delta    738453.1755   8.13885536  58095.945737 -7.988780e+04  -451.8191469
rho    -1015753.0376 -11.71048566 -79887.801304  1.098865e+05   635.3382376
nu        -7200.1392  -0.80569459   -451.819147  6.353382e+02    38.8561641

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
8.75840 0.02002 0.37063 0.00000 0.90645 

Elasticity of Substitution: 1 

> summary( cesPortTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 96 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.758400  73.756758   0.119    0.905    
lambda  0.020018   0.003401   5.886 3.95e-09 ***
delta   0.370625   5.783296   0.064    0.949    
rho     0.000000   7.953800   0.000    1.000    
nu      0.906452   0.149566   6.061 1.36e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.02399399 
Multiple R-squared: 0.987283 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      7.954   0.126      0.9

> 
> ## DE, CRS
> cesDe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), rho = 2 )
> print.default( cesDe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
49.14295  1.00000 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   4.555650e+08 0.7085305
2   4.555650e+08 0.7085305
3   2.639615e+08 0.4308419
4   4.567699e+07 0.3698778
5   4.567699e+07 0.3698778
6   4.653491e+06 0.7366950
7   4.653491e+06 0.7366950
8   4.653491e+06 0.7366950
9   4.653491e+06 0.7366950
10  4.653491e+06 0.7366950
11  4.653491e+06 0.9955987
12  4.653491e+06 0.9955987
13  4.653491e+06 0.9955987
14  4.653491e+06 0.9955987
15  4.653491e+06 0.9955987
16  1.075461e+06 0.4993283
17  1.075461e+06 0.4993283
18  1.075461e+06 0.6699578
19  3.955697e+05 0.5041655
20  4.366453e+04 0.9735841
21  4.366453e+04 0.9735841
22  4.366453e+04 0.9735841
23  4.366453e+04 0.9735841
24  4.366453e+04 0.9735841
25  4.366453e+04 0.9735841
26  4.366453e+04 0.9735841
27  4.366453e+04 0.9735841
28  4.366453e+04 0.9735841
29  4.366453e+04 0.9735841
30  4.366453e+04 0.9735841
31  4.366453e+04 0.9735841
32  1.926417e+04 0.3393242
33  4.721003e+03 0.4013846
34  4.721003e+03 0.4013846
35  4.721003e+03 0.4013846
36  4.721003e+03 0.4013846
37  5.288780e+03 0.7217770
38  1.790693e+02 0.8798292
39  1.790693e+02 0.8869272
40  1.435859e+02 0.7463748
41  1.435859e+02 0.7463748
42  1.435859e+02 0.7463748
43  1.435859e+02 0.7463748
44  1.435859e+02 0.7463748
45  1.435859e+02 0.7463748
46  1.435859e+02 0.7463748
47  1.435859e+02 0.7463748
48  1.435859e+02 0.7463748
49  1.435859e+02 0.7463748
50  6.879322e+01 0.6173999
51  4.958577e+01 0.7047531
52  4.958577e+01 0.7047531
53  4.958577e+01 0.7047531
54  4.958577e+01 0.7047531
55  3.857133e+01 0.4552011
56  2.635058e+01 0.3920010
57  2.635058e+01 0.2539409
58  2.635058e+01 0.2539409
59  3.684989e+01 0.5542752
60  3.684989e+01 0.5542752
61  3.684989e+01 0.5542752
62  2.820130e+01 0.3252772
63  2.820130e+01 0.3252772
64  2.820130e+01 0.3252772
65  2.820130e+01 0.3252772
66  3.730079e+01 0.5805820
67  3.834762e+01 0.6032586
68  3.572345e+01 0.5314254
69  4.036882e+01 0.6759378
70  4.036882e+01 0.6759378
71  4.036882e+01 0.6759378
72  4.178281e+01 0.7244690
73  4.178281e+01 0.7244690
74  4.178281e+01 0.7244690
75  4.658640e+01 0.9016466
76  4.658640e+01 0.9016466
77  4.586119e+01 0.8733777
78  4.586119e+01 0.8733777
79  4.343273e+01 0.7820864
80  4.721650e+01 0.9249608
81  4.799425e+01 0.9541633
82  4.799425e+01 0.9541633
83  4.799425e+01 0.9541633
84  4.799425e+01 0.9541633
85  4.799425e+01 0.9541633
86  4.799425e+01 0.9541633
87  4.869443e+01 0.9810994
88  4.869443e+01 0.9810994
89  4.890231e+01 0.9893580
90  4.890231e+01 0.9893580
91  4.832962e+01 0.9672765
92  4.868550e+01 0.9816277
93  4.909619e+01 0.9983401
94  4.909619e+01 0.9983401
95  4.909619e+01 0.9983401
96  4.909619e+01 0.9983401
97  4.909619e+01 0.9983401
98  4.909619e+01 0.9983401
99  4.909619e+01 0.9983401
100 4.909619e+01 0.9983401
101 4.906630e+01 0.9969400
102 4.906630e+01 0.9969400
103 4.906630e+01 0.9969400
104 4.906630e+01 0.9969400
105 4.911445e+01 0.9990259
106 4.912119e+01 0.9992724
107 4.912119e+01 0.9992724
108 4.912119e+01 0.9992724
109 4.912119e+01 0.9992724
110 4.912119e+01 0.9992724
111 4.912119e+01 0.9992724
112 4.912979e+01 0.9995700
113 4.912979e+01 0.9995700
114 4.913300e+01 0.9995700
115 4.913300e+01 0.9995700
116 4.913821e+01 0.9997542
117 4.913821e+01 0.9997542
118 4.913821e+01 0.9997542
119 4.913821e+01 0.9997542
120 4.913821e+01 0.9997542
121 4.914120e+01 0.9999092
122 4.914120e+01 0.9999092
123 4.914120e+01 0.9999092
124 4.914120e+01 0.9999092
125 4.914120e+01 0.9999092
126 4.914120e+01 0.9999092
127 4.914120e+01 0.9999092
128 4.914120e+01 0.9999092
129 4.914120e+01 0.9999092
130 4.914220e+01 0.9999586
131 4.914220e+01 0.9999586
132 4.914220e+01 0.9999586
133 4.914220e+01 0.9999586
134 4.914220e+01 0.9999586
135 4.914220e+01 0.9999983
136 4.914227e+01 0.9999966
137 4.914274e+01 0.9999877
138 4.914274e+01 0.9999877
139 4.914274e+01 0.9999933
140 4.914274e+01 0.9999933
141 4.914274e+01 0.9999933
142 4.914274e+01 0.9999933
143 4.914299e+01 0.9999969
144 4.914299e+01 0.9999969
145 4.914292e+01 0.9999966
146 4.914279e+01 0.9999974
147 4.914288e+01 0.9999975
148 4.914286e+01 0.9999989
149 4.914286e+01 0.9999994
150 4.914286e+01 0.9999994
151 4.914286e+01 0.9999994
152 4.914286e+01 0.9999994
153 4.914288e+01 0.9999998
154 4.914288e+01 0.9999998
155 4.914294e+01 0.9999999
156 4.914294e+01 0.9999999
157 4.914294e+01 0.9999999
158 4.914294e+01 0.9999999
159 4.914294e+01 0.9999999
160 4.914294e+01 0.9999999
161 4.914294e+01 0.9999999
162 4.914297e+01 1.0000000
163 4.914294e+01 1.0000000
164 4.914294e+01 1.0000000
165 4.914294e+01 1.0000000
166 4.914294e+01 1.0000000
167 4.914294e+01 1.0000000
168 4.914294e+01 1.0000000
169 4.914294e+01 1.0000000
170 4.914294e+01 1.0000000
171 4.914294e+01 1.0000000
172 4.914294e+01 1.0000000
173 4.914294e+01 1.0000000
174 4.914295e+01 1.0000000
175 4.914295e+01 1.0000000
176 4.914295e+01 1.0000000
177 4.914295e+01 1.0000000
178 4.914295e+01 1.0000000
179 4.914295e+01 1.0000000
180 4.914295e+01 1.0000000
181 4.914295e+01 1.0000000
182 4.914295e+01 1.0000000
183 4.914295e+01 1.0000000
184 4.914295e+01 1.0000000
185 4.914295e+01 1.0000000
186 4.914295e+01 1.0000000
187 4.914295e+01 1.0000000
188 4.914295e+01 1.0000000
189 4.914295e+01 1.0000000
190 4.914295e+01 1.0000000
191 4.914295e+01 1.0000000
192 4.914295e+01 1.0000000
193 4.914295e+01 1.0000000
194 4.914295e+01 1.0000000
195 4.914295e+01 1.0000000
196 4.914295e+01 1.0000000
197 4.914295e+01 1.0000000
198 4.914295e+01 1.0000000
199 4.914295e+01 1.0000000
200 4.914295e+01 1.0000000

$member$bestvalit
  [1] 5.034301e+21 5.034301e+21 2.774681e+21 9.671021e+19 9.671021e+19
  [6] 5.052468e+17 5.052468e+17 5.052468e+17 5.052468e+17 5.052468e+17
 [11] 3.741072e+17 3.741072e+17 3.741072e+17 3.741072e+17 3.741072e+17
 [16] 3.976364e+16 3.976364e+16 2.966467e+16 5.327499e+15 3.360718e+13
 [21] 3.360718e+13 3.360718e+13 3.360718e+13 3.360718e+13 3.360718e+13
 [26] 3.360718e+13 3.360718e+13 3.360718e+13 3.360718e+13 3.360718e+13
 [31] 3.360718e+13 1.868651e+13 9.398594e+11 9.398594e+11 9.398594e+11
 [36] 9.398594e+11 6.556014e+11 3.457203e+08 3.420066e+08 2.356389e+08
 [41] 2.356389e+08 2.356389e+08 2.356389e+08 2.356389e+08 2.356389e+08
 [46] 2.356389e+08 2.356389e+08 2.356389e+08 2.356389e+08 2.547218e+07
 [51] 1.851704e+06 1.851704e+06 1.851704e+06 1.851704e+06 1.256561e+06
 [56] 1.037660e+06 3.219042e+05 3.219042e+05 1.677997e+05 1.677997e+05
 [61] 1.677997e+05 1.672254e+05 1.672254e+05 1.672254e+05 1.672254e+05
 [66] 1.669090e+05 1.667192e+05 1.666620e+05 1.660518e+05 1.660518e+05
 [71] 1.660518e+05 1.660378e+05 1.660378e+05 1.660378e+05 1.659949e+05
 [76] 1.659949e+05 1.659780e+05 1.659780e+05 1.659517e+05 1.659046e+05
 [81] 1.658496e+05 1.658496e+05 1.658496e+05 1.658496e+05 1.658496e+05
 [86] 1.658496e+05 1.658435e+05 1.658435e+05 1.658434e+05 1.658434e+05
 [91] 1.658432e+05 1.658386e+05 1.658335e+05 1.658335e+05 1.658335e+05
 [96] 1.658335e+05 1.658335e+05 1.658335e+05 1.658335e+05 1.658335e+05
[101] 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05 1.658330e+05
[106] 1.658328e+05 1.658328e+05 1.658328e+05 1.658328e+05 1.658328e+05
[111] 1.658328e+05 1.658326e+05 1.658326e+05 1.658325e+05 1.658325e+05
[116] 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05 1.658325e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]
 [1,] 49.14295 1.0000000
 [2,] 49.14295 1.0000000
 [3,] 49.14295 1.0000000
 [4,] 49.14295 1.0000000
 [5,] 49.14295 1.0000000
 [6,] 49.14295 1.0000000
 [7,] 49.14295 1.0000000
 [8,] 49.14295 1.0000000
 [9,] 49.14295 1.0000000
[10,] 49.14295 1.0000000
[11,] 49.14295 1.0000000
[12,] 40.38001 0.6754275
[13,] 49.14295 1.0000000
[14,] 49.14295 1.0000000
[15,] 49.14295 1.0000000
[16,] 49.14295 1.0000000
[17,] 49.14295 1.0000000
[18,] 49.14295 1.0000000
[19,] 28.96543 0.3463665
[20,] 49.14295 1.0000000

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.3333333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812032 -226.528909 -143.760268  -52.354414  -46.034847  -54.066633
 [7]  -33.936008   12.318500  -29.713286   -2.748204   45.035834   72.884172
[13]   46.197488  114.047829   95.703323   59.353875    6.785313   32.647974
[19]   53.896795   56.153209

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  3.749184e+02  1.602893e+01 -5.857445e+12
delta  1.602893e+01  6.913672e-01 -2.984414e+11
rho   -5.857445e+12 -2.984414e+11  4.707233e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

Elasticity of Substitution: 0.3333 

> summary( cesDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.763e+03   0.028    0.978
delta 1.000e+00  7.571e+01   0.013    0.989
rho   2.000e+00  6.247e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.333e-01  6.942e+12       0        1

> coef( cesDe )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesDe )
              gamma         delta           rho
gamma  3.108680e+06  1.329058e+05 -4.856770e+16
delta  1.329058e+05  5.732553e+03 -2.474562e+15
rho   -4.856770e+16 -2.474562e+15  3.903057e+27
> coef( summary( cesDe ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.763145e+03 2.787233e-02 0.9777640
delta  1.00000 7.571362e+01 1.320766e-02 0.9894621
rho    2.00000 6.247445e+13 3.201309e-14 1.0000000
> 
> ## DE, TC, CRS
> cesDeTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "DE", control = DEoptim.control( trace = FALSE ), rho = 0.5 )
> print.default( cesDeTc )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
5.64840264 0.01538514 0.20890144 

$optim$bestval
[1] 19793.34

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
            par1         par2      par3
1   1.029247e+09 -0.347555252 0.4753166
2   1.590873e+08 -0.139679582 0.8172633
3   1.590873e+08 -0.139679582 0.8172633
4   3.487480e+08 -0.475386315 0.8146400
5   2.094501e+08 -0.255163696 0.8989328
6   2.094501e+08 -0.255163696 0.8989328
7   4.802065e+07 -0.289564326 0.9327050
8   8.929968e+06 -0.223516289 0.6972863
9   8.929968e+06 -0.223516289 0.6972863
10  8.929968e+06 -0.223516289 0.6972863
11  8.929968e+06 -0.223516289 0.8547099
12  8.929968e+06 -0.223516289 0.8547099
13  8.929968e+06 -0.223516289 0.8547099
14  3.335520e+06 -0.319355714 0.4598070
15  3.335520e+06 -0.319355714 0.4598070
16  3.335520e+06 -0.319355714 0.4598070
17  3.335520e+06 -0.319355714 0.4598070
18  3.335520e+06 -0.319355714 0.4598070
19  1.091520e+05 -0.404457986 0.7509646
20  1.091520e+05 -0.452555868 0.7509646
21  1.091520e+05 -0.452555868 0.7509646
22  1.091520e+05 -0.452555868 0.7509646
23  1.091520e+05 -0.452555868 0.7509646
24  1.091520e+05 -0.452555868 0.7509646
25  1.091520e+05 -0.454157511 0.7509646
26  1.091520e+05 -0.454157511 0.7509646
27  1.091520e+05 -0.454157511 0.7509646
28  1.091520e+05 -0.454157511 0.7509646
29  1.091520e+05 -0.454157511 0.7509646
30  1.091520e+05 -0.454157511 0.7509646
31  1.091520e+05 -0.454157511 0.7509646
32  1.091520e+05 -0.454157511 0.7509646
33  1.091520e+05 -0.454157511 0.7509646
34  3.972516e+04 -0.367037042 0.6750168
35  3.972516e+04 -0.367037042 0.6948669
36  3.972516e+04 -0.304521688 0.8120649
37  3.972516e+04 -0.304521688 0.8408360
38  3.239982e+04 -0.468631119 0.9976855
39  3.239982e+04 -0.468631119 0.9976855
40  3.076472e+04 -0.475143361 0.9692401
41  8.242082e+03 -0.462965729 0.9196892
42  8.242082e+03 -0.462965729 0.9196892
43  8.242082e+03 -0.462965729 0.9196892
44  8.242082e+03 -0.462965729 0.9196892
45  8.242082e+03 -0.462965729 0.9196892
46  8.242082e+03 -0.462965729 0.9196892
47  7.655423e+03 -0.476245044 0.9437200
48  7.655423e+03 -0.476245044 0.9437200
49  7.655423e+03 -0.476245044 0.9437200
50  1.548483e+03 -0.431928860 0.9136890
51  1.548483e+03 -0.431928860 0.9136890
52  1.406549e+02 -0.292032239 0.9137834
53  1.406549e+02 -0.260282037 0.9137834
54  1.406549e+02 -0.260282037 0.9137834
55  1.406549e+02 -0.260282037 0.9137834
56  1.406549e+02 -0.260282037 0.9137834
57  1.406549e+02 -0.260282037 0.9137834
58  1.406549e+02 -0.260282037 0.9137834
59  1.406549e+02 -0.260282037 0.9137834
60  1.406549e+02 -0.260282037 0.9137834
61  1.406549e+02 -0.260282037 0.9137834
62  1.406549e+02 -0.260282037 0.9137834
63  6.447235e+01 -0.224387036 0.9056125
64  6.447235e+01 -0.224387036 0.9056125
65  6.447235e+01 -0.062029659 0.9056125
66  3.787436e+01 -0.025907824 0.8410156
67  3.787436e+01 -0.025907824 0.8410156
68  3.787436e+01 -0.025907824 0.8410156
69  3.787436e+01 -0.025907824 0.8410156
70  3.787436e+01 -0.025907824 0.8410156
71  3.787436e+01 -0.025907824 0.8410156
72  3.787436e+01 -0.025907824 0.8410156
73  3.787436e+01 -0.025907824 0.8410156
74  3.787436e+01 -0.015416276 0.7991274
75  3.787436e+01 -0.015416276 0.7991274
76  3.787436e+01 -0.015416276 0.7991274
77  2.506515e+01 -0.007785991 0.6425151
78  2.506515e+01 -0.007785991 0.6425151
79  2.506515e+01 -0.007785991 0.6425151
80  2.506515e+01 -0.007785991 0.5972871
81  2.506515e+01 -0.007785991 0.5972871
82  2.506515e+01 -0.007785991 0.5972871
83  2.506515e+01 -0.007785991 0.5972871
84  1.372088e+01 -0.002496466 0.3833123
85  1.372088e+01 -0.002496466 0.3833123
86  1.372088e+01 -0.002496466 0.3833123
87  2.843586e+01  0.001397463 0.7207079
88  2.843586e+01  0.001397463 0.7207079
89  2.843586e+01  0.001397463 0.7207079
90  2.843586e+01  0.001397463 0.7207079
91  3.997939e+01  0.005063037 0.9046617
92  4.107289e+01  0.006834412 0.9311245
93  4.107289e+01  0.006834412 0.9311245
94  4.107289e+01  0.006834412 0.9311245
95  4.107289e+01  0.006834412 0.9311245
96  4.107289e+01  0.006834412 0.9311245
97  4.107289e+01  0.006834412 0.9311245
98  4.107289e+01  0.006834412 0.9311245
99  4.107289e+01  0.006834412 0.9311245
100 4.107289e+01  0.006834412 0.9311245
101 4.107289e+01  0.006834412 0.9311245
102 4.107289e+01  0.006834412 0.9311245
103 3.526301e+01  0.008921707 0.8743052
104 2.773940e+01  0.007340509 0.7238251
105 2.773940e+01  0.007340509 0.7238251
106 2.773940e+01  0.007340509 0.7238251
107 2.315198e+01  0.008008272 0.6523859
108 2.315198e+01  0.008008272 0.6523859
109 2.315198e+01  0.008008272 0.6523859
110 2.315198e+01  0.008008272 0.6523859
111 1.797693e+01  0.009373904 0.5474998
112 1.797693e+01  0.009373904 0.5474998
113 1.797693e+01  0.009373904 0.5474998
114 1.797693e+01  0.009373904 0.5474998
115 1.797693e+01  0.009373904 0.5474998
116 1.797693e+01  0.009373904 0.5474998
117 1.797693e+01  0.009373904 0.5474998
118 1.797693e+01  0.009373904 0.5474998
119 1.797693e+01  0.009373904 0.5474998
120 1.797693e+01  0.009373904 0.5474998
121 1.797693e+01  0.009373904 0.5474998
122 1.797693e+01  0.009373904 0.5474998
123 1.797693e+01  0.009373904 0.5474998
124 1.844350e+01  0.010649029 0.5641639
125 1.844350e+01  0.010649029 0.5641639
126 1.844350e+01  0.010649029 0.5641639
127 1.844350e+01  0.010649029 0.5641639
128 1.445658e+01  0.010649029 0.4727976
129 1.445658e+01  0.010649029 0.4727976
130 1.424696e+01  0.010214632 0.4635927
131 1.424696e+01  0.010214632 0.4635927
132 1.424696e+01  0.010214632 0.4635927
133 1.424696e+01  0.010214632 0.4635927
134 1.424696e+01  0.010214632 0.4635927
135 1.424696e+01  0.010214632 0.4635927
136 1.424696e+01  0.010214632 0.4635927
137 1.424696e+01  0.010214632 0.4635927
138 1.424696e+01  0.011240459 0.4635927
139 1.424696e+01  0.011240459 0.4635927
140 1.424696e+01  0.011240459 0.4635927
141 1.338094e+01  0.010963318 0.4451184
142 1.338094e+01  0.010963318 0.4451184
143 1.363231e+01  0.011240459 0.4521408
144 1.306241e+01  0.010509877 0.4325867
145 1.306241e+01  0.010509877 0.4325867
146 1.306241e+01  0.010509877 0.4325867
147 1.317948e+01  0.010635233 0.4354181
148 1.276759e+01  0.011053032 0.4284572
149 1.276759e+01  0.011053032 0.4284572
150 1.207584e+01  0.011842433 0.4110710
151 1.207584e+01  0.011842433 0.4110710
152 1.207584e+01  0.011842433 0.4110710
153 1.207584e+01  0.011842433 0.4110710
154 1.207584e+01  0.011842433 0.4110710
155 1.207584e+01  0.011842433 0.4110710
156 1.199575e+01  0.012135172 0.4100315
157 1.199575e+01  0.012135172 0.4100315
158 1.084064e+01  0.011717482 0.3769286
159 1.084064e+01  0.011717482 0.3769286
160 1.076602e+01  0.012468078 0.3763884
161 1.073555e+01  0.011926561 0.3730249
162 1.073555e+01  0.011926561 0.3730249
163 9.952014e+00  0.012537248 0.3534665
164 9.952014e+00  0.012537248 0.3534665
165 9.952014e+00  0.012547938 0.3534665
166 1.031343e+01  0.012084291 0.3617275
167 9.976653e+00  0.012560612 0.3534381
168 9.952014e+00  0.013066694 0.3534665
169 9.140689e+00  0.012781392 0.3285708
170 9.140689e+00  0.012781392 0.3285708
171 9.140689e+00  0.012781392 0.3285708
172 9.140689e+00  0.012781392 0.3285708
173 9.145274e+00  0.012964322 0.3274241
174 8.665510e+00  0.013643459 0.3155436
175 8.047835e+00  0.014147588 0.2963291
176 8.047835e+00  0.014147588 0.2963291
177 8.047835e+00  0.014147588 0.2963291
178 7.720912e+00  0.014216961 0.2851756
179 7.321066e+00  0.014878263 0.2731244
180 7.321066e+00  0.014878263 0.2731244
181 7.321066e+00  0.014878263 0.2731244
182 7.321066e+00  0.014878263 0.2731244
183 7.518894e+00  0.014478610 0.2786800
184 7.214779e+00  0.014489887 0.2677557
185 7.214779e+00  0.014489887 0.2677557
186 7.214779e+00  0.014489887 0.2677557
187 7.214779e+00  0.014489887 0.2677557
188 7.214779e+00  0.014489887 0.2677557
189 6.832214e+00  0.015225591 0.2544379
190 6.545177e+00  0.015260098 0.2441962
191 6.545177e+00  0.015260098 0.2441962
192 6.545177e+00  0.015260098 0.2441962
193 6.050227e+00  0.015438730 0.2261291
194 6.050227e+00  0.015438730 0.2261291
195 6.050227e+00  0.015438730 0.2261291
196 6.196519e+00  0.014792343 0.2295365
197 5.872736e+00  0.015331859 0.2177164
198 5.648403e+00  0.015385140 0.2089014
199 5.648403e+00  0.015385140 0.2089014
200 5.648403e+00  0.015385140 0.2089014

$member$bestvalit
  [1] 5.314703e+21 9.123515e+19 9.123515e+19 8.230166e+19 5.399958e+19
  [6] 5.399958e+19 2.129126e+18 2.530286e+17 2.530286e+17 2.530286e+17
 [11] 1.369139e+17 1.369139e+17 1.369139e+17 6.867413e+16 6.867413e+16
 [16] 6.867413e+16 6.867413e+16 6.867413e+16 1.322293e+13 1.112590e+13
 [21] 1.112590e+13 1.112590e+13 1.112590e+13 1.112590e+13 1.106444e+13
 [26] 1.106444e+13 1.106444e+13 1.106444e+13 1.106444e+13 1.106444e+13
 [31] 1.106444e+13 1.106444e+13 1.106444e+13 2.766177e+12 2.541373e+12
 [36] 2.079495e+12 1.868697e+12 3.834765e+11 3.834765e+11 3.708014e+11
 [41] 3.218744e+10 3.218744e+10 3.218744e+10 3.218744e+10 3.218744e+10
 [46] 3.218744e+10 2.441627e+10 2.441627e+10 2.441627e+10 1.196306e+09
 [51] 1.196306e+09 3.493498e+07 3.387551e+07 3.387551e+07 3.387551e+07
 [56] 3.387551e+07 3.387551e+07 3.387551e+07 3.387551e+07 3.387551e+07
 [61] 3.387551e+07 3.387551e+07 3.048514e+07 3.048514e+07 7.236722e+06
 [66] 3.958024e+06 3.958024e+06 3.958024e+06 3.958024e+06 3.958024e+06
 [71] 3.958024e+06 3.958024e+06 3.958024e+06 1.182342e+06 1.182342e+06
 [76] 1.182342e+06 8.338013e+05 8.338013e+05 8.338013e+05 5.030307e+05
 [81] 5.030307e+05 5.030307e+05 5.030307e+05 3.932231e+05 3.932231e+05
 [86] 3.932231e+05 1.824201e+05 1.824201e+05 1.824201e+05 1.824201e+05
 [91] 9.115853e+04 8.489689e+04 8.489689e+04 8.489689e+04 8.489689e+04
 [96] 8.489689e+04 8.489689e+04 8.489689e+04 8.489689e+04 8.489689e+04
[101] 8.489689e+04 8.489689e+04 7.191204e+04 7.026847e+04 7.026847e+04
[106] 7.026847e+04 6.228496e+04 6.228496e+04 6.228496e+04 6.228496e+04
[111] 4.879227e+04 4.879227e+04 4.879227e+04 4.879227e+04 4.879227e+04
[116] 4.879227e+04 4.879227e+04 4.879227e+04 4.879227e+04 4.879227e+04
[121] 4.879227e+04 4.879227e+04 4.879227e+04 4.809456e+04 4.809456e+04
[126] 4.809456e+04 4.809456e+04 4.601728e+04 4.601728e+04 4.311808e+04
[131] 4.311808e+04 4.311808e+04 4.311808e+04 4.311808e+04 4.311808e+04
[136] 4.311808e+04 4.311808e+04 4.271848e+04 4.271848e+04 4.271848e+04
[141] 4.128344e+04 4.128344e+04 4.033667e+04 3.950119e+04 3.950119e+04
[146] 3.950119e+04 3.927797e+04 3.910207e+04 3.910207e+04 3.596061e+04
[151] 3.596061e+04 3.596061e+04 3.596061e+04 3.596061e+04 3.596061e+04
[156] 3.595307e+04 3.595307e+04 3.478522e+04 3.478522e+04 3.310398e+04
[161] 3.296986e+04 3.296986e+04 3.249227e+04 3.249227e+04 3.242430e+04
[166] 3.227652e+04 3.142850e+04 3.134221e+04 3.014915e+04 3.014915e+04
[171] 3.014915e+04 3.014915e+04 2.889170e+04 2.847876e+04 2.710276e+04
[176] 2.710276e+04 2.710276e+04 2.606877e+04 2.598946e+04 2.598946e+04
[181] 2.598946e+04 2.598946e+04 2.558654e+04 2.452278e+04 2.452278e+04
[186] 2.452278e+04 2.452278e+04 2.452278e+04 2.430050e+04 2.282949e+04
[191] 2.282949e+04 2.282949e+04 2.169283e+04 2.169283e+04 2.169283e+04
[196] 2.116034e+04 2.034953e+04 1.979334e+04 1.979334e+04 1.979334e+04

$member$pop
           [,1]        [,2]      [,3]
 [1,]  7.295045 0.014637914 0.2697752
 [2,]  6.247180 0.014753497 0.2312771
 [3,]  7.306255 0.014109805 0.2707747
 [4,]  7.266595 0.015074334 0.2698156
 [5,]  6.186045 0.015596713 0.2314632
 [6,]  5.521619 0.015622771 0.2060348
 [7,]  9.079681 0.013281220 0.3262807
 [8,]  6.487152 0.014852265 0.2412247
 [9,]  6.205952 0.013584594 0.2282339
[10,]  5.832663 0.015290640 0.2153175
[11,] 25.115126 0.006990966 0.6769638
[12,]  7.522296 0.014446754 0.2786653
[13,]  8.341428 0.013609985 0.3029852
[14,]  5.872736 0.015331859 0.2177164
[15,]  6.077809 0.015430136 0.2281337
[16,]  7.193891 0.014485078 0.2658350
[17,]  6.196519 0.014792343 0.2295365
[18,]  7.208122 0.014740770 0.2673965
[19,] 39.634306 0.007501480 0.9187002
[20,]  5.648403 0.015385140 0.2089014
[21,]  6.899729 0.014091854 0.2542099
[22,]  6.050227 0.015438730 0.2261291
[23,]  6.807912 0.014655707 0.2501977
[24,]  5.112913 0.016213834 0.1857944
[25,]  7.589459 0.014932660 0.2814216
[26,]  5.552577 0.015364052 0.2058813
[27,]  6.450773 0.014393943 0.2355711
[28,]  5.751518 0.016188739 0.2156140
[29,]  8.079471 0.012760603 0.2929265
[30,]  6.978998 0.014241406 0.2546845

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma     lambda      delta        rho 
5.64840264 0.01538514 0.20890144 0.50000000 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.6666667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] 0.5

$fitted.values
 [1]  974.5538 1047.1090 1076.5016 1133.6958 1146.5143 1180.0452 1229.6764
 [8] 1229.8258 1220.6188 1271.5164 1339.9223 1517.8962 1612.9451 1667.0447
[15] 1616.1097 1633.4694 1686.5238 1755.7367 1879.0864 2012.3738

$residuals
 [1] -28.4208274 -84.3784691  -6.9223849  38.1006276  31.6017336   5.7647846
 [7]   9.6814639  58.7350851 -12.9125551   6.8921069  20.6702787  22.8879224
[13] -37.9104040  28.9147336  28.5794592  -7.4382547 -31.4838965  -0.1369169
[19]   8.3338842 -20.4797383

$rss
[1] 19793.34

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.084868e+00  2.214022e-06  9.804013e-02 -1.905923e-01
lambda  2.214022e-06  2.308545e-09  2.876729e-07 -6.801762e-07
delta   9.804013e-02  2.876729e-07  8.864473e-03 -1.723932e-02
rho    -1.905923e-01 -6.801762e-07 -1.723932e-02  3.353610e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma  lambda   delta     rho 
5.64840 0.01539 0.20890 0.50000 

Elasticity of Substitution: 0.6667 

> summary( cesDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.5 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   5.648403  32.766720   0.172    0.863    
lambda  0.015385   0.001512  10.179   <2e-16 ***
delta   0.208901   2.961904   0.071    0.944    
rho     0.500000   5.761040   0.087    0.931    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 31.45898 
Multiple R-squared: 0.9888181 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.6667     2.5605    0.26    0.795

> 
> ## DE, VRS
> cesDeVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "DE", vrs = TRUE,
+    control = DEoptim.control( trace = FALSE ), rho = -0.1, random.seed = 234 )
> print.default( cesDeVrs )
$DEoptim
$optim
$optim$bestmem
     par1      par2      par3 
6.6093954 0.8761627 1.4087646 

$optim$bestval
[1] 81349.55

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2       par3
1   1.198341e+07 0.6587298 0.67413145
2   1.198341e+07 0.6587298 0.67413145
3   1.198341e+07 0.1263260 0.04069033
4   1.198341e+07 0.1263260 0.04069033
5   2.388963e+05 0.5984045 0.77394852
6   2.388963e+05 0.6089932 0.77394852
7   2.388963e+05 0.6089932 0.77394852
8   2.388963e+05 0.6089932 0.77394852
9   2.388963e+05 0.6089932 0.32982858
10  2.388963e+05 0.6089932 0.32982858
11  2.388963e+05 0.6089932 0.32982858
12  2.388963e+05 0.6089932 0.32982858
13  2.388963e+05 0.6089932 0.32982858
14  2.388963e+05 0.6089932 0.32982858
15  2.388963e+05 0.6089932 0.32982858
16  2.388963e+05 0.6089932 0.32982858
17  2.388963e+05 0.6089932 0.32982858
18  2.388963e+05 0.6089932 0.32982858
19  2.388963e+05 0.6516621 0.32982858
20  2.388963e+05 0.6516621 0.32982858
21  2.388963e+05 0.6516621 0.32982858
22  2.388963e+05 0.8315442 0.28534792
23  2.388963e+05 0.8315442 0.28534792
24  2.364859e+05 0.9752557 0.12726149
25  2.364859e+05 0.9752557 0.12726149
26  2.388963e+05 0.8315442 0.05502026
27  2.388963e+05 0.8315442 0.05502026
28  2.388963e+05 0.8315442 0.05502026
29  2.388963e+05 0.8315442 0.05502026
30  2.388963e+05 0.8315442 0.05502026
31  2.388963e+05 0.8315442 0.05502026
32  1.478570e+05 0.9665674 0.07348849
33  1.478570e+05 0.9665674 0.07348849
34  1.478570e+05 0.9665674 0.07348849
35  1.478570e+05 0.9665674 0.07348849
36  1.478570e+05 0.9665674 0.07348849
37  1.478570e+05 0.9665674 0.07348849
38  1.187897e+05 0.8803921 0.06843702
39  4.736063e+03 0.8142302 0.03868678
40  4.736063e+03 0.8142302 0.03868678
41  4.736063e+03 0.8142302 0.03868678
42  4.736063e+03 0.8142302 0.03868678
43  4.736063e+03 0.8654941 0.03868678
44  4.736063e+03 0.9849152 0.03868678
45  4.736063e+03 0.9849152 0.03868678
46  1.125644e+03 0.2286440 0.04903247
47  1.125644e+03 0.2286440 0.04903247
48  1.125644e+03 0.2286440 0.04903247
49  1.125644e+03 0.2286440 0.04903247
50  1.125644e+03 0.2286440 0.04903247
51  1.125644e+03 0.2286440 0.04903247
52  1.125644e+03 0.2286440 0.04903247
53  1.125644e+03 0.5191824 0.04049186
54  1.125644e+03 0.5191824 0.04049186
55  1.125644e+03 0.5191824 0.04049186
56  1.125644e+03 0.5191824 0.04049186
57  1.125644e+03 0.5191824 0.04049186
58  1.125644e+03 0.5191824 0.04049186
59  1.125644e+03 0.5191824 0.04049186
60  1.125644e+03 0.5191824 0.04049186
61  1.125644e+03 0.5191824 0.04049186
62  1.125644e+03 0.3749596 0.04049186
63  1.125644e+03 0.3749596 0.04049186
64  1.125644e+03 0.3749596 0.04049186
65  9.380244e+02 0.1906668 0.06769118
66  9.380244e+02 0.1906668 0.06769118
67  8.593124e+02 0.5349024 0.10324200
68  6.697317e+02 0.4235352 0.14485741
69  6.697317e+02 0.4235352 0.14485741
70  6.697317e+02 0.4235352 0.14485741
71  5.080023e+02 0.3185977 0.18603417
72  5.080023e+02 0.3185977 0.18603417
73  5.080023e+02 0.3185977 0.18603417
74  5.080023e+02 0.3185977 0.18603417
75  5.080023e+02 0.3185977 0.18603417
76  5.484771e+02 0.4419681 0.18359682
77  5.484771e+02 0.4419681 0.18359682
78  5.484771e+02 0.4419681 0.18359682
79  4.594942e+02 0.5342719 0.21961794
80  5.533105e+02 0.7179470 0.20761367
81  5.437579e+02 0.6333476 0.20825841
82  5.437579e+02 0.6333476 0.20825841
83  5.378502e+02 0.7820824 0.23456044
84  5.824461e+02 0.9786823 0.25943227
85  5.824461e+02 0.9786823 0.25943227
86  5.824461e+02 0.9786823 0.25943227
87  4.402722e+02 0.8735967 0.30417223
88  4.402722e+02 0.8735967 0.30417223
89  4.419599e+02 0.8735967 0.30417223
90  4.419599e+02 0.8735967 0.30417223
91  4.419599e+02 0.8735967 0.30417223
92  3.380436e+02 0.8148568 0.34758641
93  2.690599e+02 0.7318546 0.38420463
94  3.416551e+02 0.8958411 0.37732529
95  3.281296e+02 0.9047809 0.40463678
96  3.370357e+02 0.9942377 0.43170257
97  2.539765e+02 0.9014357 0.46580117
98  2.539765e+02 0.9014357 0.46580117
99  2.539765e+02 0.9014357 0.46580117
100 2.023291e+02 0.9765016 0.55571394
101 2.023291e+02 0.9765016 0.55571394
102 2.023291e+02 0.9765016 0.55571394
103 8.969107e+01 0.8792816 0.74408803
104 8.969107e+01 0.9214725 0.74408803
105 8.969107e+01 0.9214725 0.74408803
106 8.969107e+01 0.9214725 0.74408803
107 8.969107e+01 0.9214725 0.74408803
108 1.266397e+02 0.9809707 0.70493795
109 1.266397e+02 0.9809707 0.70493795
110 7.900129e+01 0.9047809 0.77577530
111 7.900129e+01 0.9047809 0.77577530
112 7.900129e+01 0.9047809 0.77577530
113 7.900129e+01 0.9047809 0.77577530
114 7.900129e+01 0.9047809 0.77577530
115 7.900129e+01 0.9047809 0.77577530
116 7.900129e+01 0.9047809 0.77577530
117 7.900129e+01 0.9047809 0.77577530
118 7.900129e+01 0.9047809 0.77577530
119 7.900129e+01 0.9047809 0.77577530
120 7.900129e+01 0.9047809 0.77577530
121 6.979147e+01 0.9567529 0.85564130
122 6.979147e+01 0.9567529 0.85564130
123 6.979147e+01 0.9567529 0.85564130
124 6.979147e+01 0.9567529 0.85564130
125 6.979147e+01 0.9567529 0.85564130
126 6.979147e+01 0.9567529 0.85564130
127 6.979147e+01 0.9567529 0.85564130
128 6.979147e+01 0.9567529 0.85564130
129 6.979147e+01 0.9567529 0.85564130
130 3.439478e+01 0.9528599 1.05662287
131 3.439478e+01 0.9528599 1.05662287
132 3.439478e+01 0.9528599 1.05662287
133 3.439478e+01 0.9528599 1.05662287
134 3.439478e+01 0.9528599 1.05662287
135 3.439478e+01 0.9528599 1.05662287
136 3.439478e+01 0.9528599 1.05662287
137 3.439478e+01 0.9528599 1.05662287
138 3.439478e+01 0.9528599 1.05662287
139 3.439478e+01 0.9528599 1.05662287
140 3.439478e+01 0.9528599 1.05662287
141 3.439478e+01 0.9528599 1.05662287
142 3.439478e+01 0.9528599 1.05662287
143 3.439478e+01 0.9528599 1.05662287
144 3.439478e+01 0.9528599 1.05662287
145 3.439478e+01 0.9528599 1.05662287
146 3.439478e+01 0.9528599 1.05662287
147 3.439478e+01 0.9528599 1.05662287
148 3.439478e+01 0.9528599 1.05662287
149 3.439478e+01 0.9528599 1.05662287
150 3.439478e+01 0.9528599 1.05662287
151 3.439478e+01 0.9528599 1.05662287
152 3.439478e+01 0.9528599 1.05662287
153 3.439478e+01 0.9528599 1.05662287
154 3.439478e+01 0.9528599 1.05662287
155 3.439478e+01 0.9528599 1.05662287
156 3.439478e+01 0.9528599 1.05662287
157 3.439478e+01 0.9528599 1.05662287
158 3.439478e+01 0.9528599 1.05662287
159 3.439478e+01 0.9528599 1.05662287
160 3.439478e+01 0.9528599 1.05662287
161 3.439478e+01 0.9528599 1.05662287
162 3.439478e+01 0.9528599 1.05662287
163 3.439478e+01 0.9528599 1.05662287
164 3.439478e+01 0.9528599 1.05662287
165 3.439478e+01 0.9528599 1.05662287
166 3.439478e+01 0.9528599 1.05662287
167 2.592979e+01 0.9977925 1.18713317
168 2.592979e+01 0.9977925 1.18713317
169 2.592979e+01 0.9977925 1.18713317
170 2.592979e+01 0.9977925 1.18713317
171 2.592979e+01 0.9977925 1.18713317
172 2.592979e+01 0.9977925 1.18713317
173 2.592979e+01 0.9977925 1.18713317
174 2.592979e+01 0.9977925 1.18713317
175 2.592979e+01 0.9977925 1.18713317
176 2.592979e+01 0.9977925 1.18713317
177 2.592979e+01 0.9977925 1.18713317
178 2.592979e+01 0.9977925 1.18713317
179 2.592979e+01 0.9977925 1.18713317
180 2.592979e+01 0.9977925 1.18713317
181 2.592979e+01 0.9977925 1.18713317
182 2.592979e+01 0.9977925 1.18713317
183 2.592979e+01 0.9977925 1.18713317
184 2.592979e+01 0.9977925 1.18713317
185 2.592979e+01 0.9977925 1.18713317
186 2.592979e+01 0.9977925 1.18713317
187 2.592979e+01 0.9977925 1.18713317
188 2.592979e+01 0.9977925 1.18713317
189 2.592979e+01 0.9977925 1.18713317
190 2.592979e+01 0.9977925 1.18713317
191 2.592979e+01 0.9977925 1.18713317
192 2.592979e+01 0.9977925 1.18713317
193 2.592979e+01 0.9977925 1.18713317
194 2.592979e+01 0.9977925 1.18713317
195 2.592979e+01 0.9977925 1.18713317
196 2.592979e+01 0.9977925 1.18713317
197 2.592979e+01 0.9977925 1.18713317
198 2.592979e+01 0.9977925 1.18713317
199 6.609395e+00 0.8761627 1.40876462
200 6.609395e+00 0.8761627 1.40876462

$member$bestvalit
  [1] 1.351140e+18 1.351140e+18 4.747787e+15 4.747787e+15 1.815862e+15
  [6] 1.721902e+15 1.721902e+15 1.721902e+15 2.565333e+13 2.565333e+13
 [11] 2.565333e+13 2.565333e+13 2.565333e+13 2.565333e+13 2.565333e+13
 [16] 2.565333e+13 2.565333e+13 2.565333e+13 2.339010e+13 2.339010e+13
 [21] 2.339010e+13 1.095500e+13 1.095500e+13 2.669739e+12 2.669739e+12
 [26] 1.749010e+12 1.749010e+12 1.749010e+12 1.749010e+12 1.749010e+12
 [31] 1.749010e+12 7.183589e+11 7.183589e+11 7.183589e+11 7.183589e+11
 [36] 7.183589e+11 7.183589e+11 4.655719e+11 3.410961e+08 3.410961e+08
 [41] 3.410961e+08 3.410961e+08 3.347623e+08 3.199651e+08 3.199651e+08
 [46] 1.848584e+06 1.848584e+06 1.848584e+06 1.848584e+06 1.848584e+06
 [51] 1.848584e+06 1.848584e+06 1.720256e+06 1.720256e+06 1.720256e+06
 [56] 1.720256e+06 1.720256e+06 1.720256e+06 1.720256e+06 1.720256e+06
 [61] 1.720256e+06 1.703362e+06 1.703362e+06 1.703362e+06 1.669243e+06
 [66] 1.669243e+06 1.584861e+06 1.537214e+06 1.537214e+06 1.537214e+06
 [71] 1.491270e+06 1.491270e+06 1.491270e+06 1.491270e+06 1.491270e+06
 [76] 1.463591e+06 1.463591e+06 1.463591e+06 1.435012e+06 1.408533e+06
 [81] 1.374246e+06 1.374246e+06 1.284654e+06 1.173209e+06 1.173209e+06
 [86] 1.173209e+06 1.127304e+06 1.127304e+06 1.124260e+06 1.124260e+06
 [91] 1.124260e+06 1.122725e+06 1.038795e+06 9.890159e+05 9.660461e+05
 [96] 8.468117e+05 8.239719e+05 8.239719e+05 8.239719e+05 6.983064e+05
[101] 6.983064e+05 6.983064e+05 6.081948e+05 5.217060e+05 5.217060e+05
[106] 5.217060e+05 5.217060e+05 4.356550e+05 4.356550e+05 4.018094e+05
[111] 4.018094e+05 4.018094e+05 4.018094e+05 4.018094e+05 4.018094e+05
[116] 4.018094e+05 4.018094e+05 4.018094e+05 4.018094e+05 4.018094e+05
[121] 2.872419e+05 2.872419e+05 2.872419e+05 2.872419e+05 2.872419e+05
[126] 2.872419e+05 2.872419e+05 2.872419e+05 2.872419e+05 1.601422e+05
[131] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[136] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[141] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[146] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[151] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[156] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[161] 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05 1.601422e+05
[166] 1.601422e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[171] 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[176] 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[181] 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[186] 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[191] 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05 1.035912e+05
[196] 1.035912e+05 1.035912e+05 1.035912e+05 8.134955e+04 8.134955e+04

$member$pop
            [,1]      [,2]      [,3]
 [1,]  68.507676 0.6878286 0.6785167
 [2,] 126.639682 0.9809707 0.7049380
 [3,]  42.731877 0.8970209 0.9463617
 [4,] 240.400495 0.8040228 0.4318917
 [5,]  95.694274 0.9214725 0.7440880
 [6,]  26.137279 0.9797702 1.1471729
 [7,] 142.062735 0.9803576 0.6682234
 [8,] 479.052301 0.6932988 0.2472694
 [9,]  63.805189 0.9050923 0.8383193
[10,] 270.296073 0.7815587 0.4029847
[11,]  25.929788 0.9977925 1.1871332
[12,]  79.001286 0.8959935 0.7757753
[13,] 144.282097 0.9329179 0.6364634
[14,] 126.304584 0.9805357 0.7091254
[15,] 337.035722 0.9942377 0.4317026
[16,] 152.696537 0.7575702 0.5212302
[17,] 212.121200 0.9810536 0.5557139
[18,]  34.394779 0.9528599 1.0566229
[19,] 161.060129 0.9941178 0.6513428
[20,]  70.434737 0.8657180 0.7938239
[21,]  55.453828 0.9964006 0.9665425
[22,]  63.496460 0.7729736 0.7511320
[23,]  41.324923 0.9873939 1.0304620
[24,]  89.794841 0.8906797 0.7344957
[25,]   6.609395 0.8761627 1.4087646
[26,]  44.747772 0.9841326 0.9994652
[27,]  38.455539 0.8414427 0.9214270
[28,] 209.337327 0.9975860 0.5666370
[29,] 240.266087 0.7950041 0.4377105
[30,] 231.637679 0.7512842 0.4221563

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
 6.6093954  0.8761627 -0.1000000  1.4087646 

$iter
[1] 200

$ela
E_1_2 (all) 
   1.111111 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] -0.1

$fitted.values
 [1] 1059.846 1124.730 1152.184 1184.028 1181.373 1203.249 1248.657 1240.962
 [9] 1193.204 1246.852 1301.576 1518.627 1612.240 1676.744 1606.198 1618.606
[17] 1708.739 1801.337 1956.982 2111.270

$residuals
 [1] -113.713458 -161.999210  -82.604804  -12.231922   -3.256493  -17.439058
 [7]   -9.299057   47.598486   14.502001   31.556822   59.016892   22.157094
[13]  -37.205826   19.215168   38.491536    7.424863  -53.698773  -45.736722
[19]  -69.561760 -119.375579

$rss
[1] 81349.55

$cov.unscaled
              gamma         delta           rho            nu
gamma  1.5601347267  9.864354e-02 -2.910510e-01 -4.592748e-04
delta  0.0986435402  6.254988e-03 -1.847119e-02 -2.154468e-05
rho   -0.2910510000 -1.847119e-02  5.456213e-02  5.762762e-05
nu    -0.0004592748 -2.154468e-05  5.762762e-05  3.387694e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
 6.6094  0.8762 -0.1000  1.4088 

Elasticity of Substitution: 1.111 

> summary( cesDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   6.6094    79.6606   0.083    0.934    
delta   0.8762     5.0440   0.174    0.862    
rho    -0.1000    14.8973  -0.007    0.995    
nu      1.4088     0.1174  12.001   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 63.77678 
Multiple R-squared: 0.9540428 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.111     18.392    0.06    0.952

> coef( cesDeVrs )
     gamma      delta        rho         nu 
 6.6093954  0.8761627 -0.1000000  1.4087646 
> vcov( cesDeVrs )
            gamma        delta           rho          nu
gamma  6345.81287 401.23037849 -1183.8433889 -1.86808986
delta   401.23038  25.44202116   -75.1311426 -0.08763249
rho   -1183.84339 -75.13114262   221.9302237  0.23439907
nu       -1.86809  -0.08763249     0.2343991  0.01377937
> coef( summary( cesDeVrs ) )
        Estimate Std. Error      t value     Pr(>|t|)
gamma  6.6093954 79.6606105  0.082969430 9.338758e-01
delta  0.8761627  5.0440084  0.173703656 8.620984e-01
rho   -0.1000000 14.8973227 -0.006712616 9.946441e-01
nu     1.4087646  0.1173856 12.001174759 3.502888e-33
> 
> ## DE, multErr, CRS
> cesDeMe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), multErr = TRUE, rho = -0.2 )
> print.default( cesDeMe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
48.30514  1.00000 

$optim$bestval
[1] 0.1157039

$optim$nfeval
[1] 402

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   4.555650e+08 0.7085305
2   4.555650e+08 0.7085305
3   4.555650e+08 0.7085305
4   2.359945e+08 0.8176178
5   7.764900e+06 0.6621113
6   4.653491e+06 0.7911237
7   4.653491e+06 0.7911237
8   4.653491e+06 0.7911237
9   4.653491e+06 0.7911237
10  4.653491e+06 0.7911237
11  1.901187e+06 0.7405649
12  3.255099e+06 0.9254144
13  3.255099e+06 0.9254144
14  3.255099e+06 0.9254144
15  1.934166e+06 0.8932363
16  1.934166e+06 0.8932363
17  1.934166e+06 0.8932363
18  1.558767e+06 0.8400034
19  1.558767e+06 0.8693999
20  1.159576e+06 0.9944012
21  4.964676e+05 0.8952999
22  3.706179e+05 0.8932363
23  1.025974e+05 0.8259087
24  1.636613e+05 0.9500972
25  1.636613e+05 0.9500972
26  1.193614e+05 0.8882469
27  1.344714e+05 0.9454133
28  5.867582e+04 0.9694119
29  1.178552e+04 0.9520274
30  1.178552e+04 0.9520274
31  1.178552e+04 0.9520274
32  3.586051e+03 0.9925941
33  3.586051e+03 0.9925941
34  3.586051e+03 0.9925941
35  3.586051e+03 0.9925941
36  3.586051e+03 0.9995185
37  1.623242e+03 0.9822931
38  4.978260e+02 0.9580232
39  4.978260e+02 0.9580232
40  4.978260e+02 0.9580232
41  2.078105e+01 0.9738997
42  2.078105e+01 0.9738997
43  2.078105e+01 0.9738997
44  2.078105e+01 0.9738997
45  2.078105e+01 0.9738997
46  3.913104e+01 0.9572823
47  4.005577e+01 0.9585152
48  4.005577e+01 0.9585152
49  4.005577e+01 0.9585152
50  4.005577e+01 0.9585152
51  4.005577e+01 0.9585152
52  4.005577e+01 0.9585152
53  4.005577e+01 0.9585152
54  4.005577e+01 0.9585152
55  4.005577e+01 0.9585152
56  4.005577e+01 0.9585152
57  4.005577e+01 0.9585152
58  4.005577e+01 0.9585152
59  4.613312e+01 0.9894835
60  4.613312e+01 0.9894835
61  4.613312e+01 0.9894835
62  4.613312e+01 0.9894835
63  4.652755e+01 0.9915076
64  4.815880e+01 0.9999368
65  4.815880e+01 0.9999368
66  4.815880e+01 0.9999368
67  4.815880e+01 0.9999368
68  4.815880e+01 0.9999368
69  4.815880e+01 0.9999368
70  4.815880e+01 0.9999368
71  4.815880e+01 0.9999368
72  4.815880e+01 0.9999368
73  4.815880e+01 0.9999368
74  4.815880e+01 0.9999368
75  4.815880e+01 0.9999368
76  4.828743e+01 0.9998020
77  4.828743e+01 0.9998020
78  4.828743e+01 0.9998020
79  4.828743e+01 0.9998020
80  4.828743e+01 0.9998020
81  4.828743e+01 0.9998020
82  4.828743e+01 0.9998020
83  4.828743e+01 0.9998020
84  4.828743e+01 0.9998020
85  4.828305e+01 0.9997985
86  4.828305e+01 0.9997985
87  4.828305e+01 0.9997985
88  4.829595e+01 0.9999274
89  4.829595e+01 0.9999274
90  4.829595e+01 0.9999650
91  4.829595e+01 0.9999650
92  4.829595e+01 0.9999650
93  4.829595e+01 0.9999650
94  4.829741e+01 0.9999900
95  4.829741e+01 0.9999900
96  4.829305e+01 0.9999990
97  4.830513e+01 0.9999907
98  4.830632e+01 0.9999990
99  4.830632e+01 0.9999990
100 4.830632e+01 0.9999990
101 4.830632e+01 0.9999990
102 4.830473e+01 0.9999998
103 4.830473e+01 0.9999998
104 4.830473e+01 0.9999998
105 4.830473e+01 0.9999998
106 4.830503e+01 0.9999999
107 4.830503e+01 0.9999999
108 4.830503e+01 0.9999999
109 4.830503e+01 0.9999999
110 4.830535e+01 0.9999999
111 4.830535e+01 0.9999999
112 4.830539e+01 1.0000000
113 4.830539e+01 1.0000000
114 4.830539e+01 1.0000000
115 4.830539e+01 1.0000000
116 4.830539e+01 1.0000000
117 4.830539e+01 1.0000000
118 4.830539e+01 1.0000000
119 4.830503e+01 1.0000000
120 4.830503e+01 1.0000000
121 4.830511e+01 1.0000000
122 4.830511e+01 1.0000000
123 4.830503e+01 1.0000000
124 4.830503e+01 1.0000000
125 4.830515e+01 1.0000000
126 4.830515e+01 1.0000000
127 4.830515e+01 1.0000000
128 4.830515e+01 1.0000000
129 4.830512e+01 1.0000000
130 4.830515e+01 1.0000000
131 4.830511e+01 1.0000000
132 4.830511e+01 1.0000000
133 4.830511e+01 1.0000000
134 4.830512e+01 1.0000000
135 4.830512e+01 1.0000000
136 4.830512e+01 1.0000000
137 4.830512e+01 1.0000000
138 4.830512e+01 1.0000000
139 4.830512e+01 1.0000000
140 4.830512e+01 1.0000000
141 4.830514e+01 1.0000000
142 4.830513e+01 1.0000000
143 4.830513e+01 1.0000000
144 4.830514e+01 1.0000000
145 4.830514e+01 1.0000000
146 4.830514e+01 1.0000000
147 4.830514e+01 1.0000000
148 4.830514e+01 1.0000000
149 4.830514e+01 1.0000000
150 4.830514e+01 1.0000000
151 4.830514e+01 1.0000000
152 4.830514e+01 1.0000000
153 4.830514e+01 1.0000000
154 4.830514e+01 1.0000000
155 4.830514e+01 1.0000000
156 4.830514e+01 1.0000000
157 4.830514e+01 1.0000000
158 4.830514e+01 1.0000000
159 4.830514e+01 1.0000000
160 4.830514e+01 1.0000000
161 4.830514e+01 1.0000000
162 4.830514e+01 1.0000000
163 4.830514e+01 1.0000000
164 4.830514e+01 1.0000000
165 4.830514e+01 1.0000000
166 4.830514e+01 1.0000000
167 4.830514e+01 1.0000000
168 4.830514e+01 1.0000000
169 4.830514e+01 1.0000000
170 4.830514e+01 1.0000000
171 4.830514e+01 1.0000000
172 4.830514e+01 1.0000000
173 4.830514e+01 1.0000000
174 4.830514e+01 1.0000000
175 4.830514e+01 1.0000000
176 4.830514e+01 1.0000000
177 4.830514e+01 1.0000000
178 4.830514e+01 1.0000000
179 4.830514e+01 1.0000000
180 4.830514e+01 1.0000000
181 4.830514e+01 1.0000000
182 4.830514e+01 1.0000000
183 4.830514e+01 1.0000000
184 4.830514e+01 1.0000000
185 4.830514e+01 1.0000000
186 4.830514e+01 1.0000000
187 4.830514e+01 1.0000000
188 4.830514e+01 1.0000000
189 4.830514e+01 1.0000000
190 4.830514e+01 1.0000000
191 4.830514e+01 1.0000000
192 4.830514e+01 1.0000000
193 4.830514e+01 1.0000000
194 4.830514e+01 1.0000000
195 4.830514e+01 1.0000000
196 4.830514e+01 1.0000000
197 4.830514e+01 1.0000000
198 4.830514e+01 1.0000000
199 4.830514e+01 1.0000000
200 4.830514e+01 1.0000000

$member$bestvalit
  [1] 5923.3798009 5923.3798009 5923.3798009 5217.6301919 3537.0977631
  [6] 3038.5323817 3038.5323817 3038.5323817 3038.5323817 3038.5323817
 [11] 2698.8326557 2616.9380523 2616.9380523 2616.9380523 2442.2344377
 [16] 2442.2344377 2442.2344377 2440.2009431 2389.4317987 2044.6826185
 [21] 1874.8915886 1766.5274894 1404.3333997 1392.7759802 1392.7759802
 [26] 1372.9643461 1334.4571566 1047.3495202  651.1740474  651.1740474
 [31]  651.1740474  376.8311282  376.8311282  376.8311282  376.8311282
 [36]  371.5351259  258.2507088  126.6802515  126.6802515  126.6802515
 [41]   10.7494922   10.7494922   10.7494922   10.7494922   10.7494922
 [46]    0.1344909    0.1229958    0.1229958    0.1229958    0.1229958
 [51]    0.1229958    0.1229958    0.1229958    0.1229958    0.1229958
 [56]    0.1229958    0.1229958    0.1229958    0.1171784    0.1171784
 [61]    0.1171784    0.1171784    0.1168826    0.1158640    0.1158640
 [66]    0.1158640    0.1158640    0.1158640    0.1158640    0.1158640
 [71]    0.1158640    0.1158640    0.1158640    0.1158640    0.1158640
 [76]    0.1157357    0.1157357    0.1157357    0.1157357    0.1157357
 [81]    0.1157357    0.1157357    0.1157357    0.1157357    0.1157348
 [86]    0.1157348    0.1157348    0.1157140    0.1157140    0.1157086
 [91]    0.1157086    0.1157086    0.1157086    0.1157055    0.1157055
 [96]    0.1157052    0.1157052    0.1157040    0.1157040    0.1157040
[101]    0.1157040    0.1157039    0.1157039    0.1157039    0.1157039
[106]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[111]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[116]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[121]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[126]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[131]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[136]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[141]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[146]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[151]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[156]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[161]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[166]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[171]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[176]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[181]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[186]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[191]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[196]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039

$member$pop
          [,1] [,2]
 [1,] 48.30514    1
 [2,] 48.30514    1
 [3,] 48.30514    1
 [4,] 48.30514    1
 [5,] 48.30514    1
 [6,] 48.30514    1
 [7,] 48.30514    1
 [8,] 48.30514    1
 [9,] 48.30514    1
[10,] 48.30514    1
[11,] 48.30514    1
[12,] 48.30514    1
[13,] 48.30514    1
[14,] 48.30514    1
[15,] 48.30514    1
[16,] 48.30514    1
[17,] 48.30514    1
[18,] 48.30514    1
[19,] 48.30514    1
[20,] 48.30514    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
48.30514  1.00000 -0.20000 

$iter
[1] 200

$ela
E_1_2 (all) 
       1.25 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] TRUE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] -0.2

$fitted.values
 [1] 1130.340 1168.984 1192.654 1203.281 1203.281 1218.739 1251.586 1254.484
 [9] 1216.323 1259.315 1293.129 1442.874 1502.773 1554.942 1522.578 1539.968
[17] 1620.154 1693.578 1802.265 1902.739

$residuals
 [1] -0.177890778 -0.194117040 -0.108915659 -0.026513939 -0.021135371
 [6] -0.027390307 -0.009818257  0.026801371 -0.007109801  0.015048092
[11]  0.050855860  0.065654176  0.046965343  0.086810120  0.077146482
[16]  0.054380670  0.021303708  0.035967060  0.046166941  0.045791346

$rss
[1] 0.1157039

$cov.unscaled
              gamma         delta           rho
gamma  7.167310e+04  3.394462e+02 -2.562080e+15
delta  3.394462e+02  1.626476e+00 -1.970121e+13
rho   -2.562080e+15 -1.970121e+13  3.602311e+27

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
48.31  1.00 -0.20 

Elasticity of Substitution: 1.25 

> summary( cesDeMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.2 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.831e+01  2.036e+01   2.372   0.0177 *  
delta  1.000e+00  9.700e-02  10.309   <2e-16 ***
rho   -2.000e-01  4.565e+12   0.000   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.07606046 
Multiple R-squared: 0.8722098 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.250e+00  7.133e+12       0        1

> vcov( cesDeMe )
              gamma         delta           rho
gamma  4.146428e+02  1.963762e+00 -1.482213e+13
delta  1.963762e+00  9.409478e-03 -1.139753e+11
rho   -1.482213e+13 -1.139753e+11  2.084007e+25
> 
> 
> proc.time()
   user  system elapsed 
 13.420   0.096  13.512 

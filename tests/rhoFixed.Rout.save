
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # load the micEconCES package
> library( "micEconCES" )
Loading required package: minpack.lm
Loading required package: DEoptim
Loading required package: parallel

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

Loading required package: car
Loading required package: carData

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
> options( digits = 3 )
> 
> # load data
> data( germanFarms, package = "micEcon" )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> # names of explanatory variables
> xxNames <- c( "land", "qVarInput" )
> 
> 
> ## Nelder-Mead, CRS
> cesNm <- cesEst( "qOutput", xxNames, germanFarms, rho = 2, method = "NM" )
> print.default( cesNm ) 
$optim
$optim$par
gamma delta 
84.48  2.96 

$optim$value
[1] 165628

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
gamma delta   rho 
84.48  2.96  2.00 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1649 1723 1834 1936

$residuals
 [1] -203.85 -226.50 -143.75  -52.27  -45.96  -53.99  -33.86   12.34  -29.66
[10]   -2.73   45.09   72.95   46.28  114.07   95.62   59.20    6.45   32.18
[19]   53.33   55.55

$rss
[1] 165628

$cov.unscaled
         gamma   delta    rho
gamma 68755127 5287064 294128
delta  5287064  406560  22618
rho     294128   22618   1258

attr(,"class")
[1] "cesEst" "list"  
> print( cesNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Coefficients:
gamma delta   rho 
84.48  2.96  2.00 

Elasticity of Substitution: 0.333 

> summary( cesNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 501 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 8.45e+01   7.55e+05       0        1
delta 2.96e+00   5.80e+04       0        1
rho   2.00e+00   3.23e+03       0        1

Residual standard error: 91 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    358.689       0        1

> coef( cesNm ) 
gamma delta   rho 
84.48  2.96  2.00 
> vcov( cesNm ) 
         gamma    delta      rho
gamma 5.69e+11 4.38e+10 2.44e+09
delta 4.38e+10 3.37e+09 1.87e+08
rho   2.44e+09 1.87e+08 1.04e+07
> coef( summary( cesNm ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    84.48     754577 0.000112        1
delta     2.96      58025 0.000051        1
rho       2.00       3228 0.000620        1
> 
> ## Nelder-Mead, VRS
> cesNmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead" )
> print.default( cesNmVrs )
$optim
$optim$par
gamma delta    nu 
1.530 0.717 1.563 

$optim$value
[1] 50204

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
 1.530  0.717 -0.100  1.563 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1009 1095 1118 1175 1168 1193 1242 1219 1174 1224 1293 1534 1645 1699 1592
[16] 1589 1650 1728 1882 2046

$residuals
 [1]  -62.90 -131.88  -48.77   -2.93    9.68   -7.21   -3.02   69.52   34.17
[10]   54.02   67.16    6.30  -70.02   -2.85   52.53   37.30    5.17   28.00
[19]    5.11  -54.27

$rss
[1] 50204

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.099860  2.55e-02 -4.03e-02 -1.09e-04
delta  0.025497  6.53e-03 -1.03e-02 -2.01e-05
rho   -0.040293 -1.03e-02  1.63e-02  2.92e-05
nu    -0.000109 -2.01e-05  2.92e-05  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 1.530  0.717 -0.100  1.563 

Elasticity of Substitution: 1.11 

> summary( cesNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.5304    15.8325    0.10     0.92    
delta   0.7175     4.0480    0.18     0.86    
rho    -0.1000     6.4022   -0.02     0.99    
nu      1.5625     0.0931   16.79   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.1 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       7.90    0.14     0.89

> coef( cesNmVrs )
 gamma  delta    rho     nu 
 1.530  0.717 -0.100  1.563 
> vcov( cesNmVrs )
         gamma    delta       rho       nu
gamma  250.667  64.0019 -101.1420 -0.27246
delta   64.002  16.3862  -25.9130 -0.05058
rho   -101.142 -25.9130   40.9878  0.07325
nu      -0.272  -0.0506    0.0732  0.00866
> coef( summary( cesNmVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.530    15.8325  0.0967 9.23e-01
delta    0.717     4.0480  0.1772 8.59e-01
rho     -0.100     6.4022 -0.0156 9.88e-01
nu       1.563     0.0931 16.7900 2.89e-63
> 
> ## Nelder-Mead, TC, VRS
> cesNmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    vrs = TRUE, rho = -0.4, method = "Nelder-Mead" )
> print.default( cesNmTcVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
9.4627 0.0202 0.6171 0.9423 

$optim$value
[1] 19157

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma  lambda   delta     rho      nu 
 9.4627  0.0202  0.6171 -0.4000  0.9423 

$iter
[1] 501

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.67 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 5.285  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  939 1023 1052 1129 1144 1183 1236 1231 1235 1284 1365 1544 1649 1694 1632
[16] 1644 1676 1736 1853 1987

$residuals
 [1]   7.35 -60.48  17.90  43.27  33.83   2.75   2.95  57.55 -27.34  -5.65
[11]  -4.49  -3.16 -73.79   1.51  12.44 -18.47 -21.39  19.76  34.05   4.43

$rss
[1] 19157

$cov.unscaled
          gamma    lambda     delta       rho        nu
gamma   6.88505  1.30e-04  4.66e-01 -6.37e-01 -5.29e-03
lambda  0.00013  1.31e-08  7.95e-06 -1.12e-05 -4.62e-07
delta   0.46579  7.95e-06  3.16e-02 -4.32e-02 -3.15e-04
rho    -0.63675 -1.12e-05 -4.32e-02  5.91e-02  4.40e-04
nu     -0.00529 -4.62e-07 -3.15e-04  4.40e-04  1.99e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Coefficients:
  gamma  lambda   delta     rho      nu 
 9.4627  0.0202  0.6171 -0.4000  0.9423 

Elasticity of Substitution: 1.67 

> summary( cesNmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   9.46273   81.20798    0.12     0.91    
lambda  0.02025    0.00354    5.71  1.1e-08 ***
delta   0.61706    5.50505    0.11     0.91    
rho    -0.40000    7.52408   -0.05     0.96    
nu      0.94231    0.13794    6.83  8.4e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30.9 
Multiple R-squared: 0.989 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.67      20.90    0.08     0.94

> 
> ## Nelder-Mead, multErr, VRS
> cesNmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead", multErr = TRUE )
> print.default( cesNmMeVrs )
$optim
$optim$par
gamma delta    nu 
2.060 0.751 1.533 

$optim$value
[1] 0.037

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
 2.060  0.751 -0.100  1.533 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] TRUE

$start
gamma delta    nu 
 8.71  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1010 1090 1115 1165 1160 1184 1232 1212 1166 1218 1283 1517 1623 1679 1581
[16] 1581 1648 1728 1882 2043

$residuals
 [1] -0.06500 -0.12441 -0.04126  0.00550  0.01558  0.00175  0.00604  0.06119
 [9]  0.03479  0.04881  0.05872  0.01539 -0.03024  0.00994  0.03946  0.02805
[17]  0.00427  0.01562  0.00265 -0.02550

$rss
[1] 0.037

$cov.unscaled
        gamma    delta     rho      nu
gamma  399056  76188.8 -130056 -421.33
delta   76189  14580.3  -24905  -66.46
rho   -130056 -24905.5   42553  107.57
nu       -421    -66.5     108    6.54

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 2.060  0.751 -0.100  1.533 

Elasticity of Substitution: 1.11 

> summary( cesNmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    2.060     27.177    0.08     0.94    
delta    0.751      5.195    0.14     0.89    
rho     -0.100      8.875   -0.01     0.99    
nu       1.533      0.110   13.93   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.043 
Multiple R-squared: 0.959 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11      10.96     0.1     0.92

> vcov( cesNmMeVrs )
        gamma   delta      rho      nu
gamma  738.59 141.014 -240.713 -0.7798
delta  141.01  26.986  -46.096 -0.1230
rho   -240.71 -46.096   78.760  0.1991
nu      -0.78  -0.123    0.199  0.0121
> 
> ## Conjugate Gradients, CRS
> cesCg <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", rho = 2 )
> print.default( cesCg )
$optim
$optim$par
 gamma  delta 
34.540  0.493 

$optim$value
[1] 166153

$optim$counts
function gradient 
     754      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho 
34.540  0.493  2.000 

$iter
function gradient 
     754      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1274 1276 1238 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1722 1833 1935

$residuals
 [1] -203.86 -226.69 -143.89  -52.61  -46.27  -54.31  -34.18   12.15  -29.91
[10]   -2.91   44.82   72.65   45.92  113.86   95.68   59.44    7.15   33.21
[19]   54.60   56.91

$rss
[1] 166153

$cov.unscaled
       gamma delta    rho
gamma 234709  8637 -11139
delta   8637   318   -410
rho   -11139  -410    529

attr(,"class")
[1] "cesEst" "list"  
> print( cesCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.333 

> summary( cesCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 754 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 3.45e+01   4.42e+04       0        1
delta 4.93e-01   1.62e+03       0        1
rho   2.00e+00   2.10e+03       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    232.866       0        1

> coef( cesCg )
 gamma  delta    rho 
34.540  0.493  2.000 
> vcov( cesCg )
          gamma    delta       rho
gamma  1.95e+09 71753838 -92537874
delta  7.18e+07  2640499  -3405431
rho   -9.25e+07 -3405431   4392370
> coef( summary( cesCg ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   34.540      44157 0.000782    0.999
delta    0.493       1625 0.000303    1.000
rho      2.000       2096 0.000954    0.999
> 
> ## Conjugate Gradients, TC, CRS
> cesCgTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "CG", rho = 0.2 )
> print.default( cesCgTc )
$optim
$optim$par
  gamma  lambda   delta 
10.8106  0.0139  0.4959 

$optim$value
[1] 24728

$optim$counts
function gradient 
     709      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma  lambda   delta     rho 
10.8106  0.0139  0.4959  0.2000 

$iter
function gradient 
     709      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.833 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
10.811  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.2

$fitted.values
 [1]  990 1057 1087 1137 1149 1180 1228 1231 1218 1269 1333 1508 1598 1655 1610
[16] 1630 1692 1767 1892 2024

$residuals
 [1] -43.37 -94.15 -16.99  35.16  29.43   5.43  10.97  57.73 -10.24   9.30
[11]  27.87  33.21 -23.16  41.38  35.01  -3.83 -37.34 -11.06  -4.58 -31.81

$rss
[1] 24729

$cov.unscaled
           gamma    lambda     delta       rho
gamma   6.48e+00  5.22e-06  3.91e-01 -5.03e-01
lambda  5.22e-06  2.29e-09  4.34e-07 -6.88e-07
delta   3.91e-01  4.34e-07  2.36e-02 -3.04e-02
rho    -5.03e-01 -6.88e-07 -3.04e-02  3.91e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Coefficients:
  gamma  lambda   delta     rho 
10.8106  0.0139  0.4959  0.2000 

Elasticity of Substitution: 0.833 

> summary( cesCgTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.2 
Convergence NOT achieved after 709 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  10.81060   89.51601    0.12     0.90    
lambda  0.01391    0.00168    8.27   <2e-16 ***
delta   0.49593    5.40529    0.09     0.93    
rho     0.20000    6.95027    0.03     0.98    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 35.2 
Multiple R-squared: 0.986 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.833      4.827    0.17     0.86

> 
> ## Conjugate Gradients, VRS
> cesCgVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,
+    rho = -0.1 )
Warning message:
In cesEst("qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,  :
  internal problem: the minimum of the objective function returned by the solver (203705.139781204) is not equal to the RSS calculated from the residuals (204528.553499677)
> print.default( cesCgVrs )
$optim
$optim$par
gamma delta    nu 
 8.85  0.68  1.13 

$optim$value
[1] 203705

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
gamma delta   rho    nu 
 8.85  0.68 -0.10  1.13 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

$method
[1] "CG"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1123 1194 1212 1260 1254 1273 1311 1291 1257 1295 1349 1526 1606 1641 1561
[16] 1556 1593 1644 1747 1856

$residuals
 [1] -176.83 -231.38 -142.19  -87.74  -75.95  -87.40  -71.66   -2.06  -48.96
[10]  -16.12   12.04   14.67  -30.75   55.36   83.66   70.13   61.79  111.69
[19]  139.95  135.78

$rss
[1] 204529

$cov.unscaled
          gamma     delta       rho        nu
gamma  3.501242  2.15e-01 -3.16e-01 -6.61e-04
delta  0.215076  1.32e-02 -1.95e-02 -3.04e-05
rho   -0.316200 -1.95e-02  2.87e-02  4.15e-05
nu    -0.000661 -3.04e-05  4.15e-05  3.30e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Coefficients:
gamma delta   rho    nu 
 8.85  0.68 -0.10  1.13 

Elasticity of Substitution: 1.11 

> summary( cesCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    8.852    189.223    0.05     0.96    
delta    0.680     11.639    0.06     0.95    
rho     -0.100     17.124   -0.01     1.00    
nu       1.131      0.184    6.16  7.2e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 101 
Multiple R-squared: 0.884 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11      21.14    0.05     0.96

> coef( cesCgVrs )
gamma delta   rho    nu 
 8.85  0.68 -0.10  1.13 
> vcov( cesCgVrs )
         gamma    delta       rho      nu
gamma 35805.19 2199.458 -3233.601 -6.7614
delta  2199.46  135.460  -199.280 -0.3111
rho   -3233.60 -199.280   293.231  0.4240
nu       -6.76   -0.311     0.424  0.0337
> coef( summary( cesCgVrs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     8.85    189.223  0.04678 9.63e-01
delta     0.68     11.639  0.05839 9.53e-01
rho      -0.10     17.124 -0.00584 9.95e-01
nu        1.13      0.184  6.16141 7.21e-10
> 
> ## Simulated Annealing, CRS
> cesSann <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", rho = 2 )
> print.default( cesSann )
$optim
$optim$par
 gamma  delta 
35.975  0.535 

$optim$value
[1] 166104

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho 
35.975  0.535  2.000 

$iter
[1] 10000

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1190 1214 1224 1224 1240 1274 1277 1238 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1833 1935

$residuals
 [1] -203.97 -226.79 -143.99  -52.70  -46.36  -54.40  -34.28   12.05  -30.01
[10]   -3.01   44.72   72.53   45.81  113.73   95.53   59.27    6.93   32.95
[19]   54.30   56.59

$rss
[1] 166104

$cov.unscaled
       gamma delta    rho
gamma 305445 11589 -15017
delta  11589   440   -570
rho   -15017  -570    738

attr(,"class")
[1] "cesEst" "list"  
> print( cesSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Coefficients:
 gamma  delta    rho 
35.975  0.535  2.000 

Elasticity of Substitution: 0.333 

> summary( cesSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 3.60e+01   5.04e+04       0        1
delta 5.35e-01   1.91e+03       0        1
rho   2.00e+00   2.48e+03       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    275.154       0        1

> coef( cesSann )
 gamma  delta    rho 
35.975  0.535  2.000 
> vcov( cesSann )
          gamma    delta       rho
gamma  2.54e+09 96252303 -1.25e+08
delta  9.63e+07  3652097 -4.73e+06
rho   -1.25e+08 -4732267  6.13e+06
> coef( summary( cesSann ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   35.975      50366 0.000714    0.999
delta    0.535       1911 0.000280    1.000
rho      2.000       2476 0.000808    0.999
> 
> ## Simulated Annealing, TC, CRS
> cesSannTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "SANN", rho = 0 )
> print.default( cesSannTc )
$optim
$optim$par
 gamma lambda  delta 
8.5486 0.0155 0.5061 

$optim$value
[1] 19128

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho 
8.5486 0.0155 0.5061 0.0000 

$iter
[1] 10000

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
 8.456  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  972 1048 1076 1138 1150 1184 1234 1231 1223 1273 1343 1522 1618 1669 1612
[16] 1627 1674 1740 1861 1993

$residuals
 [1] -25.748 -84.908  -6.368  33.842  27.951   1.768   5.553  57.784 -15.423
[10]   5.902  17.405  19.101 -43.253  27.361  32.406  -0.616 -18.780  15.764
[19]  26.517  -1.039

$rss
[1] 19128

$cov.unscaled
           gamma    lambda     delta       rho
gamma   3.500017  4.00e-06  2.63e-01 -3.39e-01
lambda  0.000004  2.31e-09  4.15e-07 -6.53e-07
delta   0.263422  4.15e-07  1.98e-02 -2.55e-02
rho    -0.338517 -6.53e-07 -2.55e-02  3.28e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Coefficients:
 gamma lambda  delta    rho 
8.5486 0.0155 0.5061 0.0000 

Elasticity of Substitution: 1 

> summary( cesSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   8.54858   57.85729    0.15     0.88    
lambda  0.01548    0.00149   10.42   <2e-16 ***
delta   0.50608    4.35537    0.12     0.91    
rho     0.00000    5.59964    0.00     1.00    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30.9 
Multiple R-squared: 0.989 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.0        5.6    0.18     0.86

> 
> ## Simulated Annealing, VRS
> cesSannVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesSannVrs )
$optim
$optim$par
gamma delta    nu 
8.769 0.878 1.334 

$optim$value
[1] 70751

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
 8.769  0.878 -0.100  1.334 

$iter
[1] 10000

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1063 1125 1151 1181 1178 1199 1242 1235 1189 1240 1291 1495 1582 1642 1577
[16] 1588 1672 1758 1902 2044

$residuals
 [1] -117.2787 -162.0194  -81.2289   -8.8343   -0.0486  -12.9984   -2.2591
 [8]   54.0063   18.2721   38.2929   69.1075   46.1947   -6.6009   54.2312
[15]   68.1139   37.7149  -17.3727   -2.7876  -14.6727  -51.9398

$rss
[1] 70751

$cov.unscaled
          gamma     delta       rho        nu
gamma  2.832644  1.42e-01 -4.27e-01 -6.31e-04
delta  0.142450  7.18e-03 -2.15e-02 -2.36e-05
rho   -0.426676 -2.15e-02  6.46e-02  6.42e-05
nu    -0.000631 -2.36e-05  6.42e-05  3.46e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 8.769  0.878 -0.100  1.334 

Elasticity of Substitution: 1.11 

> summary( cesSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    8.769    100.103    0.09     0.93    
delta    0.878      5.041    0.17     0.86    
rho     -0.100     15.115   -0.01     0.99    
nu       1.334      0.111   12.05   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 59.5 
Multiple R-squared: 0.96 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11      18.66    0.06     0.95

> coef( cesSannVrs )
 gamma  delta    rho     nu 
 8.769  0.878 -0.100  1.334 
> vcov( cesSannVrs )
         gamma    delta       rho      nu
gamma 10020.57 503.9222 -1509.381 -2.2304
delta   503.92  25.4142   -76.187 -0.0836
rho   -1509.38 -76.1865   228.460  0.2272
nu       -2.23  -0.0836     0.227  0.0123
> coef( summary( cesSannVrs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    8.769    100.103  0.08760 9.30e-01
delta    0.878      5.041  0.17423 8.62e-01
rho     -0.100     15.115 -0.00662 9.95e-01
nu       1.334      0.111 12.05146 1.91e-33
> 
> ## BFGS, CRS
> cesBfgs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", rho = 2 )
> print.default( cesBfgs )
$optim
$optim$par
gamma delta 
79.50  2.62 

$optim$value
[1] 165641

$optim$counts
function gradient 
     368      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
gamma delta   rho 
79.50  2.62  2.00 

$iter
function gradient 
     368      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.74 -226.38 -143.63  -52.15  -45.84  -53.87  -33.74   12.47  -29.55
[10]   -2.60   45.22   73.09   46.42  114.22   95.78   59.36    6.63   32.37
[19]   53.55   55.77

$rss
[1] 165641

$cov.unscaled
         gamma   delta    rho
gamma 47092194 3432790 260654
delta  3432790  250234  19001
rho     260654   19001   1443

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Coefficients:
gamma delta   rho 
79.50  2.62  2.00 

Elasticity of Substitution: 0.333 

> summary( cesBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 368 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 7.95e+01   6.25e+05       0        1
delta 2.62e+00   4.55e+04       0        1
rho   2.00e+00   3.46e+03       0        1

Residual standard error: 91 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    384.098       0        1

> coef( cesBfgs )
gamma delta   rho 
79.50  2.62  2.00 
> vcov( cesBfgs )
         gamma    delta      rho
gamma 3.90e+11 2.84e+10 2.16e+09
delta 2.84e+10 2.07e+09 1.57e+08
rho   2.16e+09 1.57e+08 1.20e+07
> coef( summary( cesBfgs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    79.50     624515 1.27e-04        1
delta     2.62      45524 5.76e-05        1
rho       2.00       3457 5.79e-04        1
> 
> ## BFGS, VRS
> cesBfgsVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesBfgsVrs )
$optim
$optim$par
gamma delta    nu 
 1.40  0.71  1.57 

$optim$value
[1] 50080

$optim$counts
function gradient 
     565      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
gamma delta   rho    nu 
 1.40  0.71 -0.10  1.57 

$iter
function gradient 
     565      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1006 1093 1117 1175 1168 1193 1243 1218 1173 1224 1294 1537 1648 1702 1593
[16] 1589 1649 1726 1881 2046

$residuals
 [1]  -60.34 -130.50  -47.27   -2.78   10.03   -7.05   -3.19   70.19   34.84
[10]   54.70   66.94    4.16  -73.37   -5.84   51.72   37.29    6.39   29.68
[19]    6.31  -54.14

$rss
[1] 50080

$cov.unscaled
          gamma    delta       rho        nu
gamma  8.41e-02  0.02334 -3.63e-02 -9.91e-05
delta  2.33e-02  0.00650 -1.01e-02 -2.00e-05
rho   -3.63e-02 -0.01012  1.58e-02  2.85e-05
nu    -9.91e-05 -0.00002  2.85e-05  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Coefficients:
gamma delta   rho    nu 
 1.40  0.71 -0.10  1.57 

Elasticity of Substitution: 1.11 

> summary( cesBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 565 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.3994    14.5084    0.10     0.92    
delta   0.7099     4.0344    0.18     0.86    
rho    -0.1000     6.2804   -0.02     0.99    
nu      1.5738     0.0929   16.93   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       7.75    0.14     0.89

> coef( cesBfgsVrs )
gamma delta   rho    nu 
 1.40  0.71 -0.10  1.57 
> vcov( cesBfgsVrs )
        gamma    delta      rho       nu
gamma 210.493  58.4517 -90.9221 -0.24827
delta  58.452  16.2760 -25.3347 -0.05006
rho   -90.922 -25.3347  39.4440  0.07140
nu     -0.248  -0.0501   0.0714  0.00864
> coef( summary( cesBfgsVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma     1.40    14.5084  0.0965 9.23e-01
delta     0.71     4.0344  0.1760 8.60e-01
rho      -0.10     6.2804 -0.0159 9.87e-01
nu        1.57     0.0929 16.9347 2.50e-64
> 
> ## BFGS, TC, VRS
> cesBfgsTcVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4 )
> print.default( cesBfgsTcVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
15.237  0.019  0.718  0.914 

$optim$value
[1] 17027

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho     nu 
15.237  0.019  0.718 -0.400  0.914 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
       1.67 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 5.285  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957 1035 1064 1131 1147 1184 1235 1234 1235 1284 1359 1530 1628 1677 1625
[16] 1642 1684 1748 1866 1996

$residuals
 [1] -11.00 -71.92   5.84  40.40  31.04   1.96   4.30  54.66 -27.15  -5.82
[11]   1.86  10.52 -53.27  18.84  19.23 -16.01 -29.34   7.11  21.49  -4.10

$rss
[1] 17027

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma  12.440049  1.75e-04  4.89e-01 -0.778333 -7.24e-03
lambda  0.000175  1.30e-08  6.11e-06 -0.000010 -4.60e-07
delta   0.488678  6.11e-06  1.93e-02 -0.030735 -2.45e-04
rho    -0.778333 -1.00e-05 -3.07e-02  0.048956  3.97e-04
nu     -0.007243 -4.60e-07 -2.45e-04  0.000397  1.99e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Coefficients:
 gamma lambda  delta    rho     nu 
15.237  0.019  0.718 -0.400  0.914 

Elasticity of Substitution: 1.67 

> summary( cesBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   15.23726  102.91061    0.15     0.88    
lambda   0.01903    0.00332    5.72  1.1e-08 ***
delta    0.71800    4.05366    0.18     0.86    
rho     -0.40000    6.45585   -0.06     0.95    
nu       0.91415    0.13017    7.02  2.2e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.2 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.67      17.93    0.09     0.93

> 
> ## BFGS, TC, multErr, VRS
> cesBfgsTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4,
+    multErr = TRUE )
> print.default( cesBfgsTcMeVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
5.8591 0.0171 0.6667 1.0791 

$optim$value
[1] 0.0125

$optim$counts
function gradient 
     224      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma  lambda   delta     rho      nu 
 5.8591  0.0171  0.6667 -0.4000  1.0791 

$iter
function gradient 
     224      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.67 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
 gamma lambda  delta     nu 
 5.255  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  942 1030 1058 1136 1148 1185 1239 1227 1223 1273 1355 1551 1661 1706 1630
[16] 1637 1670 1731 1857 1999

$residuals
 [1]  0.004606 -0.067763  0.011261  0.031199  0.026329  0.000896  0.000591
 [8]  0.048551 -0.012910  0.004433  0.004064 -0.006462 -0.053048 -0.006185
[15]  0.009053 -0.006684 -0.008901  0.014072  0.016459 -0.003655

$rss
[1] 0.0125

$cov.unscaled
           gamma   lambda     delta       rho        nu
gamma  4557297.0  91.9302 415570.83 -600219.7 -4998.697
lambda      91.9   0.0201      6.91     -10.4    -0.806
delta   415570.8   6.9067  38086.04  -54996.2  -378.509
rho    -600219.7 -10.4158 -54996.19   79438.0   558.613
nu       -4998.7  -0.8061   -378.51     558.6    38.875

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Coefficients:
  gamma  lambda   delta     rho      nu 
 5.8591  0.0171  0.6667 -0.4000  1.0791 

Elasticity of Substitution: 1.67 

> summary( cesBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 224 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.85913   53.47614    0.11     0.91    
lambda  0.01706    0.00355    4.80  1.6e-06 ***
delta   0.66666    4.88865    0.14     0.89    
rho    -0.40000    7.06026   -0.06     0.95    
nu      1.07906    0.15619    6.91  4.9e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.025 
Multiple R-squared: 0.986 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.67      19.61    0.08     0.93

> 
> ## L-BFGS-B with constrained parameters, CRS
> cesBfgsCon <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    rho = 2 )
> print.default( cesBfgsCon )
$optim
$optim$par
gamma delta 
 49.1   1.0 

$optim$value
[1] 165832

$optim$counts
function gradient 
      42       42 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
gamma delta   rho 
 49.1   1.0   2.0 

$iter
function gradient 
      42       42 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
         gamma    delta      rho
gamma 3.20e+02 1.31e+01 4.65e+12
delta 1.31e+01 5.32e-01 1.89e+11
rho   4.65e+12 1.89e+11 1.19e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Coefficients:
gamma delta   rho 
 49.1   1.0   2.0 

Elasticity of Substitution: 0.333 

> summary( cesBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 42 function and 42 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.91e+01   1.63e+03    0.03     0.98
delta 1.00e+00   6.64e+01    0.02     0.99
rho   2.00e+00   9.92e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.33e-01   1.10e+13       0        1

> coef( cesBfgsCon )
gamma delta   rho 
 49.1   1.0   2.0 
> vcov( cesBfgsCon )
         gamma    delta      rho
gamma 2.66e+06 1.08e+05 3.85e+16
delta 1.08e+05 4.41e+03 1.57e+15
rho   3.85e+16 1.57e+15 9.84e+27
> coef( summary( cesBfgsCon ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     49.1   1.63e+03 3.02e-02    0.976
delta      1.0   6.64e+01 1.51e-02    0.988
rho        2.0   9.92e+13 2.02e-14    1.000
> 
> ## L-BFGS-B with constrained parameters, TC, CRS
> cesBfgsConTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 1.2 )
> print.default( cesBfgsConTc )
$optim
$optim$par
   gamma   lambda    delta 
23.44497  0.00857  0.45464 

$optim$value
[1] 66746

$optim$counts
function gradient 
      15       15 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma   lambda    delta      rho 
23.44497  0.00857  0.45464  1.20000 

$iter
function gradient 
      15       15 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
      0.455 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
23.444  0.015  0.500 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 1.2

$fitted.values
 [1] 1044 1090 1122 1143 1153 1178 1220 1232 1205 1258 1303 1467 1541 1607 1585
[16] 1615 1710 1800 1931 2056

$residuals
 [1]  -97.88 -127.71  -52.01   28.71   25.46    8.26   19.72   56.79    2.59
[10]   20.62   57.15   73.91   33.72   88.92   59.93   10.98  -54.94  -44.86
[19]  -43.75  -64.32

$rss
[1] 66746

$cov.unscaled
           gamma    lambda     delta       rho
gamma   1.24e+03  1.34e-04  4.59e+01 -5.97e+01
lambda  1.34e-04  2.22e-09  5.43e-06 -8.13e-06
delta   4.59e+01  5.43e-06  1.71e+00 -2.22e+00
rho    -5.97e+01 -8.13e-06 -2.22e+00  2.89e+00

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Coefficients:
   gamma   lambda    delta      rho 
23.44497  0.00857  0.45464  1.20000 

Elasticity of Substitution: 0.455 

> summary( cesBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 1.2 
Convergence achieved after 15 function and 15 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)   
gamma  2.34e+01   2.03e+03    0.01   0.9908   
lambda 8.57e-03   2.72e-03    3.15   0.0017 **
delta  4.55e-01   7.55e+01    0.01   0.9952   
rho    1.20e+00   9.82e+01    0.01   0.9902   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 57.8 
Multiple R-squared: 0.962 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.455     20.280    0.02     0.98

> 
> ## L-BFGS-B with constrained parameters, VRS
> cesBfgsConVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesBfgsConVrs )
$optim
$optim$par
gamma delta    nu 
1.292 0.704 1.584 

$optim$value
[1] 50045

$optim$counts
function gradient 
     137      137 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 

$iter
function gradient 
     137      137 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004 1092 1115 1174 1168 1193 1243 1218 1172 1223 1294 1538 1651 1704 1594
[16] 1589 1648 1725 1880 2046

$residuals
 [1]  -57.94 -129.14  -45.80   -2.48   10.50   -6.76   -3.20   70.90   35.58
[10]   55.42   66.86    2.32  -76.32   -8.50   50.97   37.21    7.30   30.94
[19]    7.04  -54.43

$rss
[1] 50045

$cov.unscaled
          gamma     delta       rho        nu
gamma  7.20e-02  2.16e-02 -0.033111 -9.14e-05
delta  2.16e-02  6.47e-03 -0.009942 -1.98e-05
rho   -3.31e-02 -9.94e-03  0.015285  2.80e-05
nu    -9.14e-05 -1.98e-05  0.000028  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 

Elasticity of Substitution: 1.11 

> summary( cesBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 137 function and 137 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.2919    13.4261    0.10     0.92    
delta   0.7035     4.0230    0.17     0.86    
rho    -0.1000     6.1843   -0.02     0.99    
nu      1.5842     0.0929   17.06   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       7.63    0.15     0.88

> coef( cesBfgsConVrs )
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 
> vcov( cesBfgsConVrs )
        gamma    delta    rho       nu
gamma 180.261  53.9400 -82.85 -0.22880
delta  53.940  16.1848 -24.88 -0.04966
rho   -82.853 -24.8769  38.25  0.06996
nu     -0.229  -0.0497   0.07  0.00863
> coef( summary( cesBfgsConVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.292    13.4261  0.0962 9.23e-01
delta    0.704     4.0230  0.1749 8.61e-01
rho     -0.100     6.1843 -0.0162 9.87e-01
nu       1.584     0.0929 17.0552 3.20e-65
> 
> ## L-BFGS-B with constrained parameters, TC, multErr, CRS
> cesBfgsConTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 0, multErr = TRUE )
> print.default( cesBfgsConTcMe )
$optim
$optim$par
 gamma lambda  delta 
5.8534 0.0181 0.3949 

$optim$value
[1] 0.0118

$optim$counts
function gradient 
      40       40 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
 gamma lambda  delta    rho 
5.8534 0.0181 0.3949 0.0000 

$iter
function gradient 
      40       40 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

$method
[1] "L-BFGS-B"

$multErr
[1] TRUE

$start
 gamma lambda  delta 
 8.438  0.015  0.500 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 0

$fitted.values
 [1]  949 1032 1060 1132 1146 1183 1236 1230 1228 1278 1356 1540 1644 1693 1629
[16] 1641 1679 1741 1863 2000

$residuals
 [1] -0.003032 -0.069122  0.008883  0.034418  0.027630  0.002358  0.002985
 [8]  0.046358 -0.016853  0.000283  0.003235  0.000323 -0.043033  0.002022
[15]  0.009561 -0.009249 -0.014254  0.008229  0.013125 -0.003854

$rss
[1] 0.0118

$cov.unscaled
           gamma    lambda     delta       rho
gamma  3624636.0 -11.78617 396636.79 -5.31e+05
lambda     -11.8   0.00338     -1.11  1.29e+00
delta   396636.8  -1.11471  43418.06 -5.82e+04
rho    -531069.2   1.29496 -58151.49  7.79e+04

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Coefficients:
 gamma lambda  delta    rho 
5.8534 0.0181 0.3949 0.0000 

Elasticity of Substitution: 1 

> summary( cesBfgsConTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 40 function and 40 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.85343   46.17168    0.13     0.90    
lambda  0.01806    0.00141   12.80   <2e-16 ***
delta   0.39489    5.05334    0.08     0.94    
rho     0.00000    6.76906    0.00     1.00    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0243 
Multiple R-squared: 0.987 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.77    0.15     0.88

> 
> ## Levenberg-Marquardt, CRS
> cesLm <- cesEst( "qOutput", xxNames, germanFarms,
+    control = nls.lm.control( maxiter = 200 ), rho = 2 )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 424.329313236567, 74.6923487190224 
residual sum-of-squares: 165527
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
gamma delta   rho 
424.3  74.7   2.0 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1315 1468 1529 1582 1549
[16] 1567 1649 1724 1834 1936

$residuals
 [1] -203.77 -226.38 -143.64  -52.11  -45.81  -53.84  -33.70   12.47  -29.53
[10]   -2.60   45.24   73.11   46.45  114.22   95.72   59.26    6.42   32.10
[19]   53.21   55.42

$rss
[1] 165527

$cov.unscaled
         gamma    delta      rho
gamma 1.23e+12 4.36e+11 25537988
delta 4.36e+11 1.55e+11  9076223
rho   2.55e+07 9.08e+06      532

attr(,"class")
[1] "cesEst" "list"  
> print( cesLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Coefficients:
gamma delta   rho 
424.3  74.7   2.0 

Elasticity of Substitution: 0.333 

> summary( cesLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.24e+02   1.01e+08       0        1
delta 7.47e+01   3.58e+07       0        1
rho   2.00e+00   2.10e+03       0        1

Residual standard error: 91 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    233.067       0        1

> coef( cesLm )
gamma delta   rho 
424.3  74.7   2.0 
> vcov( cesLm )
         gamma    delta      rho
gamma 1.02e+16 3.61e+15 2.11e+11
delta 3.61e+15 1.28e+15 7.51e+10
rho   2.11e+11 7.51e+10 4.40e+06
> coef( summary( cesLm ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    424.3   1.01e+08 4.21e-06    1.000
delta     74.7   3.58e+07 2.09e-06    1.000
rho        2.0   2.10e+03 9.53e-04    0.999
> 
> ## Levenberg-Marquardt, VRS
> cesLmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1 )
> print.default( cesLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 1.29196188463487, 0.703541220961596, 1.58422750324928 
residual sum-of-squares: 50045
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 

$iter
[1] 32

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004 1092 1115 1174 1168 1193 1243 1218 1172 1223 1294 1538 1651 1704 1594
[16] 1589 1648 1725 1880 2046

$residuals
 [1]  -57.94 -129.13  -45.80   -2.47   10.50   -6.76   -3.20   70.90   35.58
[10]   55.42   66.87    2.32  -76.32   -8.50   50.97   37.21    7.30   30.94
[19]    7.04  -54.43

$rss
[1] 50045

$cov.unscaled
          gamma     delta       rho        nu
gamma  7.20e-02  2.16e-02 -0.033112 -9.14e-05
delta  2.16e-02  6.47e-03 -0.009942 -1.98e-05
rho   -3.31e-02 -9.94e-03  0.015285  2.80e-05
nu    -9.14e-05 -1.98e-05  0.000028  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 

Elasticity of Substitution: 1.11 

> summary( cesLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 32 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.2920    13.4263    0.10     0.92    
delta   0.7035     4.0230    0.17     0.86    
rho    -0.1000     6.1843   -0.02     0.99    
nu      1.5842     0.0929   17.06   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       7.63    0.15     0.88

> coef( cesLmVrs )
 gamma  delta    rho     nu 
 1.292  0.704 -0.100  1.584 
> vcov( cesLmVrs )
        gamma    delta    rho       nu
gamma 180.265  53.9406 -82.85 -0.22881
delta  53.941  16.1848 -24.88 -0.04966
rho   -82.854 -24.8769  38.25  0.06996
nu     -0.229  -0.0497   0.07  0.00863
> coef( summary( cesLmVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.292    13.4263  0.0962 9.23e-01
delta    0.704     4.0230  0.1749 8.61e-01
rho     -0.100     6.1843 -0.0162 9.87e-01
nu       1.584     0.0929 17.0552 3.20e-65
> 
> ## Levenberg-Marquardt, TC, VRS
> cesLmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", germanFarms, 
+    vrs = TRUE, control = nls.lm.control( maxiter = 200 ), rho = 0.7 )
> print.default( cesLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 5.34979875874734, 0.0188900972833775, 0.077080285289286, 0.919420899115951 
residual sum-of-squares: 17259
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
 gamma lambda  delta    rho     nu 
5.3498 0.0189 0.0771 0.7000 0.9194 

$iter
[1] 17

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
      0.588 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
17.680  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.7

$fitted.values
 [1]  959 1035 1065 1130 1146 1183 1234 1234 1234 1284 1358 1530 1628 1678 1628
[16] 1644 1686 1748 1865 1995

$residuals
 [1] -12.42 -72.46   4.87  41.56  31.98   3.08   5.38  54.41 -26.42  -5.84
[11]   2.71  10.78 -52.58  17.71  17.09 -18.27 -30.57   7.53  22.85  -2.77

$rss
[1] 17259

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma   0.509942  3.90e-05  3.37e-02 -1.53e-01 -1.64e-03
lambda  0.000039  1.30e-08  1.96e-06 -9.15e-06 -4.60e-07
delta   0.033675  1.96e-06  2.29e-03 -1.04e-02 -7.87e-05
rho    -0.152653 -9.15e-06 -1.04e-02  4.69e-02  3.63e-04
nu     -0.001641 -4.60e-07 -7.87e-05  3.63e-04  1.99e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma lambda  delta    rho     nu 
5.3498 0.0189 0.0771 0.7000 0.9194 

Elasticity of Substitution: 0.588 

> summary( cesLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.7 
Convergence achieved after 17 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.34980   20.97723    0.26     0.80    
lambda  0.01889    0.00334    5.65  1.6e-08 ***
delta   0.07708    1.40445    0.05     0.96    
rho     0.70000    6.36232    0.11     0.91    
nu      0.91942    0.13095    7.02  2.2e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.4 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.588      2.201    0.27     0.79

> 
> ## Levenberg-Marquardt, multErr, VRS
> cesLmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1, multErr = TRUE )
Warning message:
In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
> print.default( cesLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.623563049676746, 0.657577531795683, 1.69024210187211 
residual sum-of-squares: 0.0328
reason terminated: Conditions for `info = 1' and `info = 2' both hold.

$coefficients
 gamma  delta    rho     nu 
 0.624  0.658 -0.100  1.690 

$iter
[1] 37

$convergence
[1] TRUE

$message
[1] "Conditions for `info = 1' and `info = 2' both hold."

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] TRUE

$start
gamma delta    nu 
 8.71  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980 1077 1100 1168 1160 1187 1240 1209 1163 1214 1292 1554 1678 1730 1602
[16] 1592 1644 1720 1883 2060

$residuals
 [1] -0.035207 -0.111733 -0.027692  0.003217  0.015490 -0.000701 -0.000186
 [8]  0.063841  0.038115  0.051524  0.051751 -0.008679 -0.063176 -0.019699
[15]  0.026241  0.021214  0.006528  0.020462  0.002420 -0.033730

$rss
[1] 0.0328

$cov.unscaled
       gamma    delta      rho      nu
gamma  39691  23174.6 -32880.5 -131.69
delta  23175  13562.1 -19253.8  -63.53
rho   -32880 -19253.8  27340.2   85.91
nu      -132    -63.5     85.9    6.54

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho     nu 
 0.624  0.658 -0.100  1.690 

Elasticity of Substitution: 1.11 

> summary( cesLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 37 iterations
Message: Conditions for `info = 1' and `info = 2' both hold. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    0.624      8.068    0.08     0.94    
delta    0.658      4.716    0.14     0.89    
rho     -0.100      6.696   -0.01     0.99    
nu       1.690      0.104   16.32   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0405 
Multiple R-squared: 0.964 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       8.27    0.13     0.89

> vcov( cesLmMeVrs )
        gamma   delta     rho      nu
gamma  65.095  38.007 -53.926 -0.2160
delta  38.007  22.243 -31.577 -0.1042
rho   -53.926 -31.577  44.839  0.1409
nu     -0.216  -0.104   0.141  0.0107
> 
> ## Newton-type, CRS
> cesNewton <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton", rho = 2 )
> print.default( cesNewton )
$nlm
$nlm$minimum
[1] 166153

$nlm$estimate
[1] 34.540  0.493

$nlm$gradient
[1] -36.89  -1.76

$nlm$code
[1] 2

$nlm$iterations
[1] 4


$coefficients
 gamma  delta    rho 
34.540  0.493  2.000 

$iter
[1] 4

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1274 1276 1238 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1722 1833 1935

$residuals
 [1] -203.86 -226.69 -143.89  -52.61  -46.27  -54.31  -34.18   12.15  -29.91
[10]   -2.91   44.82   72.65   45.92  113.86   95.68   59.44    7.15   33.21
[19]   54.60   56.91

$rss
[1] 166153

$cov.unscaled
       gamma delta    rho
gamma 234701  8637 -11138
delta   8637   318   -410
rho   -11138  -410    529

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

Elasticity of Substitution: 0.333 

> summary( cesNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 4 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 3.45e+01   4.42e+04       0        1
delta 4.93e-01   1.62e+03       0        1
rho   2.00e+00   2.10e+03       0        1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.333    232.862       0        1

> coef( cesNewton )
 gamma  delta    rho 
34.540  0.493  2.000 
> vcov( cesNewton )
          gamma    delta       rho
gamma  1.95e+09 71751408 -92534760
delta  7.18e+07  2640403  -3405307
rho   -9.25e+07 -3405307   4392212
> coef( summary( cesNewton ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma   34.540      44157 0.000782    0.999
delta    0.493       1625 0.000303    1.000
rho      2.000       2096 0.000954    0.999
> 
> ## Newton-type, TC, CRS
> cesNewtonTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", rho = 0.8 )
> print.default( cesNewtonTc )
$nlm
$nlm$minimum
[1] 56560

$nlm$estimate
[1] 18.98544  0.00943  0.46994

$nlm$gradient
[1] 1196.3   10.5   33.6

$nlm$code
[1] 2

$nlm$iterations
[1] 13


$coefficients
   gamma   lambda    delta      rho 
18.98544  0.00943  0.46994  0.80000 

$iter
[1] 13

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.556 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
18.985  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1036 1086 1117 1143 1153 1179 1222 1233 1208 1261 1309 1475 1552 1616 1590
[16] 1618 1707 1794 1924 2050

$residuals
 [1]  -89.488 -123.028  -47.067   28.813   25.163    6.837   17.310   56.027
 [9]   -0.422   17.867   51.423   66.236   23.406   80.136   55.057    7.973
[17]  -51.943  -38.606  -36.215  -57.760

$rss
[1] 56560

$cov.unscaled
           gamma    lambda     delta       rho
gamma   1.27e+02  3.20e-05  5.08e+00 -6.57e+00
lambda  3.20e-05  2.23e-09  1.51e-06 -2.32e-06
delta   5.08e+00  1.51e-06  2.03e-01 -2.63e-01
rho    -6.57e+00 -2.32e-06 -2.63e-01  3.40e-01

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Coefficients:
   gamma   lambda    delta      rho 
18.98544  0.00943  0.46994  0.80000 

Elasticity of Substitution: 0.556 

> summary( cesNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.8 
Convergence achieved after 13 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  1.90e+01   5.99e+02    0.03  0.97473    
lambda 9.43e-03   2.51e-03    3.76  0.00017 ***
delta  4.70e-01   2.40e+01    0.02  0.98437    
rho    8.00e-01   3.10e+01    0.03  0.97941    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 53.2 
Multiple R-squared: 0.968 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.556      9.569    0.06     0.95

> 
> ## Newton-type, VRS
> cesNewtonVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesNewtonVrs )
$nlm
$nlm$minimum
[1] 50050

$nlm$estimate
[1] 1.333 0.706 1.580

$nlm$gradient
[1]  -1822  14472 -12464

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
 gamma  delta    rho     nu 
 1.333  0.706 -0.100  1.580 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1005 1092 1116 1174 1168 1193 1243 1218 1172 1223 1294 1538 1650 1703 1593
[16] 1589 1648 1725 1881 2046

$residuals
 [1]  -58.84 -129.63  -46.33   -2.54   10.37   -6.82   -3.15   70.67   35.34
[10]   55.18   66.95    3.11  -75.09   -7.39   51.31   37.29    6.97   30.47
[19]    6.77  -54.29

$rss
[1] 50050

$cov.unscaled
          gamma     delta       rho        nu
gamma  7.66e-02  2.22e-02 -3.43e-02 -9.44e-05
delta  2.22e-02  6.48e-03 -1.00e-02 -1.99e-05
rho   -3.43e-02 -1.00e-02  1.55e-02  2.82e-05
nu    -9.44e-05 -1.99e-05  2.82e-05  3.45e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 1.333  0.706 -0.100  1.580 

Elasticity of Substitution: 1.11 

> summary( cesNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.3334    13.8433    0.10     0.92    
delta   0.7061     4.0271    0.18     0.86    
rho    -0.1000     6.2215   -0.02     0.99    
nu      1.5801     0.0929   17.01   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11       7.68    0.14     0.88

> coef( cesNewtonVrs )
 gamma  delta    rho     nu 
 1.333  0.706 -0.100  1.580 
> vcov( cesNewtonVrs )
        gamma    delta      rho       nu
gamma 191.636  55.6718 -85.9402 -0.23629
delta  55.672  16.2174 -25.0516 -0.04981
rho   -85.940 -25.0516  38.7069  0.07052
nu     -0.236  -0.0498   0.0705  0.00863
> coef( summary( cesNewtonVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.333    13.8433  0.0963 9.23e-01
delta    0.706     4.0271  0.1753 8.61e-01
rho     -0.100     6.2215 -0.0161 9.87e-01
nu       1.580     0.0929 17.0088 7.07e-65
> 
> ## Newton-type, TC, multErr, CRS
> cesNewtonTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", multErr = TRUE, rho = 0.3 )
> print.default( cesNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.0205

$nlm$estimate
[1] 12.1522  0.0139  0.4961

$nlm$gradient
[1]  1.18e-03 -4.18e-05  4.53e-05

$nlm$code
[1] 2

$nlm$iterations
[1] 5


$coefficients
  gamma  lambda   delta     rho 
12.1522  0.0139  0.4961  0.3000 

$iter
[1] 5

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.769 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

$method
[1] "Newton"

$multErr
[1] TRUE

$start
 gamma lambda  delta 
12.152  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.3

$fitted.values
 [1]  989 1053 1084 1129 1142 1173 1221 1227 1212 1265 1326 1501 1590 1650 1612
[16] 1636 1708 1788 1917 2051

$residuals
 [1] -0.04463 -0.08952 -0.01324  0.03741  0.03154  0.01091  0.01506  0.04914
 [9] -0.00388  0.01034  0.02541  0.02643 -0.00922  0.02739  0.02018 -0.00619
[17] -0.03128 -0.01810 -0.01566 -0.02926

$rss
[1] 0.0205

$cov.unscaled
           gamma    lambda     delta       rho
gamma   2.21e+07 -27.26489  1.20e+06 -1.54e+06
lambda -2.73e+01   0.00338 -1.29e+00  1.42e+00
delta   1.20e+06  -1.28759  6.56e+04 -8.40e+04
rho    -1.54e+06   1.41634 -8.40e+04  1.08e+05

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Coefficients:
  gamma  lambda   delta     rho 
12.1522  0.0139  0.4961  0.3000 

Elasticity of Substitution: 0.769 

> summary( cesNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0.3 
Convergence achieved after 5 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  1.22e+01   1.50e+02    0.08     0.94    
lambda 1.39e-02   1.86e-03    7.49  7.1e-14 ***
delta  4.96e-01   8.20e+00    0.06     0.95    
rho    3.00e-01   1.05e+01    0.03     0.98    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.032 
Multiple R-squared: 0.977 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.769      6.212    0.12      0.9

> 
> ## PORT, CRS
> cesPort <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", rho = 2 )
> print.default( cesPort )
$nlminb
$nlminb$par
gamma delta 
 49.1   1.0 

$nlminb$objective
[1] 165832

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 31

$nlminb$evaluations
function gradient 
      45       31 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
gamma delta   rho 
 49.1   1.0   2.0 

$iter
[1] 31

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta 
 34.5   0.5 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
         gamma    delta      rho
gamma 3.20e+02 1.31e+01 4.65e+12
delta 1.31e+01 5.32e-01 1.89e+11
rho   4.65e+12 1.89e+11 1.19e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Coefficients:
gamma delta   rho 
 49.1   1.0   2.0 

Elasticity of Substitution: 0.333 

> summary( cesPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 31 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.91e+01   1.63e+03    0.03     0.98
delta 1.00e+00   6.64e+01    0.02     0.99
rho   2.00e+00   9.92e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.33e-01   1.10e+13       0        1

> coef( cesPort )
gamma delta   rho 
 49.1   1.0   2.0 
> vcov( cesPort )
         gamma    delta      rho
gamma 2.66e+06 1.08e+05 3.85e+16
delta 1.08e+05 4.41e+03 1.57e+15
rho   3.85e+16 1.57e+15 9.84e+27
> coef( summary( cesPort ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     49.1   1.63e+03 3.02e-02    0.976
delta      1.0   6.64e+01 1.51e-02    0.988
rho        2.0   9.92e+13 2.02e-14    1.000
> 
> ## PORT, VRS
> cesPortVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesPortVrs )
$nlminb
$nlminb$par
gamma delta    nu 
 8.35  0.84  1.30 

$nlminb$objective
[1] 75167

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     168      151 

$nlminb$message
[1] "iteration limit reached without convergence (10)"


$coefficients
gamma delta   rho    nu 
 8.35  0.84 -0.10  1.30 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (10)"

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta    nu 
 8.85  0.50  1.00 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1072 1136 1161 1195 1191 1212 1254 1244 1201 1249 1301 1501 1587 1642 1573
[16] 1581 1654 1733 1869 2004

$residuals
 [1] -126.075 -173.419  -90.961  -22.772  -13.304  -26.088  -14.594   44.706
 [9]    6.846   29.316   59.099   40.055  -11.960   54.059   72.004   45.438
[17]    0.558   22.702   18.895  -12.042

$rss
[1] 75167

$cov.unscaled
          gamma     delta       rho        nu
gamma  2.672455  1.46e-01 -3.48e-01 -6.04e-04
delta  0.145956  7.99e-03 -1.91e-02 -2.46e-05
rho   -0.348314 -1.91e-02  4.56e-02  5.34e-05
nu    -0.000604 -2.46e-05  5.34e-05  3.44e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Coefficients:
gamma delta   rho    nu 
 8.35  0.84 -0.10  1.30 

Elasticity of Substitution: 1.11 

> summary( cesPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    8.350    100.220    0.08     0.93    
delta    0.840      5.481    0.15     0.88    
rho     -0.100     13.093   -0.01     0.99    
nu       1.301      0.114   11.45   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 61.3 
Multiple R-squared: 0.958 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11      16.16    0.07     0.95

> coef( cesPortVrs )
gamma delta   rho    nu 
 8.35  0.84 -0.10  1.30 
> vcov( cesPortVrs )
         gamma    delta       rho      nu
gamma 10043.97 548.5514 -1309.079 -2.2693
delta   548.55  30.0433   -71.754 -0.0923
rho   -1309.08 -71.7539   171.421  0.2007
nu       -2.27  -0.0923     0.201  0.0129
> coef( summary( cesPortVrs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     8.35    100.220  0.08332 9.34e-01
delta     0.84      5.481  0.15332 8.78e-01
rho      -0.10     13.093 -0.00764 9.94e-01
nu        1.30      0.114 11.45168 2.31e-30
> 
> ## PORT, TC, VRS
> cesPortTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0 )
> print.default( cesPortTcVrs )
$nlminb
$nlminb$par
 gamma lambda  delta     nu 
8.4565 0.0176 0.4544 0.9659 

$nlminb$objective
[1] 17303

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 150

$nlminb$evaluations
function gradient 
     189      151 

$nlminb$message
[1] "iteration limit reached without convergence (10)"


$coefficients
 gamma lambda  delta    rho     nu 
8.4565 0.0176 0.4544 0.0000 0.9659 

$iter
[1] 150

$convergence
[1] FALSE

$message
[1] "iteration limit reached without convergence (10)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 8.456  0.015  0.500  1.000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  961 1039 1067 1133 1148 1183 1235 1232 1229 1279 1353 1530 1629 1679 1624
[16] 1639 1683 1748 1868 2001

$residuals
 [1] -14.688 -75.775   2.135  38.406  30.527   2.391   4.807  56.221 -21.594
[10]  -0.778   7.646  10.579 -54.063  16.778  20.737 -13.224 -28.130   7.489
[19]  19.008  -9.422

$rss
[1] 17303

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma   4.291285  1.02e-04  3.26e-01 -4.23e-01 -4.21e-03
lambda  0.000102  1.30e-08  6.77e-06 -9.05e-06 -4.61e-07
delta   0.325559  6.77e-06  2.48e-02 -3.23e-02 -2.73e-04
rho    -0.423227 -9.05e-06 -3.23e-02  4.20e-02  3.60e-04
nu     -0.004212 -4.61e-07 -2.73e-04  3.60e-04  1.99e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Coefficients:
 gamma lambda  delta    rho     nu 
8.4565 0.0176 0.4544 0.0000 0.9659 

Elasticity of Substitution: 1 

> summary( cesPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 
Convergence NOT achieved after 150 iterations
Message: iteration limit reached without convergence (10) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   8.45651   60.93078    0.14     0.89    
lambda  0.01758    0.00335    5.24  1.6e-07 ***
delta   0.45444    4.63626    0.10     0.92    
rho     0.00000    6.02672    0.00     1.00    
nu      0.96593    0.13135    7.35  1.9e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.4 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.03    0.17     0.87

> 
> ## PORT, TC, multErr, VRS
> cesPortTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0, multErr = TRUE )
> print.default( cesPortTcMeVrs )
$nlminb
$nlminb$par
 gamma lambda  delta     nu 
 8.758  0.020  0.371  0.906 

$nlminb$objective
[1] 0.0115

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 124

$nlminb$evaluations
function gradient 
     152      125 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
 gamma lambda  delta    rho     nu 
 8.758  0.020  0.371  0.000  0.906 

$iter
[1] 124

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

$method
[1] "PORT"

$multErr
[1] TRUE

$start
 gamma lambda  delta     nu 
 0.844  0.015  0.500  1.000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  949 1029 1058 1129 1145 1183 1235 1233 1237 1286 1363 1535 1635 1683 1630
[16] 1646 1683 1744 1860 1991

$residuals
 [1] -0.003369 -0.066457  0.010840  0.037462  0.028375  0.002391  0.003480
 [8]  0.043688 -0.023732 -0.006053 -0.001738  0.003618 -0.037517  0.007438
[15]  0.009031 -0.011938 -0.016795  0.006392  0.014416  0.000467

$rss
[1] 0.0115

$cov.unscaled
          gamma   lambda     delta       rho        nu
gamma   9449284 131.6617 738453.72 -1.02e+06 -7200.142
lambda      132   0.0201      8.14 -1.17e+01    -0.806
delta    738454   8.1389  58095.99 -7.99e+04  -451.819
rho    -1015754 -11.7105 -79887.89  1.10e+05   635.339
nu        -7200  -0.8057   -451.82  6.35e+02    38.856

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Coefficients:
 gamma lambda  delta    rho     nu 
 8.758  0.020  0.371  0.000  0.906 

Elasticity of Substitution: 1 

> summary( cesPortTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 124 iterations
Message: relative convergence (4) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma    8.7584    73.7568    0.12     0.91    
lambda   0.0200     0.0034    5.89  3.9e-09 ***
delta    0.3706     5.7833    0.06     0.95    
rho      0.0000     7.9538    0.00     1.00    
nu       0.9064     0.1496    6.06  1.4e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.024 
Multiple R-squared: 0.987 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       7.95    0.13      0.9

> 
> ## DE, CRS
> cesDe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), rho = 2 )
> print.default( cesDe )
$DEoptim
$optim
$optim$bestmem
par1 par2 
49.1  1.0 

$optim$bestval
[1] 165832

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
        par1  par2
1   4.56e+08 0.709
2   4.56e+08 0.709
3   2.64e+08 0.431
4   4.57e+07 0.370
5   4.57e+07 0.370
6   4.65e+06 0.737
7   4.65e+06 0.737
8   4.65e+06 0.737
9   4.65e+06 0.737
10  4.65e+06 0.737
11  4.65e+06 0.996
12  4.65e+06 0.996
13  4.65e+06 0.996
14  4.65e+06 0.996
15  4.65e+06 0.996
16  1.08e+06 0.499
17  1.08e+06 0.499
18  1.08e+06 0.670
19  3.96e+05 0.504
20  4.37e+04 0.974
21  4.37e+04 0.974
22  4.37e+04 0.974
23  4.37e+04 0.974
24  4.37e+04 0.974
25  4.37e+04 0.974
26  4.37e+04 0.974
27  4.37e+04 0.974
28  4.37e+04 0.974
29  4.37e+04 0.974
30  4.37e+04 0.974
31  4.37e+04 0.974
32  1.93e+04 0.339
33  4.72e+03 0.401
34  4.72e+03 0.401
35  4.72e+03 0.401
36  4.72e+03 0.401
37  5.29e+03 0.722
38  1.79e+02 0.880
39  1.79e+02 0.887
40  1.44e+02 0.746
41  1.44e+02 0.746
42  1.44e+02 0.746
43  1.44e+02 0.746
44  1.44e+02 0.746
45  1.44e+02 0.746
46  1.44e+02 0.746
47  1.44e+02 0.746
48  1.44e+02 0.746
49  1.44e+02 0.746
50  6.88e+01 0.617
51  4.96e+01 0.705
52  4.96e+01 0.705
53  4.96e+01 0.705
54  4.96e+01 0.705
55  3.86e+01 0.455
56  2.64e+01 0.392
57  2.64e+01 0.254
58  2.64e+01 0.254
59  3.68e+01 0.554
60  3.68e+01 0.554
61  3.68e+01 0.554
62  2.82e+01 0.325
63  2.82e+01 0.325
64  2.82e+01 0.325
65  2.82e+01 0.325
66  3.73e+01 0.581
67  3.83e+01 0.603
68  3.57e+01 0.531
69  4.04e+01 0.676
70  4.04e+01 0.676
71  4.04e+01 0.676
72  4.18e+01 0.724
73  4.18e+01 0.724
74  4.18e+01 0.724
75  4.66e+01 0.902
76  4.66e+01 0.902
77  4.59e+01 0.873
78  4.59e+01 0.873
79  4.34e+01 0.782
80  4.72e+01 0.925
81  4.80e+01 0.954
82  4.80e+01 0.954
83  4.80e+01 0.954
84  4.80e+01 0.954
85  4.80e+01 0.954
86  4.80e+01 0.954
87  4.87e+01 0.981
88  4.87e+01 0.981
89  4.89e+01 0.989
90  4.89e+01 0.989
91  4.83e+01 0.967
92  4.87e+01 0.982
93  4.91e+01 0.998
94  4.91e+01 0.998
95  4.91e+01 0.998
96  4.91e+01 0.998
97  4.91e+01 0.998
98  4.91e+01 0.998
99  4.91e+01 0.998
100 4.91e+01 0.998
101 4.91e+01 0.997
102 4.91e+01 0.997
103 4.91e+01 0.997
104 4.91e+01 0.997
105 4.91e+01 0.999
106 4.91e+01 0.999
107 4.91e+01 0.999
108 4.91e+01 0.999
109 4.91e+01 0.999
110 4.91e+01 0.999
111 4.91e+01 0.999
112 4.91e+01 1.000
113 4.91e+01 1.000
114 4.91e+01 1.000
115 4.91e+01 1.000
116 4.91e+01 1.000
117 4.91e+01 1.000
118 4.91e+01 1.000
119 4.91e+01 1.000
120 4.91e+01 1.000
121 4.91e+01 1.000
122 4.91e+01 1.000
123 4.91e+01 1.000
124 4.91e+01 1.000
125 4.91e+01 1.000
126 4.91e+01 1.000
127 4.91e+01 1.000
128 4.91e+01 1.000
129 4.91e+01 1.000
130 4.91e+01 1.000
131 4.91e+01 1.000
132 4.91e+01 1.000
133 4.91e+01 1.000
134 4.91e+01 1.000
135 4.91e+01 1.000
136 4.91e+01 1.000
137 4.91e+01 1.000
138 4.91e+01 1.000
139 4.91e+01 1.000
140 4.91e+01 1.000
141 4.91e+01 1.000
142 4.91e+01 1.000
143 4.91e+01 1.000
144 4.91e+01 1.000
145 4.91e+01 1.000
146 4.91e+01 1.000
147 4.91e+01 1.000
148 4.91e+01 1.000
149 4.91e+01 1.000
150 4.91e+01 1.000
151 4.91e+01 1.000
152 4.91e+01 1.000
153 4.91e+01 1.000
154 4.91e+01 1.000
155 4.91e+01 1.000
156 4.91e+01 1.000
157 4.91e+01 1.000
158 4.91e+01 1.000
159 4.91e+01 1.000
160 4.91e+01 1.000
161 4.91e+01 1.000
162 4.91e+01 1.000
163 4.91e+01 1.000
164 4.91e+01 1.000
165 4.91e+01 1.000
166 4.91e+01 1.000
167 4.91e+01 1.000
168 4.91e+01 1.000
169 4.91e+01 1.000
170 4.91e+01 1.000
171 4.91e+01 1.000
172 4.91e+01 1.000
173 4.91e+01 1.000
174 4.91e+01 1.000
175 4.91e+01 1.000
176 4.91e+01 1.000
177 4.91e+01 1.000
178 4.91e+01 1.000
179 4.91e+01 1.000
180 4.91e+01 1.000
181 4.91e+01 1.000
182 4.91e+01 1.000
183 4.91e+01 1.000
184 4.91e+01 1.000
185 4.91e+01 1.000
186 4.91e+01 1.000
187 4.91e+01 1.000
188 4.91e+01 1.000
189 4.91e+01 1.000
190 4.91e+01 1.000
191 4.91e+01 1.000
192 4.91e+01 1.000
193 4.91e+01 1.000
194 4.91e+01 1.000
195 4.91e+01 1.000
196 4.91e+01 1.000
197 4.91e+01 1.000
198 4.91e+01 1.000
199 4.91e+01 1.000
200 4.91e+01 1.000

$member$bestvalit
  [1] 5.03e+21 5.03e+21 2.77e+21 9.67e+19 9.67e+19 5.05e+17 5.05e+17 5.05e+17
  [9] 5.05e+17 5.05e+17 3.74e+17 3.74e+17 3.74e+17 3.74e+17 3.74e+17 3.98e+16
 [17] 3.98e+16 2.97e+16 5.33e+15 3.36e+13 3.36e+13 3.36e+13 3.36e+13 3.36e+13
 [25] 3.36e+13 3.36e+13 3.36e+13 3.36e+13 3.36e+13 3.36e+13 3.36e+13 1.87e+13
 [33] 9.40e+11 9.40e+11 9.40e+11 9.40e+11 6.56e+11 3.46e+08 3.42e+08 2.36e+08
 [41] 2.36e+08 2.36e+08 2.36e+08 2.36e+08 2.36e+08 2.36e+08 2.36e+08 2.36e+08
 [49] 2.36e+08 2.55e+07 1.85e+06 1.85e+06 1.85e+06 1.85e+06 1.26e+06 1.04e+06
 [57] 3.22e+05 3.22e+05 1.68e+05 1.68e+05 1.68e+05 1.67e+05 1.67e+05 1.67e+05
 [65] 1.67e+05 1.67e+05 1.67e+05 1.67e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [73] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [81] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [89] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [97] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[105] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[113] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[121] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[129] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[137] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[145] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[153] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[161] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[169] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[177] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[185] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[193] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05

$member$pop
      [,1]  [,2]
 [1,] 49.1 1.000
 [2,] 49.1 1.000
 [3,] 49.1 1.000
 [4,] 49.1 1.000
 [5,] 49.1 1.000
 [6,] 49.1 1.000
 [7,] 49.1 1.000
 [8,] 49.1 1.000
 [9,] 49.1 1.000
[10,] 49.1 1.000
[11,] 49.1 1.000
[12,] 40.4 0.675
[13,] 49.1 1.000
[14,] 49.1 1.000
[15,] 49.1 1.000
[16,] 49.1 1.000
[17,] 49.1 1.000
[18,] 49.1 1.000
[19,] 29.0 0.346
[20,] 49.1 1.000

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
 49.1   1.0   2.0 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.333 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 2

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  3.75e+02  1.60e+01 -5.86e+12
delta  1.60e+01  6.91e-01 -2.98e+11
rho   -5.86e+12 -2.98e+11  4.71e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
 49.1   1.0   2.0 

Elasticity of Substitution: 0.333 

> summary( cesDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.91e+01   1.76e+03    0.03     0.98
delta 1.00e+00   7.57e+01    0.01     0.99
rho   2.00e+00   6.25e+13    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 3.33e-01   6.94e+12       0        1

> coef( cesDe )
gamma delta   rho 
 49.1   1.0   2.0 
> vcov( cesDe )
          gamma     delta       rho
gamma  3.11e+06  1.33e+05 -4.86e+16
delta  1.33e+05  5.73e+03 -2.47e+15
rho   -4.86e+16 -2.47e+15  3.90e+27
> coef( summary( cesDe ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma     49.1   1.76e+03 2.79e-02    0.978
delta      1.0   7.57e+01 1.32e-02    0.989
rho        2.0   6.25e+13 3.20e-14    1.000
> 
> ## DE, TC, CRS
> cesDeTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "DE", control = DEoptim.control( trace = FALSE ), rho = 0.5 )
> print.default( cesDeTc )
$DEoptim
$optim
$optim$bestmem
  par1   par2   par3 
5.6484 0.0154 0.2089 

$optim$bestval
[1] 19793

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
        par1     par2  par3
1   1.03e+09 -0.34756 0.475
2   1.59e+08 -0.13968 0.817
3   1.59e+08 -0.13968 0.817
4   3.49e+08 -0.47539 0.815
5   2.09e+08 -0.25516 0.899
6   2.09e+08 -0.25516 0.899
7   4.80e+07 -0.28956 0.933
8   8.93e+06 -0.22352 0.697
9   8.93e+06 -0.22352 0.697
10  8.93e+06 -0.22352 0.697
11  8.93e+06 -0.22352 0.855
12  8.93e+06 -0.22352 0.855
13  8.93e+06 -0.22352 0.855
14  3.34e+06 -0.31936 0.460
15  3.34e+06 -0.31936 0.460
16  3.34e+06 -0.31936 0.460
17  3.34e+06 -0.31936 0.460
18  3.34e+06 -0.31936 0.460
19  1.09e+05 -0.40446 0.751
20  1.09e+05 -0.45256 0.751
21  1.09e+05 -0.45256 0.751
22  1.09e+05 -0.45256 0.751
23  1.09e+05 -0.45256 0.751
24  1.09e+05 -0.45256 0.751
25  1.09e+05 -0.45416 0.751
26  1.09e+05 -0.45416 0.751
27  1.09e+05 -0.45416 0.751
28  1.09e+05 -0.45416 0.751
29  1.09e+05 -0.45416 0.751
30  1.09e+05 -0.45416 0.751
31  1.09e+05 -0.45416 0.751
32  1.09e+05 -0.45416 0.751
33  1.09e+05 -0.45416 0.751
34  3.97e+04 -0.36704 0.675
35  3.97e+04 -0.36704 0.695
36  3.97e+04 -0.30452 0.812
37  3.97e+04 -0.30452 0.841
38  3.24e+04 -0.46863 0.998
39  3.24e+04 -0.46863 0.998
40  3.08e+04 -0.47514 0.969
41  8.24e+03 -0.46297 0.920
42  8.24e+03 -0.46297 0.920
43  8.24e+03 -0.46297 0.920
44  8.24e+03 -0.46297 0.920
45  8.24e+03 -0.46297 0.920
46  8.24e+03 -0.46297 0.920
47  7.66e+03 -0.47625 0.944
48  7.66e+03 -0.47625 0.944
49  7.66e+03 -0.47625 0.944
50  1.55e+03 -0.43193 0.914
51  1.55e+03 -0.43193 0.914
52  1.41e+02 -0.29203 0.914
53  1.41e+02 -0.26028 0.914
54  1.41e+02 -0.26028 0.914
55  1.41e+02 -0.26028 0.914
56  1.41e+02 -0.26028 0.914
57  1.41e+02 -0.26028 0.914
58  1.41e+02 -0.26028 0.914
59  1.41e+02 -0.26028 0.914
60  1.41e+02 -0.26028 0.914
61  1.41e+02 -0.26028 0.914
62  1.41e+02 -0.26028 0.914
63  6.45e+01 -0.22439 0.906
64  6.45e+01 -0.22439 0.906
65  6.45e+01 -0.06203 0.906
66  3.79e+01 -0.02591 0.841
67  3.79e+01 -0.02591 0.841
68  3.79e+01 -0.02591 0.841
69  3.79e+01 -0.02591 0.841
70  3.79e+01 -0.02591 0.841
71  3.79e+01 -0.02591 0.841
72  3.79e+01 -0.02591 0.841
73  3.79e+01 -0.02591 0.841
74  3.79e+01 -0.01542 0.799
75  3.79e+01 -0.01542 0.799
76  3.79e+01 -0.01542 0.799
77  2.51e+01 -0.00779 0.643
78  2.51e+01 -0.00779 0.643
79  2.51e+01 -0.00779 0.643
80  2.51e+01 -0.00779 0.597
81  2.51e+01 -0.00779 0.597
82  2.51e+01 -0.00779 0.597
83  2.51e+01 -0.00779 0.597
84  1.37e+01 -0.00250 0.383
85  1.37e+01 -0.00250 0.383
86  1.37e+01 -0.00250 0.383
87  2.84e+01  0.00140 0.721
88  2.84e+01  0.00140 0.721
89  2.84e+01  0.00140 0.721
90  2.84e+01  0.00140 0.721
91  4.00e+01  0.00506 0.905
92  4.11e+01  0.00683 0.931
93  4.11e+01  0.00683 0.931
94  4.11e+01  0.00683 0.931
95  4.11e+01  0.00683 0.931
96  4.11e+01  0.00683 0.931
97  4.11e+01  0.00683 0.931
98  4.11e+01  0.00683 0.931
99  4.11e+01  0.00683 0.931
100 4.11e+01  0.00683 0.931
101 4.11e+01  0.00683 0.931
102 4.11e+01  0.00683 0.931
103 3.53e+01  0.00892 0.874
104 2.77e+01  0.00734 0.724
105 2.77e+01  0.00734 0.724
106 2.77e+01  0.00734 0.724
107 2.32e+01  0.00801 0.652
108 2.32e+01  0.00801 0.652
109 2.32e+01  0.00801 0.652
110 2.32e+01  0.00801 0.652
111 1.80e+01  0.00937 0.547
112 1.80e+01  0.00937 0.547
113 1.80e+01  0.00937 0.547
114 1.80e+01  0.00937 0.547
115 1.80e+01  0.00937 0.547
116 1.80e+01  0.00937 0.547
117 1.80e+01  0.00937 0.547
118 1.80e+01  0.00937 0.547
119 1.80e+01  0.00937 0.547
120 1.80e+01  0.00937 0.547
121 1.80e+01  0.00937 0.547
122 1.80e+01  0.00937 0.547
123 1.80e+01  0.00937 0.547
124 1.84e+01  0.01065 0.564
125 1.84e+01  0.01065 0.564
126 1.84e+01  0.01065 0.564
127 1.84e+01  0.01065 0.564
128 1.45e+01  0.01065 0.473
129 1.45e+01  0.01065 0.473
130 1.42e+01  0.01021 0.464
131 1.42e+01  0.01021 0.464
132 1.42e+01  0.01021 0.464
133 1.42e+01  0.01021 0.464
134 1.42e+01  0.01021 0.464
135 1.42e+01  0.01021 0.464
136 1.42e+01  0.01021 0.464
137 1.42e+01  0.01021 0.464
138 1.42e+01  0.01124 0.464
139 1.42e+01  0.01124 0.464
140 1.42e+01  0.01124 0.464
141 1.34e+01  0.01096 0.445
142 1.34e+01  0.01096 0.445
143 1.36e+01  0.01124 0.452
144 1.31e+01  0.01051 0.433
145 1.31e+01  0.01051 0.433
146 1.31e+01  0.01051 0.433
147 1.32e+01  0.01064 0.435
148 1.28e+01  0.01105 0.428
149 1.28e+01  0.01105 0.428
150 1.21e+01  0.01184 0.411
151 1.21e+01  0.01184 0.411
152 1.21e+01  0.01184 0.411
153 1.21e+01  0.01184 0.411
154 1.21e+01  0.01184 0.411
155 1.21e+01  0.01184 0.411
156 1.20e+01  0.01214 0.410
157 1.20e+01  0.01214 0.410
158 1.08e+01  0.01172 0.377
159 1.08e+01  0.01172 0.377
160 1.08e+01  0.01247 0.376
161 1.07e+01  0.01193 0.373
162 1.07e+01  0.01193 0.373
163 9.95e+00  0.01254 0.353
164 9.95e+00  0.01254 0.353
165 9.95e+00  0.01255 0.353
166 1.03e+01  0.01208 0.362
167 9.98e+00  0.01256 0.353
168 9.95e+00  0.01307 0.353
169 9.14e+00  0.01278 0.329
170 9.14e+00  0.01278 0.329
171 9.14e+00  0.01278 0.329
172 9.14e+00  0.01278 0.329
173 9.15e+00  0.01296 0.327
174 8.67e+00  0.01364 0.316
175 8.05e+00  0.01415 0.296
176 8.05e+00  0.01415 0.296
177 8.05e+00  0.01415 0.296
178 7.72e+00  0.01422 0.285
179 7.32e+00  0.01488 0.273
180 7.32e+00  0.01488 0.273
181 7.32e+00  0.01488 0.273
182 7.32e+00  0.01488 0.273
183 7.52e+00  0.01448 0.279
184 7.21e+00  0.01449 0.268
185 7.21e+00  0.01449 0.268
186 7.21e+00  0.01449 0.268
187 7.21e+00  0.01449 0.268
188 7.21e+00  0.01449 0.268
189 6.83e+00  0.01523 0.254
190 6.55e+00  0.01526 0.244
191 6.55e+00  0.01526 0.244
192 6.55e+00  0.01526 0.244
193 6.05e+00  0.01544 0.226
194 6.05e+00  0.01544 0.226
195 6.05e+00  0.01544 0.226
196 6.20e+00  0.01479 0.230
197 5.87e+00  0.01533 0.218
198 5.65e+00  0.01539 0.209
199 5.65e+00  0.01539 0.209
200 5.65e+00  0.01539 0.209

$member$bestvalit
  [1] 5.31e+21 9.12e+19 9.12e+19 8.23e+19 5.40e+19 5.40e+19 2.13e+18 2.53e+17
  [9] 2.53e+17 2.53e+17 1.37e+17 1.37e+17 1.37e+17 6.87e+16 6.87e+16 6.87e+16
 [17] 6.87e+16 6.87e+16 1.32e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13
 [25] 1.11e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13 1.11e+13
 [33] 1.11e+13 2.77e+12 2.54e+12 2.08e+12 1.87e+12 3.83e+11 3.83e+11 3.71e+11
 [41] 3.22e+10 3.22e+10 3.22e+10 3.22e+10 3.22e+10 3.22e+10 2.44e+10 2.44e+10
 [49] 2.44e+10 1.20e+09 1.20e+09 3.49e+07 3.39e+07 3.39e+07 3.39e+07 3.39e+07
 [57] 3.39e+07 3.39e+07 3.39e+07 3.39e+07 3.39e+07 3.39e+07 3.05e+07 3.05e+07
 [65] 7.24e+06 3.96e+06 3.96e+06 3.96e+06 3.96e+06 3.96e+06 3.96e+06 3.96e+06
 [73] 3.96e+06 1.18e+06 1.18e+06 1.18e+06 8.34e+05 8.34e+05 8.34e+05 5.03e+05
 [81] 5.03e+05 5.03e+05 5.03e+05 3.93e+05 3.93e+05 3.93e+05 1.82e+05 1.82e+05
 [89] 1.82e+05 1.82e+05 9.12e+04 8.49e+04 8.49e+04 8.49e+04 8.49e+04 8.49e+04
 [97] 8.49e+04 8.49e+04 8.49e+04 8.49e+04 8.49e+04 8.49e+04 7.19e+04 7.03e+04
[105] 7.03e+04 7.03e+04 6.23e+04 6.23e+04 6.23e+04 6.23e+04 4.88e+04 4.88e+04
[113] 4.88e+04 4.88e+04 4.88e+04 4.88e+04 4.88e+04 4.88e+04 4.88e+04 4.88e+04
[121] 4.88e+04 4.88e+04 4.88e+04 4.81e+04 4.81e+04 4.81e+04 4.81e+04 4.60e+04
[129] 4.60e+04 4.31e+04 4.31e+04 4.31e+04 4.31e+04 4.31e+04 4.31e+04 4.31e+04
[137] 4.31e+04 4.27e+04 4.27e+04 4.27e+04 4.13e+04 4.13e+04 4.03e+04 3.95e+04
[145] 3.95e+04 3.95e+04 3.93e+04 3.91e+04 3.91e+04 3.60e+04 3.60e+04 3.60e+04
[153] 3.60e+04 3.60e+04 3.60e+04 3.60e+04 3.60e+04 3.48e+04 3.48e+04 3.31e+04
[161] 3.30e+04 3.30e+04 3.25e+04 3.25e+04 3.24e+04 3.23e+04 3.14e+04 3.13e+04
[169] 3.01e+04 3.01e+04 3.01e+04 3.01e+04 2.89e+04 2.85e+04 2.71e+04 2.71e+04
[177] 2.71e+04 2.61e+04 2.60e+04 2.60e+04 2.60e+04 2.60e+04 2.56e+04 2.45e+04
[185] 2.45e+04 2.45e+04 2.45e+04 2.45e+04 2.43e+04 2.28e+04 2.28e+04 2.28e+04
[193] 2.17e+04 2.17e+04 2.17e+04 2.12e+04 2.03e+04 1.98e+04 1.98e+04 1.98e+04

$member$pop
       [,1]    [,2]  [,3]
 [1,]  7.30 0.01464 0.270
 [2,]  6.25 0.01475 0.231
 [3,]  7.31 0.01411 0.271
 [4,]  7.27 0.01507 0.270
 [5,]  6.19 0.01560 0.231
 [6,]  5.52 0.01562 0.206
 [7,]  9.08 0.01328 0.326
 [8,]  6.49 0.01485 0.241
 [9,]  6.21 0.01358 0.228
[10,]  5.83 0.01529 0.215
[11,] 25.12 0.00699 0.677
[12,]  7.52 0.01445 0.279
[13,]  8.34 0.01361 0.303
[14,]  5.87 0.01533 0.218
[15,]  6.08 0.01543 0.228
[16,]  7.19 0.01449 0.266
[17,]  6.20 0.01479 0.230
[18,]  7.21 0.01474 0.267
[19,] 39.63 0.00750 0.919
[20,]  5.65 0.01539 0.209
[21,]  6.90 0.01409 0.254
[22,]  6.05 0.01544 0.226
[23,]  6.81 0.01466 0.250
[24,]  5.11 0.01621 0.186
[25,]  7.59 0.01493 0.281
[26,]  5.55 0.01536 0.206
[27,]  6.45 0.01439 0.236
[28,]  5.75 0.01619 0.216
[29,]  8.08 0.01276 0.293
[30,]  6.98 0.01424 0.255

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
 gamma lambda  delta    rho 
5.6484 0.0154 0.2089 0.5000 

$iter
[1] 200

$ela
E_1_2 (all) 
      0.667 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] 0.5

$fitted.values
 [1]  975 1047 1077 1134 1147 1180 1230 1230 1221 1272 1340 1518 1613 1667 1616
[16] 1633 1687 1756 1879 2012

$residuals
 [1] -28.421 -84.378  -6.922  38.101  31.602   5.765   9.681  58.735 -12.913
[10]   6.892  20.670  22.888 -37.910  28.915  28.579  -7.438 -31.484  -0.137
[19]   8.334 -20.480

$rss
[1] 19793

$cov.unscaled
           gamma    lambda     delta       rho
gamma   1.08e+00  2.21e-06  9.80e-02 -1.91e-01
lambda  2.21e-06  2.31e-09  2.88e-07 -6.80e-07
delta   9.80e-02  2.88e-07  8.86e-03 -1.72e-02
rho    -1.91e-01 -6.80e-07 -1.72e-02  3.35e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Coefficients:
 gamma lambda  delta    rho 
5.6484 0.0154 0.2089 0.5000 

Elasticity of Substitution: 0.667 

> summary( cesDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.5 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.64840   32.76672    0.17     0.86    
lambda  0.01539    0.00151   10.18   <2e-16 ***
delta   0.20890    2.96190    0.07     0.94    
rho     0.50000    5.76104    0.09     0.93    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 31.5 
Multiple R-squared: 0.989 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.667      2.560    0.26     0.79

> 
> ## DE, VRS
> cesDeVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "DE", vrs = TRUE,
+    control = DEoptim.control( trace = FALSE ), rho = -0.1, random.seed = 234 )
> print.default( cesDeVrs )
$DEoptim
$optim
$optim$bestmem
 par1  par2  par3 
6.609 0.876 1.409 

$optim$bestval
[1] 81350

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
        par1  par2   par3
1   1.20e+07 0.659 0.6741
2   1.20e+07 0.659 0.6741
3   1.20e+07 0.126 0.0407
4   1.20e+07 0.126 0.0407
5   2.39e+05 0.598 0.7739
6   2.39e+05 0.609 0.7739
7   2.39e+05 0.609 0.7739
8   2.39e+05 0.609 0.7739
9   2.39e+05 0.609 0.3298
10  2.39e+05 0.609 0.3298
11  2.39e+05 0.609 0.3298
12  2.39e+05 0.609 0.3298
13  2.39e+05 0.609 0.3298
14  2.39e+05 0.609 0.3298
15  2.39e+05 0.609 0.3298
16  2.39e+05 0.609 0.3298
17  2.39e+05 0.609 0.3298
18  2.39e+05 0.609 0.3298
19  2.39e+05 0.652 0.3298
20  2.39e+05 0.652 0.3298
21  2.39e+05 0.652 0.3298
22  2.39e+05 0.832 0.2853
23  2.39e+05 0.832 0.2853
24  2.36e+05 0.975 0.1273
25  2.36e+05 0.975 0.1273
26  2.39e+05 0.832 0.0550
27  2.39e+05 0.832 0.0550
28  2.39e+05 0.832 0.0550
29  2.39e+05 0.832 0.0550
30  2.39e+05 0.832 0.0550
31  2.39e+05 0.832 0.0550
32  1.48e+05 0.967 0.0735
33  1.48e+05 0.967 0.0735
34  1.48e+05 0.967 0.0735
35  1.48e+05 0.967 0.0735
36  1.48e+05 0.967 0.0735
37  1.48e+05 0.967 0.0735
38  1.19e+05 0.880 0.0684
39  4.74e+03 0.814 0.0387
40  4.74e+03 0.814 0.0387
41  4.74e+03 0.814 0.0387
42  4.74e+03 0.814 0.0387
43  4.74e+03 0.865 0.0387
44  4.74e+03 0.985 0.0387
45  4.74e+03 0.985 0.0387
46  1.13e+03 0.229 0.0490
47  1.13e+03 0.229 0.0490
48  1.13e+03 0.229 0.0490
49  1.13e+03 0.229 0.0490
50  1.13e+03 0.229 0.0490
51  1.13e+03 0.229 0.0490
52  1.13e+03 0.229 0.0490
53  1.13e+03 0.519 0.0405
54  1.13e+03 0.519 0.0405
55  1.13e+03 0.519 0.0405
56  1.13e+03 0.519 0.0405
57  1.13e+03 0.519 0.0405
58  1.13e+03 0.519 0.0405
59  1.13e+03 0.519 0.0405
60  1.13e+03 0.519 0.0405
61  1.13e+03 0.519 0.0405
62  1.13e+03 0.375 0.0405
63  1.13e+03 0.375 0.0405
64  1.13e+03 0.375 0.0405
65  9.38e+02 0.191 0.0677
66  9.38e+02 0.191 0.0677
67  8.59e+02 0.535 0.1032
68  6.70e+02 0.424 0.1449
69  6.70e+02 0.424 0.1449
70  6.70e+02 0.424 0.1449
71  5.08e+02 0.319 0.1860
72  5.08e+02 0.319 0.1860
73  5.08e+02 0.319 0.1860
74  5.08e+02 0.319 0.1860
75  5.08e+02 0.319 0.1860
76  5.48e+02 0.442 0.1836
77  5.48e+02 0.442 0.1836
78  5.48e+02 0.442 0.1836
79  4.59e+02 0.534 0.2196
80  5.53e+02 0.718 0.2076
81  5.44e+02 0.633 0.2083
82  5.44e+02 0.633 0.2083
83  5.38e+02 0.782 0.2346
84  5.82e+02 0.979 0.2594
85  5.82e+02 0.979 0.2594
86  5.82e+02 0.979 0.2594
87  4.40e+02 0.874 0.3042
88  4.40e+02 0.874 0.3042
89  4.42e+02 0.874 0.3042
90  4.42e+02 0.874 0.3042
91  4.42e+02 0.874 0.3042
92  3.38e+02 0.815 0.3476
93  2.69e+02 0.732 0.3842
94  3.42e+02 0.896 0.3773
95  3.28e+02 0.905 0.4046
96  3.37e+02 0.994 0.4317
97  2.54e+02 0.901 0.4658
98  2.54e+02 0.901 0.4658
99  2.54e+02 0.901 0.4658
100 2.02e+02 0.977 0.5557
101 2.02e+02 0.977 0.5557
102 2.02e+02 0.977 0.5557
103 8.97e+01 0.879 0.7441
104 8.97e+01 0.921 0.7441
105 8.97e+01 0.921 0.7441
106 8.97e+01 0.921 0.7441
107 8.97e+01 0.921 0.7441
108 1.27e+02 0.981 0.7049
109 1.27e+02 0.981 0.7049
110 7.90e+01 0.905 0.7758
111 7.90e+01 0.905 0.7758
112 7.90e+01 0.905 0.7758
113 7.90e+01 0.905 0.7758
114 7.90e+01 0.905 0.7758
115 7.90e+01 0.905 0.7758
116 7.90e+01 0.905 0.7758
117 7.90e+01 0.905 0.7758
118 7.90e+01 0.905 0.7758
119 7.90e+01 0.905 0.7758
120 7.90e+01 0.905 0.7758
121 6.98e+01 0.957 0.8556
122 6.98e+01 0.957 0.8556
123 6.98e+01 0.957 0.8556
124 6.98e+01 0.957 0.8556
125 6.98e+01 0.957 0.8556
126 6.98e+01 0.957 0.8556
127 6.98e+01 0.957 0.8556
128 6.98e+01 0.957 0.8556
129 6.98e+01 0.957 0.8556
130 3.44e+01 0.953 1.0566
131 3.44e+01 0.953 1.0566
132 3.44e+01 0.953 1.0566
133 3.44e+01 0.953 1.0566
134 3.44e+01 0.953 1.0566
135 3.44e+01 0.953 1.0566
136 3.44e+01 0.953 1.0566
137 3.44e+01 0.953 1.0566
138 3.44e+01 0.953 1.0566
139 3.44e+01 0.953 1.0566
140 3.44e+01 0.953 1.0566
141 3.44e+01 0.953 1.0566
142 3.44e+01 0.953 1.0566
143 3.44e+01 0.953 1.0566
144 3.44e+01 0.953 1.0566
145 3.44e+01 0.953 1.0566
146 3.44e+01 0.953 1.0566
147 3.44e+01 0.953 1.0566
148 3.44e+01 0.953 1.0566
149 3.44e+01 0.953 1.0566
150 3.44e+01 0.953 1.0566
151 3.44e+01 0.953 1.0566
152 3.44e+01 0.953 1.0566
153 3.44e+01 0.953 1.0566
154 3.44e+01 0.953 1.0566
155 3.44e+01 0.953 1.0566
156 3.44e+01 0.953 1.0566
157 3.44e+01 0.953 1.0566
158 3.44e+01 0.953 1.0566
159 3.44e+01 0.953 1.0566
160 3.44e+01 0.953 1.0566
161 3.44e+01 0.953 1.0566
162 3.44e+01 0.953 1.0566
163 3.44e+01 0.953 1.0566
164 3.44e+01 0.953 1.0566
165 3.44e+01 0.953 1.0566
166 3.44e+01 0.953 1.0566
167 2.59e+01 0.998 1.1871
168 2.59e+01 0.998 1.1871
169 2.59e+01 0.998 1.1871
170 2.59e+01 0.998 1.1871
171 2.59e+01 0.998 1.1871
172 2.59e+01 0.998 1.1871
173 2.59e+01 0.998 1.1871
174 2.59e+01 0.998 1.1871
175 2.59e+01 0.998 1.1871
176 2.59e+01 0.998 1.1871
177 2.59e+01 0.998 1.1871
178 2.59e+01 0.998 1.1871
179 2.59e+01 0.998 1.1871
180 2.59e+01 0.998 1.1871
181 2.59e+01 0.998 1.1871
182 2.59e+01 0.998 1.1871
183 2.59e+01 0.998 1.1871
184 2.59e+01 0.998 1.1871
185 2.59e+01 0.998 1.1871
186 2.59e+01 0.998 1.1871
187 2.59e+01 0.998 1.1871
188 2.59e+01 0.998 1.1871
189 2.59e+01 0.998 1.1871
190 2.59e+01 0.998 1.1871
191 2.59e+01 0.998 1.1871
192 2.59e+01 0.998 1.1871
193 2.59e+01 0.998 1.1871
194 2.59e+01 0.998 1.1871
195 2.59e+01 0.998 1.1871
196 2.59e+01 0.998 1.1871
197 2.59e+01 0.998 1.1871
198 2.59e+01 0.998 1.1871
199 6.61e+00 0.876 1.4088
200 6.61e+00 0.876 1.4088

$member$bestvalit
  [1] 1.35e+18 1.35e+18 4.75e+15 4.75e+15 1.82e+15 1.72e+15 1.72e+15 1.72e+15
  [9] 2.57e+13 2.57e+13 2.57e+13 2.57e+13 2.57e+13 2.57e+13 2.57e+13 2.57e+13
 [17] 2.57e+13 2.57e+13 2.34e+13 2.34e+13 2.34e+13 1.10e+13 1.10e+13 2.67e+12
 [25] 2.67e+12 1.75e+12 1.75e+12 1.75e+12 1.75e+12 1.75e+12 1.75e+12 7.18e+11
 [33] 7.18e+11 7.18e+11 7.18e+11 7.18e+11 7.18e+11 4.66e+11 3.41e+08 3.41e+08
 [41] 3.41e+08 3.41e+08 3.35e+08 3.20e+08 3.20e+08 1.85e+06 1.85e+06 1.85e+06
 [49] 1.85e+06 1.85e+06 1.85e+06 1.85e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06
 [57] 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.70e+06 1.70e+06 1.70e+06
 [65] 1.67e+06 1.67e+06 1.58e+06 1.54e+06 1.54e+06 1.54e+06 1.49e+06 1.49e+06
 [73] 1.49e+06 1.49e+06 1.49e+06 1.46e+06 1.46e+06 1.46e+06 1.44e+06 1.41e+06
 [81] 1.37e+06 1.37e+06 1.28e+06 1.17e+06 1.17e+06 1.17e+06 1.13e+06 1.13e+06
 [89] 1.12e+06 1.12e+06 1.12e+06 1.12e+06 1.04e+06 9.89e+05 9.66e+05 8.47e+05
 [97] 8.24e+05 8.24e+05 8.24e+05 6.98e+05 6.98e+05 6.98e+05 6.08e+05 5.22e+05
[105] 5.22e+05 5.22e+05 5.22e+05 4.36e+05 4.36e+05 4.02e+05 4.02e+05 4.02e+05
[113] 4.02e+05 4.02e+05 4.02e+05 4.02e+05 4.02e+05 4.02e+05 4.02e+05 4.02e+05
[121] 2.87e+05 2.87e+05 2.87e+05 2.87e+05 2.87e+05 2.87e+05 2.87e+05 2.87e+05
[129] 2.87e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05
[137] 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05
[145] 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05
[153] 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05
[161] 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.60e+05 1.04e+05 1.04e+05
[169] 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05
[177] 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05
[185] 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05
[193] 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 1.04e+05 8.13e+04 8.13e+04

$member$pop
        [,1]  [,2]  [,3]
 [1,]  68.51 0.688 0.679
 [2,] 126.64 0.981 0.705
 [3,]  42.73 0.897 0.946
 [4,] 240.40 0.804 0.432
 [5,]  95.69 0.921 0.744
 [6,]  26.14 0.980 1.147
 [7,] 142.06 0.980 0.668
 [8,] 479.05 0.693 0.247
 [9,]  63.81 0.905 0.838
[10,] 270.30 0.782 0.403
[11,]  25.93 0.998 1.187
[12,]  79.00 0.896 0.776
[13,] 144.28 0.933 0.636
[14,] 126.30 0.981 0.709
[15,] 337.04 0.994 0.432
[16,] 152.70 0.758 0.521
[17,] 212.12 0.981 0.556
[18,]  34.39 0.953 1.057
[19,] 161.06 0.994 0.651
[20,]  70.43 0.866 0.794
[21,]  55.45 0.996 0.967
[22,]  63.50 0.773 0.751
[23,]  41.32 0.987 1.030
[24,]  89.79 0.891 0.734
[25,]   6.61 0.876 1.409
[26,]  44.75 0.984 0.999
[27,]  38.46 0.841 0.921
[28,] 209.34 0.998 0.567
[29,] 240.27 0.795 0.438
[30,] 231.64 0.751 0.422

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
 gamma  delta    rho     nu 
 6.609  0.876 -0.100  1.409 

$iter
[1] 200

$ela
E_1_2 (all) 
       1.11 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] -0.1

$fitted.values
 [1] 1060 1125 1152 1184 1181 1203 1249 1241 1193 1247 1302 1519 1612 1677 1606
[16] 1619 1709 1801 1957 2111

$residuals
 [1] -113.71 -162.00  -82.60  -12.23   -3.26  -17.44   -9.30   47.60   14.50
[10]   31.56   59.02   22.16  -37.21   19.22   38.49    7.42  -53.70  -45.74
[19]  -69.56 -119.38

$rss
[1] 81350

$cov.unscaled
          gamma     delta       rho        nu
gamma  1.560135  9.86e-02 -2.91e-01 -4.59e-04
delta  0.098644  6.25e-03 -1.85e-02 -2.15e-05
rho   -0.291051 -1.85e-02  5.46e-02  5.76e-05
nu    -0.000459 -2.15e-05  5.76e-05  3.39e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Coefficients:
 gamma  delta    rho     nu 
 6.609  0.876 -0.100  1.409 

Elasticity of Substitution: 1.11 

> summary( cesDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    6.609     79.661    0.08     0.93    
delta    0.876      5.044    0.17     0.86    
rho     -0.100     14.897   -0.01     0.99    
nu       1.409      0.117   12.00   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 63.8 
Multiple R-squared: 0.954 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.11      18.39    0.06     0.95

> coef( cesDeVrs )
 gamma  delta    rho     nu 
 6.609  0.876 -0.100  1.409 
> vcov( cesDeVrs )
         gamma    delta       rho      nu
gamma  6345.81 401.2304 -1183.843 -1.8681
delta   401.23  25.4420   -75.131 -0.0876
rho   -1183.84 -75.1311   221.930  0.2344
nu       -1.87  -0.0876     0.234  0.0138
> coef( summary( cesDeVrs ) )
      Estimate Std. Error  t value Pr(>|t|)
gamma    6.609     79.661  0.08297 9.34e-01
delta    0.876      5.044  0.17370 8.62e-01
rho     -0.100     14.897 -0.00671 9.95e-01
nu       1.409      0.117 12.00117 3.50e-33
> 
> ## DE, multErr, CRS
> cesDeMe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), multErr = TRUE, rho = -0.2 )
> print.default( cesDeMe )
$DEoptim
$optim
$optim$bestmem
par1 par2 
48.3  1.0 

$optim$bestval
[1] 0.116

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
        par1  par2
1   4.56e+08 0.709
2   4.56e+08 0.709
3   4.56e+08 0.709
4   2.36e+08 0.818
5   7.76e+06 0.662
6   4.65e+06 0.791
7   4.65e+06 0.791
8   4.65e+06 0.791
9   4.65e+06 0.791
10  4.65e+06 0.791
11  1.90e+06 0.741
12  3.26e+06 0.925
13  3.26e+06 0.925
14  3.26e+06 0.925
15  1.93e+06 0.893
16  1.93e+06 0.893
17  1.93e+06 0.893
18  1.56e+06 0.840
19  1.56e+06 0.869
20  1.16e+06 0.994
21  4.96e+05 0.895
22  3.71e+05 0.893
23  1.03e+05 0.826
24  1.64e+05 0.950
25  1.64e+05 0.950
26  1.19e+05 0.888
27  1.34e+05 0.945
28  5.87e+04 0.969
29  1.18e+04 0.952
30  1.18e+04 0.952
31  1.18e+04 0.952
32  3.59e+03 0.993
33  3.59e+03 0.993
34  3.59e+03 0.993
35  3.59e+03 0.993
36  3.59e+03 1.000
37  1.62e+03 0.982
38  4.98e+02 0.958
39  4.98e+02 0.958
40  4.98e+02 0.958
41  2.08e+01 0.974
42  2.08e+01 0.974
43  2.08e+01 0.974
44  2.08e+01 0.974
45  2.08e+01 0.974
46  3.91e+01 0.957
47  4.01e+01 0.959
48  4.01e+01 0.959
49  4.01e+01 0.959
50  4.01e+01 0.959
51  4.01e+01 0.959
52  4.01e+01 0.959
53  4.01e+01 0.959
54  4.01e+01 0.959
55  4.01e+01 0.959
56  4.01e+01 0.959
57  4.01e+01 0.959
58  4.01e+01 0.959
59  4.61e+01 0.989
60  4.61e+01 0.989
61  4.61e+01 0.989
62  4.61e+01 0.989
63  4.65e+01 0.992
64  4.82e+01 1.000
65  4.82e+01 1.000
66  4.82e+01 1.000
67  4.82e+01 1.000
68  4.82e+01 1.000
69  4.82e+01 1.000
70  4.82e+01 1.000
71  4.82e+01 1.000
72  4.82e+01 1.000
73  4.82e+01 1.000
74  4.82e+01 1.000
75  4.82e+01 1.000
76  4.83e+01 1.000
77  4.83e+01 1.000
78  4.83e+01 1.000
79  4.83e+01 1.000
80  4.83e+01 1.000
81  4.83e+01 1.000
82  4.83e+01 1.000
83  4.83e+01 1.000
84  4.83e+01 1.000
85  4.83e+01 1.000
86  4.83e+01 1.000
87  4.83e+01 1.000
88  4.83e+01 1.000
89  4.83e+01 1.000
90  4.83e+01 1.000
91  4.83e+01 1.000
92  4.83e+01 1.000
93  4.83e+01 1.000
94  4.83e+01 1.000
95  4.83e+01 1.000
96  4.83e+01 1.000
97  4.83e+01 1.000
98  4.83e+01 1.000
99  4.83e+01 1.000
100 4.83e+01 1.000
101 4.83e+01 1.000
102 4.83e+01 1.000
103 4.83e+01 1.000
104 4.83e+01 1.000
105 4.83e+01 1.000
106 4.83e+01 1.000
107 4.83e+01 1.000
108 4.83e+01 1.000
109 4.83e+01 1.000
110 4.83e+01 1.000
111 4.83e+01 1.000
112 4.83e+01 1.000
113 4.83e+01 1.000
114 4.83e+01 1.000
115 4.83e+01 1.000
116 4.83e+01 1.000
117 4.83e+01 1.000
118 4.83e+01 1.000
119 4.83e+01 1.000
120 4.83e+01 1.000
121 4.83e+01 1.000
122 4.83e+01 1.000
123 4.83e+01 1.000
124 4.83e+01 1.000
125 4.83e+01 1.000
126 4.83e+01 1.000
127 4.83e+01 1.000
128 4.83e+01 1.000
129 4.83e+01 1.000
130 4.83e+01 1.000
131 4.83e+01 1.000
132 4.83e+01 1.000
133 4.83e+01 1.000
134 4.83e+01 1.000
135 4.83e+01 1.000
136 4.83e+01 1.000
137 4.83e+01 1.000
138 4.83e+01 1.000
139 4.83e+01 1.000
140 4.83e+01 1.000
141 4.83e+01 1.000
142 4.83e+01 1.000
143 4.83e+01 1.000
144 4.83e+01 1.000
145 4.83e+01 1.000
146 4.83e+01 1.000
147 4.83e+01 1.000
148 4.83e+01 1.000
149 4.83e+01 1.000
150 4.83e+01 1.000
151 4.83e+01 1.000
152 4.83e+01 1.000
153 4.83e+01 1.000
154 4.83e+01 1.000
155 4.83e+01 1.000
156 4.83e+01 1.000
157 4.83e+01 1.000
158 4.83e+01 1.000
159 4.83e+01 1.000
160 4.83e+01 1.000
161 4.83e+01 1.000
162 4.83e+01 1.000
163 4.83e+01 1.000
164 4.83e+01 1.000
165 4.83e+01 1.000
166 4.83e+01 1.000
167 4.83e+01 1.000
168 4.83e+01 1.000
169 4.83e+01 1.000
170 4.83e+01 1.000
171 4.83e+01 1.000
172 4.83e+01 1.000
173 4.83e+01 1.000
174 4.83e+01 1.000
175 4.83e+01 1.000
176 4.83e+01 1.000
177 4.83e+01 1.000
178 4.83e+01 1.000
179 4.83e+01 1.000
180 4.83e+01 1.000
181 4.83e+01 1.000
182 4.83e+01 1.000
183 4.83e+01 1.000
184 4.83e+01 1.000
185 4.83e+01 1.000
186 4.83e+01 1.000
187 4.83e+01 1.000
188 4.83e+01 1.000
189 4.83e+01 1.000
190 4.83e+01 1.000
191 4.83e+01 1.000
192 4.83e+01 1.000
193 4.83e+01 1.000
194 4.83e+01 1.000
195 4.83e+01 1.000
196 4.83e+01 1.000
197 4.83e+01 1.000
198 4.83e+01 1.000
199 4.83e+01 1.000
200 4.83e+01 1.000

$member$bestvalit
  [1] 5923.380 5923.380 5923.380 5217.630 3537.098 3038.532 3038.532 3038.532
  [9] 3038.532 3038.532 2698.833 2616.938 2616.938 2616.938 2442.234 2442.234
 [17] 2442.234 2440.201 2389.432 2044.683 1874.892 1766.527 1404.333 1392.776
 [25] 1392.776 1372.964 1334.457 1047.350  651.174  651.174  651.174  376.831
 [33]  376.831  376.831  376.831  371.535  258.251  126.680  126.680  126.680
 [41]   10.749   10.749   10.749   10.749   10.749    0.134    0.123    0.123
 [49]    0.123    0.123    0.123    0.123    0.123    0.123    0.123    0.123
 [57]    0.123    0.123    0.117    0.117    0.117    0.117    0.117    0.116
 [65]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
 [73]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
 [81]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
 [89]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
 [97]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[105]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[113]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[121]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[129]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[137]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[145]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[153]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[161]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[169]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[177]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[185]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116
[193]    0.116    0.116    0.116    0.116    0.116    0.116    0.116    0.116

$member$pop
      [,1] [,2]
 [1,] 48.3    1
 [2,] 48.3    1
 [3,] 48.3    1
 [4,] 48.3    1
 [5,] 48.3    1
 [6,] 48.3    1
 [7,] 48.3    1
 [8,] 48.3    1
 [9,] 48.3    1
[10,] 48.3    1
[11,] 48.3    1
[12,] 48.3    1
[13,] 48.3    1
[14,] 48.3    1
[15,] 48.3    1
[16,] 48.3    1
[17,] 48.3    1
[18,] 48.3    1
[19,] 48.3    1
[20,] 48.3    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
 48.3   1.0  -0.2 

$iter
[1] 200

$ela
E_1_2 (all) 
       1.25 

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] TRUE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] -0.2

$fitted.values
 [1] 1130 1169 1193 1203 1203 1219 1252 1254 1216 1259 1293 1443 1503 1555 1523
[16] 1540 1620 1694 1802 1903

$residuals
 [1] -0.17789 -0.19412 -0.10892 -0.02651 -0.02114 -0.02739 -0.00982  0.02680
 [9] -0.00711  0.01505  0.05086  0.06565  0.04697  0.08681  0.07715  0.05438
[17]  0.02130  0.03597  0.04617  0.04579

$rss
[1] 0.116

$cov.unscaled
          gamma     delta       rho
gamma  7.17e+04  3.39e+02 -2.56e+15
delta  3.39e+02  1.63e+00 -1.97e+13
rho   -2.56e+15 -1.97e+13  3.60e+27

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
 48.3   1.0  -0.2 

Elasticity of Substitution: 1.25 

> summary( cesDeMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  4.83e+01   2.04e+01    2.37    0.018 *  
delta  1.00e+00   9.70e-02   10.31   <2e-16 ***
rho   -2.00e-01   4.57e+12    0.00    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0761 
Multiple R-squared: 0.872 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.25e+00   7.13e+12       0        1

> vcov( cesDeMe )
          gamma     delta       rho
gamma  4.15e+02  1.96e+00 -1.48e+13
delta  1.96e+00  9.41e-03 -1.14e+11
rho   -1.48e+13 -1.14e+11  2.08e+25
> 
> 
> proc.time()
   user  system elapsed 
  6.591   0.096   6.679 


R version 2.12.2 (2011-02-25)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # load the micEconCES package
> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: survival
Loading required package: splines
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'

The following object(s) are masked from 'package:car':

    logit

The following object(s) are masked from 'package:survival':

    aml

The following object(s) are masked from 'package:lattice':

    melanoma

Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.40-3)
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: David Ardia and Katharine Mullen
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> # names of explanatory variables
> xxNames <- c( "land", "qVarInput" )
> 
> 
> ## Nelder-Mead, CRS
> cesNm <- cesEst( "qOutput", xxNames, germanFarms, rho = 2, method = "NM" )
> print.default( cesNm ) 
$optim
$optim$par
    gamma     delta 
84.481925  2.958593 

$optim$value
[1] 165627.5

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho 
84.481925  2.958593  2.000000 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.983 1189.229 1213.332 1224.062 1224.074 1239.797 1273.214 1276.216
 [9] 1237.370 1281.134 1315.500 1467.838 1528.755 1581.890 1549.068 1566.832
[17] 1648.594 1723.424 1834.091 1936.348

$residuals
 [1] -203.849629 -226.498270 -143.752386  -52.265915  -45.957914  -53.986784
 [7]  -33.856295   12.344914  -29.663643   -2.725735   45.092540   72.946590
[13]   46.279369  114.069394   95.621155   59.199094    6.445430   32.175811
[19]   53.328994   55.545714

$rss
[1] 165627.5

$cov.unscaled
           gamma      delta        rho
gamma 68750796.8 5286730.56 294109.839
delta  5286730.6  406534.12  22616.394
rho     294109.8   22616.39   1258.318

attr(,"class")
[1] "cesEst" "list"  
> print( cesNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Coefficients:
 gamma  delta    rho 
84.482  2.959  2.000 

> summary( cesNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "NM", rho = 2)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 501 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 8.448e+01  7.546e+05   0.000        1
delta 2.959e+00  5.802e+04   0.000        1
rho   2.000e+00  3.228e+03   0.001        1

Residual standard error: 91.00207 
Multiple R-squared: 0.9064313 

> coef( cesNm ) 
    gamma     delta       rho 
84.481925  2.958593  2.000000 
> vcov( cesNm ) 
             gamma       delta        rho
gamma 569351277146 43781409649 2435634498
delta  43781409649  3366662395  187294885
rho     2435634498   187294885   10420610
> coef( summary( cesNm ) )
       Estimate Std. Error      t value  Pr(>|t|)
gamma 84.481925 754553.694 1.119628e-04 0.9999107
delta  2.958593  58022.947 5.099006e-05 0.9999593
rho    2.000000   3228.097 6.195601e-04 0.9995057
> 
> ## Nelder-Mead, VRS
> cesNmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead" )
> print.default( cesNmVrs )
$optim
$optim$par
    gamma     delta        nu 
1.5303673 0.7174523 1.5625053 

$optim$value
[1] 50203.6

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1009.037 1094.607 1118.345 1174.723 1168.433 1193.016 1242.378 1219.037
 [9] 1173.534 1224.386 1293.436 1534.487 1645.051 1698.811 1592.155 1588.728
[17] 1649.866 1727.596 1882.312 2046.168

$residuals
 [1]  -62.904221 -131.876587  -48.765589   -2.926923    9.682748   -7.205877
 [7]   -3.020195   69.523919   34.172481   54.022206   67.156645    6.296741
[13]  -70.015959   -2.851106   52.533855   37.303266    5.173364   28.003532
[19]    5.108579  -54.273530

$rss
[1] 50203.6

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0998602669  2.549692e-02 -4.029273e-02 -1.085427e-04
delta  0.0254969174  6.527913e-03 -1.032316e-02 -2.014954e-05
rho   -0.0402927323 -1.032316e-02  1.632862e-02  2.918040e-05
nu    -0.0001085427 -2.014954e-05  2.918040e-05  3.450127e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.5304  0.7175 -0.1000  1.5625 

> summary( cesNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.53037   15.83247   0.097    0.923    
delta  0.71745    4.04799   0.177    0.859    
rho   -0.10000    6.40217  -0.016    0.988    
nu     1.56251    0.09306  16.790   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.1017 
Multiple R-squared: 0.9716383 

> coef( cesNmVrs )
     gamma      delta        rho         nu 
 1.5303673  0.7174523 -0.1000000  1.5625053 
> vcov( cesNmVrs )
             gamma        delta           rho           nu
gamma  250.6672495  64.00185344 -101.14201264 -0.272461680
delta   64.0018534  16.38623711  -25.91298592 -0.050578961
rho   -101.1420126 -25.91298592   40.98778555  0.073248070
nu      -0.2724617  -0.05057896    0.07324807  0.008660441
> coef( summary( cesNmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.5303673 15.83247452  0.09666002 9.229964e-01
delta  0.7174523  4.04799174  0.17723660 8.593225e-01
rho   -0.1000000  6.40217038 -0.01561970 9.875378e-01
nu     1.5625053  0.09306149 16.79003135 2.886924e-63
> 
> ## Nelder-Mead, TC, VRS
> cesNmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    vrs = TRUE, rho = -0.4, method = "Nelder-Mead" )
> print.default( cesNmTcVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
9.46273064 0.02024909 0.61705684 0.94230811 

$optim$value
[1] 19156.69

$optim$counts
function gradient 
     501       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 9.46273064  0.02024909  0.61705684 -0.40000000  0.94230811 

$iter
[1] 501

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.7823 1023.2076 1051.6761 1128.5308 1144.2890 1183.0571 1236.4060
 [8] 1231.0097 1235.0431 1284.0591 1365.0780 1543.9427 1648.8287 1694.4525
[15] 1632.2507 1644.4965 1676.4293 1735.8369 1853.3693 1987.4615

$residuals
 [1]   7.350709 -60.477156  17.903110  43.265640  33.827071   2.752865
 [7]   2.951867  57.551170 -27.336879  -5.650630  -4.485379  -3.158616
[13] -73.794042   1.506857  12.438407 -18.465337 -21.389414  19.762885
[19]  34.050923   4.432479

$rss
[1] 19156.69

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   6.8850471473  1.301673e-04  4.657933e-01 -6.367464e-01 -5.288243e-03
lambda  0.0001301673  1.310891e-08  7.945057e-06 -1.123532e-05 -4.620678e-07
delta   0.4657933186  7.945057e-06  3.163971e-02 -4.323644e-02 -3.146042e-04
rho    -0.6367464406 -1.123532e-05 -4.323644e-02  5.910390e-02  4.399826e-04
nu     -0.0052882435 -4.620678e-07 -3.146042e-04  4.399826e-04  1.986404e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 9.46273  0.02025  0.61706 -0.40000  0.94231 

> summary( cesNmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "Nelder-Mead", rho = -0.4)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 501 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.462731  81.207980   0.117    0.907    
lambda  0.020249   0.003543   5.714  1.1e-08 ***
delta   0.617057   5.505053   0.112    0.911    
rho    -0.400000   7.524079  -0.053    0.958    
nu      0.942308   0.137936   6.831  8.4e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.9489 
Multiple R-squared: 0.9891777 

> 
> ## Nelder-Mead, multErr, VRS
> cesNmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE, rho = -0.1,
+    method = "Nelder-Mead", multErr = TRUE )
> print.default( cesNmMeVrs )
$optim
$optim$par
    gamma     delta        nu 
0.6320853 0.6585930 1.6884604 

$optim$value
[1] 0.03280247

$optim$counts
function gradient 
     416       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 0.6320853  0.6585930 -0.1000000  1.6884604 

$iter
[1] 416

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

$method
[1] "Nelder-Mead"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.1806 1076.4851 1099.5688 1167.7743 1159.7796 1186.3761 1239.2582
 [8] 1208.6715 1162.3582 1214.0103 1291.6182 1553.4891 1676.7967 1728.7846
[15] 1601.5476 1591.4764 1644.0091 1719.8211 1882.5106 2059.6606

$residuals
 [1] -0.0353536573 -0.1116830178 -0.0276528541  0.0034383653  0.0156865804
 [6] -0.0004772690  0.0000803577  0.0640042020  0.0382719439  0.0516867928
[11]  0.0520244976 -0.0082119872 -0.0626079380 -0.0191700512  0.0265809740
[16]  0.0214800371  0.0066872621  0.0205902803  0.0026046203 -0.0334552491

$rss
[1] 0.03280247

$cov.unscaled
            gamma        delta          rho          nu
gamma  40747.8559  23490.34019 -33375.88535 -133.447198
delta  23490.3402  13572.83957 -19296.45178  -63.556412
rho   -33375.8854 -19296.45178  27439.86509   86.073466
nu      -133.4472    -63.55641     86.07347    6.539542

attr(,"class")
[1] "cesEst" "list"  
> print( cesNmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 0.6321  0.6586 -0.1000  1.6885 

> summary( cesNmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Nelder-Mead", multErr = TRUE, rho = -0.1)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 416 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6321     8.1751   0.077    0.938    
delta   0.6586     4.7182   0.140    0.889    
rho    -0.1000     6.7086  -0.015    0.988    
nu      1.6885     0.1036  16.303   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.04049844 
Multiple R-squared: 0.963771 

> vcov( cesNmMeVrs )
            gamma       delta         rho          nu
gamma  66.8315247  38.5270640 -54.7405811 -0.21886991
delta  38.5270640  22.2611360 -31.6485682 -0.10424038
rho   -54.7405811 -31.6485682  45.0047734  0.14117113
nu     -0.2188699  -0.1042404   0.1411711  0.01072566
> 
> ## Conjugate Gradients, CRS
> cesCg <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", rho = 2 )
> print.default( cesCg )
$optim
$optim$par
     gamma      delta 
34.5396489  0.4930429 

$optim$value
[1] 166153.1

$optim$counts
function gradient 
     754      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 

$iter
function gradient 
     754      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.407
 [9] 1237.616 1281.315 1315.772 1468.139 1529.112 1582.098 1549.008 1566.589
[17] 1647.888 1722.388 1832.822 1934.988

$residuals
 [1] -203.864954 -226.691326 -143.889756  -52.609858  -46.272367  -54.310192
 [7]  -34.182586   12.154223  -29.909801   -2.906846   44.820825   72.645586
[13]   45.922856  113.861517   95.680850   59.442105    7.152052   33.212040
[19]   54.598040   56.905969

$rss
[1] 166153.1

$cov.unscaled
           gamma     delta         rho
gamma 234706.966 8637.0131 -11138.7886
delta   8637.013  317.8370   -409.9119
rho   -11138.789 -409.9119    528.7098

attr(,"class")
[1] "cesEst" "list"  
> print( cesCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

> summary( cesCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "CG", rho = 2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 754 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.540  44157.276   0.001        1
delta     0.493   1624.956   0.000        1
rho       2.000   2095.791   0.001        1

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

> coef( cesCg )
     gamma      delta        rho 
34.5396489  0.4930429  2.0000000 
> vcov( cesCg )
           gamma    delta       rho
gamma 1949864992 71753343 -92537236
delta   71753343  2640481  -3405407
rho    -92537236 -3405407   4392340
> coef( summary( cesCg ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5396489  44157.276 0.0007821961 0.9993759
delta  0.4930429   1624.956 0.0003034193 0.9997579
rho    2.0000000   2095.791 0.0009542936 0.9992386
> 
> ## Conjugate Gradients, TC, CRS
> cesCgTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "CG", rho = 0.2 )
> print.default( cesCgTc )
$optim
$optim$par
      gamma      lambda       delta 
10.81059812  0.01390654  0.49593039 

$optim$value
[1] 24727.63

$optim$counts
function gradient 
     709      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho 
10.81059812  0.01390654  0.49593039  0.20000000 

$iter
function gradient 
     709      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
10.81051  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.2

$fitted.values
 [1]  989.5014 1056.8814 1086.5674 1136.6414 1148.6832 1180.3811 1228.3889
 [8] 1230.8275 1217.9430 1269.1065 1332.7201 1507.5766 1598.1968 1654.5748
[15] 1609.6799 1629.8635 1692.3816 1766.6578 1892.0041 2023.7088

$residuals
 [1] -43.368408 -94.150906 -16.988248  35.155036  29.432829   5.428949
 [7]  10.968911  57.733399 -10.236834   9.301984  27.872560  33.207537
[13] -23.162159  41.384636  35.009228  -3.832395 -37.341743 -11.057972
[19]  -4.583874 -31.814817

$rss
[1] 24729.24

$cov.unscaled
               gamma        lambda         delta           rho
gamma   6.480681e+00  5.215003e-06  3.912553e-01 -5.028534e-01
lambda  5.215003e-06  2.287430e-09  4.340670e-07 -6.878850e-07
delta   3.912553e-01  4.340670e-07  2.362960e-02 -3.037925e-02
rho    -5.028534e-01 -6.878850e-07 -3.037925e-02  3.906814e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Coefficients:
   gamma   lambda    delta      rho 
10.81060  0.01391  0.49593  0.20000 

> summary( cesCgTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "CG", rho = 0.2)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.2 
Convergence NOT achieved after 709 function and 101 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  10.810598  89.516013   0.121    0.904    
lambda  0.013907   0.001682   8.269   <2e-16 ***
delta   0.495930   5.405285   0.092    0.927    
rho     0.200000   6.950271   0.029    0.977    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 35.16336 
Multiple R-squared: 0.9860296 

> 
> ## Conjugate Gradients, VRS
> cesCgVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,
+    rho = -0.1 )
Warning message:
In cesEst("qOutput", xxNames, germanFarms, method = "CG", vrs = TRUE,  :
  internal problem: the minimum of the objective function returned by the solver (203705.13978051) is not equal to the RSS calculated from the residuals (204528.553498924)
> print.default( cesCgVrs )
$optim
$optim$par
    gamma     delta        nu 
8.8515065 0.6795295 1.1311791 

$optim$value
[1] 203705.1

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1122.963 1194.112 1211.767 1259.536 1254.068 1273.210 1311.019 1290.616
 [9] 1256.670 1294.531 1348.553 1526.113 1605.787 1640.599 1561.032 1555.905
[17] 1593.248 1643.907 1747.473 1856.112

$residuals
 [1] -176.829703 -231.381442 -142.187837  -87.739686  -75.951626  -87.400098
 [7]  -71.661405   -2.055216  -48.963358  -16.122749   12.039515   14.670692
[13]  -30.752517   55.360099   83.657602   70.126526   61.791979  111.692557
[19]  139.947236  135.782096

$rss
[1] 204528.6

$cov.unscaled
             gamma         delta           rho            nu
gamma  3.501241530  2.150759e-01 -3.162004e-01 -6.611720e-04
delta  0.215075883  1.324607e-02 -1.948673e-02 -3.042148e-05
rho   -0.316200438 -1.948673e-02  2.867386e-02  4.146114e-05
nu    -0.000661172 -3.042148e-05  4.146114e-05  3.295931e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.8515  0.6795 -0.1000  1.1312 

> summary( cesCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "CG", rho = -0.1)

Estimation by non-linear least-squares using the 'CG' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.8515   189.2226   0.047    0.963    
delta   0.6795    11.6387   0.058    0.953    
rho    -0.1000    17.1240  -0.006    0.995    
nu      1.1312     0.1836   6.161 7.21e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 101.1258 
Multiple R-squared: 0.8844548 

> coef( cesCgVrs )
     gamma      delta        rho         nu 
 8.8515065  0.6795295 -0.1000000  1.1311791 
> vcov( cesCgVrs )
             gamma        delta           rho          nu
gamma 35805.193280 2199.4579639 -3233.6009115 -6.76142814
delta  2199.457964  135.4599782  -199.2795894 -0.31110311
rho   -3233.600912 -199.2795894   293.2311184  0.42399932
nu       -6.761428   -0.3111031     0.4239993  0.03370560
> coef( summary( cesCgVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  8.8515065 189.2226025  0.04677827 9.626899e-01
delta  0.6795295  11.6387275  0.05838520 9.534418e-01
rho   -0.1000000  17.1239925 -0.00583976 9.953406e-01
nu     1.1311791   0.1835908  6.16141365 7.209838e-10
> 
> ## Simulated Annealing, CRS
> cesSann <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", rho = 2 )
> print.default( cesSann )
$optim
$optim$par
     gamma      delta 
35.9750345  0.5349214 

$optim$value
[1] 166103.7

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1150.108 1189.519 1213.574 1224.493 1224.478 1240.210 1273.633 1276.512
 [9] 1237.713 1281.422 1315.874 1468.252 1529.226 1582.232 1549.164 1566.764
[17] 1648.114 1722.652 1833.119 1935.303

$residuals
 [1] -203.974896 -226.788429 -143.994408  -52.696204  -46.361476  -54.399985
 [7]  -34.275346   12.048473  -30.006594   -3.013969   44.718858   72.531607
[13]   45.808175  113.727771   95.525235   59.267615    6.926282   32.948212
[19]   54.301735   56.591233

$rss
[1] 166103.7

$cov.unscaled
          gamma      delta        rho
gamma 305442.43 11589.3086 -15016.660
delta  11589.31   439.7326   -569.791
rho   -15016.66  -569.7910    738.386

attr(,"class")
[1] "cesEst" "list"  
> print( cesSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Coefficients:
  gamma   delta     rho 
35.9750  0.5349  2.0000 

> summary( cesSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "SANN", rho = 2)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 3.598e+01  5.037e+04   0.001        1
delta 5.349e-01  1.911e+03   0.000        1
rho   2.000e+00  2.476e+03   0.001        1

Residual standard error: 91.1328 
Multiple R-squared: 0.9061623 

> coef( cesSann )
     gamma      delta        rho 
35.9750345  0.5349214  2.0000000 
> vcov( cesSann )
           gamma    delta        rho
gamma 2536756674 96251380 -124716172
delta   96251380  3652062   -4732221
rho   -124716172 -4732221    6132434
> coef( summary( cesSann ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 35.9750345  50366.226 0.0007142690 0.9994301
delta  0.5349214   1911.037 0.0002799116 0.9997767
rho    2.0000000   2476.375 0.0008076321 0.9993556
> 
> ## Simulated Annealing, TC, CRS
> cesSannTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "SANN", rho = 0 )
> print.default( cesSannTc )
$optim
$optim$par
     gamma     lambda      delta 
8.54857873 0.01547997 0.50607610 

$optim$value
[1] 19128.29

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho 
8.54857873 0.01547997 0.50607610 0.00000000 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
8.455537 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  971.8813 1047.6385 1075.9469 1137.9544 1150.1649 1184.0424 1233.8051
 [8] 1230.7774 1223.1290 1272.5063 1343.1881 1521.6833 1618.2881 1668.5988
[15] 1612.2827 1626.6476 1673.8201 1739.8356 1860.9029 1992.9330

$residuals
 [1] -25.7483028 -84.9080648  -6.3677766  33.8421117  27.9511578   1.7675765
 [7]   5.5527490  57.7835621 -15.4228233   5.9022469  17.4045573  19.1007672
[13] -43.2534432  27.3606225  32.4063672  -0.6164541 -18.7802575  15.7641813
[19]  26.5173178  -1.0389470

$rss
[1] 19128.29

$cov.unscaled
               gamma        lambda         delta           rho
gamma   3.500017e+00  4.001765e-06  2.634223e-01 -3.385170e-01
lambda  4.001765e-06  2.308531e-09  4.150659e-07 -6.527719e-07
delta   2.634223e-01  4.150659e-07  1.983370e-02 -2.549625e-02
rho    -3.385170e-01 -6.527719e-07 -2.549625e-02  3.278491e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
8.54858 0.01548 0.50608 0.00000 

> summary( cesSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "SANN", rho = 0)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.548579  57.857289   0.148    0.883    
lambda  0.015480   0.001486  10.418   <2e-16 ***
delta   0.506076   4.355368   0.116    0.907    
rho     0.000000   5.599639   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.92595 
Multiple R-squared: 0.9891938 

> 
> ## Simulated Annealing, VRS
> cesSannVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "SANN", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesSannVrs )
$optim
$optim$par
    gamma     delta        nu 
8.7693309 0.8783289 1.3340988 

$optim$value
[1] 70750.63

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1063.412 1124.750 1150.808 1180.631 1178.165 1198.808 1241.617 1234.555
 [9] 1189.434 1240.116 1291.485 1494.589 1581.636 1641.728 1576.575 1588.316
[17] 1672.413 1758.387 1902.093 2043.834

$residuals
 [1] -117.27868333 -162.01943218  -81.22885081   -8.83433184   -0.04859453
 [6]  -12.99840388   -2.25907866   54.00629931   18.27206874   38.29291875
[11]   69.10748044   46.19467942   -6.60086308   54.23119520   68.11389876
[16]   37.71489156  -17.37266777   -2.78762559  -14.67269187  -51.93980310

$rss
[1] 70750.63

$cov.unscaled
              gamma         delta           rho            nu
gamma  2.8326439396  1.424502e-01 -4.266764e-01 -6.305057e-04
delta  0.1424502193  7.184148e-03 -2.153664e-02 -2.362488e-05
rho   -0.4266763728 -2.153664e-02  6.458166e-02  6.422393e-05
nu    -0.0006305057 -2.362488e-05  6.422393e-05  3.464149e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 8.7693  0.8783 -0.1000  1.3341 

> summary( cesSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = -0.1)

Estimation by non-linear least-squares using the 'SANN' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   8.7693   100.1028   0.088    0.930    
delta   0.8783     5.0412   0.174    0.862    
rho    -0.1000    15.1149  -0.007    0.995    
nu      1.3341     0.1107  12.051   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 59.47715 
Multiple R-squared: 0.9600305 

> coef( cesSannVrs )
     gamma      delta        rho         nu 
 8.7693309  0.8783289 -0.1000000  1.3340988 
> vcov( cesSannVrs )
             gamma        delta           rho          nu
gamma 10020.567489 503.92215423 -1509.3811578 -2.23043400
delta   503.922154  25.41415176   -76.1865494 -0.08357375
rho   -1509.381158 -76.18654937   228.4596801  0.22719420
nu       -2.230434  -0.08357375     0.2271942  0.01225454
> coef( summary( cesSannVrs ) )
        Estimate  Std. Error      t value     Pr(>|t|)
gamma  8.7693309 100.1027846  0.087603267 9.301920e-01
delta  0.8783289   5.0412451  0.174228568 8.616858e-01
rho   -0.1000000  15.1148827 -0.006615996 9.947212e-01
nu     1.3340988   0.1107002 12.051456311 1.905532e-33
> 
> ## BFGS, CRS
> cesBfgs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", rho = 2 )
> print.default( cesBfgs )
$optim
$optim$par
   gamma    delta 
79.50010  2.62027 

$optim$value
[1] 165640.8

$optim$counts
function gradient 
     368      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
   gamma    delta      rho 
79.50010  2.62027  2.00000 

$iter
function gradient 
     368      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.868 1189.115 1213.214 1223.949 1223.960 1239.681 1273.095 1276.093
 [9] 1237.253 1281.011 1315.376 1467.699 1528.612 1581.737 1548.912 1566.669
[17] 1648.411 1723.225 1833.875 1936.119

$residuals
 [1] -203.735069 -226.384387 -143.634653  -52.152455  -45.843690  -53.871219
 [7]  -33.737465   12.467554  -29.546322   -2.602356   45.217009   73.085530
[13]   46.422961  114.222145   95.777552   59.362015    6.628539   32.374947
[19]   53.545231   55.774537

$rss
[1] 165640.8

$cov.unscaled
           gamma      delta        rho
gamma 47098357.1 3433239.66 260688.533
delta  3433239.7  250266.62  19003.125
rho     260688.5   19003.13   1443.072

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Coefficients:
 gamma  delta    rho 
79.500  2.620  2.000 

> summary( cesBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "BFGS", rho = 2)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 368 function and 100 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma     79.50  624556.31   0.000        1
delta      2.62   45527.12   0.000        1
rho        2.00    3457.11   0.001        1

Residual standard error: 91.00573 
Multiple R-squared: 0.9064238 

> coef( cesBfgs )
   gamma    delta      rho 
79.50010  2.62027  2.00000 
> vcov( cesBfgs )
             gamma       delta        rho
gamma 390070579073 28434235642 2159033422
delta  28434235642  2072718732  157384686
rho     2159033422   157384686   11951583
> coef( summary( cesBfgs ) )
      Estimate Std. Error      t value  Pr(>|t|)
gamma 79.50010 624556.306 1.272905e-04 0.9998984
delta  2.62027  45527.121 5.755405e-05 0.9999541
rho    2.00000   3457.106 5.785185e-04 0.9995384
> 
> ## BFGS, VRS
> cesBfgsVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "BFGS", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesBfgsVrs )
$optim
$optim$par
    gamma     delta        nu 
1.3490506 0.7070137 1.5786234 

$optim$value
[1] 50055.11

$optim$counts
function gradient 
     565      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 1.3490506  0.7070137 -0.1000000  1.5786234 

$iter
function gradient 
     565      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1005.354 1092.588 1116.158 1174.413 1167.850 1192.712 1242.538 1218.032
 [9] 1172.509 1223.366 1293.674 1537.462 1649.756 1703.024 1593.323 1588.792
[17] 1648.262 1725.380 1880.833 2046.231

$residuals
 [1]  -59.220920 -129.857045  -46.579254   -2.617012   10.265978   -6.901556
 [7]   -3.180656   70.528511   35.197021   55.042794   66.918546    3.322500
[13]  -74.721144   -7.064593   51.366577   37.239441    6.778133   30.219922
[19]    6.587091  -54.337395

$rss
[1] 50055.11

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.831117e-02  2.250345e-02 -3.480309e-02 -9.553316e-05
delta  2.250345e-02  6.484294e-03 -1.003521e-02 -1.992437e-05
rho   -3.480309e-02 -1.003521e-02  1.553414e-02  2.825631e-05
nu    -9.553316e-05 -1.992437e-05  2.825631e-05  3.448618e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Coefficients:
 gamma  delta    rho     nu 
 1.349  0.707 -0.100  1.579 

> summary( cesBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = -0.1)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 565 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.3491    13.9998   0.096    0.923    
delta   0.7070     4.0285   0.176    0.861    
rho    -0.1000     6.2352  -0.016    0.987    
nu      1.5786     0.0929  16.992   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02755 
Multiple R-squared: 0.9717221 

> coef( cesBfgsVrs )
     gamma      delta        rho         nu 
 1.3490506  0.7070137 -0.1000000  1.5786234 
> vcov( cesBfgsVrs )
            gamma        delta          rho           nu
gamma 195.9937174  56.32063230 -87.10362955 -0.239096152
delta  56.3206323  16.22860242 -25.11567399 -0.049865839
rho   -87.1036295 -25.11567399  38.87815841  0.070718650
nu     -0.2390962  -0.04986584   0.07071865  0.008631048
> coef( summary( cesBfgsVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.3490506 13.99977562  0.09636230 9.232328e-01
delta  0.7070137  4.02847396  0.17550411 8.606835e-01
rho   -0.1000000  6.23523523 -0.01603789 9.872042e-01
nu     1.5786234  0.09290343 16.99208863 9.398215e-65
> 
> ## BFGS, TC, VRS
> cesBfgsTcVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4 )
> print.default( cesBfgsTcVrs )
$optim
$optim$par
      gamma      lambda       delta          nu 
15.23730625  0.01902593  0.71799934  0.91415071 

$optim$value
[1] 17026.61

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
15.23730625  0.01902593  0.71799934 -0.40000000  0.91415071 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957.1373 1034.6487 1063.7367 1131.4010 1147.0798 1183.8508 1235.0587
 [8] 1233.8992 1234.8562 1284.2276 1358.7341 1530.2612 1628.3017 1677.1233
[15] 1625.4566 1642.0430 1684.3828 1748.4858 1865.9297 1995.9954

$residuals
 [1] -11.004259 -71.918185   5.842426  40.395463  31.036274   1.959211
 [7]   4.299147  54.661696 -27.149983  -5.819089   1.858495  10.522865
[13] -53.267026  18.836076  19.232509 -16.011852 -29.342889   7.114018
[19]  21.490549  -4.101358

$rss
[1] 17026.61

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma  12.4401303269  1.754550e-04  4.886806e-01 -7.783367e-01 -7.242974e-03
lambda  0.0001754550  1.298587e-08  6.108029e-06 -1.001055e-05 -4.604104e-07
delta   0.4886806344  6.108029e-06  1.930174e-02 -3.073543e-02 -2.453345e-04
rho    -0.7783366583 -1.001055e-05 -3.073543e-02  4.895647e-02  3.972359e-04
nu     -0.0072429743 -4.604104e-07 -2.453345e-04  3.972359e-04  1.990237e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
15.23731  0.01903  0.71800 -0.40000  0.91415 

> summary( cesBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.4 
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   15.237306 102.910940   0.148    0.882    
lambda   0.019026   0.003325   5.722 1.05e-08 ***
delta    0.717999   4.053660   0.177    0.859    
rho     -0.400000   6.455860  -0.062    0.951    
nu       0.914151   0.130167   7.023 2.17e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.17757 
Multiple R-squared: 0.990381 

> 
> ## BFGS, TC, multErr, VRS
> cesBfgsTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", 
+    data = germanFarms, method = "BFGS", vrs = TRUE, rho = -0.4,
+    multErr = TRUE )
Warning message:
In log(yHat) : NaNs produced
> print.default( cesBfgsTcMeVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
3.39834128 0.01492379 0.67020248 1.19796460 

$optim$value
[1] 0.01443339

$optim$counts
function gradient 
     231      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
 3.39834128  0.01492379  0.67020248 -0.40000000  1.19796460 

$iter
function gradient 
     231      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
1.659179 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  938.3535 1032.2872 1058.6071 1140.9418 1149.4239 1186.1376 1241.1885
 [8] 1224.1084 1214.5904 1264.1445 1349.6623 1561.4328 1678.1142 1722.7472
[15] 1630.9573 1632.5113 1662.8602 1724.0864 1856.1553 2007.0090

$residuals
 [1]  0.0082563574 -0.0697586577  0.0103112975  0.0266839816  0.0246557290
 [6] -0.0002762344 -0.0014759901  0.0513132507 -0.0056840564  0.0112203289
[11]  0.0080659422 -0.0133124162 -0.0633933759 -0.0156716117  0.0083842126
[16] -0.0039773444 -0.0047140614  0.0181132666  0.0167036264 -0.0075595983

$rss
[1] 0.01443339

$cov.unscaled
               gamma      lambda         delta           rho            nu
gamma  1513947.45347 53.02908420 213667.991152 -310257.59175 -2883.7166957
lambda      53.02908  0.02009633      6.160347      -9.33699    -0.8061152
delta   213667.99115  6.16034683  30309.131777  -44000.78017  -337.6718872
rho    -310257.59175 -9.33698953 -44000.780168   63896.25400   500.8649624
nu       -2883.71670 -0.80611521   -337.671887     500.86496    38.8744560

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Coefficients:
   gamma   lambda    delta      rho       nu 
 3.39834  0.01492  0.67020 -0.40000  1.19796 

> summary( cesBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = -0.4)

Estimation by non-linear least-squares using the 'BFGS' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.4 
Convergence NOT achieved after 231 function and 100 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   3.398341  33.054047   0.103    0.918    
lambda  0.014924   0.003808   3.919 8.90e-05 ***
delta   0.670202   4.676877   0.143    0.886    
rho    -0.400000   6.790581  -0.059    0.953    
nu      1.197965   0.167495   7.152 8.54e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02686391 
Multiple R-squared: 0.984059 

> 
> ## L-BFGS-B with constrained parameters, CRS
> cesBfgsCon <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    rho = 2 )
> print.default( cesBfgsCon )
$optim
$optim$par
   gamma    delta 
49.14295  1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      55       55 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
function gradient 
      55       55 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  3.250869e+02  1.325451e+01 -5.896876e+12
delta  1.325451e+01  5.404160e-01 -2.402258e+11
rho   -5.896876e+12 -2.402258e+11  1.508225e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

> summary( cesBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "L-BFGS-B", rho = 2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 55 function and 55 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.642e+03   0.030    0.976
delta 1.000e+00  6.694e+01   0.015    0.988
rho   2.000e+00  1.118e+14   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesBfgsCon )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesBfgsCon )
              gamma         delta           rho
gamma  2.695496e+06  1.099014e+05 -4.889464e+16
delta  1.099014e+05  4.480923e+03 -1.991860e+15
rho   -4.889464e+16 -1.991860e+15  1.250563e+28
> coef( summary( cesBfgsCon ) )
      Estimate   Std. Error      t value Pr(>|t|)
gamma 49.14295 1.641797e+03 2.993242e-02 0.976121
delta  1.00000 6.693970e+01 1.493882e-02 0.988081
rho    2.00000 1.118286e+14 1.788452e-14 1.000000
> 
> ## L-BFGS-B with constrained parameters, TC, CRS
> cesBfgsConTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 1.2 )
> print.default( cesBfgsConTc )
$optim
$optim$par
       gamma       lambda        delta 
23.444972741  0.008565996  0.454640378 

$optim$value
[1] 66746.14

$optim$counts
function gradient 
      15       15 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
       gamma       lambda        delta          rho 
23.444972741  0.008565996  0.454640378  1.200000000 

$iter
function gradient 
      15       15 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
23.44378  0.01500  0.50000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 1.2

$fitted.values
 [1] 1044.011 1090.441 1121.592 1143.087 1152.659 1177.554 1219.642 1231.767
 [9] 1205.117 1257.785 1303.445 1466.877 1541.318 1607.044 1584.757 1615.050
[17] 1709.978 1800.455 1931.170 2056.209

$residuals
 [1]  -97.878492 -127.710092  -52.012776   28.709405   25.457194    8.256459
 [7]   19.716074   56.793991    2.589161   20.623998   57.147578   73.906796
[13]   33.717077   88.915502   59.931853   10.981138  -54.937839  -44.855063
[19]  -43.749798  -64.315428

$rss
[1] 66746.14

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.235249e+03  1.338288e-04  4.593388e+01 -5.969757e+01
lambda  1.338288e-04  2.221134e-09  5.428938e-06 -8.128525e-06
delta   4.593388e+01  5.428938e-06  1.708229e+00 -2.220413e+00
rho    -5.969757e+01 -8.128525e-06 -2.220413e+00  2.886959e+00

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Coefficients:
    gamma    lambda     delta       rho 
23.444973  0.008566  0.454640  1.200000 

> summary( cesBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = 1.2)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 1.2 
Convergence achieved after 15 function and 15 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)   
gamma  2.344e+01  2.030e+03   0.012  0.99079   
lambda 8.566e-03  2.723e-03   3.146  0.00165 **
delta  4.546e-01  7.550e+01   0.006  0.99520   
rho    1.200e+00  9.816e+01   0.012  0.99025   
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 57.76943 
Multiple R-squared: 0.9622928 

> 
> ## L-BFGS-B with constrained parameters, VRS
> cesBfgsConVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "L-BFGS-B",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesBfgsConVrs )
$optim
$optim$par
    gamma     delta        nu 
1.2919605 0.7035411 1.5842276 

$optim$value
[1] 50044.76

$optim$counts
function gradient 
     140      140 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma      delta        rho         nu 
 1.2919605  0.7035411 -0.1000000  1.5842276 

$iter
function gradient 
     140      140 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935768 -129.134856  -45.803144   -2.474901   10.500375   -6.762992
 [7]   -3.202812   70.899604   35.578998   55.418745   66.865223    2.321858
[13]  -76.318912   -8.503766   50.966645   37.210747    7.301702   30.938300
[19]    7.036086  -54.431195

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0720414194  2.155691e-02 -3.311182e-02 -9.144050e-05
delta  0.0215569062  6.468114e-03 -9.941866e-03 -1.984659e-05
rho   -0.0331118204 -9.941866e-03  1.528462e-02  2.795986e-05
nu    -0.0000914405 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

> summary( cesBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = -0.1)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 140 function and 140 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42627   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

> coef( cesBfgsConVrs )
     gamma      delta        rho         nu 
 1.2919605  0.7035411 -0.1000000  1.5842276 
> vcov( cesBfgsConVrs )
            gamma       delta          rho          nu
gamma 180.2647794  53.9405105 -82.85365634 -0.22880589
delta  53.9405105  16.1847614 -24.87691513 -0.04966090
rho   -82.8536563 -24.8769151  38.24576394  0.06996221
nu     -0.2288059  -0.0496609   0.06996221  0.00862821
> coef( summary( cesBfgsConVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919605 13.42627198  0.09622630 9.233408e-01
delta  0.7035411  4.02302888  0.17487847 8.611751e-01
rho   -0.1000000  6.18431596 -0.01616994 9.870988e-01
nu     1.5842276  0.09288816 17.05521624 3.196877e-65
> 
> ## L-BFGS-B with constrained parameters, TC, multErr, CRS
> cesBfgsConTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "L-BFGS-B", rho = 0, multErr = TRUE )
> print.default( cesBfgsConTcMe )
$optim
$optim$par
     gamma     lambda      delta 
5.85361392 0.01805526 0.39490154 

$optim$value
[1] 0.01176297

$optim$counts
function gradient 
      61       61 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
     gamma     lambda      delta        rho 
5.85361392 0.01805526 0.39490154 0.00000000 

$iter
function gradient 
      61       61 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

$method
[1] "L-BFGS-B"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.132777 0.015000 0.500000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] 0

$fitted.values
 [1]  949.008 1031.631 1060.122 1132.153 1146.012 1183.018 1235.664 1230.190
 [9] 1228.233 1278.047 1356.198 1540.286 1644.292 1692.533 1629.039 1641.141
[17] 1678.800 1741.215 1862.811 1999.587

$residuals
 [1] -0.0030339779 -0.0691231633  0.0088810160  0.0344166990  0.0276288514
 [6]  0.0023573836  0.0029848444  0.0463571583 -0.0168536061  0.0002828528
[11]  0.0032351797  0.0003230963 -0.0430328403  0.0020224433  0.0095609505
[16] -0.0092497824 -0.0142544461  0.0082273778  0.0131242562 -0.0038549016

$rss
[1] 0.01176297

$cov.unscaled
               gamma        lambda         delta           rho
gamma  3624858.69704 -11.786529803 396648.969204 -5.310814e+05
lambda     -11.78653   0.003380629     -1.114713  1.294947e+00
delta   396648.96920  -1.114713351  43418.058810 -5.815104e+04
rho    -531081.35770   1.294946501 -58151.035809  7.790454e+04

attr(,"class")
[1] "cesEst" "list"  
> print( cesBfgsConTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Coefficients:
  gamma  lambda   delta     rho 
5.85361 0.01806 0.39490 0.00000 

> summary( cesBfgsConTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "L-BFGS-B", multErr = TRUE, rho = 0)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 61 function and 61 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   5.85361   46.17310   0.127    0.899    
lambda  0.01806    0.00141  12.804   <2e-16 ***
delta   0.39490    5.05334   0.078    0.938    
rho     0.00000    6.76901   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02425177 
Multiple R-squared: 0.9870083 

> 
> ## Levenberg-Marquardt, CRS
> cesLm <- cesEst( "qOutput", xxNames, germanFarms,
+    control = nls.lm.control( maxiter = 200 ), rho = 2 )
Warning message:
In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 200.

> print.default( cesLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 424.32931322957, 74.692348716573 
residual sum-of-squares: 165527
reason terminated: Number of iterations has reached `maxiter' == 200.

$coefficients
    gamma     delta       rho 
424.32931  74.69235   2.00000 

$iter
[1] 200

$convergence
[1] FALSE

$message
[1] "Number of iterations has reached `maxiter' == 200."

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.900 1189.109 1213.221 1223.911 1223.928 1239.648 1273.063 1276.090
 [9] 1237.236 1281.010 1315.356 1467.677 1528.580 1581.740 1548.971 1566.770
[17] 1648.616 1723.504 1834.208 1936.476

$residuals
 [1] -203.76652 -226.37818 -143.64134  -52.11434  -45.81202  -53.83807
 [7]  -33.70469   12.47061  -29.52997   -2.60154   45.23658   73.10689
[13]   46.45461  114.21971   95.71762   59.26146    6.42405   32.09601
[19]   53.21195   55.41819

$rss
[1] 165527.2

$cov.unscaled
             gamma        delta          rho
gamma 1.260255e+12 447895366222 2.623230e+07
delta 4.478954e+11 159182246904 9.322980e+06
rho   2.623230e+07      9322980 5.460812e+02

attr(,"class")
[1] "cesEst" "list"  
> print( cesLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Coefficients:
 gamma  delta    rho 
424.33  74.69   2.00 

> summary( cesLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    rho = 2, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence NOT achieved after 200 iterations
Message: Number of iterations has reached `maxiter' == 200. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.243e+02  1.021e+08   0.000        1
delta 7.469e+01  3.630e+07   0.000        1
rho   2.000e+00  2.126e+03   0.001        1

Residual standard error: 90.97451 
Multiple R-squared: 0.906488 

> coef( cesLm )
    gamma     delta       rho 
424.32931  74.69235   2.00000 
> vcov( cesLm )
             gamma        delta          rho
gamma 1.043033e+16 3.706944e+15 217107972010
delta 3.706944e+15 1.317450e+15  77160357891
rho   2.171080e+11 7.716036e+10      4519565
> coef( summary( cesLm ) )
       Estimate   Std. Error      t value  Pr(>|t|)
gamma 424.32931 1.021290e+08 4.154838e-06 0.9999967
delta  74.69235 3.629669e+07 2.057828e-06 0.9999984
rho     2.00000 2.125927e+03 9.407661e-04 0.9992494
> 
> ## Levenberg-Marquardt, VRS
> cesLmVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1 )
> print.default( cesLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 1.29196188463485, 0.703541220961595, 1.58422750324928 
residual sum-of-squares: 50045
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 

$iter
[1] 32

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935810 -129.134885  -45.803175   -2.474915   10.500358   -6.763007
 [7]   -3.202825   70.899582   35.578977   55.418722   66.865210    2.321864
[13]  -76.318894   -8.503755   50.966631   37.210723    7.301659   30.938249
[19]    7.036036  -54.431237

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0720415683  2.155693e-02 -3.311186e-02 -9.144059e-05
delta  0.0215569284  6.468114e-03 -9.941868e-03 -1.984659e-05
rho   -0.0331118610 -9.941868e-03  1.528463e-02  2.795986e-05
nu    -0.0000914406 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

> summary( cesLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 32 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

> coef( cesLmVrs )
     gamma      delta        rho         nu 
 1.2919619  0.7035412 -0.1000000  1.5842275 
> vcov( cesLmVrs )
            gamma       delta          rho          nu
gamma 180.2651521  53.9405661 -82.85375787 -0.22880613
delta  53.9405661  16.1847613 -24.87691987 -0.04966090
rho   -82.8537579 -24.8769199  38.24577862  0.06996223
nu     -0.2288061  -0.0496609   0.06996223  0.00862821
> coef( summary( cesLmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919619 13.42628586  0.09622631 9.233408e-01
delta  0.7035412  4.02302888  0.17487849 8.611751e-01
rho   -0.1000000  6.18431715 -0.01616993 9.870988e-01
nu     1.5842275  0.09288816 17.05521509 3.196940e-65
> 
> ## Levenberg-Marquardt, TC, VRS
> cesLmTcVrs <- cesEst( "qOutput", xxNames, tName = "time", germanFarms, 
+    vrs = TRUE, control = nls.lm.control( maxiter = 200 ), rho = 0.7 )
> print.default( cesLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 5.34979875874733, 0.0188900972833775, 0.0770802852892864, 0.919420899115952 
residual sum-of-squares: 17259
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma     lambda      delta        rho         nu 
5.34979876 0.01889010 0.07708029 0.70000000 0.91942090 

$iter
[1] 17

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
17.68019  0.01500  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.7

$fitted.values
 [1]  958.5501 1035.1919 1064.7052 1130.2362 1146.1401 1182.7350 1233.9782
 [8] 1234.1465 1234.1275 1284.2525 1357.8861 1530.0074 1627.6132 1678.2490
[15] 1627.6011 1644.3033 1685.6108 1748.0747 1864.5658 1994.6657

$residuals
 [1] -12.417147 -72.461456   4.873970  41.560247  31.975893   3.075033
 [7]   5.379631  54.414392 -26.421312  -5.844022   2.706463  10.776674
[13] -52.578529  17.710401  17.088051 -18.272137 -30.570958   7.525074
[19]  22.854485  -2.771711

$rss
[1] 17258.59

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma   0.509942270  3.903100e-05  3.367516e-02 -1.526529e-01 -1.640960e-03
lambda  0.000039031  1.296254e-08  1.956392e-06 -9.147753e-06 -4.596097e-07
delta   0.033675161  1.956392e-06  2.285792e-03 -1.035332e-02 -7.874554e-05
rho    -0.152652872 -9.147753e-06 -1.035332e-02  4.690891e-02  3.633625e-04
nu     -0.001640960 -4.596097e-07 -7.874554e-05  3.633625e-04  1.987170e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma  lambda   delta     rho      nu 
5.34980 0.01889 0.07708 0.70000 0.91942 

> summary( cesLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, rho = 0.7, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.7 
Convergence achieved after 17 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   5.349799  20.977231   0.255    0.799    
lambda  0.018890   0.003345   5.648 1.62e-08 ***
delta   0.077080   1.404449   0.055    0.956    
rho     0.700000   6.362318   0.110    0.912    
nu      0.919421   0.130950   7.021 2.20e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.37566 
Multiple R-squared: 0.99025 

> 
> ## Levenberg-Marquardt, multErr, VRS
> cesLmMeVrs <- cesEst( "qOutput", xxNames, germanFarms, vrs = TRUE,
+    control = nls.lm.control( maxiter = 200 ), rho = -0.1, multErr = TRUE )
Warning messages:
1: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
2: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
> print.default( cesLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.623563049675481, 0.657577531795485, 1.6902421018723 
residual sum-of-squares: 0.0328
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
 0.6235630  0.6575775 -0.1000000  1.6902421 

$iter
[1] 34

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

$method
[1] "LM"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
2.164717 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1]  980.0373 1076.5391 1099.6120 1168.0333 1160.0075 1186.6411 1239.5879
 [8] 1208.8691 1162.5404 1214.2078 1291.9714 1554.2150 1677.7494 1729.6993
[15] 1602.0926 1591.9000 1644.2711 1720.0411 1882.8577 2060.2266

$residuals
 [1] -0.0352074289 -0.1117331633 -0.0276921022  0.0032165918  0.0154901232
 [6] -0.0007006005 -0.0001855839  0.0638407120  0.0381152045  0.0515241382
[11]  0.0517510742 -0.0086791534 -0.0631759824 -0.0196989731  0.0262407476
[16]  0.0212138519  0.0065278919  0.0204623934  0.0024202983 -0.0337300395

$rss
[1] 0.03280093

$cov.unscaled
            gamma       delta        rho          nu
gamma  39691.2339  23174.6246 -32880.494 -131.693161
delta  23174.6246  13562.1158 -19253.781  -63.525399
rho   -32880.4938 -19253.7811  27340.236   85.914000
nu      -131.6932    -63.5254     85.914    6.539541

attr(,"class")
[1] "cesEst" "list"  
> print( cesLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Coefficients:
  gamma   delta     rho      nu 
 0.6236  0.6576 -0.1000  1.6902 

> summary( cesLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = -0.1, control = nls.lm.control(maxiter = 200))

Estimation by non-linear least-squares using the 'LM' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 34 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.6236     8.0682   0.077    0.938    
delta   0.6576     4.7162   0.139    0.889    
rho    -0.1000     6.6962  -0.015    0.988    
nu      1.6902     0.1036  16.321   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.04049749 
Multiple R-squared: 0.9637727 

> vcov( cesLmMeVrs )
            gamma       delta         rho          nu
gamma  65.0954683  38.0074614 -53.9255379 -0.21598291
delta  38.0074614  22.2425002 -31.5770958 -0.10418461
rho   -53.9255379 -31.5770958  44.8392584  0.14090295
nu     -0.2159829  -0.1041846   0.1409030  0.01072515
> 
> ## Newton-type, CRS
> cesNewton <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton", rho = 2 )
> print.default( cesNewton )
$nlm
$nlm$minimum
[1] 166153.1

$nlm$estimate
[1] 34.5395061  0.4930391

$nlm$gradient
[1] -36.889207  -1.759474

$nlm$code
[1] 2

$nlm$iterations
[1] 4


$coefficients
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 

$iter
[1] 4

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 2

$fitted.values
 [1] 1149.998 1189.422 1213.469 1224.406 1224.388 1240.120 1273.540 1276.406
 [9] 1237.616 1281.315 1315.771 1468.138 1529.111 1582.097 1549.008 1566.589
[17] 1647.887 1722.387 1832.822 1934.988

$residuals
 [1] -203.864672 -226.691036 -143.889460  -52.609561  -46.272070  -54.309891
 [7]  -34.182276   12.154535  -29.909499   -2.906533   44.821145   72.645944
[13]   45.923228  113.861903   95.681231   59.442491    7.152462   33.212472
[19]   54.598502   56.906457

$rss
[1] 166153.1

$cov.unscaled
           gamma     delta         rho
gamma 234701.746 8636.7979 -11138.5134
delta   8636.798  317.8282   -409.9006
rho   -11138.513 -409.9006    528.6955

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Coefficients:
 gamma  delta    rho 
34.540  0.493  2.000 

> summary( cesNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "Newton", rho = 2)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 4 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma    34.539  44156.785   0.001        1
delta     0.493   1624.933   0.000        1
rho       2.000   2095.763   0.001        1

Residual standard error: 91.14635 
Multiple R-squared: 0.9061344 

> coef( cesNewton )
     gamma      delta        rho 
34.5395061  0.4930391  2.0000000 
> vcov( cesNewton )
           gamma    delta       rho
gamma 1949821687 71751557 -92534952
delta   71751557  2640408  -3405314
rho    -92534952 -3405314   4392221
> coef( summary( cesNewton ) )
        Estimate Std. Error      t value  Pr(>|t|)
gamma 34.5395061  44156.785 0.0007822016 0.9993759
delta  0.4930391   1624.933 0.0003034211 0.9997579
rho    2.0000000   2095.763 0.0009543066 0.9992386
> 
> ## Newton-type, TC, CRS
> cesNewtonTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", rho = 0.8 )
> print.default( cesNewtonTc )
$nlm
$nlm$minimum
[1] 56559.9

$nlm$estimate
[1] 18.985441390  0.009430307  0.469942519

$nlm$gradient
[1] 1196.34036   10.48599   33.57147

$nlm$code
[1] 2

$nlm$iterations
[1] 13


$coefficients
       gamma       lambda        delta          rho 
18.985441390  0.009430307  0.469942519  0.800000000 

$iter
[1] 13

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
18.98474  0.01500  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1035.621 1085.759 1116.646 1142.983 1152.953 1178.973 1222.048 1232.534
 [9] 1208.129 1260.542 1309.169 1474.548 1551.629 1615.823 1589.632 1618.058
[17] 1706.983 1794.205 1923.635 2049.654

$residuals
 [1]  -89.4883367 -123.0283938  -47.0665411   28.8134451   25.1627794
 [6]    6.8373248   17.3099894   56.0268333   -0.4224311   17.8667749
[11]   51.4232435   66.2360951   23.4056198   80.1361398   55.0572991
[16]    7.9733090  -51.9434514  -38.6055822  -36.2152285  -57.7597717

$rss
[1] 56559.9

$cov.unscaled
               gamma        lambda         delta           rho
gamma   1.269979e+02  3.202797e-05  5.083181e+00 -6.567128e+00
lambda  3.202797e-05  2.228655e-09  1.506074e-06 -2.319315e-06
delta   5.083181e+00  1.506074e-06  2.034901e-01 -2.629509e-01
rho    -6.567128e+00 -2.319315e-06 -2.629509e-01  3.398818e-01

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Coefficients:
   gamma   lambda    delta      rho 
18.98544  0.00943  0.46994  0.80000 

> summary( cesNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", rho = 0.8)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.8 
Convergence achieved after 13 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  1.899e+01  5.993e+02   0.032 0.974727    
lambda 9.430e-03  2.511e-03   3.756 0.000172 ***
delta  4.699e-01  2.399e+01   0.020 0.984370    
rho    8.000e-01  3.100e+01   0.026 0.979414    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 53.1789 
Multiple R-squared: 0.9680474 

> 
> ## Newton-type, VRS
> cesNewtonVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "Newton",
+    vrs = TRUE, rho = -0.1 )
> print.default( cesNewtonVrs )
$nlm
$nlm$minimum
[1] 50044.87

$nlm$estimate
[1] 1.2971852 0.7038965 1.5837468

$nlm$gradient
[1]  1260.920 -8240.314  7183.843

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
     gamma      delta        rho         nu 
 1.2971852  0.7038965 -0.1000000  1.5837468 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.196 1091.939 1115.463 1174.291 1167.644 1192.593 1242.568 1217.707
 [9] 1172.171 1223.037 1293.735 1538.391 1651.230 1704.361 1593.717 1588.853
[17] 1647.832 1724.782 1880.491 2046.392

$residuals
 [1]  -58.062542 -129.208947  -45.884171   -2.494595   10.471641   -6.783495
 [7]   -3.210122   70.853626   35.534848   55.371917   66.857621    2.393164
[13]  -76.195559   -8.401194   50.971864   37.178290    7.207746   30.817826
[19]    6.929365  -54.497868

$rss
[1] 50044.87

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.259990e-02  2.164137e-02 -3.326460e-02 -9.181148e-05
delta  2.164137e-02  6.468753e-03 -9.949743e-03 -1.985241e-05
rho   -3.326460e-02 -9.949743e-03  1.530734e-02  2.798681e-05
nu    -9.181148e-05 -1.985241e-05  2.798681e-05  3.448145e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2972  0.7039 -0.1000  1.5837 

> summary( cesNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = -0.1)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29719   13.47823   0.096    0.923    
delta  0.70390    4.02323   0.175    0.861    
rho   -0.10000    6.18892  -0.016    0.987    
nu     1.58375    0.09289  17.050   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02243 
Multiple R-squared: 0.971728 

> coef( cesNewtonVrs )
     gamma      delta        rho         nu 
 1.2971852  0.7038965 -0.1000000  1.5837468 
> vcov( cesNewtonVrs )
            gamma        delta          rho           nu
gamma 181.6626289  54.15197043 -83.23611941 -0.229734683
delta  54.1519704  16.18639520 -24.89668016 -0.049675570
rho   -83.2361194 -24.89668016  38.30269984  0.070029809
nu     -0.2297347  -0.04967557   0.07002981  0.008628098
> coef( summary( cesNewtonVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2971852 13.47822796  0.09624301 9.233276e-01
delta  0.7038965  4.02323193  0.17495796 8.611127e-01
rho   -0.1000000  6.18891750 -0.01615791 9.871084e-01
nu     1.5837468  0.09288756 17.05015060 3.486339e-65
> 
> ## Newton-type, TC, multErr, CRS
> cesNewtonTcMe <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "Newton", multErr = TRUE, rho = 0.3 )
> print.default( cesNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.01492337

$nlm$estimate
[1] 2.54914763 0.02056833 0.09054212

$nlm$gradient
[1] -0.0050508118 -0.0001117741 -0.0005658895

$nlm$code
[1] 2

$nlm$iterations
[1] 10


$coefficients
     gamma     lambda      delta        rho 
2.54914763 0.02056833 0.09054212 0.30000000 

$iter
[1] 10

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

$method
[1] "Newton"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.497499 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.3

$fitted.values
 [1]  925.5654 1018.7387 1045.9746 1133.3518 1148.0378 1188.4420 1244.0290
 [8] 1232.1667 1237.6007 1285.8361 1374.1764 1564.4658 1677.7208 1718.8777
[15] 1640.3487 1645.1761 1662.3315 1713.9479 1830.5658 1968.9766

$residuals
 [1]  0.021978393 -0.056547063  0.022316230  0.033358564  0.025862331
 [6] -0.002217121 -0.003761976  0.044751896 -0.024451742 -0.005793186
[11] -0.009934188 -0.015252956 -0.063158905 -0.013422962  0.002642524
[16] -0.011705284 -0.004396015  0.024011158  0.030585874  0.011572061

$rss
[1] 0.01492337

$cov.unscaled
               gamma       lambda         delta           rho
gamma   2.973339e+05 -3.750430785  5.783963e+04 -224601.02726
lambda -3.750431e+00  0.003381098 -6.145425e-01       2.09496
delta   5.783963e+04 -0.614542465  1.125773e+04  -43732.71805
rho    -2.246010e+05  2.094960130 -4.373272e+04  169934.14995

attr(,"class")
[1] "cesEst" "list"  
> print( cesNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Coefficients:
  gamma  lambda   delta     rho 
2.54915 0.02057 0.09054 0.30000 

> summary( cesNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = 0.3)

Estimation by non-linear least-squares using the 'Newton' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0.3 
Convergence achieved after 10 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   2.549148  14.895003   0.171    0.864    
lambda  0.020568   0.001588  12.949   <2e-16 ***
delta   0.090542   2.898303   0.031    0.975    
rho     0.300000  11.260528   0.027    0.979    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02731608 
Multiple R-squared: 0.9835177 

> 
> ## PORT, CRS
> cesPort <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", rho = 2 )
> print.default( cesPort )
$nlminb
$nlminb$par
   gamma    delta 
49.14295  1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$message
[1] "both X-convergence and relative convergence (5)"

$nlminb$iterations
[1] 28

$nlminb$evaluations
function gradient 
      37       28 


$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 28

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
  gamma   delta 
34.5393  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 3.202073e+02 1.305668e+01 4.645382e+12
delta 1.305668e+01 5.323957e-01 1.894863e+11
rho   4.645382e+12 1.894863e+11 1.187250e+24

attr(,"class")
[1] "cesEst" "list"  
> print( cesPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

> summary( cesPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "PORT", rho = 2)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 
Convergence achieved after 28 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.629e+03   0.030    0.976
delta 1.000e+00  6.644e+01   0.015    0.988
rho   2.000e+00  9.922e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesPort )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesPort )
             gamma        delta          rho
gamma 2.655037e+06 1.082610e+05 3.851773e+16
delta 1.082610e+05 4.414422e+03 1.571148e+15
rho   3.851773e+16 1.571148e+15 9.844221e+27
> coef( summary( cesPort ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.629428e+03 3.015963e-02 0.9759397
delta  1.00000 6.644112e+01 1.505092e-02 0.9879916
rho    2.00000 9.921805e+13 2.015762e-14 1.0000000
> 
> ## PORT, VRS
> cesPortVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "PORT", vrs = TRUE,
+    rho = -0.1 )
> print.default( cesPortVrs )
$nlminb
$nlminb$par
    gamma     delta        nu 
1.2919627 0.7035412 1.5842274 

$nlminb$objective
[1] 50044.76

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 92

$nlminb$evaluations
function gradient 
     141       93 


$coefficients
     gamma      delta        rho         nu 
 1.2919627  0.7035412 -0.1000000  1.5842274 

$iter
[1] 92

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
8.852626 0.500000 1.000000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] -0.1

$fitted.values
 [1] 1004.069 1091.865 1115.382 1174.271 1167.616 1192.573 1242.561 1217.661
 [9] 1172.127 1222.990 1293.727 1538.462 1651.354 1704.463 1593.722 1588.820
[17] 1647.738 1724.662 1880.384 2046.325

$residuals
 [1]  -57.935852 -129.134923  -45.803211   -2.474949   10.500325   -6.763039
 [7]   -3.202853   70.899551   35.578944   55.418692   66.865185    2.321857
[13]  -76.318891   -8.503747   50.966630   37.210722    7.301664   30.938261
[19]    7.036064  -54.431191

$rss
[1] 50044.76

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.204166e-02  2.155694e-02 -3.311188e-02 -9.144065e-05
delta  2.155694e-02  6.468115e-03 -9.941869e-03 -1.984659e-05
rho   -3.311188e-02 -9.941869e-03  1.528463e-02  2.795986e-05
nu    -9.144065e-05 -1.984659e-05  2.795986e-05  3.448197e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Coefficients:
  gamma   delta     rho      nu 
 1.2920  0.7035 -0.1000  1.5842 

> summary( cesPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = -0.1)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 
Convergence achieved after 92 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.29196   13.42629   0.096    0.923    
delta  0.70354    4.02303   0.175    0.861    
rho   -0.10000    6.18432  -0.016    0.987    
nu     1.58423    0.09289  17.055   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.02238 
Multiple R-squared: 0.971728 

> coef( cesPortVrs )
     gamma      delta        rho         nu 
 1.2919627  0.7035412 -0.1000000  1.5842274 
> vcov( cesPortVrs )
            gamma       delta          rho          nu
gamma 180.2653704  53.9406034 -82.85381455 -0.22880627
delta  53.9406034  16.1847641 -24.87692395 -0.04966090
rho   -82.8538146 -24.8769240  38.24578463  0.06996224
nu     -0.2288063  -0.0496609   0.06996224  0.00862821
> coef( summary( cesPortVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  1.2919627 13.42629399  0.09622631 9.233408e-01
delta  0.7035412  4.02302922  0.17487848 8.611751e-01
rho   -0.1000000  6.18431764 -0.01616993 9.870988e-01
nu     1.5842274  0.09288816 17.05521382 3.197009e-65
> 
> ## PORT, TC, VRS
> cesPortTcVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0 )
> print.default( cesPortTcVrs )
$nlminb
$nlminb$par
     gamma     lambda      delta         nu 
9.84254171 0.01898455 0.42366821 0.91558127 

$nlminb$objective
[1] 17104.64

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 49

$nlminb$evaluations
function gradient 
      97       50 


$coefficients
     gamma     lambda      delta        rho         nu 
9.84254171 0.01898455 0.42366821 0.00000000 0.91558127 

$iter
[1] 49

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
8.455537 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  957.673 1034.846 1064.092 1130.967 1146.739 1183.448 1234.663 1234.007
 [9] 1234.632 1284.275 1358.451 1530.128 1627.985 1677.466 1626.230 1642.883
[17] 1684.866 1748.377 1865.448 1995.492

$residuals
 [1] -11.540024 -72.115303   5.487454  40.829072  31.376735   2.361977
 [7]   4.694524  54.553730 -26.925647  -5.866121   2.141736  10.655812
[13] -52.950210  18.493711  18.459262 -16.851797 -29.826437   7.222737
[19]  21.971824  -3.598481

$rss
[1] 17104.64

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   5.8107724305  1.183735e-04  3.994515e-01 -5.274814e-01 -4.890809e-03
lambda  0.0001183735  1.297628e-08  7.123790e-06 -9.689557e-06 -4.600820e-07
delta   0.3994514647  7.123790e-06  2.762628e-02 -3.647066e-02 -2.863705e-04
rho    -0.5274813830 -9.689557e-06 -3.647066e-02  4.816090e-02  3.846669e-04
nu     -0.0048908091 -4.600820e-07 -2.863705e-04  3.846669e-04  1.989012e-05

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
9.84254 0.01898 0.42367 0.00000 0.91558 

> summary( cesPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 49 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   9.842542  70.495096   0.140    0.889    
lambda  0.018985   0.003331   5.699 1.21e-08 ***
delta   0.423668   4.860749   0.087    0.931    
rho     0.000000   6.417846   0.000    1.000    
nu      0.915581   0.130425   7.020 2.22e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.24435 
Multiple R-squared: 0.990337 

> 
> ## PORT, TC, multErr, VRS
> cesPortTcMeVrs <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "PORT", vrs = TRUE, rho = 0, multErr = TRUE )
> print.default( cesPortTcMeVrs )
$nlminb
$nlminb$par
     gamma     lambda      delta         nu 
8.75839838 0.02001751 0.37062474 0.90645176 

$nlminb$objective
[1] 0.01151423

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 97

$nlminb$evaluations
function gradient 
     122       98 


$coefficients
     gamma     lambda      delta        rho         nu 
8.75839838 0.02001751 0.37062474 0.00000000 0.90645176 

$iter
[1] 97

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

$method
[1] "PORT"

$multErr
[1] TRUE

$start
   gamma   lambda    delta       nu 
2.132777 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1]  949.3256 1028.8841 1058.0479 1128.7104 1145.1563 1182.9784 1235.0519
 [8] 1233.4779 1236.7098 1286.1706 1362.9597 1535.2195 1635.2477 1683.3914
[15] 1629.9033 1645.5598 1683.0701 1744.4141 1860.4063 1990.9647

$residuals
 [1] -0.0033687287 -0.0664565932  0.0108396999  0.0374622432  0.0283754169
 [6]  0.0023907575  0.0034803975  0.0436882993 -0.0237316430 -0.0060533034
[11] -0.0017382225  0.0036180660 -0.0375170025  0.0074381494  0.0090306993
[16] -0.0119384669 -0.0167945006  0.0063918449  0.0144160356  0.0004666668

$rss
[1] 0.01151423

$cov.unscaled
               gamma       lambda         delta           rho            nu
gamma   9449273.3707 131.66163931 738453.172745 -1.015753e+06 -7200.1380052
lambda      131.6616   0.02008696      8.138856 -1.171049e+01    -0.8056946
delta    738453.1727   8.13885645  58095.964823 -7.988785e+04  -451.8192097
rho    -1015753.3820 -11.71049160 -79887.854880  1.098866e+05   635.3385601
nu        -7200.1380  -0.80569459   -451.819210  6.353386e+02    38.8561641

attr(,"class")
[1] "cesEst" "list"  
> print( cesPortTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Coefficients:
  gamma  lambda   delta     rho      nu 
8.75840 0.02002 0.37062 0.00000 0.90645 

> summary( cesPortTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", multErr = TRUE, 
    rho = 0)

Estimation by non-linear least-squares using the 'PORT' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at 0 
Convergence achieved after 97 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.758398  73.756746   0.119    0.905    
lambda  0.020018   0.003401   5.886 3.95e-09 ***
delta   0.370625   5.783297   0.064    0.949    
rho     0.000000   7.953804   0.000    1.000    
nu      0.906452   0.149566   6.061 1.36e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02399399 
Multiple R-squared: 0.987283 

> 
> ## DE, CRS
> cesDe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), rho = 2 )
> print.default( cesDe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
49.14295  1.00000 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   2.461368e+08 0.4777960
2   1.790252e+06 0.8955655
3   1.790252e+06 0.8955655
4   1.790252e+06 0.8955655
5   1.790252e+06 0.8955655
6   1.790252e+06 0.8955655
7   1.790252e+06 0.8955655
8   1.790252e+06 0.8955655
9   1.790252e+06 0.8955655
10  1.790252e+06 0.8955655
11  1.790252e+06 0.8955655
12  1.790252e+06 0.8955655
13  1.790252e+06 0.8955655
14  2.779163e+05 0.9630172
15  2.779163e+05 0.9630172
16  2.779163e+05 0.9630172
17  2.779163e+05 0.9630172
18  2.779163e+05 0.9630172
19  2.779163e+05 0.9630172
20  2.543095e+05 0.9034391
21  2.003676e+05 0.8365451
22  2.003676e+05 0.8365451
23  1.289793e+05 0.7291060
24  8.107581e+03 0.6028161
25  8.107581e+03 0.6028161
26  8.107581e+03 0.6490119
27  8.107581e+03 0.6490119
28  8.107581e+03 0.8928985
29  8.107581e+03 0.8928985
30  8.107581e+03 0.8928985
31  1.188277e+03 0.9896857
32  1.188277e+03 0.9896857
33  1.188277e+03 0.9896857
34  1.188277e+03 0.9896857
35  1.188277e+03 0.9896857
36  3.371842e+02 0.8974841
37  3.371842e+02 0.8974841
38  3.371842e+02 0.8974841
39  1.792960e+02 0.7959385
40  1.792960e+02 0.7959385
41  1.236299e+02 0.9142684
42  1.236299e+02 0.9142684
43  3.450773e+01 0.8768276
44  3.450773e+01 0.4061014
45  4.602873e+01 0.9896857
46  4.704419e+01 0.8414988
47  4.704419e+01 0.8414988
48  4.704419e+01 0.8414988
49  4.602873e+01 0.8074242
50  4.602873e+01 0.8074242
51  4.602873e+01 0.8074242
52  4.704419e+01 0.9726641
53  4.704419e+01 0.9726641
54  4.702982e+01 0.9126366
55  4.702982e+01 0.9126366
56  4.702982e+01 0.9126366
57  4.702982e+01 0.9126366
58  4.702982e+01 0.9126366
59  4.702982e+01 0.9126366
60  4.702982e+01 0.9126366
61  4.702982e+01 0.9126366
62  4.702982e+01 0.9126366
63  4.499680e+01 0.8381778
64  4.499680e+01 0.8381778
65  4.499680e+01 0.8381778
66  4.499680e+01 0.8381778
67  4.499680e+01 0.8381778
68  4.499680e+01 0.8381778
69  4.499680e+01 0.8381778
70  4.499680e+01 0.8381778
71  4.782995e+01 0.9478984
72  4.782995e+01 0.9478984
73  4.842526e+01 0.9702551
74  4.842526e+01 0.9702551
75  4.842526e+01 0.9702551
76  4.842526e+01 0.9702551
77  4.842526e+01 0.9702551
78  4.899969e+01 0.9938956
79  4.899969e+01 0.9938956
80  4.908146e+01 0.9973639
81  4.908146e+01 0.9973639
82  4.908146e+01 0.9973639
83  4.908146e+01 0.9973639
84  4.908146e+01 0.9973639
85  4.908146e+01 0.9973639
86  4.908146e+01 0.9973639
87  4.908146e+01 0.9973639
88  4.908146e+01 0.9973639
89  4.908146e+01 0.9973639
90  4.908146e+01 0.9973639
91  4.908146e+01 0.9973639
92  4.910520e+01 0.9984756
93  4.910520e+01 0.9984756
94  4.910520e+01 0.9984756
95  4.910520e+01 0.9984756
96  4.910520e+01 0.9984756
97  4.910520e+01 0.9984756
98  4.910520e+01 0.9984756
99  4.910520e+01 0.9984756
100 4.910520e+01 0.9984756
101 4.913843e+01 0.9998495
102 4.913843e+01 0.9998495
103 4.913843e+01 0.9998495
104 4.913843e+01 0.9998495
105 4.913843e+01 0.9998495
106 4.914212e+01 0.9999905
107 4.914212e+01 0.9999905
108 4.914212e+01 0.9999905
109 4.914212e+01 0.9999905
110 4.914212e+01 0.9999905
111 4.914212e+01 0.9999905
112 4.914212e+01 0.9999905
113 4.914226e+01 0.9999726
114 4.914226e+01 0.9999726
115 4.914226e+01 0.9999726
116 4.914226e+01 0.9999726
117 4.914226e+01 0.9999726
118 4.914226e+01 0.9999726
119 4.914226e+01 0.9999726
120 4.914226e+01 0.9999726
121 4.914299e+01 0.9999852
122 4.914277e+01 0.9999852
123 4.914249e+01 0.9999873
124 4.914249e+01 0.9999873
125 4.914271e+01 0.9999968
126 4.914271e+01 0.9999968
127 4.914271e+01 0.9999968
128 4.914271e+01 0.9999968
129 4.914271e+01 0.9999968
130 4.914271e+01 0.9999968
131 4.914302e+01 0.9999981
132 4.914298e+01 0.9999994
133 4.914294e+01 0.9999997
134 4.914294e+01 0.9999997
135 4.914294e+01 0.9999997
136 4.914294e+01 0.9999997
137 4.914294e+01 0.9999997
138 4.914294e+01 0.9999997
139 4.914294e+01 0.9999998
140 4.914294e+01 0.9999998
141 4.914294e+01 0.9999998
142 4.914294e+01 0.9999998
143 4.914294e+01 0.9999998
144 4.914294e+01 0.9999998
145 4.914297e+01 1.0000000
146 4.914294e+01 1.0000000
147 4.914296e+01 1.0000000
148 4.914296e+01 1.0000000
149 4.914296e+01 1.0000000
150 4.914296e+01 1.0000000
151 4.914294e+01 1.0000000
152 4.914294e+01 1.0000000
153 4.914294e+01 1.0000000
154 4.914294e+01 1.0000000
155 4.914294e+01 1.0000000
156 4.914294e+01 1.0000000
157 4.914294e+01 1.0000000
158 4.914295e+01 1.0000000
159 4.914295e+01 1.0000000
160 4.914295e+01 1.0000000
161 4.914295e+01 1.0000000
162 4.914295e+01 1.0000000
163 4.914295e+01 1.0000000
164 4.914295e+01 1.0000000
165 4.914295e+01 1.0000000
166 4.914295e+01 1.0000000
167 4.914295e+01 1.0000000
168 4.914295e+01 1.0000000
169 4.914295e+01 1.0000000
170 4.914295e+01 1.0000000
171 4.914295e+01 1.0000000
172 4.914295e+01 1.0000000
173 4.914295e+01 1.0000000
174 4.914295e+01 1.0000000
175 4.914295e+01 1.0000000
176 4.914295e+01 1.0000000
177 4.914295e+01 1.0000000
178 4.914295e+01 1.0000000
179 4.914295e+01 1.0000000
180 4.914295e+01 1.0000000
181 4.914295e+01 1.0000000
182 4.914295e+01 1.0000000
183 4.914295e+01 1.0000000
184 4.914295e+01 1.0000000
185 4.914295e+01 1.0000000
186 4.914295e+01 1.0000000
187 4.914295e+01 1.0000000
188 4.914295e+01 1.0000000
189 4.914295e+01 1.0000000
190 4.914295e+01 1.0000000
191 4.914295e+01 1.0000000
192 4.914295e+01 1.0000000
193 4.914295e+01 1.0000000
194 4.914295e+01 1.0000000
195 4.914295e+01 1.0000000
196 4.914295e+01 1.0000000
197 4.914295e+01 1.0000000
198 4.914295e+01 1.0000000
199 4.914295e+01 1.0000000
200 4.914295e+01 1.0000000

$member$bestvalit
  [1] 2.176446e+21 6.153865e+16 6.153865e+16 6.153865e+16 6.153865e+16
  [6] 6.153865e+16 6.153865e+16 6.153865e+16 6.153865e+16 6.153865e+16
 [11] 6.153865e+16 6.153865e+16 6.153865e+16 1.378945e+15 1.378945e+15
 [16] 1.378945e+15 1.378945e+15 1.378945e+15 1.378945e+15 1.230592e+15
 [21] 8.247942e+14 8.247942e+14 3.919189e+14 1.855631e+12 1.855631e+12
 [26] 1.723323e+12 1.723323e+12 1.251490e+12 1.251490e+12 1.251490e+12
 [31] 2.256189e+10 2.256189e+10 2.256189e+10 2.256189e+10 2.256189e+10
 [36] 1.618528e+09 1.618528e+09 1.618528e+09 3.964018e+08 3.964018e+08
 [41] 1.106390e+08 1.106390e+08 2.766404e+06 5.847741e+05 3.080507e+05
 [46] 2.440461e+05 2.440461e+05 2.440461e+05 2.396130e+05 2.396130e+05
 [51] 2.396130e+05 2.016829e+05 2.016829e+05 1.659777e+05 1.659777e+05
 [56] 1.659777e+05 1.659777e+05 1.659777e+05 1.659777e+05 1.659777e+05
 [61] 1.659777e+05 1.659777e+05 1.658925e+05 1.658925e+05 1.658925e+05
 [66] 1.658925e+05 1.658925e+05 1.658925e+05 1.658925e+05 1.658925e+05
 [71] 1.658554e+05 1.658554e+05 1.658472e+05 1.658472e+05 1.658472e+05
 [76] 1.658472e+05 1.658472e+05 1.658350e+05 1.658350e+05 1.658334e+05
 [81] 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05
 [86] 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05 1.658334e+05
 [91] 1.658334e+05 1.658328e+05 1.658328e+05 1.658328e+05 1.658328e+05
 [96] 1.658328e+05 1.658328e+05 1.658328e+05 1.658328e+05 1.658328e+05
[101] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[106] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[111] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[116] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1]      [,2]
 [1,] 49.14295 1.0000000
 [2,] 49.14295 1.0000000
 [3,] 49.14295 1.0000000
 [4,] 49.14295 1.0000000
 [5,] 49.14295 1.0000000
 [6,] 49.14295 1.0000000
 [7,] 49.14295 1.0000000
 [8,] 49.14295 1.0000000
 [9,] 49.14295 1.0000000
[10,] 49.14295 1.0000000
[11,] 49.14295 1.0000000
[12,] 49.14295 1.0000000
[13,] 49.14295 1.0000000
[14,] 49.14295 1.0000000
[15,] 49.14295 1.0000000
[16,] 49.14295 1.0000000
[17,] 49.14295 1.0000000
[18,] 49.14295 1.0000000
[19,] 49.14295 1.0000000
[20,] 49.14295 1.0000000
[21,] 49.14295 1.0000000
[22,] 30.27565 0.3792710
[23,] 49.14295 1.0000000
[24,] 49.14295 1.0000000
[25,] 49.14295 1.0000000
[26,] 49.14295 1.0000000
[27,] 49.14295 1.0000000
[28,] 49.14295 1.0000000
[29,] 49.14295 1.0000000
[30,] 49.14295 1.0000000
[31,] 28.76284 0.3367481
[32,] 49.14295 1.0000000
[33,] 49.14295 1.0000000
[34,] 49.14295 1.0000000
[35,] 49.14295 1.0000000
[36,] 49.14295 1.0000000
[37,] 49.14295 1.0000000
[38,] 49.14295 1.0000000
[39,] 49.14295 1.0000000
[40,] 49.14295 1.0000000
[41,] 49.14295 1.0000000
[42,] 49.14295 1.0000000
[43,] 49.14295 1.0000000
[44,] 49.14295 1.0000000
[45,] 49.14295 1.0000000
[46,] 49.14295 1.0000000
[47,] 49.14295 1.0000000
[48,] 49.14295 1.0000000
[49,] 49.14295 1.0000000
[50,] 49.14295 1.0000000

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.14295  1.00000  2.00000 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 2

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034844  -54.066630
 [7]  -33.936005   12.318503  -29.713284   -2.748201   45.035837   72.884175
[13]   46.197491  114.047832   95.703326   59.353878    6.785317   32.647978
[19]   53.896799   56.153213

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 3.235353e+02 1.294200e+01 3.141995e+12
delta 1.294200e+01 5.204194e-01 9.157263e+10
rho   3.141995e+12 9.157263e+10 4.590829e+23

attr(,"class")
[1] "cesEst" "list"  
> print( cesDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.14  1.00  2.00 

> summary( cesDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", rho = 2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 2 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  1.638e+03   0.030    0.976
delta 1.000e+00  6.569e+01   0.015    0.988
rho   2.000e+00  6.170e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesDe )
   gamma    delta      rho 
49.14295  1.00000  2.00000 
> vcov( cesDe )
             gamma        delta          rho
gamma 2.682631e+06 1.073102e+05 2.605222e+16
delta 1.073102e+05 4.315119e+03 7.592852e+14
rho   2.605222e+16 7.592852e+14 3.806540e+27
> coef( summary( cesDe ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 1.637874e+03 3.000411e-02 0.9760638
delta  1.00000 6.568956e+01 1.522312e-02 0.9878542
rho    2.00000 6.169716e+13 3.241640e-14 1.0000000
> 
> ## DE, TC, CRS
> cesDeTc <- cesEst( "qOutput", xxNames, tName = "time", data = germanFarms, 
+    method = "DE", control = DEoptim.control( trace = FALSE ), rho = 0.5 )
> print.default( cesDeTc )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
4.01813273 0.01713855 0.13999209 

$optim$bestval
[1] 17995.12

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
            par1         par2      par3
1   7.669117e+08 -0.254276322 0.7321352
2   1.524447e+09 -0.361193937 0.9802377
3   2.688892e+08 -0.378100740 0.4825015
4   2.688892e+08 -0.378100740 0.4825015
5   1.547767e+08 -0.451767710 0.9420414
6   1.547767e+08 -0.451767710 0.9420414
7   1.547767e+08 -0.451767710 0.9420414
8   6.697323e+07 -0.296344348 0.9447613
9   6.697323e+07 -0.296344348 0.9447613
10  2.244148e+07 -0.269026815 0.6662978
11  2.244148e+07 -0.269026815 0.6662978
12  2.244148e+07 -0.269026815 0.6662978
13  2.244148e+07 -0.269026815 0.6662978
14  2.244148e+07 -0.269026815 0.6662978
15  1.721301e+07 -0.335335332 0.7987937
16  5.021920e+06 -0.443558568 0.7253708
17  5.021920e+06 -0.443558568 0.7253708
18  5.021920e+06 -0.443558568 0.7253708
19  5.021920e+06 -0.443558568 0.7253708
20  5.021920e+06 -0.443558568 0.7253708
21  2.953466e+06 -0.396187212 0.6722456
22  2.953466e+06 -0.396187212 0.6722456
23  1.955543e+06 -0.455608204 0.7122295
24  1.955543e+06 -0.455608204 0.7122295
25  1.955543e+06 -0.455608204 0.7122295
26  2.416886e+05 -0.482209945 0.8546398
27  2.416886e+05 -0.482209945 0.8546398
28  2.416886e+05 -0.482209945 0.8546398
29  2.416886e+05 -0.482209945 0.8546398
30  2.416886e+05 -0.482209945 0.8546398
31  2.416886e+05 -0.482209945 0.8546398
32  2.416886e+05 -0.482209945 0.8546398
33  1.796683e+05 -0.417354771 0.7895425
34  1.796683e+05 -0.417354771 0.7895425
35  5.163560e+04 -0.410732939 0.8767356
36  5.163560e+04 -0.410732939 0.8767356
37  5.163560e+04 -0.410732939 0.8767356
38  3.484845e+04 -0.336236070 0.8717608
39  3.484845e+04 -0.336236070 0.8717608
40  3.484845e+04 -0.336236070 0.8717608
41  3.484845e+04 -0.336236070 0.8717608
42  6.881642e+03 -0.492623812 0.9262999
43  6.881642e+03 -0.492623812 0.9262999
44  6.881642e+03 -0.492623812 0.9262999
45  6.881642e+03 -0.492623812 0.9262999
46  6.881642e+03 -0.492623812 0.9262999
47  6.881642e+03 -0.492623812 0.9262999
48  1.009476e+03 -0.486234576 0.9936044
49  1.009476e+03 -0.486234576 0.9936044
50  6.484920e+02 -0.481154058 0.9773178
51  6.484920e+02 -0.481154058 0.9773178
52  6.484920e+02 -0.481154058 0.9773178
53  6.484920e+02 -0.481154058 0.9773178
54  6.484920e+02 -0.481154058 0.9773178
55  6.484920e+02 -0.481154058 0.9773178
56  6.484920e+02 -0.481154058 0.9773178
57  6.484920e+02 -0.481154058 0.9773178
58  6.484920e+02 -0.492611628 0.9773178
59  3.970718e+02 -0.319236782 0.9863137
60  1.960209e+02 -0.499324468 0.7116557
61  1.960209e+02 -0.499324468 0.7116557
62  1.903935e+02 -0.499921009 0.7916826
63  1.903935e+02 -0.499921009 0.7916826
64  1.903935e+02 -0.499921009 0.7916826
65  1.614966e+01 -0.412688659 0.8527457
66  1.614966e+01 -0.402899628 0.8664582
67  1.588060e+01 -0.072021797 0.7505521
68  1.588060e+01 -0.072021797 0.7505521
69  5.344823e+01 -0.041483845 0.6141505
70  5.344823e+01 -0.041483845 0.6141505
71  5.344823e+01 -0.041483845 0.6141505
72  5.344823e+01 -0.041483845 0.6141505
73  5.344823e+01 -0.041483845 0.6141505
74  5.344823e+01 -0.041483845 0.6141505
75  1.588060e+01 -0.014707599 0.7253019
76  6.608024e+01 -0.070058989 0.8767266
77  3.140606e+01  0.006875963 0.7908000
78  3.140606e+01  0.006875963 0.7908000
79  3.140606e+01  0.006875963 0.7908000
80  3.140606e+01  0.006875963 0.7908000
81  3.140606e+01  0.006875963 0.7908000
82  3.140606e+01  0.006875963 0.7908000
83  3.140606e+01  0.006875963 0.7908000
84  3.140606e+01  0.006875963 0.7908000
85  3.140606e+01  0.006875963 0.7908000
86  3.140606e+01  0.006875963 0.7908000
87  3.140606e+01  0.006875963 0.7908000
88  3.140606e+01  0.006875963 0.7908000
89  3.140606e+01  0.006875963 0.7908000
90  3.140606e+01  0.006875963 0.7908000
91  3.140606e+01  0.006875963 0.7908000
92  3.140606e+01  0.006875963 0.7908000
93  3.140606e+01  0.006875963 0.7908000
94  3.140606e+01  0.006875963 0.7908000
95  3.140606e+01  0.006875963 0.7908000
96  3.140606e+01  0.006875963 0.7908000
97  3.140606e+01  0.006875963 0.7908000
98  3.140606e+01  0.006875963 0.7908000
99  3.140606e+01  0.006875963 0.7908000
100 3.140606e+01  0.006875963 0.7908000
101 2.833596e+01  0.008692788 0.7541832
102 2.833596e+01  0.008692788 0.7541832
103 1.925171e+01  0.012153233 0.5895703
104 1.925171e+01  0.012153233 0.5895703
105 1.925171e+01  0.012153233 0.5895703
106 1.925171e+01  0.012153233 0.5895703
107 1.925171e+01  0.012153233 0.5895703
108 1.925171e+01  0.012153233 0.5895703
109 1.925171e+01  0.012153233 0.5895703
110 1.925171e+01  0.012153233 0.5895703
111 1.925171e+01  0.012153233 0.5895703
112 1.925171e+01  0.012153233 0.5895703
113 1.925171e+01  0.012153233 0.5895703
114 1.925171e+01  0.012153233 0.5895703
115 1.925171e+01  0.012153233 0.5895703
116 1.374100e+01  0.008980527 0.4394837
117 1.813682e+01  0.009986079 0.5540427
118 1.813682e+01  0.009986079 0.5540427
119 1.813682e+01  0.009986079 0.5540427
120 1.813682e+01  0.009986079 0.5540427
121 1.176243e+01  0.010419624 0.3963111
122 1.176243e+01  0.010419624 0.3963111
123 1.176243e+01  0.010419624 0.3963111
124 1.176243e+01  0.010419624 0.3963111
125 1.176243e+01  0.010419624 0.3963111
126 1.176243e+01  0.010419624 0.3963111
127 1.176243e+01  0.010419624 0.3963111
128 1.176243e+01  0.010419624 0.3963111
129 9.815185e+00  0.012075401 0.3443584
130 9.815185e+00  0.012075401 0.3443584
131 9.815185e+00  0.012075401 0.3443584
132 9.815185e+00  0.012075401 0.3443584
133 9.815185e+00  0.012075401 0.3443584
134 9.815185e+00  0.012075401 0.3443584
135 8.235413e+00  0.012123912 0.2949607
136 8.235413e+00  0.012123912 0.2949607
137 8.235413e+00  0.012123912 0.2949607
138 8.235413e+00  0.012123912 0.2949607
139 8.235413e+00  0.012123912 0.2949607
140 8.235413e+00  0.012123912 0.2949607
141 8.235413e+00  0.012123912 0.2949607
142 8.235413e+00  0.012123912 0.2949607
143 8.235413e+00  0.012123912 0.2949607
144 8.235413e+00  0.012123912 0.2949607
145 8.235413e+00  0.012123912 0.2949607
146 6.885407e+00  0.014243162 0.2526385
147 6.885407e+00  0.014243162 0.2526385
148 6.885407e+00  0.014243162 0.2526385
149 6.885407e+00  0.014243162 0.2526385
150 6.885407e+00  0.014243162 0.2526385
151 6.885407e+00  0.014243162 0.2526385
152 5.685254e+00  0.014894327 0.2068865
153 5.685254e+00  0.014894327 0.2068865
154 5.685254e+00  0.014894327 0.2068865
155 5.685254e+00  0.014894327 0.2068865
156 5.685254e+00  0.014894327 0.2068865
157 5.685254e+00  0.014894327 0.2068865
158 5.685254e+00  0.014894327 0.2068865
159 5.685254e+00  0.014572524 0.2068865
160 5.685254e+00  0.014572524 0.2068865
161 5.656873e+00  0.015411241 0.2086344
162 5.656873e+00  0.015411241 0.2086344
163 5.656873e+00  0.015411241 0.2086344
164 5.656873e+00  0.015411241 0.2086344
165 5.656873e+00  0.015411241 0.2086344
166 5.656873e+00  0.015411241 0.2086344
167 5.656873e+00  0.015411241 0.2086344
168 5.656873e+00  0.015411241 0.2086344
169 5.656873e+00  0.015411241 0.2086344
170 5.656873e+00  0.015411241 0.2086344
171 5.656873e+00  0.015411241 0.2086344
172 5.656873e+00  0.015411241 0.2086344
173 5.656873e+00  0.015411241 0.2086344
174 5.656873e+00  0.015411241 0.2086344
175 5.656873e+00  0.015411241 0.2086344
176 5.656873e+00  0.015411241 0.2086344
177 5.656873e+00  0.015411241 0.2086344
178 5.656873e+00  0.015411241 0.2086344
179 5.656873e+00  0.015411241 0.2086344
180 5.656873e+00  0.015411241 0.2086344
181 5.656873e+00  0.015411241 0.2086344
182 5.656873e+00  0.015411241 0.2086344
183 5.516081e+00  0.015120242 0.2026954
184 4.229450e+00  0.016875839 0.1478072
185 4.229450e+00  0.016875839 0.1478072
186 4.229450e+00  0.016370461 0.1478072
187 4.229450e+00  0.016370461 0.1478072
188 4.229450e+00  0.016370461 0.1478072
189 4.229450e+00  0.016370461 0.1478072
190 4.229450e+00  0.016370461 0.1478072
191 4.229450e+00  0.016370461 0.1478072
192 4.229450e+00  0.016370461 0.1478072
193 4.018133e+00  0.017138550 0.1399921
194 4.018133e+00  0.017138550 0.1399921
195 4.018133e+00  0.017138550 0.1399921
196 4.018133e+00  0.017138550 0.1399921
197 4.018133e+00  0.017138550 0.1399921
198 4.018133e+00  0.017138550 0.1399921
199 4.018133e+00  0.017138550 0.1399921
200 4.018133e+00  0.017138550 0.1399921

$member$bestvalit
  [1] 1.360764e+21 1.341660e+21 3.082745e+20 3.082745e+20 1.119738e+19
  [6] 1.119738e+19 1.119738e+19 3.852098e+18 3.852098e+18 1.424236e+18
 [11] 1.424236e+18 1.424236e+18 1.424236e+18 1.424236e+18 3.597792e+17
 [16] 2.697779e+16 2.697779e+16 2.697779e+16 2.697779e+16 2.697779e+16
 [21] 1.385878e+16 1.385878e+16 4.140462e+15 4.140462e+15 4.140462e+15
 [26] 3.333261e+13 3.333261e+13 3.333261e+13 3.333261e+13 3.333261e+13
 [31] 3.333261e+13 3.333261e+13 2.939635e+13 2.939635e+13 1.799749e+12
 [36] 1.799749e+12 1.799749e+12 1.117633e+12 1.117633e+12 1.117633e+12
 [41] 1.117633e+12 1.977464e+10 1.977464e+10 1.977464e+10 1.977464e+10
 [46] 1.977464e+10 1.977464e+10 3.184741e+08 3.184741e+08 1.456638e+08
 [51] 1.456638e+08 1.456638e+08 1.456638e+08 1.456638e+08 1.456638e+08
 [56] 1.456638e+08 1.456638e+08 1.415537e+08 9.046019e+07 5.229950e+07
 [61] 5.229950e+07 4.535781e+07 4.535781e+07 4.535781e+07 3.981801e+07
 [66] 3.979807e+07 2.584525e+07 2.584525e+07 1.374524e+07 1.374524e+07
 [71] 1.374524e+07 1.374524e+07 1.374524e+07 1.374524e+07 1.330201e+07
 [76] 8.458200e+06 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04
 [81] 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04
 [86] 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04
 [91] 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04
 [96] 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04 6.848577e+04
[101] 6.457138e+04 6.457138e+04 5.484493e+04 5.484493e+04 5.484493e+04
[106] 5.484493e+04 5.484493e+04 5.484493e+04 5.484493e+04 5.484493e+04
[111] 5.484493e+04 5.484493e+04 5.484493e+04 5.484493e+04 5.484493e+04
[116] 5.164477e+04 4.768838e+04 4.768838e+04 4.768838e+04 4.768838e+04
[121] 3.826264e+04 3.826264e+04 3.826264e+04 3.826264e+04 3.826264e+04
[126] 3.826264e+04 3.826264e+04 3.826264e+04 3.157898e+04 3.157898e+04
[131] 3.157898e+04 3.157898e+04 3.157898e+04 3.157898e+04 2.869447e+04
[136] 2.869447e+04 2.869447e+04 2.869447e+04 2.869447e+04 2.869447e+04
[141] 2.869447e+04 2.869447e+04 2.869447e+04 2.869447e+04 2.869447e+04
[146] 2.370725e+04 2.370725e+04 2.370725e+04 2.370725e+04 2.370725e+04
[151] 2.370725e+04 2.237085e+04 2.237085e+04 2.237085e+04 2.237085e+04
[156] 2.237085e+04 2.237085e+04 2.237085e+04 2.090766e+04 2.090766e+04
[161] 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04
[166] 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04
[171] 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04
[176] 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04 1.988610e+04
[181] 1.988610e+04 1.988610e+04 1.962479e+04 1.937554e+04 1.937554e+04
[186] 1.807556e+04 1.807556e+04 1.807556e+04 1.807556e+04 1.807556e+04
[191] 1.807556e+04 1.807556e+04 1.799512e+04 1.799512e+04 1.799512e+04
[196] 1.799512e+04 1.799512e+04 1.799512e+04 1.799512e+04 1.799512e+04

$member$pop
           [,1]        [,2]      [,3]
 [1,] 10.313145 0.012645877 0.3614138
 [2,]  5.278299 0.016307602 0.1981777
 [3,]  5.543616 0.013988380 0.2015795
 [4,] 12.194198 0.011326169 0.4122792
 [5,]  7.032425 0.013179712 0.2558656
 [6,] 22.187801 0.010907531 0.6410339
 [7,] 15.087610 0.009262192 0.4783461
 [8,] 20.719491 0.011707971 0.6170311
 [9,]  6.293632 0.016056450 0.2349522
[10,]  5.656873 0.015393726 0.2086344
[11,] 14.723320 0.011085307 0.4768561
[12,]  7.021224 0.013831544 0.2552467
[13,] 19.926931 0.008559157 0.5848243
[14,]  5.762212 0.015832665 0.2164166
[15,]  8.989936 0.013069260 0.3233686
[16,]  7.270864 0.013666885 0.2660537
[17,]  6.350249 0.014492456 0.2342072
[18,]  5.516081 0.015120242 0.2026954
[19,]  7.018108 0.013222731 0.2526363
[20,] 15.947856 0.011695528 0.5108604
[21,] 19.964068 0.010549714 0.5982191
[22,]  4.229450 0.016496755 0.1478072
[23,] 14.775579 0.009848242 0.4724473
[24,]  7.538541 0.015282502 0.2820982
[25,] 20.770539 0.009281035 0.6040613
[26,]  5.685254 0.014572524 0.2068865
[27,]  4.334641 0.016499633 0.1515315
[28,] 11.207101 0.010657759 0.3806394
[29,] 20.402723 0.008752495 0.5928245
[30,] 13.007965 0.010215425 0.4260831
[31,]  7.438492 0.012337401 0.2675176
[32,]  6.885407 0.014243162 0.2526385
[33,]  3.847107 0.016316511 0.1241733
[34,]  3.416422 0.016954982 0.1060667
[35,]  4.018133 0.017138550 0.1399921
[36,]  8.961330 0.011834453 0.3166487
[37,]  6.436374 0.014436582 0.2371343
[38,]  5.529053 0.013244431 0.1948402
[39,]  3.669524 0.016919670 0.1217523
[40,]  6.048471 0.015391089 0.2232806
[41,] 19.434387 0.009742465 0.5790364
[42,]  9.942751 0.011513226 0.3472096
[43,]  6.235485 0.015268459 0.2301425
[44,] 11.125562 0.013133401 0.3895945
[45,]  5.636066 0.015353832 0.2094698
[46,] 13.496273 0.008980527 0.4394837
[47,]  4.657369 0.017143271 0.1684857
[48,]  4.488106 0.015422317 0.1593375
[49,] 15.209986 0.007303960 0.4687790
[50,]  4.652024 0.016376818 0.1662572

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma     lambda      delta        rho 
4.01813273 0.01713855 0.13999209 0.50000000 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] 0.5

$fitted.values
 [1]  955.8445 1035.3380 1063.9683 1131.1576 1144.6145 1180.3828 1231.9148
 [8] 1228.1544 1223.8322 1273.7957 1348.6429 1530.3513 1631.1767 1681.0520
[15] 1621.1407 1634.2595 1674.8674 1737.7048 1858.3392 1993.0730

$residuals
 [1]  -9.711526 -72.607475   5.610904  40.638859  33.501540   5.427160
 [7]   7.442989  60.406500 -16.126038   4.612810  11.949672  10.432772
[13] -56.142014  14.907386  23.548383  -8.228334 -19.827575  17.894958
[19]  29.081077  -1.178971

$rss
[1] 17995.12

$cov.unscaled
               gamma        lambda         delta           rho
gamma   3.596794e-01  1.215309e-06  4.131914e-02 -1.102201e-01
lambda  1.215309e-06  2.336228e-09  2.128176e-07 -6.900451e-07
delta   4.131914e-02  2.128176e-07  4.749746e-03 -1.267558e-02
rho    -1.102201e-01 -6.900451e-07 -1.267558e-02  3.383692e-02

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma  lambda   delta     rho 
4.01813 0.01714 0.13999 0.50000 

> summary( cesDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    tName = "time", method = "DE", rho = 0.5, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at 0.5 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   4.01813   17.98954   0.223    0.823    
lambda  0.01714    0.00145  11.821   <2e-16 ***
delta   0.13999    2.06727   0.068    0.946    
rho     0.50000    5.51770   0.091    0.928    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.99593 
Multiple R-squared: 0.989834 

> 
> ## DE, VRS
> cesDeVrs <- cesEst( "qOutput", xxNames, germanFarms, method = "DE", vrs = TRUE,
+    control = DEoptim.control( trace = FALSE ), rho = -0.1, random.seed = 234 )
> print.default( cesDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
35.9645256  0.9597044  1.0478088 

$optim$bestval
[1] 150100.7

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1      par2        par3
1   5.828479e+09 0.5829899 0.011983411
2   5.828479e+09 0.5829899 0.011983411
3   5.828479e+09 0.5829899 0.011983411
4   6.618135e+08 0.9420090 0.433908092
5   6.618135e+08 0.9420090 0.433908092
6   2.390072e+09 0.5829899 0.011983411
7   2.390072e+09 0.5829899 0.011983411
8   4.708748e+08 0.1755938 0.141643285
9   6.290163e+08 0.5369386 0.016934884
10  4.514765e+08 0.4711550 0.043965479
11  4.139756e+07 0.7843454 0.416997760
12  4.139756e+07 0.7843454 0.416997760
13  4.139756e+07 0.7843454 0.416997760
14  9.717554e+07 0.3976510 0.094602692
15  5.565403e+07 0.9672350 0.070276409
16  5.565403e+07 0.9672350 0.070276409
17  5.565403e+07 0.9672350 0.070276409
18  2.323828e+06 0.7219921 0.192097782
19  2.323828e+06 0.7219921 0.192097782
20  2.323828e+06 0.7219921 0.192097782
21  2.323828e+06 0.7219921 0.192097782
22  2.323828e+06 0.7569451 0.137835484
23  2.323828e+06 0.7569451 0.137835484
24  2.044020e+06 0.9348576 0.106561554
25  1.198524e+06 0.9867635 0.035323704
26  1.198524e+06 0.9867635 0.035323704
27  1.198524e+06 0.9867635 0.035323704
28  1.198524e+06 0.9867635 0.035323704
29  1.198524e+06 0.9867635 0.035323704
30  1.198524e+06 0.9867635 0.035323704
31  1.198524e+06 0.9867635 0.035323704
32  6.121408e+05 0.8810128 0.048634271
33  6.121408e+05 0.8810128 0.048634271
34  3.471107e+05 0.9948077 0.003322156
35  3.471107e+05 0.9948077 0.003322156
36  3.471107e+05 0.9948077 0.003322156
37  6.706565e+03 0.9315233 0.056289028
38  6.706565e+03 0.9315233 0.056289028
39  6.706565e+03 0.9315233 0.056289028
40  6.706565e+03 0.9315233 0.056289028
41  6.706565e+03 0.9315233 0.056289028
42  6.706565e+03 0.9315233 0.056289028
43  6.706565e+03 0.9315233 0.056289028
44  6.706565e+03 0.9315233 0.056006876
45  6.706565e+03 0.9315233 0.056006876
46  6.706565e+03 0.9315233 0.005738784
47  6.706565e+03 0.9315233 0.005738784
48  3.830427e+03 0.9840517 0.064848384
49  3.830427e+03 0.9840517 0.064848384
50  3.830427e+03 0.9840517 0.064848384
51  2.420179e+03 0.3054362 0.052289367
52  1.470251e+03 0.9773630 0.034692699
53  1.470251e+03 0.9773630 0.034692699
54  1.470251e+03 0.9773630 0.034692699
55  1.470251e+03 0.9773630 0.034692699
56  1.470251e+03 0.9773630 0.034692699
57  1.470251e+03 0.9773630 0.034692699
58  1.470251e+03 0.9773630 0.034692699
59  1.044720e+03 0.2159063 0.059886400
60  1.044720e+03 0.5163255 0.059886400
61  1.044720e+03 0.5163255 0.059886400
62  1.044720e+03 0.5163255 0.059886400
63  1.044720e+03 0.5163255 0.059886400
64  1.044720e+03 0.5163255 0.059886400
65  9.334957e+02 0.7527380 0.089584882
66  9.334957e+02 0.7527380 0.089584882
67  9.334957e+02 0.7527380 0.089584882
68  7.739167e+02 0.9131720 0.154905201
69  5.517827e+02 0.6189848 0.200259359
70  5.517827e+02 0.6189848 0.200259359
71  5.517827e+02 0.6189848 0.200259359
72  4.618299e+02 0.5729498 0.233335806
73  4.618299e+02 0.5729498 0.233335806
74  4.618299e+02 0.5729498 0.233335806
75  4.618299e+02 0.5729498 0.233335806
76  5.344800e+02 0.9184512 0.274845490
77  5.344800e+02 0.9184512 0.274845490
78  5.344800e+02 0.9184512 0.274845490
79  5.344800e+02 0.9184512 0.274845490
80  5.344800e+02 0.9184512 0.274845490
81  4.587817e+02 0.8439714 0.291916881
82  5.344800e+02 0.9344123 0.274845490
83  5.344800e+02 0.9344123 0.274845490
84  2.425063e+02 0.6465797 0.382803699
85  2.425063e+02 0.6465797 0.382803699
86  2.425063e+02 0.6465797 0.382803699
87  2.425063e+02 0.6465797 0.382803699
88  2.425063e+02 0.6465797 0.382803699
89  2.637707e+02 0.7464157 0.398127139
90  2.637707e+02 0.7464157 0.398127139
91  2.637707e+02 0.7464157 0.398127139
92  1.911793e+02 0.8172046 0.488983707
93  1.911793e+02 0.8172046 0.488983707
94  1.911793e+02 0.8172046 0.488983707
95  1.911793e+02 0.8172046 0.488983707
96  1.011670e+02 0.7527380 0.608777986
97  1.234947e+02 0.7493297 0.570855759
98  1.234947e+02 0.7493297 0.570855759
99  1.011670e+02 0.7527380 0.631246168
100 1.011670e+02 0.7527380 0.631246168
101 1.011670e+02 0.7527380 0.631246168
102 9.074237e+01 0.7067905 0.624988969
103 9.074237e+01 0.7067905 0.624988969
104 1.317682e+02 0.9637911 0.686863688
105 1.317682e+02 0.9637911 0.686863688
106 1.317682e+02 0.9637911 0.686863688
107 1.317682e+02 0.9637911 0.686863688
108 1.317682e+02 0.9637911 0.686863688
109 1.317682e+02 0.9637911 0.686863688
110 1.317682e+02 0.9637911 0.686863688
111 8.175759e+01 0.9690541 0.809845137
112 8.175759e+01 0.9690541 0.809845137
113 8.175759e+01 0.9690541 0.809845137
114 8.175759e+01 0.9690541 0.809845137
115 8.175759e+01 0.9690541 0.809845137
116 8.175759e+01 0.9690541 0.809845137
117 8.175759e+01 0.9690541 0.809845137
118 5.078191e+01 0.9460252 0.936705636
119 5.078191e+01 0.9460252 0.936705636
120 5.078191e+01 0.9460252 0.936705636
121 5.078191e+01 0.9460252 0.936705636
122 5.078191e+01 0.9460252 0.936705636
123 5.078191e+01 0.9460252 0.936705636
124 5.078191e+01 0.9460252 0.936705636
125 5.078191e+01 0.9460252 0.936705636
126 5.078191e+01 0.9460252 0.936705636
127 4.582212e+01 0.9724234 0.988783241
128 4.582212e+01 0.9724234 0.988783241
129 4.582212e+01 0.9724234 0.988783241
130 4.582212e+01 0.9724234 0.988783241
131 4.582212e+01 0.9724234 0.988783241
132 4.582212e+01 0.9724234 0.988783241
133 4.582212e+01 0.9724234 0.988783241
134 4.582212e+01 0.9724234 0.988783241
135 4.582212e+01 0.9724234 0.988783241
136 4.582212e+01 0.9724234 0.988783241
137 4.582212e+01 0.9724234 0.988783241
138 4.582212e+01 0.9724234 0.988783241
139 4.582212e+01 0.9724234 0.988783241
140 4.582212e+01 0.9724234 0.988783241
141 4.582212e+01 0.9724234 0.988783241
142 4.582212e+01 0.9724234 0.988783241
143 4.582212e+01 0.9724234 0.988783241
144 4.582212e+01 0.9724234 0.988783241
145 4.582212e+01 0.9724234 0.988783241
146 4.582212e+01 0.9724234 0.988783241
147 4.582212e+01 0.9724234 0.988783241
148 4.582212e+01 0.9724234 0.988783241
149 4.582212e+01 0.9724234 0.988783241
150 4.582212e+01 0.9724234 0.988783241
151 4.582212e+01 0.9724234 0.988783241
152 4.582212e+01 0.9724234 0.988783241
153 4.582212e+01 0.9724234 0.988783241
154 4.582212e+01 0.9724234 0.988783241
155 4.582212e+01 0.9724234 0.988783241
156 4.582212e+01 0.9724234 0.988783241
157 4.582212e+01 0.9724234 0.988783241
158 4.582212e+01 0.9724234 0.988783241
159 4.582212e+01 0.9724234 0.988783241
160 4.582212e+01 0.9724234 0.988783241
161 4.582212e+01 0.9724234 0.988783241
162 4.582212e+01 0.9724234 0.988783241
163 4.582212e+01 0.9724234 0.988783241
164 4.582212e+01 0.9724234 0.988783241
165 4.582212e+01 0.9724234 0.988783241
166 4.582212e+01 0.9724234 0.988783241
167 3.762861e+01 0.9870584 1.055385590
168 3.762861e+01 0.9870584 1.055385590
169 3.762861e+01 0.9870584 1.055385590
170 3.762861e+01 0.9870584 1.055385590
171 3.762861e+01 0.9870584 1.055385590
172 3.762861e+01 0.9870584 1.055385590
173 3.762861e+01 0.9870584 1.055385590
174 3.762861e+01 0.9870584 1.055385590
175 3.762861e+01 0.9870584 1.055385590
176 3.938042e+01 0.9870584 1.055385590
177 3.938042e+01 0.9870584 1.055385590
178 3.938042e+01 0.9870584 1.055385590
179 3.938042e+01 0.9870584 1.055385590
180 3.938042e+01 0.9870584 1.055385590
181 3.938042e+01 0.9870584 1.055385590
182 3.938042e+01 0.9870584 1.055385590
183 3.938042e+01 0.9870584 1.055385590
184 3.938042e+01 0.9870584 1.055385590
185 3.938042e+01 0.9870584 1.055385590
186 3.938042e+01 0.9870584 1.055385590
187 3.938042e+01 0.9870584 1.055385590
188 3.596453e+01 0.9597044 1.047808759
189 3.596453e+01 0.9597044 1.047808759
190 3.596453e+01 0.9597044 1.047808759
191 3.596453e+01 0.9597044 1.047808759
192 3.596453e+01 0.9597044 1.047808759
193 3.596453e+01 0.9597044 1.047808759
194 3.596453e+01 0.9597044 1.047808759
195 3.596453e+01 0.9597044 1.047808759
196 3.596453e+01 0.9597044 1.047808759
197 3.596453e+01 0.9597044 1.047808759
198 3.596453e+01 0.9597044 1.047808759
199 3.596453e+01 0.9597044 1.047808759
200 3.596453e+01 0.9597044 1.047808759

$member$bestvalit
  [1] 7.622905e+20 7.622905e+20 7.622905e+20 1.953779e+20 1.953779e+20
  [6] 1.281834e+20 1.281834e+20 2.454442e+19 9.357467e+18 6.415717e+18
 [11] 1.079104e+18 1.079104e+18 1.079104e+18 5.231087e+17 1.009804e+17
 [16] 1.009804e+17 1.009804e+17 5.730581e+14 5.730581e+14 5.730581e+14
 [21] 5.730581e+14 3.459380e+14 3.459380e+14 1.796655e+14 3.646244e+13
 [26] 3.646244e+13 3.646244e+13 3.646244e+13 3.646244e+13 3.646244e+13
 [31] 3.646244e+13 1.079305e+13 1.079305e+13 2.444531e+12 2.444531e+12
 [36] 2.444531e+12 9.267242e+08 9.267242e+08 9.267242e+08 9.267242e+08
 [41] 9.267242e+08 9.267242e+08 9.267242e+08 9.244547e+08 9.244547e+08
 [46] 5.922146e+08 5.922146e+08 2.279275e+08 2.279275e+08 2.279275e+08
 [51] 6.935241e+07 2.854572e+06 2.854572e+06 2.854572e+06 2.854572e+06
 [56] 2.854572e+06 2.854572e+06 2.854572e+06 1.790459e+06 1.659610e+06
 [61] 1.659610e+06 1.659610e+06 1.659610e+06 1.659610e+06 1.633226e+06
 [66] 1.633226e+06 1.633226e+06 1.467447e+06 1.391857e+06 1.391857e+06
 [71] 1.391857e+06 1.344803e+06 1.344803e+06 1.344803e+06 1.344803e+06
 [76] 1.190883e+06 1.190883e+06 1.190883e+06 1.190883e+06 1.190883e+06
 [81] 1.163045e+06 1.161186e+06 1.161186e+06 1.076288e+06 1.076288e+06
 [86] 1.076288e+06 1.076288e+06 1.076288e+06 1.010007e+06 1.010007e+06
 [91] 1.010007e+06 9.034392e+05 9.034392e+05 9.034392e+05 9.034392e+05
 [96] 8.420109e+05 7.526046e+05 7.526046e+05 6.943003e+05 6.943003e+05
[101] 6.943003e+05 6.887377e+05 6.887377e+05 4.803123e+05 4.803123e+05
[106] 4.803123e+05 4.803123e+05 4.803123e+05 4.803123e+05 4.803123e+05
[111] 3.987593e+05 3.987593e+05 3.987593e+05 3.987593e+05 3.987593e+05
[116] 3.987593e+05 3.987593e+05 2.240634e+05 2.240634e+05 2.240634e+05
[121] 2.240634e+05 2.240634e+05 2.240634e+05 2.240634e+05 2.240634e+05
[126] 2.240634e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[131] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[136] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[141] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[146] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[151] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[156] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[161] 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05 1.815096e+05
[166] 1.815096e+05 1.726108e+05 1.726108e+05 1.726108e+05 1.726108e+05
[171] 1.726108e+05 1.726108e+05 1.726108e+05 1.726108e+05 1.726108e+05
[176] 1.528724e+05 1.528724e+05 1.528724e+05 1.528724e+05 1.528724e+05
[181] 1.528724e+05 1.528724e+05 1.528724e+05 1.528724e+05 1.528724e+05
[186] 1.528724e+05 1.528724e+05 1.501007e+05 1.501007e+05 1.501007e+05
[191] 1.501007e+05 1.501007e+05 1.501007e+05 1.501007e+05 1.501007e+05
[196] 1.501007e+05 1.501007e+05 1.501007e+05 1.501007e+05 1.501007e+05

$member$pop
            [,1]       [,2]       [,3]
 [1,]  303.00861 0.93865870 0.43070371
 [2,]  125.70329 0.93699341 0.68231735
 [3,]  950.25693 0.82961074 0.10006967
 [4,]   26.11941 0.65957863 0.87397189
 [5,]   36.40051 0.92065051 1.00718984
 [6,]  517.59795 0.82230239 0.25323764
 [7,]  534.48000 0.95919049 0.27484549
 [8,]  329.63667 0.93177646 0.40667472
 [9,]  120.24366 0.86125437 0.64187532
[10,]   45.82212 0.97242340 0.98878324
[11,]   90.74237 0.70679047 0.62498897
[12,]  106.67036 0.96865880 0.74437280
[13,] 1112.43672 0.03165114 0.03745701
[14,]  287.03175 0.61898476 0.33543164
[15,]   59.73651 0.89630204 0.84975464
[16,]   39.85863 0.95163150 1.01235910
[17,]  131.76822 0.96379107 0.68686369
[18,]  120.26809 0.90634058 0.67138786
[19,]   50.78191 0.99930662 0.99425998
[20,]   47.42830 0.96515468 0.97971130
[21,]  464.69055 0.96935784 0.32166021
[22,]   39.38042 0.98705837 1.05538559
[23,]  411.97581 0.97587490 0.36401264
[24,]  395.71469 0.79923381 0.30855587
[25,]   71.09033 0.90383479 0.82386084
[26,]  254.96967 0.75787122 0.40660848
[27,]   48.59215 0.98121784 0.97911005
[28,]  537.64964 0.92917519 0.26677168
[29,]  541.97958 0.91622639 0.26199355
[30,]  503.27617 0.96555994 0.31642032
[31,]  170.50347 0.82330578 0.53209172
[32,]  493.40508 0.83622407 0.26704317
[33,]   51.22575 0.92993802 0.91609808
[34,]  604.93447 0.89789695 0.23059859
[35,]  251.15915 0.96034071 0.50087027
[36,]  324.11975 0.92895107 0.40986145
[37,] 1044.71951 0.51740605 0.05988640
[38,]  124.76571 0.68473732 0.54548504
[39,]   43.85729 0.95409051 0.98455869
[40,]  298.54099 0.88141436 0.41040530
[41,]  263.77065 0.76702300 0.39812714
[42,]  185.05921 0.72181670 0.46326458
[43,]  575.54668 0.97117505 0.26139915
[44,]   71.43534 0.98476300 0.87639072
[45,]   58.90404 0.99127246 0.93774788
[46,]  420.25369 0.90933716 0.33388891
[47,]  443.15999 0.89065778 0.30873058
[48,]   35.96453 0.95970444 1.04780876
[49,]  244.03641 0.94037010 0.48898371
[50,]   86.70831 0.78168174 0.67533412

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
35.9645256  0.9597044 -0.1000000  1.0478088 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] -0.1

$fitted.values
 [1] 1143.969 1188.553 1212.533 1228.376 1227.687 1244.331 1279.359 1279.445
 [9] 1240.016 1284.390 1322.404 1483.242 1548.796 1601.639 1561.516 1576.940
[17] 1655.920 1730.466 1844.821 1952.464

$residuals
 [1] -197.8356163 -225.8225333 -142.9539543  -56.5793251  -49.5711703
 [6]  -58.5212840  -40.0012916    9.1158727  -32.3100257   -5.9812875
[11]   38.1883547   57.5423804   26.2388787   94.3204036   83.1732995
[16]   49.0912114   -0.8806148   25.1335168   42.5992247   39.4303111

$rss
[1] 150100.7

$cov.unscaled
             gamma         delta           rho            nu
gamma 44.094884722  6.749280e-01 -5.5820271808 -2.603953e-03
delta  0.674927962  1.035995e-02 -0.0857610550 -3.036722e-05
rho   -5.582027181 -8.576106e-02  0.7101813746  2.278109e-04
nu    -0.002603953 -3.036722e-05  0.0002278109  3.367604e-06

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
35.9645  0.9597 -0.1000  1.0478 

> summary( cesDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    vrs = TRUE, method = "DE", rho = -0.1, random.seed = 234, 
    control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming an additive error term
Coefficient 'rho' was fixed at -0.1 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  35.9645   575.2683   0.063    0.950    
delta   0.9597     8.8177   0.109    0.913    
rho    -0.1000    73.0064  -0.001    0.999    
nu      1.0478     0.1590   6.591 4.37e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 86.6316 
Multiple R-squared: 0.915203 

> coef( cesDeVrs )
     gamma      delta        rho         nu 
35.9645256  0.9597044 -0.1000000  1.0478088 
> vcov( cesDeVrs )
             gamma        delta           rho           nu
gamma 330933.67273 5065.3582794 -41893.311840 -19.54275706
delta   5065.35828   77.7518053   -643.639758  -0.22790706
rho   -41893.31184 -643.6397575   5329.936388   1.70972871
nu       -19.54276   -0.2279071      1.709729   0.02527399
> coef( summary( cesDeVrs ) )
        Estimate  Std. Error      t value     Pr(>|t|)
gamma 35.9645256 575.2683484  0.062517824 9.501505e-01
delta  0.9597044   8.8176984  0.108838428 9.133306e-01
rho   -0.1000000  73.0064133 -0.001369743 9.989071e-01
nu     1.0478088   0.1589779  6.590906385 4.371495e-11
> 
> ## DE, multErr, CRS
> cesDeMe <- cesEst( "qOutput", xxNames, germanFarms, method = "DE",
+    control = DEoptim.control( trace = FALSE ), multErr = TRUE, rho = -0.2 )
> print.default( cesDeMe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
48.30514  1.00000 

$optim$bestval
[1] 0.1157039

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   1.029247e+09 0.8998250
2   9.443653e+07 0.4777960
3   1.586452e+07 0.5769885
4   1.586452e+07 0.5769885
5   1.586452e+07 0.5769885
6   1.586452e+07 0.5769885
7   1.586452e+07 0.5769885
8   5.046849e+07 0.9187157
9   1.586452e+07 0.9269322
10  1.586452e+07 0.9269322
11  3.906984e+05 0.9694532
12  3.906984e+05 0.9694532
13  3.906984e+05 0.9694532
14  3.906984e+05 0.9694532
15  3.906984e+05 0.9694532
16  3.906984e+05 0.9694532
17  3.906984e+05 0.9694532
18  3.906984e+05 0.9694532
19  1.921817e+05 0.9068964
20  1.921817e+05 0.9068964
21  1.921817e+05 0.9068964
22  1.921817e+05 0.9068964
23  1.369577e+05 0.9603498
24  5.232938e+04 0.7685889
25  5.232938e+04 0.7685889
26  5.232938e+04 0.7685889
27  5.232938e+04 0.7685889
28  6.066122e+03 0.8622967
29  6.066122e+03 0.8731697
30  6.066122e+03 0.8731697
31  6.066122e+03 0.8731697
32  2.580662e+03 0.8769150
33  2.580662e+03 0.9876282
34  2.580662e+03 0.9876282
35  2.580662e+03 0.9876282
36  2.580662e+03 0.9876282
37  1.835844e+03 0.9555086
38  1.835844e+03 0.9555086
39  1.835844e+03 0.9555086
40  1.096042e+03 0.8459284
41  1.096042e+03 0.8459284
42  1.301494e+03 0.9761802
43  6.558115e+02 0.9770034
44  6.672795e+01 0.9843717
45  6.672795e+01 0.9843717
46  6.672795e+01 0.9843717
47  6.672795e+01 0.9843717
48  6.672795e+01 0.9843717
49  6.672795e+01 0.9884057
50  6.672795e+01 0.9884057
51  6.672795e+01 0.9884057
52  6.672795e+01 0.9884057
53  6.672795e+01 0.9884057
54  6.672795e+01 0.9884057
55  5.559778e+01 0.9578879
56  4.083580e+01 0.9851428
57  4.083580e+01 0.9851428
58  2.167787e+01 0.8059279
59  2.167787e+01 0.8059279
60  2.167787e+01 0.8059279
61  2.167787e+01 0.8059279
62  2.167787e+01 0.8059279
63  3.681290e+01 0.9460908
64  2.860675e+01 0.8792655
65  4.973059e+01 0.9996715
66  4.492475e+01 0.9827414
67  4.492475e+01 0.9827414
68  4.492475e+01 0.9827414
69  4.562517e+01 0.9867311
70  4.562517e+01 0.9867311
71  4.562517e+01 0.9867311
72  4.673026e+01 0.9927507
73  4.673026e+01 0.9927507
74  4.673026e+01 0.9927507
75  4.673026e+01 0.9927507
76  4.701500e+01 0.9946108
77  4.701500e+01 0.9946108
78  4.701500e+01 0.9946108
79  4.797802e+01 0.9988396
80  4.797802e+01 0.9988396
81  4.797802e+01 0.9988396
82  4.797802e+01 0.9988396
83  4.797802e+01 0.9988396
84  4.797802e+01 0.9988396
85  4.797802e+01 0.9988396
86  4.797802e+01 0.9988396
87  4.797802e+01 0.9988396
88  4.797802e+01 0.9988396
89  4.797802e+01 0.9988396
90  4.805275e+01 0.9988987
91  4.805275e+01 0.9988987
92  4.823950e+01 0.9997112
93  4.823950e+01 0.9997112
94  4.823950e+01 0.9997112
95  4.823950e+01 0.9997112
96  4.823950e+01 0.9997112
97  4.823950e+01 0.9997112
98  4.826353e+01 0.9999924
99  4.830122e+01 0.9999665
100 4.830122e+01 0.9999665
101 4.830122e+01 0.9999665
102 4.830122e+01 0.9999665
103 4.830122e+01 0.9999665
104 4.830122e+01 0.9999665
105 4.830122e+01 0.9999665
106 4.830122e+01 0.9999665
107 4.830067e+01 0.9999741
108 4.830067e+01 0.9999741
109 4.831687e+01 0.9999957
110 4.831687e+01 0.9999957
111 4.831158e+01 0.9999957
112 4.831158e+01 0.9999957
113 4.831158e+01 0.9999957
114 4.830476e+01 0.9999990
115 4.830476e+01 0.9999990
116 4.830476e+01 0.9999990
117 4.830476e+01 0.9999990
118 4.830476e+01 0.9999990
119 4.830476e+01 0.9999990
120 4.830476e+01 0.9999990
121 4.830476e+01 0.9999990
122 4.830476e+01 0.9999990
123 4.830800e+01 0.9999996
124 4.830477e+01 0.9999999
125 4.830477e+01 0.9999999
126 4.830477e+01 0.9999999
127 4.830477e+01 0.9999999
128 4.830476e+01 0.9999999
129 4.830498e+01 0.9999999
130 4.830498e+01 0.9999999
131 4.830520e+01 0.9999999
132 4.830563e+01 1.0000000
133 4.830527e+01 1.0000000
134 4.830527e+01 1.0000000
135 4.830527e+01 1.0000000
136 4.830515e+01 1.0000000
137 4.830515e+01 1.0000000
138 4.830515e+01 1.0000000
139 4.830515e+01 1.0000000
140 4.830515e+01 1.0000000
141 4.830515e+01 1.0000000
142 4.830515e+01 1.0000000
143 4.830515e+01 1.0000000
144 4.830508e+01 1.0000000
145 4.830516e+01 1.0000000
146 4.830516e+01 1.0000000
147 4.830516e+01 1.0000000
148 4.830516e+01 1.0000000
149 4.830516e+01 1.0000000
150 4.830516e+01 1.0000000
151 4.830514e+01 1.0000000
152 4.830514e+01 1.0000000
153 4.830514e+01 1.0000000
154 4.830514e+01 1.0000000
155 4.830514e+01 1.0000000
156 4.830514e+01 1.0000000
157 4.830514e+01 1.0000000
158 4.830514e+01 1.0000000
159 4.830514e+01 1.0000000
160 4.830514e+01 1.0000000
161 4.830514e+01 1.0000000
162 4.830514e+01 1.0000000
163 4.830514e+01 1.0000000
164 4.830514e+01 1.0000000
165 4.830514e+01 1.0000000
166 4.830514e+01 1.0000000
167 4.830514e+01 1.0000000
168 4.830514e+01 1.0000000
169 4.830514e+01 1.0000000
170 4.830514e+01 1.0000000
171 4.830514e+01 1.0000000
172 4.830514e+01 1.0000000
173 4.830514e+01 1.0000000
174 4.830514e+01 1.0000000
175 4.830514e+01 1.0000000
176 4.830514e+01 1.0000000
177 4.830514e+01 1.0000000
178 4.830514e+01 1.0000000
179 4.830514e+01 1.0000000
180 4.830514e+01 1.0000000
181 4.830514e+01 1.0000000
182 4.830514e+01 1.0000000
183 4.830514e+01 1.0000000
184 4.830514e+01 1.0000000
185 4.830514e+01 1.0000000
186 4.830514e+01 1.0000000
187 4.830514e+01 1.0000000
188 4.830514e+01 1.0000000
189 4.830514e+01 1.0000000
190 4.830514e+01 1.0000000
191 4.830514e+01 1.0000000
192 4.830514e+01 1.0000000
193 4.830514e+01 1.0000000
194 4.830514e+01 1.0000000
195 4.830514e+01 1.0000000
196 4.830514e+01 1.0000000
197 4.830514e+01 1.0000000
198 4.830514e+01 1.0000000
199 4.830514e+01 1.0000000
200 4.830514e+01 1.0000000

$member$bestvalit
  [1] 5986.1080027 5372.1952547 4087.2076735 4087.2076735 4087.2076735
  [6] 4087.2076735 4087.2076735 4037.1738019 3388.5035586 3388.5035586
 [11] 1667.9346763 1667.9346763 1667.9346763 1667.9346763 1667.9346763
 [16] 1667.9346763 1667.9346763 1667.9346763 1508.8789002 1508.8789002
 [21] 1508.8789002 1508.8789002 1319.7028916 1255.1137071 1255.1137071
 [26] 1255.1137071 1255.1137071  585.3327454  576.0289828  576.0289828
 [31]  576.0289828  404.4946509  325.3941973  325.3941973  325.3941973
 [36]  325.3941973  293.6972533  293.6972533  293.6972533  283.2701214
 [41]  283.2701214  231.0869073  146.9273332    3.1902039    3.1902039
 [46]    3.1902039    3.1902039    3.1902039    2.9186685    2.9186685
 [51]    2.9186685    2.9186685    2.9186685    2.9186685    2.2218078
 [56]    0.3279560    0.3279560    0.1571841    0.1571841    0.1571841
 [61]    0.1571841    0.1571841    0.1534015    0.1428414    0.1344012
 [66]    0.1184127    0.1184127    0.1184127    0.1176199    0.1176199
 [71]    0.1176199    0.1167292    0.1167292    0.1167292    0.1167292
 [76]    0.1166507    0.1166507    0.1166507    0.1159149    0.1159149
 [81]    0.1159149    0.1159149    0.1159149    0.1159149    0.1159149
 [86]    0.1159149    0.1159149    0.1159149    0.1159149    0.1158549
 [91]    0.1158549    0.1157428    0.1157428    0.1157428    0.1157428
 [96]    0.1157428    0.1157428    0.1157186    0.1157085    0.1157085
[101]    0.1157085    0.1157085    0.1157085    0.1157085    0.1157085
[106]    0.1157085    0.1157074    0.1157074    0.1157058    0.1157058
[111]    0.1157049    0.1157049    0.1157049    0.1157040    0.1157040
[116]    0.1157040    0.1157040    0.1157040    0.1157040    0.1157040
[121]    0.1157040    0.1157040    0.1157040    0.1157039    0.1157039
[126]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[131]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[136]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[141]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[146]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[151]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[156]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[161]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[166]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[171]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[176]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[181]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[186]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[191]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039
[196]    0.1157039    0.1157039    0.1157039    0.1157039    0.1157039

$member$pop
          [,1] [,2]
 [1,] 48.30514    1
 [2,] 48.30514    1
 [3,] 48.30514    1
 [4,] 48.30514    1
 [5,] 48.30514    1
 [6,] 48.30514    1
 [7,] 48.30514    1
 [8,] 48.30514    1
 [9,] 48.30514    1
[10,] 48.30514    1
[11,] 48.30514    1
[12,] 48.30514    1
[13,] 48.30514    1
[14,] 48.30514    1
[15,] 48.30514    1
[16,] 48.30514    1
[17,] 48.30514    1
[18,] 48.30514    1
[19,] 48.30514    1
[20,] 48.30514    1
[21,] 48.30514    1
[22,] 48.30514    1
[23,] 48.30514    1
[24,] 48.30514    1
[25,] 48.30514    1
[26,] 48.30514    1
[27,] 48.30514    1
[28,] 48.30514    1
[29,] 48.30514    1
[30,] 48.30514    1
[31,] 48.30514    1
[32,] 48.30514    1
[33,] 48.30514    1
[34,] 48.30514    1
[35,] 48.30514    1
[36,] 48.30514    1
[37,] 48.30514    1
[38,] 48.30514    1
[39,] 48.30514    1
[40,] 48.30514    1
[41,] 48.30514    1
[42,] 48.30514    1
[43,] 48.30514    1
[44,] 48.30514    1
[45,] 48.30514    1
[46,] 48.30514    1
[47,] 48.30514    1
[48,] 48.30514    1
[49,] 48.30514    1
[50,] 48.30514    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
48.30514  1.00000 -0.20000 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] TRUE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] -0.2

$fitted.values
 [1] 1130.340 1168.984 1192.654 1203.281 1203.281 1218.739 1251.586 1254.484
 [9] 1216.323 1259.315 1293.129 1442.874 1502.773 1554.942 1522.578 1539.968
[17] 1620.154 1693.578 1802.265 1902.739

$residuals
 [1] -0.177890778 -0.194117040 -0.108915660 -0.026513939 -0.021135371
 [6] -0.027390307 -0.009818257  0.026801371 -0.007109801  0.015048092
[11]  0.050855860  0.065654176  0.046965342  0.086810120  0.077146482
[16]  0.054380670  0.021303708  0.035967059  0.046166941  0.045791346

$rss
[1] 0.1157039

$cov.unscaled
              gamma         delta           rho
gamma  7.182349e+04  3.395731e+02 -2.368897e+15
delta  3.395731e+02  1.620073e+00 -1.697941e+13
rho   -2.368897e+15 -1.697941e+13  2.844778e+27

attr(,"class")
[1] "cesEst" "list"  
> print( cesDeMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
48.31  1.00 -0.20 

> summary( cesDeMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = xxNames, data = germanFarms, 
    method = "DE", multErr = TRUE, rho = -0.2, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
assuming a multiplicative error term
Coefficient 'rho' was fixed at -0.2 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.831e+01  2.038e+01    2.37   0.0178 *  
delta  1.000e+00  9.681e-02   10.33   <2e-16 ***
rho   -2.000e-01  4.057e+12    0.00   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.07606046 
Multiple R-squared: 0.8722098 

> vcov( cesDeMe )
              gamma         delta           rho
gamma  4.155128e+02  1.964496e+00 -1.370453e+13
delta  1.964496e+00  9.372434e-03 -9.822917e+10
rho   -1.370453e+13 -9.822917e+10  1.645759e+25
> 
> 

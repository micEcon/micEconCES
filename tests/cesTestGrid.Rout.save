
R version 2.12.2 (2011-02-25)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i486-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: survival
Loading required package: splines
Loading required package: lmtest
Loading required package: zoo
Loading required package: miscTools
Loading required package: micEcon
Loading required package: np
Loading required package: boot

Attaching package: 'boot'

The following object(s) are masked from 'package:car':

    logit

The following object(s) are masked from 'package:survival':

    aml

The following object(s) are masked from 'package:lattice':

    melanoma

Loading required package: cubature
Nonparametric Kernel Methods for Mixed Datatypes (version 0.40-3)
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: David Ardia and Katharine Mullen
> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> 
> 
> ############  cesEstGridRho  ################
> ## CES: Land & Intermediate inputs
> ## Nelder-Mead, CRS
> cesGridNm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ),
+    method = "Nelder-Mead" )
> print.default( cesGridNm ) 
$optim
$optim$par
     gamma      delta 
165.451976   1.873604 

$optim$value
[1] 153698.6

$optim$counts
function gradient 
     253       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
165.451976   1.873604   0.400000 

$iter
[1] 253

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Nelder-Mead"

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.421 1175.322 1202.310 1201.676 1203.370 1218.548 1251.723 1262.176
 [9] 1220.439 1267.590 1296.949 1447.258 1504.935 1566.003 1546.893 1573.324
[17] 1675.257 1763.352 1883.031 1988.798

$residuals
 [1] -199.287826 -212.591141 -132.731035  -29.879531  -25.253543  -32.737675
 [7]  -12.365274   26.384897  -12.732401   10.818020   63.643561   93.525968
[13]   70.099403  129.956124   97.796473   52.706943  -20.216796   -7.752477
[19]    4.388877    3.096481

$rss
[1] 153698.6

$cov.unscaled
            gamma       delta         rho
gamma 25044.31400 204.3996978 40.13715081
delta   204.39970   1.6682512  0.32760344
rho      40.13715   0.3276034  0.06433956

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156353.9       FALSE
6  1.2 162424.9       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma   delta     rho 
165.452   1.874   0.400 

> summary( cesGridNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 253 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.452  13873.133   0.012    0.990
delta     1.874    113.227   0.017    0.987
rho       0.400     22.236   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

> coef( cesGridNm )
     gamma      delta        rho 
165.451976   1.873604   0.400000 
> vcov( cesGridNm )
            gamma      delta         rho
gamma 192463825.5 1570797.58 308451.2353
delta   1570797.6   12820.40   2517.6099
rho      308451.2    2517.61    494.4451
> coef( summary( cesGridNm ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.451976 13873.13323 0.01192607 0.9904846
delta   1.873604   113.22718 0.01654730 0.9867978
rho     0.400000    22.23612 0.01798875 0.9856478
> fitted( cesGridNm )
 [1] 1145.421 1175.322 1202.310 1201.676 1203.370 1218.548 1251.723 1262.176
 [9] 1220.439 1267.590 1296.949 1447.258 1504.935 1566.003 1546.893 1573.324
[17] 1675.257 1763.352 1883.031 1988.798
> residuals( cesGridNm )
 [1] -199.287826 -212.591141 -132.731035  -29.879531  -25.253543  -32.737675
 [7]  -12.365274   26.384897  -12.732401   10.818020   63.643561   93.525968
[13]   70.099403  129.956124   97.796473   52.706943  -20.216796   -7.752477
[19]    4.388877    3.096481
> plot( cesGridNm )
> 
> ## Nelder-Mead, VRS
> cesGridNmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "NM", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNmVrs )
$optim
$optim$par
    gamma     delta        nu 
2.2576334 0.8649508 1.5670310 

$optim$value
[1] 50384.7

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 2.2576334  0.8649508 -0.4000000  1.5670310 

$iter
[1] 502

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Nelder-Mead"

$start
   gamma    delta       nu 
6.258033 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1] 1007.271 1093.638 1117.146 1174.866 1168.337 1193.025 1242.491 1218.253
 [9] 1172.984 1223.563 1293.257 1535.020 1646.262 1699.194 1591.246 1587.502
[17] 1648.860 1727.290 1882.857 2047.312

$residuals
 [1]  -61.137841 -130.907506  -47.566719   -3.069683    9.779173   -7.215228
 [7]   -3.132706   70.308303   34.722374   54.845794   67.336035    5.764507
[13]  -71.227774   -3.234177   53.443505   38.529493    6.180242   28.310089
[19]    4.563365  -55.418100

$rss
[1] 50384.7

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.1166752387  1.578392e-02 -4.326885e-02 -1.289928e-04
delta  0.0157839156  2.144597e-03 -5.884107e-03 -1.199442e-05
rho   -0.0432688518 -5.884107e-03  1.614781e-02  3.025097e-05
nu    -0.0001289928 -1.199442e-05  3.025097e-05  3.451601e-06

$allRhoSum
   rho       rss convergence
1 -0.8  50626.98        TRUE
2 -0.4  50384.70       FALSE
3  0.0 151216.59       FALSE
4  0.4  68688.96       FALSE
5  0.8 105470.02       FALSE
6  1.2  70789.74       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
 2.258  0.865 -0.400  1.567 

> summary( cesGridNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  2.25763   17.14445   0.132    0.895    
delta  0.86495    2.32438   0.372    0.710    
rho   -0.40000    6.37810  -0.063    0.950    
nu     1.56703    0.09325  16.805   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.19198 
Multiple R-squared: 0.971536 

> coef( cesGridNmVrs )
     gamma      delta        rho         nu 
 2.2576334  0.8649508 -0.4000000  1.5670310 
> vcov( cesGridNmVrs )
             gamma        delta          rho           nu
gamma  293.9323295  39.76339049 -109.0044001 -0.324963176
delta   39.7633905   5.40274419  -14.8234473 -0.030216762
rho   -109.0044001 -14.82344731   40.6801337  0.076209303
nu      -0.3249632  -0.03021676    0.0762093  0.008695393
> coef( summary( cesGridNmVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  2.2576334 17.1444548  0.13168301 8.952350e-01
delta  0.8649508  2.3243804  0.37212100 7.098028e-01
rho   -0.4000000  6.3780980 -0.06271462 9.499938e-01
nu     1.5670310  0.0932491 16.80478547 2.251256e-63
> plot( cesGridNmVrs )
> 
> # using the CG optimization method
> cesGridCg <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridCg )
$optim
$optim$par
     gamma      delta 
27.9068606  0.4955612 

$optim$value
[1] 169812.4

$optim$counts
function gradient 
     764      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
27.9068606  0.4955612  1.2000000 

$iter
function gradient 
     764      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "CG"

$start
   gamma    delta 
27.90554  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1150.499 1191.180 1214.839 1227.279 1227.042 1242.844 1276.294 1278.175
 [9] 1239.772 1283.017 1318.137 1470.761 1532.158 1584.087 1549.139 1565.514
[17] 1643.929 1716.484 1825.582 1927.227

$residuals
 [1] -204.366049 -228.449350 -145.259629  -55.482559  -48.925516  -57.033884
 [7]  -36.936419   10.385547  -32.065721   -4.608809   42.455964   70.022711
[13]   42.876569  111.871950   95.550360   60.517571   11.111192   39.116120
[19]   61.838593   64.666686

$rss
[1] 169812.4

$cov.unscaled
           gamma     delta        rho
gamma 2146.45423 71.519690 -92.056247
delta   71.51969  2.383087  -3.067528
rho    -92.05625 -3.067528   3.948932

$allRhoSum
   rho      rss convergence
1 -0.8 699932.3       FALSE
2 -0.4 567846.4       FALSE
3  0.0 364164.0       FALSE
4  0.4 225699.0       FALSE
5  0.8 180872.4       FALSE
6  1.2 169812.4       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
27.9069  0.4956  1.2000 

> summary( cesGridCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 764 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   27.9069  4269.0433   0.007    0.995
delta    0.4956   142.2459   0.003    0.997
rho      1.2000   183.1089   0.007    0.995

Residual standard error: 92.14457 
Multiple R-squared: 0.9040671 

> coef( cesGridCg )
     gamma      delta        rho 
27.9068606  0.4955612  1.2000000 
> vcov( cesGridCg )
           gamma     delta        rho
gamma 18224730.8 607246.63 -781614.76
delta   607246.6  20233.89  -26045.22
rho    -781614.8 -26045.22   33528.88
> coef( summary( cesGridCg ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 27.9068606  4269.0433 0.006537029 0.9947842
delta  0.4955612   142.2459 0.003483835 0.9972203
rho    1.2000000   183.1089 0.006553476 0.9947711
> fitted( cesGridCg )
 [1] 1150.499 1191.180 1214.839 1227.279 1227.042 1242.844 1276.294 1278.175
 [9] 1239.772 1283.017 1318.137 1470.761 1532.158 1584.087 1549.139 1565.514
[17] 1643.929 1716.484 1825.582 1927.227
> residuals( cesGridCg )
 [1] -204.366049 -228.449350 -145.259629  -55.482559  -48.925516  -57.033884
 [7]  -36.936419   10.385547  -32.065721   -4.608809   42.455964   70.022711
[13]   42.876569  111.871950   95.550360   60.517571   11.111192   39.116120
[19]   61.838593   64.666686
> plot( cesGridCg )
> 
> # using the CG optimization method, VRS
> cesGridCgVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridCgVrs )
$optim
$optim$par
     gamma      delta         nu 
10.0279173  0.8660399  1.3052536 

$optim$value
[1] 75358.38

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
10.0279173  0.8660399  0.0000000  1.3052536 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "CG"

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1069.131 1127.402 1153.664 1180.262 1178.256 1198.384 1240.316 1235.180
 [9] 1190.227 1240.750 1289.916 1488.097 1572.237 1632.839 1572.518 1585.882
[17] 1672.076 1758.465 1900.171 2038.746

$residuals
 [1] -122.9980225 -164.6712955  -84.0846000   -8.4657483   -0.1394763
 [6]  -12.5735008   -0.9581171   53.3810213   17.4793206   37.6587043
[11]   70.6761942   52.6872297    2.7977576   63.1204337   72.1715116
[16]   40.1487975  -17.0366126   -2.8652052  -12.7505132  -46.8522749

$rss
[1] 75359.21

$cov.unscaled
              gamma         delta           rho            nu
gamma  4.9683760354  2.418508e-01 -6.674141e-01 -8.061446e-04
delta  0.2418507541  1.179941e-02 -3.258690e-02 -3.002531e-05
rho   -0.6674140778 -3.258690e-02  9.002403e-02  7.492278e-05
nu    -0.0008061446 -3.002531e-05  7.492278e-05  3.474107e-06

$allRhoSum
   rho       rss convergence
1 -0.8 620063.30       FALSE
2 -0.4 333290.62       FALSE
3  0.0  75359.21       FALSE
4  0.4 150282.47       FALSE
5  0.8 145977.55       FALSE
6  1.2 116269.78       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
10.028  0.866  0.000  1.305 

> summary( cesGridCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  10.0279   136.8234   0.073    0.942    
delta   0.8660     6.6678   0.130    0.897    
rho     0.0000    18.4176   0.000    1.000    
nu      1.3053     0.1144  11.408   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 61.38372 
Multiple R-squared: 0.957427 

> coef( cesGridCgVrs )
     gamma      delta        rho         nu 
10.0279173  0.8660399  0.0000000  1.3052536 
> vcov( cesGridCgVrs )
             gamma        delta           rho          nu
gamma 18720.645013  911.2841059 -2514.7899310 -3.03752088
delta   911.284106   44.4597279  -122.7861380 -0.11313419
rho   -2514.789931 -122.7861380   339.2070044  0.28230606
nu       -3.037521   -0.1131342     0.2823061  0.01309030
> coef( summary( cesGridCgVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 10.0279173 136.8234081  0.07329095 9.415746e-01
delta  0.8660399   6.6678128  0.12988366 8.966585e-01
rho    0.0000000  18.4175732  0.00000000 1.000000e+00
nu     1.3052536   0.1144128 11.40827978 3.801733e-30
> plot( cesGridCgVrs )
> 
> # using the SANN optimization method
> cesGridSann <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", random.seed = 1,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSann )
$optim
$optim$par
     gamma      delta 
26.6456166  0.5784538 

$optim$value
[1] 176322.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
26.6456166  0.5784538  0.8000000 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

$method
[1] "SANN"

$start
   gamma    delta 
22.58930  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1152.199 1194.947 1217.987 1232.939 1232.329 1248.261 1281.784 1282.024
 [9] 1244.234 1286.760 1323.001 1476.163 1538.311 1588.525 1550.566 1565.080
[17] 1639.246 1709.058 1816.338 1917.306

$residuals
 [1] -206.065522 -232.216799 -148.408250  -61.142198  -54.212672  -62.450650
 [7]  -42.425975    6.536860  -36.527411   -8.351487   37.591152   64.620979
[13]   36.723943  107.434219   94.123296   60.951245   15.793813   46.541748
[19]   71.082507   74.587820

$rss
[1] 176322.4

$cov.unscaled
          gamma      delta         rho
gamma 393.11862 12.7852829 -16.8540897
delta  12.78528  0.4158283  -0.5481963
rho   -16.85409 -0.5481963   0.7227724

$allRhoSum
   rho      rss convergence
1 -0.8 493550.6          NA
2  0.0 276683.0          NA
3  0.8 176322.4          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Coefficients:
  gamma   delta     rho 
26.6456  0.5785  0.8000 

> summary( cesGridSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   26.6456  1861.6609   0.014    0.989
delta    0.5785    60.5474   0.010    0.992
rho      0.8000    79.8251   0.010    0.992

Residual standard error: 93.8942 
Multiple R-squared: 0.9003894 

> coef( cesGridSann )
     gamma      delta        rho 
26.6456166  0.5784538  0.8000000 
> vcov( cesGridSann )
          gamma      delta         rho
gamma 3465781.4 112716.605 -148587.700
delta  112716.6   3665.993   -4832.965
rho   -148587.7  -4832.965    6372.049
> coef( summary( cesGridSann ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 26.6456166 1861.66093 0.014312819 0.9885804
delta  0.5784538   60.54744 0.009553727 0.9923773
rho    0.8000000   79.82512 0.010021908 0.9920038
> plot( cesGridSann )
> 
> # using the SANN optimization method, VRS
> cesGridSannVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", vrs = TRUE, random.seed = 21,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSannVrs )
$optim
$optim$par
    gamma     delta        nu 
4.3276772 0.9603577 1.5073915 

$optim$value
[1] 52703.57

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 4.3276772  0.9603577 -0.8000000  1.5073915 

$iter
[1] 10000

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

$method
[1] "SANN"

$start
 gamma  delta     nu 
4.4463 0.5000 1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1] 1023.812 1107.075 1130.274 1185.445 1179.207 1203.150 1251.120 1228.253
 [9] 1184.014 1233.459 1300.530 1533.628 1640.190 1691.758 1590.087 1587.999
[17] 1651.205 1729.720 1881.109 2039.130

$residuals
 [1]  -77.678854 -144.344596  -60.695176  -13.648215   -1.091417  -17.339744
 [7]  -11.762603   60.307674   23.692034   44.949983   60.062290    7.156072
[13]  -65.155581    4.201635   54.602084   38.031967    3.834900   25.879890
[19]    6.311267  -47.236203

$rss
[1] 52703.57

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.1398484685  5.984076e-03 -0.0502810258 -1.733671e-04
delta  0.0059840759  2.588693e-04 -0.0021781336 -4.458956e-06
rho   -0.0502810258 -2.178134e-03  0.0183311397  3.463990e-05
nu    -0.0001733671 -4.458956e-06  0.0000346399  3.423941e-06

$allRhoSum
   rho      rss convergence
1 -0.8 52703.57          NA
2  0.0 70790.31          NA
3  0.8 97582.46          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Coefficients:
  gamma   delta     rho      nu 
 4.3277  0.9604 -0.8000  1.5074 

> summary( cesGridSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  4.32768   19.19702   0.225    0.822    
delta  0.96036    0.82593   1.163    0.245    
rho   -0.80000    6.95024  -0.115    0.908    
nu     1.50739    0.09499  15.869   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 51.33399 
Multiple R-squared: 0.970226 

> coef( cesGridSannVrs )
     gamma      delta        rho         nu 
 4.3276772  0.9603577 -0.8000000  1.5073915 
> vcov( cesGridSannVrs )
             gamma       delta           rho           nu
gamma  368.5256520 15.76910701 -132.49946886 -0.456853342
delta   15.7691070  0.68216666   -5.73977036 -0.011750145
rho   -132.4994689 -5.73977036   48.30582189  0.091282312
nu      -0.4568533 -0.01175015    0.09128231  0.009022696
> coef( summary( cesGridSannVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma  4.3276772 19.19702196  0.2254348 8.216410e-01
delta  0.9603577  0.82593381  1.1627539 2.449294e-01
rho   -0.8000000  6.95023898 -0.1151040 9.083627e-01
nu     1.5073915  0.09498787 15.8693049 1.033794e-56
> plot( cesGridSannVrs )
> 
> # using the BFGS optimization method
> cesGridBfgs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgs )
$optim
$optim$par
     gamma      delta 
165.416166   1.873405 

$optim$value
[1] 153698.6

$optim$counts
function gradient 
     311       73 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
165.416166   1.873405   0.400000 

$iter
function gradient 
     311       73 

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "BFGS"

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.682 1203.375 1218.553 1251.729 1262.181
 [9] 1220.443 1267.595 1296.954 1447.264 1504.942 1566.009 1546.896 1573.326
[17] 1675.256 1763.350 1883.028 1988.794

$residuals
 [1] -199.290790 -212.595468 -132.735016  -29.885080  -25.258865  -32.743104
 [7]  -12.370804   26.380374  -12.737239   10.813556   63.638344   93.520163
[13]   70.093032  129.950726   97.793030   52.704670  -20.216390   -7.750328
[19]    4.392094    3.099990

$rss
[1] 153698.6

$cov.unscaled
            gamma       delta         rho
gamma 25028.06521 204.2973629 40.13042105
delta   204.29736   1.6676631  0.32759707
rho      40.13042   0.3275971  0.06435975

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156492.7       FALSE
6  1.2 162512.0       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.416   1.873   0.400 

> summary( cesGridBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 311 function and 73 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.416  13868.632   0.012    0.990
delta     1.873    113.207   0.017    0.987
rho       0.400     22.240   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

> coef( cesGridBfgs )
     gamma      delta        rho 
165.416166   1.873405   0.400000 
> vcov( cesGridBfgs )
            gamma       delta         rho
gamma 192338954.3 1570011.138 308399.5169
delta   1570011.1   12815.876   2517.5609
rho      308399.5    2517.561    494.6002
> coef( summary( cesGridBfgs ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.416166 13868.63203 0.01192736 0.9904836
delta   1.873405   113.20723 0.01654846 0.9867968
rho     0.400000    22.23961 0.01798593 0.9856501
> plot( cesGridBfgs )
> 
> # using the BFGS optimization method, VRS
> cesGridBfgsVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridBfgsVrs )
$optim
$optim$par
    gamma     delta        nu 
1.2492161 0.6466248 1.5666065 

$optim$value
[1] 50070.49

$optim$counts
function gradient 
     545      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho        nu 
1.2492161 0.6466248 0.0000000 1.5666065 

$iter
function gradient 
     545      100 

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "BFGS"

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1008.258 1094.162 1117.908 1174.525 1168.214 1192.858 1242.345 1218.874
 [9] 1173.299 1224.229 1293.513 1535.266 1646.207 1700.039 1592.720 1588.988
[17] 1649.408 1726.644 1881.288 2045.450

$residuals
 [1]  -62.125376 -131.431814  -48.328480   -2.728572    9.901919   -7.048462
 [7]   -2.987034   69.686738   34.407277   54.179556   67.079861    5.518344
[13]  -71.172296   -4.079306   51.969589   37.043396    5.632220   28.955409
[19]    6.132260  -53.556023

$rss
[1] 50070.49

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.690092e-02  2.503990e-02 -3.510931e-02 -9.302903e-05
delta  2.503990e-02  8.173779e-03 -1.146827e-02 -2.219424e-05
rho   -3.510931e-02 -1.146827e-02  1.609427e-02  2.848650e-05
nu    -9.302903e-05 -2.219424e-05  2.848650e-05  3.449553e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 50070.49       FALSE
4  0.4 53240.29       FALSE
5  0.8 59147.17       FALSE
6  1.2 55582.96       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.2492 0.6466 0.0000 1.5666 

> summary( cesGridBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 545 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.24922   13.87528   0.090    0.928    
delta  0.64662    4.52363   0.143    0.886    
rho    0.00000    6.34763   0.000    1.000    
nu     1.56661    0.09293  16.858   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.03523 
Multiple R-squared: 0.9717135 

> coef( cesGridBfgsVrs )
    gamma     delta       rho        nu 
1.2492161 0.6466248 0.0000000 1.5666065 
> vcov( cesGridBfgsVrs )
            gamma        delta          rho          nu
gamma 192.5233245  62.68798669 -87.89701963 -0.23290044
delta  62.6879867  20.46325415 -28.71109101 -0.05556382
rho   -87.8970196 -28.71109101  40.29238485  0.07131666
nu     -0.2329004  -0.05556382   0.07131666  0.00863604
> coef( summary( cesGridNmVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma  2.2576334 17.1444548  0.13168301 8.952350e-01
delta  0.8649508  2.3243804  0.37212100 7.098028e-01
rho   -0.4000000  6.3780980 -0.06271462 9.499938e-01
nu     1.5670310  0.0932491 16.80478547 2.251256e-63
> plot( cesGridBfgsVrs )
> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesGridBfgsCon <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsCon )
$optim
$optim$par
   gamma    delta 
49.14295  1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      25       25 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  0.80000 

$iter
function gradient 
      25       25 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "L-BFGS-B"

$start
   gamma    delta 
22.58930  0.50000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 0.8

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 9.413506e-01 1.667939e-02 4.666695e+10
delta 1.667939e-02 2.955558e-04 8.459843e+08
rho   4.666695e+10 8.459843e+08 1.543331e+23

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4        TRUE
2 -0.4 165832.4        TRUE
3  0.0 165832.4        TRUE
4  0.4 165832.4       FALSE
5  0.8 165832.4        TRUE
6  1.2 165832.4        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
gamma delta   rho 
49.14  1.00  0.80 

> summary( cesGridBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 25 function and 25 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  8.835e+01   0.556    0.578
delta 1.000e+00  1.565e+00   0.639    0.523
rho   8.000e-01  3.577e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesGridBfgsCon )
   gamma    delta      rho 
49.14295  1.00000  0.80000 
> vcov( cesGridBfgsCon )
             gamma        delta          rho
gamma 7.805320e+03 1.382992e+02 3.869446e+14
delta 1.382992e+02 2.450636e+00 7.014579e+12
rho   3.869446e+14 7.014579e+12 1.279671e+27
> coef( summary( cesGridBfgsCon ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 8.834772e+01 5.562447e-01 0.5780436
delta  1.00000 1.565451e+00 6.387937e-01 0.5229571
rho    0.80000 3.577249e+13 2.236355e-14 1.0000000
> plot( cesGridBfgsCon )
> 
> # using the L-BFGS-B optimization method with constrained parameters, VRS
> cesGridBfgsConVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsConVrs )
$optim
$optim$par
   gamma    delta       nu 
1.084423 0.634565 1.584593 

$optim$value
[1] 49966.45

$optim$counts
function gradient 
     137      137 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
   gamma    delta      rho       nu 
1.084423 0.634565 0.000000 1.584593 

$iter
function gradient 
     137      137 

$convergence
[1] FALSE

$message
[1] "NEW_X"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "L-BFGS-B"

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1] 1004.172 1091.848 1115.436 1174.031 1167.433 1192.383 1242.386 1217.693
 [9] 1172.065 1223.035 1293.673 1538.463 1651.301 1704.677 1594.094 1589.211
[17] 1647.944 1724.609 1880.164 2046.099

$residuals
 [1]  -58.039495 -129.117519  -45.856409   -2.234364   10.682838   -6.573018
 [7]   -3.027975   70.867857   35.640830   55.373431   66.919755    2.321556
[13]  -76.266818   -8.717528   50.595357   36.820287    7.096093   30.990992
[19]    7.256072  -54.204808

$rss
[1] 49966.45

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0579392389  2.148633e-02 -2.968736e-02 -8.034451e-05
delta  0.0214863331  7.988170e-03 -1.104432e-02 -2.176766e-05
rho   -0.0296873631 -1.104432e-02  1.527309e-02  2.755062e-05
nu    -0.0000803445 -2.176766e-05  2.755062e-05  3.448088e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45       FALSE
4  0.4 50252.44       FALSE
5  0.8 56767.62       FALSE
6  1.2 50579.58       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.0844 0.6346 0.0000 1.5846 

> summary( cesGridBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 137 function and 137 gradient calls
Message: NEW_X 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.08442   12.03125   0.090    0.928    
delta  0.63457    4.46733   0.142    0.887    
rho    0.00000    6.17714   0.000    1.000    
nu     1.58459    0.09281  17.073   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.98322 
Multiple R-squared: 0.9717722 

> coef( cesGridBfgsConVrs )
   gamma    delta      rho       nu 
1.084423 0.634565 0.000000 1.584593 
> vcov( cesGridBfgsConVrs )
            gamma        delta          rho           nu
gamma 144.7509106  53.67979185 -74.16861032 -0.200726495
delta  53.6797919  19.95702684 -27.59226361 -0.054382625
rho   -74.1686103 -27.59226361  38.15710415  0.068830343
nu     -0.2007265  -0.05438262   0.06883034  0.008614435
> coef( summary( cesGridBfgsConVrs ) )
      Estimate  Std. Error     t value     Pr(>|t|)
gamma 1.084423 12.03124726  0.09013386 9.281808e-01
delta 0.634565  4.46732883  0.14204575 8.870439e-01
rho   0.000000  6.17714369  0.00000000 1.000000e+00
nu    1.584593  0.09281398 17.07278230 2.366482e-65
> plot( cesGridBfgsConVrs )
> 
> # using the Levenberg-Marquardt optimization method
> cesGridLm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 165.423876366334, 1.87344744871233 
residual sum-of-squares: 153699
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
165.423876   1.873447   0.400000 

$iter
[1] 22

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.681 1203.375 1218.553 1251.728 1262.180
 [9] 1220.443 1267.595 1296.954 1447.264 1504.941 1566.009 1546.896 1573.327
[17] 1675.257 1763.352 1883.030 1988.796

$residuals
 [1] -199.290890 -212.595297 -132.734936  -29.884667  -25.258501  -32.742726
 [7]  -12.370427   26.380531  -12.736988   10.813697   63.638626   93.520475
[13]   70.093427  129.950875   97.792776   52.704151  -20.217542   -7.751907
[19]    4.390212    3.097979

$rss
[1] 153698.6

$cov.unscaled
            gamma      delta         rho
gamma 25031.51534 204.318963 40.13182460
delta   204.31896   1.667786  0.32759801
rho      40.13182   0.327598  0.06435538

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156028.7       FALSE
6  1.2 162374.1       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.424   1.873   0.400 

> summary( cesGridLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 22 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.424  13869.588   0.012    0.990
delta     1.873    113.211   0.017    0.987
rho       0.400     22.239   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

> coef( cesGridLm )
     gamma      delta        rho 
165.423876   1.873447   0.400000 
> vcov( cesGridLm )
            gamma       delta         rho
gamma 192365468.2 1570177.133 308410.3031
delta   1570177.1   12816.819   2517.5681
rho      308410.3    2517.568    494.5666
> coef( summary( cesGridLm ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.423876 13869.58789 0.01192709 0.9904838
delta   1.873447   113.21139 0.01654822 0.9867970
rho     0.400000    22.23885 0.01798654 0.9856496
> plot( cesGridLm )
> 
> # using the Levenberg-Marquardt optimization method, VRS
> cesGridLmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(coef["gamma"]) : NaNs produced
2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.165069324985032, 0.039375862397587, 1.58848816342804 
residual sum-of-squares: 49123
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
0.16506932 0.03937586 1.20000000 1.58848816 

$iter
[1] 47

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$start
   gamma    delta       nu 
27.90554  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1005.531 1091.710 1116.144 1171.216 1165.307 1190.161 1240.331 1218.113
 [9] 1171.374 1223.617 1293.036 1538.404 1650.579 1707.123 1598.527 1593.921
[17] 1650.480 1724.012 1877.487 2043.283

$residuals
 [1]  -59.3977607 -128.9800132  -46.5649000    0.5809323   12.8091247
 [6]   -4.3514307   -0.9728616   70.4483579   36.3321209   54.7918763
[11]   67.5569840    2.3800553  -75.5443215  -11.1640338   46.1623948
[16]   32.1102257    4.5597783   31.5880894    9.9336786  -51.3889320

$rss
[1] 49122.99

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.464972e-04  2.694964e-04 -2.283070e-03 -7.675387e-06
delta  2.694964e-04  2.123928e-04 -1.801904e-03 -2.984097e-06
rho   -2.283070e-03 -1.801904e-03  1.529043e-02  2.277279e-05
nu    -7.675387e-06 -2.984097e-06  2.277279e-05  3.446075e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45        TRUE
4  0.4 49665.41        TRUE
5  0.8 49384.15       FALSE
6  1.2 49122.99        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho      nu 
0.16507 0.03938 1.20000 1.58849 

> summary( cesGridLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 47 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.16507    0.92252   0.179    0.858    
delta  0.03938    0.72227   0.055    0.957    
rho    1.20000    6.12826   0.196    0.845    
nu     1.58849    0.09200  17.266   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.55955 
Multiple R-squared: 0.9722487 

> coef( cesGridLmVrs )
     gamma      delta        rho         nu 
0.16506932 0.03937586 1.20000000 1.58848816 
> vcov( cesGridLmVrs )
            gamma        delta         rho           nu
gamma  0.85104899  0.661923533 -5.60756034 -0.018851897
delta  0.66192353  0.521668349 -4.42574530 -0.007329388
rho   -5.60756034 -4.425745298 37.55557112  0.055933363
nu    -0.01885190 -0.007329388  0.05593336  0.008464076
> coef( summary( cesGridLmVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 0.16506932 0.92252316  0.17893244 8.579907e-01
delta 0.03937586 0.72226612  0.05451711 9.565232e-01
rho   1.20000000 6.12826004  0.19581414 8.447556e-01
nu    1.58848816 0.09200041 17.26609852 8.467703e-67
> plot( cesGridLmVrs )
> 
> # using the Newton-type optimization method implemented in nlm()
> cesGridNewton <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewton )
$nlm
$nlm$minimum
[1] 153698.6

$nlm$estimate
[1] 165.423876   1.873447

$nlm$gradient
[1] -9.986658e-07  1.850640e-04

$nlm$code
[1] 1

$nlm$iterations
[1] 70


$coefficients
     gamma      delta        rho 
165.423876   1.873447   0.400000 

$iter
[1] 70

$convergence
[1] TRUE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "Newton"

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.681 1203.375 1218.553 1251.728 1262.180
 [9] 1220.443 1267.595 1296.954 1447.264 1504.941 1566.009 1546.896 1573.327
[17] 1675.257 1763.352 1883.030 1988.796

$residuals
 [1] -199.290890 -212.595297 -132.734936  -29.884667  -25.258501  -32.742726
 [7]  -12.370427   26.380531  -12.736988   10.813697   63.638626   93.520475
[13]   70.093427  129.950875   97.792776   52.704151  -20.217542   -7.751907
[19]    4.390212    3.097979

$rss
[1] 153698.6

$cov.unscaled
            gamma      delta         rho
gamma 25031.51537 204.318963 40.13182463
delta   204.31896   1.667786  0.32759801
rho      40.13182   0.327598  0.06435538

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8       FALSE
4  0.4 153698.6        TRUE
5  0.8 180874.6        TRUE
6  1.2 169812.9        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.424   1.873   0.400 

> summary( cesGridNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 70 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.424  13869.588   0.012    0.990
delta     1.873    113.211   0.017    0.987
rho       0.400     22.239   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

> coef( cesGridNewton )
     gamma      delta        rho 
165.423876   1.873447   0.400000 
> vcov( cesGridNewton )
            gamma       delta         rho
gamma 192365468.5 1570177.135 308410.3033
delta   1570177.1   12816.819   2517.5681
rho      308410.3    2517.568    494.5666
> coef( summary( cesGridNewton ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.423876 13869.58790 0.01192709 0.9904838
delta   1.873447   113.21139 0.01654822 0.9867970
rho     0.400000    22.23885 0.01798654 0.9856496
> plot( cesGridNewton )
> 
> # using the Newton-type optimization method implemented in nlm(), VRS
> cesGridNewtonVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonVrs )
$nlm
$nlm$minimum
[1] 50253.65

$nlm$estimate
[1] 1.364098 0.654290 1.555338

$nlm$gradient
[1]  -33428.09  231697.83 -218084.20

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
   gamma    delta      rho       nu 
1.364098 0.654290 0.000000 1.555338 

$iter
[1] 100

$convergence
[1] FALSE

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Newton"

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1010.328 1095.077 1118.909 1174.261 1168.132 1192.573 1241.712 1219.016
 [9] 1173.497 1224.376 1292.779 1532.515 1642.219 1696.305 1591.072 1588.060
[17] 1649.500 1727.053 1881.046 2044.015

$residuals
 [1]  -64.1949005 -132.3465370  -49.3296295   -2.4644740    9.9838110
 [6]   -6.7631602   -2.3539750   69.5450089   34.2091619   54.0326417
[11]   67.8138176    8.2689534  -67.1845131   -0.3460493   53.6167279
[16]   37.9713639    5.5394736   28.5464332    6.3747391  -52.1204926

$rss
[1] 50253.65

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0917967086  2.757090e-02 -3.905133e-02 -1.020105e-04
delta  0.0275708962  8.301569e-03 -1.176609e-02 -2.248921e-05
rho   -0.0390513318 -1.176609e-02  1.668029e-02  2.914592e-05
nu    -0.0001020105 -2.248921e-05  2.914592e-05  3.453859e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 59749.78        TRUE
3  0.0 50253.65       FALSE
4  0.4 51505.55       FALSE
5  0.8 98004.85        TRUE
6  1.2 98745.97        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.3641 0.6543 0.0000 1.5553 

> summary( cesGridNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.36410   15.18736   0.090    0.928    
delta  0.65429    4.56719   0.143    0.886    
rho    0.00000    6.47397   0.000    1.000    
nu     1.55534    0.09316  16.696   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.12666 
Multiple R-squared: 0.97161 

> coef( cesGridNewtonVrs )
   gamma    delta      rho       nu 
1.364098 0.654290 0.000000 1.555338 
> vcov( cesGridNewtonVrs )
            gamma        delta          rho           nu
gamma 230.6559839  69.27690863 -98.12359826 -0.256320046
delta  69.2769086  20.85920739 -29.56445163 -0.056508248
rho   -98.1235983 -29.56445163  41.91227369  0.073234447
nu     -0.2563200  -0.05650825   0.07323445  0.008678452
> coef( summary( cesGridNewtonVrs ) )
      Estimate  Std. Error     t value     Pr(>|t|)
gamma 1.364098 15.18736264  0.08981793 9.284319e-01
delta 0.654290  4.56718813  0.14325883 8.860858e-01
rho   0.000000  6.47396893  0.00000000 1.000000e+00
nu    1.555338  0.09315821 16.69566296 1.409449e-62
> plot( cesGridNewtonVrs )
> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesGridPort <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPort )
$nlminb
$nlminb$par
   gamma    delta 
49.14295  1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$message
[1] "relative convergence (4)"

$nlminb$iterations
[1] 47

$nlminb$evaluations
function gradient 
      71       48 


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -0.80000 

$iter
[1] 47

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "PORT"

$start
 gamma  delta 
4.4463 0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] -0.8

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 6.863802e-03 9.644876e-06 2.754124e+09
delta 9.644876e-06 1.368849e-08 2.374645e+06
rho   2.754124e+09 2.374645e+06 1.183270e+23

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4        TRUE
2 -0.4 165832.4        TRUE
3  0.0 165832.4        TRUE
4  0.4 165832.4        TRUE
5  0.8 165832.4        TRUE
6  1.2 165832.4        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
gamma delta   rho 
49.14  1.00 -0.80 

> summary( cesGridPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence achieved after 47 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.914e+01  7.544e+00   6.514 7.31e-11 ***
delta  1.000e+00  1.065e-02  93.865  < 2e-16 ***
rho   -8.000e-01  3.132e+13   0.000        1    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesGridPort )
   gamma    delta      rho 
49.14295  1.00000 -0.80000 
> vcov( cesGridNm )
            gamma      delta         rho
gamma 192463825.5 1570797.58 308451.2353
delta   1570797.6   12820.40   2517.6099
rho      308451.2    2517.61    494.4451
> coef( summary( cesGridPort ) )
      Estimate   Std. Error       t value     Pr(>|t|)
gamma 49.14295 7.544006e+00  6.514172e+00 7.309177e-11
delta  1.00000 1.065363e-02  9.386475e+01 0.000000e+00
rho   -0.80000 3.132286e+13 -2.554045e-14 1.000000e+00
> plot( cesGridNm )
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesGridPortVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortVrs )
$nlminb
$nlminb$par
     gamma      delta         nu 
0.18391577 0.04069031 1.57430648 

$nlminb$objective
[1] 49189.91

$nlminb$convergence
[1] 1

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"

$nlminb$iterations
[1] 128

$nlminb$evaluations
function gradient 
     200      128 


$coefficients
     gamma      delta        rho         nu 
0.18391577 0.04069031 1.20000000 1.57430648 

$iter
[1] 128

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "PORT"

$start
   gamma    delta       nu 
27.90554  0.50000  1.00000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 1.2

$fitted.values
 [1] 1008.422 1093.350 1117.840 1171.596 1165.871 1190.491 1240.244 1218.819
 [9] 1172.202 1224.320 1292.764 1535.707 1646.436 1703.109 1596.836 1592.993
[17] 1650.591 1724.402 1876.994 2041.267

$residuals
 [1]  -62.2887960 -130.6192818  -48.2612166    0.2009635   12.2447484
 [6]   -4.6811880   -0.8861381   69.7420157   35.5040322   54.0881186
[11]   67.8288597    5.0771667  -71.4018092   -7.1497656   47.8530783
[16]   33.0378577    4.4485647   31.1977739   10.4267277  -49.3730846

$rss
[1] 49189.91

$cov.unscaled
              gamma         delta           rho            nu
gamma  4.550174e-04  3.248733e-04 -2.667069e-03 -8.691903e-06
delta  3.248733e-04  2.348802e-04 -1.931003e-03 -3.143046e-06
rho   -2.667069e-03 -1.931003e-03  1.587875e-02  2.322009e-05
nu    -8.691903e-06 -3.143046e-06  2.322009e-05  3.448727e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45        TRUE
4  0.4 49695.65       FALSE
5  0.8 49388.09       FALSE
6  1.2 49189.91       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma   delta     rho      nu 
0.18392 0.04069 1.20000 1.57431 

> summary( cesGridPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
Convergence NOT achieved after 128 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.18392    1.05788   0.174    0.862    
delta  0.04069    0.76006   0.054    0.957    
rho    1.20000    6.24930   0.192    0.848    
nu     1.57431    0.09210  17.094   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.5933 
Multiple R-squared: 0.972211 

> coef( cesGridPortVrs )
     gamma      delta        rho         nu 
0.18391577 0.04069031 1.20000000 1.57430648 
> vcov( cesGridPortVrs )
           gamma        delta         rho           nu
gamma  1.1191134  0.799024512 -6.55964571 -0.021377698
delta  0.7990245  0.577686943 -4.74929238 -0.007730309
rho   -6.5596457 -4.749292385 39.05371726  0.057109711
nu    -0.0213777 -0.007730309  0.05710971  0.008482130
> coef( summary( cesGridPortVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 0.18391577 1.05788156  0.17385289 8.619811e-01
delta 0.04069031 0.76005720  0.05353586 9.573050e-01
rho   1.20000000 6.24929734  0.19202159 8.477253e-01
nu    1.57430648 0.09209848 17.09372892 1.652601e-65
> plot( cesGridPortVrs )
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesGridDe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", random.seed = 321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
49.14295  1.00000 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   1.299827e+08 0.9260556
2   1.299827e+08 0.9260556
3   1.299827e+08 0.9260556
4   9.878497e+07 0.9610335
5   9.878497e+07 0.9610335
6   2.417960e+07 0.6212815
7   2.417960e+07 0.6212815
8   7.876781e+06 0.9112099
9   7.876781e+06 0.9112099
10  7.876781e+06 0.9112099
11  7.876781e+06 0.9112099
12  6.333666e+06 0.9864578
13  6.333666e+06 0.9864578
14  6.333666e+06 0.9864578
15  1.787849e+06 0.9411251
16  2.386718e+05 0.9608004
17  2.386718e+05 0.9608004
18  2.386718e+05 0.9691595
19  2.386718e+05 0.9691595
20  2.386718e+05 0.9691595
21  2.386718e+05 0.9691595
22  1.554979e+05 0.8877145
23  1.554979e+05 0.8877145
24  1.554979e+05 0.8877145
25  1.554979e+05 0.8877145
26  1.554979e+05 0.9560088
27  5.251829e+04 0.7206140
28  5.251829e+04 0.7885750
29  5.251829e+04 0.7885750
30  5.251829e+04 0.7885750
31  5.251829e+04 0.7885750
32  7.734893e+03 0.8364191
33  7.734893e+03 0.8364191
34  7.541848e+03 0.9760570
35  7.541848e+03 0.9760570
36  7.541848e+03 0.9760570
37  7.541848e+03 0.9760570
38  3.618086e+03 0.9638007
39  5.262416e+02 0.9691595
40  5.262416e+02 0.9691595
41  5.262416e+02 0.9691595
42  5.262416e+02 0.9881277
43  5.262416e+02 0.9881277
44  5.262416e+02 0.9881277
45  5.262416e+02 0.9881277
46  5.262416e+02 0.9881277
47  1.590132e+02 0.9684412
48  1.590132e+02 0.9684412
49  3.707907e+01 0.8997118
50  3.707907e+01 0.8997118
51  3.707907e+01 0.8997118
52  3.707907e+01 0.8997118
53  3.707907e+01 0.8997118
54  3.707907e+01 0.9034856
55  3.707907e+01 0.9034856
56  3.707907e+01 0.9034856
57  3.707907e+01 0.9034856
58  3.707907e+01 0.9034856
59  3.707907e+01 0.9034856
60  3.707907e+01 0.9034856
61  3.707907e+01 0.9034856
62  4.609847e+01 0.9728826
63  4.609847e+01 0.9732091
64  4.609847e+01 0.9732091
65  4.609847e+01 0.9732091
66  4.609847e+01 0.9732091
67  4.156479e+01 0.9438223
68  4.609847e+01 0.9845879
69  4.180560e+01 0.9507900
70  4.180560e+01 0.9507900
71  4.180560e+01 0.9507900
72  4.683951e+01 0.9855112
73  4.726171e+01 0.9881703
74  4.726171e+01 0.9881703
75  4.726171e+01 0.9881703
76  4.883825e+01 0.9992876
77  4.883825e+01 0.9992876
78  4.883825e+01 0.9992876
79  4.883825e+01 0.9992876
80  4.882995e+01 0.9986725
81  4.882995e+01 0.9986725
82  4.882995e+01 0.9986725
83  4.886542e+01 0.9979247
84  4.886542e+01 0.9979247
85  4.886542e+01 0.9979247
86  4.901283e+01 0.9986435
87  4.901283e+01 0.9986435
88  4.901283e+01 0.9986435
89  4.901283e+01 0.9986435
90  4.911242e+01 0.9994779
91  4.911242e+01 0.9994779
92  4.910479e+01 0.9998277
93  4.910479e+01 0.9998277
94  4.910479e+01 0.9998277
95  4.910479e+01 0.9998277
96  4.910479e+01 0.9998277
97  4.911789e+01 0.9998277
98  4.911789e+01 0.9998277
99  4.914755e+01 0.9998934
100 4.914795e+01 0.9999055
101 4.914795e+01 0.9999055
102 4.913038e+01 0.9999556
103 4.915792e+01 0.9999865
104 4.915792e+01 0.9999865
105 4.915189e+01 0.9999819
106 4.915189e+01 0.9999819
107 4.915019e+01 0.9999964
108 4.915019e+01 0.9999964
109 4.915019e+01 0.9999964
110 4.915019e+01 0.9999964
111 4.915019e+01 0.9999964
112 4.914287e+01 0.9999912
113 4.914273e+01 0.9999988
114 4.914273e+01 0.9999988
115 4.914273e+01 0.9999988
116 4.914565e+01 0.9999997
117 4.914565e+01 0.9999997
118 4.914376e+01 0.9999996
119 4.914376e+01 0.9999996
120 4.914376e+01 0.9999996
121 4.914387e+01 0.9999997
122 4.914387e+01 0.9999997
123 4.914387e+01 0.9999997
124 4.914138e+01 0.9999999
125 4.914138e+01 0.9999999
126 4.914342e+01 0.9999998
127 4.914288e+01 0.9999998
128 4.914302e+01 1.0000000
129 4.914314e+01 1.0000000
130 4.914314e+01 1.0000000
131 4.914314e+01 1.0000000
132 4.914302e+01 1.0000000
133 4.914302e+01 1.0000000
134 4.914302e+01 1.0000000
135 4.914302e+01 1.0000000
136 4.914270e+01 1.0000000
137 4.914289e+01 1.0000000
138 4.914289e+01 1.0000000
139 4.914297e+01 1.0000000
140 4.914286e+01 1.0000000
141 4.914286e+01 1.0000000
142 4.914295e+01 1.0000000
143 4.914295e+01 1.0000000
144 4.914295e+01 1.0000000
145 4.914295e+01 1.0000000
146 4.914298e+01 1.0000000
147 4.914293e+01 1.0000000
148 4.914293e+01 1.0000000
149 4.914295e+01 1.0000000
150 4.914295e+01 1.0000000
151 4.914295e+01 1.0000000
152 4.914295e+01 1.0000000
153 4.914295e+01 1.0000000
154 4.914295e+01 1.0000000
155 4.914295e+01 1.0000000
156 4.914295e+01 1.0000000
157 4.914295e+01 1.0000000
158 4.914295e+01 1.0000000
159 4.914295e+01 1.0000000
160 4.914295e+01 1.0000000
161 4.914295e+01 1.0000000
162 4.914295e+01 1.0000000
163 4.914295e+01 1.0000000
164 4.914295e+01 1.0000000
165 4.914295e+01 1.0000000
166 4.914295e+01 1.0000000
167 4.914295e+01 1.0000000
168 4.914295e+01 1.0000000
169 4.914295e+01 1.0000000
170 4.914295e+01 1.0000000
171 4.914295e+01 1.0000000
172 4.914295e+01 1.0000000
173 4.914295e+01 1.0000000
174 4.914295e+01 1.0000000
175 4.914295e+01 1.0000000
176 4.914295e+01 1.0000000
177 4.914295e+01 1.0000000
178 4.914295e+01 1.0000000
179 4.914295e+01 1.0000000
180 4.914295e+01 1.0000000
181 4.914295e+01 1.0000000
182 4.914295e+01 1.0000000
183 4.914295e+01 1.0000000
184 4.914295e+01 1.0000000
185 4.914295e+01 1.0000000
186 4.914295e+01 1.0000000
187 4.914295e+01 1.0000000
188 4.914295e+01 1.0000000
189 4.914295e+01 1.0000000
190 4.914295e+01 1.0000000
191 4.914295e+01 1.0000000
192 4.914295e+01 1.0000000
193 4.914295e+01 1.0000000
194 4.914295e+01 1.0000000
195 4.914295e+01 1.0000000
196 4.914295e+01 1.0000000
197 4.914295e+01 1.0000000
198 4.914295e+01 1.0000000
199 4.914295e+01 1.0000000
200 4.914295e+01 1.0000000

$member$bestvalit
  [1] 4.628893e+20 4.628893e+20 4.628893e+20 2.145065e+20 2.145065e+20
  [6] 1.094120e+20 1.094120e+20 1.866391e+18 1.866391e+18 1.866391e+18
 [11] 1.866391e+18 7.513744e+17 7.513744e+17 7.513744e+17 7.964112e+16
 [16] 1.253547e+15 1.253547e+15 1.189275e+15 1.189275e+15 1.189275e+15
 [21] 1.189275e+15 8.430141e+14 8.430141e+14 8.430141e+14 8.430141e+14
 [26] 5.482866e+14 2.755981e+14 1.795121e+14 1.795121e+14 1.795121e+14
 [31] 1.795121e+14 2.861137e+12 2.861137e+12 1.123767e+12 1.123767e+12
 [36] 1.123767e+12 1.123767e+12 2.759691e+11 4.845246e+09 4.845246e+09
 [41] 4.845246e+09 4.251070e+09 4.251070e+09 4.251070e+09 4.251070e+09
 [46] 4.251070e+09 2.753186e+08 2.753186e+08 2.368822e+05 2.368822e+05
 [51] 2.368822e+05 2.368822e+05 2.368822e+05 2.067115e+05 2.067115e+05
 [56] 2.067115e+05 2.067115e+05 2.067115e+05 2.067115e+05 2.067115e+05
 [61] 2.067115e+05 1.899335e+05 1.880289e+05 1.880289e+05 1.880289e+05
 [66] 1.880289e+05 1.798908e+05 1.780765e+05 1.765471e+05 1.765471e+05
 [71] 1.765471e+05 1.684273e+05 1.678753e+05 1.678753e+05 1.678753e+05
 [76] 1.665978e+05 1.665978e+05 1.665978e+05 1.665978e+05 1.662423e+05
 [81] 1.662423e+05 1.662423e+05 1.661892e+05 1.661892e+05 1.661892e+05
 [86] 1.661537e+05 1.661537e+05 1.661537e+05 1.661537e+05 1.659573e+05
 [91] 1.659573e+05 1.658615e+05 1.658615e+05 1.658615e+05 1.658615e+05
 [96] 1.658615e+05 1.658592e+05 1.658592e+05 1.658566e+05 1.658537e+05
[101] 1.658537e+05 1.658398e+05 1.658395e+05 1.658395e+05 1.658376e+05
[106] 1.658376e+05 1.658340e+05 1.658340e+05 1.658340e+05 1.658340e+05
[111] 1.658340e+05 1.658338e+05 1.658325e+05 1.658325e+05 1.658325e+05
[116] 1.658325e+05 1.658325e+05 1.658324e+05 1.658324e+05 1.658324e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1] [,2]
 [1,] 49.14295    1
 [2,] 49.14295    1
 [3,] 49.14295    1
 [4,] 49.14295    1
 [5,] 49.14295    1
 [6,] 49.14295    1
 [7,] 49.14295    1
 [8,] 49.14295    1
 [9,] 49.14295    1
[10,] 49.14295    1
[11,] 49.14295    1
[12,] 49.14295    1
[13,] 49.14295    1
[14,] 49.14295    1
[15,] 49.14295    1
[16,] 49.14295    1
[17,] 49.14295    1
[18,] 49.14295    1
[19,] 49.14295    1
[20,] 49.14295    1
[21,] 49.14295    1
[22,] 49.14295    1
[23,] 49.14295    1
[24,] 49.14295    1
[25,] 49.14295    1
[26,] 49.14295    1
[27,] 49.14295    1
[28,] 49.14295    1
[29,] 49.14295    1
[30,] 49.14295    1
[31,] 49.14295    1
[32,] 49.14295    1
[33,] 49.14295    1
[34,] 49.14295    1
[35,] 49.14295    1
[36,] 49.14295    1
[37,] 49.14295    1
[38,] 49.14295    1
[39,] 49.14295    1
[40,] 49.14295    1
[41,] 49.14295    1
[42,] 49.14295    1
[43,] 49.14295    1
[44,] 49.14295    1
[45,] 49.14295    1
[46,] 49.14295    1
[47,] 49.14295    1
[48,] 49.14295    1
[49,] 49.14295    1
[50,] 49.14295    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.14295  1.00000  0.00000 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 0

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812031 -226.528908 -143.760266  -52.354412  -46.034845  -54.066631
 [7]  -33.936006   12.318502  -29.713285   -2.748203   45.035836   72.884173
[13]   46.197490  114.047830   95.703325   59.353877    6.785315   32.647976
[19]   53.896798   56.153211

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.153355e+02  1.508618e+00 -5.451855e+14
delta  1.508618e+00  1.973522e-02 -7.132667e+12
rho   -5.451855e+14 -7.132667e+12  2.578137e+27

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4          NA
2  0.0 165832.4          NA
3  0.8 165832.4          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.14  1.00  0.00 

> summary( cesGridDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  9.779e+02   0.050    0.960
delta 1.000e+00  1.279e+01   0.078    0.938
rho   0.000e+00  4.624e+15   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

> coef( cesGridDe )
   gamma    delta      rho 
49.14295  1.00000  0.00000 
> vcov( cesGridDe )
              gamma         delta           rho
gamma  9.563178e+05  1.250888e+04 -4.520470e+18
delta  1.250888e+04  1.636369e+02 -5.914135e+16
rho   -4.520470e+18 -5.914135e+16  2.137693e+31
> coef( summary( cesGridDe ) )
      Estimate   Std. Error    t value Pr(>|t|)
gamma 49.14295 9.779150e+02 0.05025278 0.959921
delta  1.00000 1.279206e+01 0.07817347 0.937690
rho    0.00000 4.623519e+15 0.00000000 1.000000
> plot( cesGridDe )
Warning message:
In plot.window(...) :
  relative range of values =  28 * EPS, is small (axis 2)
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesGridDeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", vrs = TRUE, random.seed = 4321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
28.7558231  0.7736445  1.0669840 

$optim$bestval
[1] 136170.6

$optim$nfeval
[1] 10050

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2        par3
1   7.316879e+08 0.51853503 0.854527343
2   7.316879e+08 0.51853503 0.854527343
3   1.493056e+09 0.98124862 0.119878929
4   7.316879e+08 0.51853503 0.266808612
5   2.197166e+08 0.80021747 0.611417829
6   1.563734e+09 0.72352907 0.030263556
7   1.563734e+09 0.72352907 0.030263556
8   8.072211e+08 0.67689665 0.106882414
9   2.971964e+08 0.97709384 0.017018686
10  2.078336e+08 0.98124862 0.119878929
11  1.838919e+08 0.62206076 0.009419424
12  2.095049e+07 0.34669936 0.392826053
13  4.015651e+06 0.50350625 0.573500664
14  4.015651e+06 0.50350625 0.573500664
15  4.015651e+06 0.50350625 0.573500664
16  3.489648e+06 0.77837155 0.325774233
17  3.489648e+06 0.77837155 0.325774233
18  3.489648e+06 0.81135564 0.325774233
19  3.489648e+06 0.81135564 0.325774233
20  3.489648e+06 0.81135564 0.325774233
21  1.491067e+06 0.76264447 0.141791534
22  1.491067e+06 0.76264447 0.044935951
23  1.491067e+06 0.76264447 0.044935951
24  1.491067e+06 0.76264447 0.044935951
25  1.491067e+06 0.76264447 0.044935951
26  1.491067e+06 0.76264447 0.041348659
27  1.491067e+06 0.76264447 0.041348659
28  1.491067e+06 0.76264447 0.041348659
29  1.491067e+06 0.76264447 0.041348659
30  1.491067e+06 0.76264447 0.041348659
31  1.491067e+06 0.76264447 0.036263939
32  1.491067e+06 0.76264447 0.030532217
33  1.491067e+06 0.76264447 0.030532217
34  1.491067e+06 0.76264447 0.030532217
35  2.680141e+05 0.78068395 0.128363461
36  2.077703e+04 0.72742699 0.229412169
37  2.077703e+04 0.72742699 0.229412169
38  2.077703e+04 0.72742699 0.229412169
39  7.033898e+03 0.67142302 0.154529157
40  7.033898e+03 0.67142302 0.154529157
41  7.033898e+03 0.67142302 0.154529157
42  7.033898e+03 0.67142302 0.154529157
43  7.033898e+03 0.67142302 0.070632761
44  7.033898e+03 0.67142302 0.048322565
45  7.033898e+03 0.67142302 0.048322565
46  7.033898e+03 0.67142302 0.048322565
47  5.953591e+03 0.78068395 0.076577418
48  5.953591e+03 0.78068395 0.076577418
49  5.953591e+03 0.78068395 0.076577418
50  9.180167e+02 0.59672938 0.057038921
51  9.977791e+02 0.87259442 0.078811124
52  9.977791e+02 0.87259442 0.078811124
53  9.977791e+02 0.84801209 0.078811124
54  9.977791e+02 0.84801209 0.078811124
55  9.977791e+02 0.26458807 0.078811124
56  9.977791e+02 0.26458807 0.078811124
57  9.977791e+02 0.26458807 0.078811124
58  9.977791e+02 0.26458807 0.078811124
59  9.977791e+02 0.26458807 0.078811124
60  9.977791e+02 0.26458807 0.078811124
61  9.977791e+02 0.26458807 0.078811124
62  9.977791e+02 0.26458807 0.078811124
63  9.977791e+02 0.26458807 0.078811124
64  9.977791e+02 0.26458807 0.078811124
65  9.977791e+02 0.26458807 0.078811124
66  9.977791e+02 0.26458807 0.078811124
67  8.908501e+02 0.32988469 0.096947170
68  8.908501e+02 0.32988469 0.096947170
69  8.908501e+02 0.32988469 0.096947170
70  8.908501e+02 0.32988469 0.096947170
71  5.645881e+02 0.09151301 0.169375067
72  5.429340e+02 0.25387152 0.198980967
73  5.429340e+02 0.25387152 0.198980967
74  5.429340e+02 0.25387152 0.198980967
75  5.492746e+02 0.49910536 0.239039594
76  4.137055e+02 0.23933599 0.258288299
77  2.369724e+02 0.25387152 0.382868268
78  2.369724e+02 0.25387152 0.382868268
79  2.369724e+02 0.25387152 0.382868268
80  2.369724e+02 0.25387152 0.382868268
81  2.369724e+02 0.25387152 0.382868268
82  2.369724e+02 0.25387152 0.382868268
83  3.583387e+02 0.79268597 0.371963500
84  3.583387e+02 0.79268597 0.371963500
85  3.583387e+02 0.79268597 0.371963500
86  2.369724e+02 0.40963584 0.409954467
87  2.369724e+02 0.40963584 0.409954467
88  2.369724e+02 0.40963584 0.409954467
89  2.369724e+02 0.40963584 0.409954467
90  3.548840e+02 0.86875368 0.397394115
91  3.548840e+02 0.86875368 0.397394115
92  3.548840e+02 0.86875368 0.397394115
93  3.155399e+02 0.81301643 0.419947903
94  1.755975e+02 0.58178409 0.534219236
95  1.755975e+02 0.58178409 0.534219236
96  1.755975e+02 0.58178409 0.534219236
97  1.755975e+02 0.58178409 0.534219236
98  1.755975e+02 0.58178409 0.534219236
99  1.755975e+02 0.58178409 0.534219236
100 1.686320e+02 0.87228568 0.595634310
101 1.686320e+02 0.87228568 0.595634310
102 1.686320e+02 0.87228568 0.595634310
103 1.686320e+02 0.87228568 0.595634310
104 1.686320e+02 0.81488675 0.595634310
105 1.686320e+02 0.81488675 0.595634310
106 1.686320e+02 0.81488675 0.595634310
107 1.686320e+02 0.81488675 0.595634310
108 1.686320e+02 0.81488675 0.595634310
109 1.686320e+02 0.81488675 0.595634310
110 1.686320e+02 0.82119156 0.595634310
111 1.686320e+02 0.82119156 0.595634310
112 1.686320e+02 0.82119156 0.595634310
113 1.686320e+02 0.82119156 0.595634310
114 1.686320e+02 0.82119156 0.595634310
115 1.686320e+02 0.82119156 0.595634310
116 1.686320e+02 0.82119156 0.595634310
117 1.686320e+02 0.82119156 0.595634310
118 1.686320e+02 0.82119156 0.595634310
119 1.686320e+02 0.82119156 0.595634310
120 1.686320e+02 0.82119156 0.595634310
121 1.324917e+02 0.76207510 0.647185559
122 1.324917e+02 0.76207510 0.647185559
123 1.324917e+02 0.76207510 0.647185559
124 1.324917e+02 0.76207510 0.647185559
125 1.269919e+02 0.74808742 0.654046025
126 1.269919e+02 0.74808742 0.654046025
127 1.269919e+02 0.74808742 0.654046025
128 1.269919e+02 0.74808742 0.654046025
129 1.269919e+02 0.74808742 0.654046025
130 1.269919e+02 0.74808742 0.654046025
131 1.269919e+02 0.74808742 0.654046025
132 1.269919e+02 0.74808742 0.654046025
133 1.269919e+02 0.74808742 0.654046025
134 1.269919e+02 0.74808742 0.654046025
135 1.269919e+02 0.74808742 0.654046025
136 6.617755e+01 0.60519093 0.789539067
137 6.617755e+01 0.60519093 0.789539067
138 6.617755e+01 0.60519093 0.789539067
139 6.617755e+01 0.60519093 0.789539067
140 7.292163e+01 0.72540794 0.794540580
141 7.292163e+01 0.72540794 0.794540580
142 7.292163e+01 0.72540794 0.794540580
143 7.292163e+01 0.72540794 0.794540580
144 7.292163e+01 0.72540794 0.794540580
145 7.292163e+01 0.72540794 0.794540580
146 7.292163e+01 0.72540794 0.794540580
147 7.292163e+01 0.72540794 0.794540580
148 7.292163e+01 0.72540794 0.794540580
149 7.292163e+01 0.72540794 0.794540580
150 7.292163e+01 0.72540794 0.794540580
151 7.292163e+01 0.72540794 0.794540580
152 7.292163e+01 0.72540794 0.794540580
153 7.292163e+01 0.70764387 0.794540580
154 7.292163e+01 0.70764387 0.794540580
155 7.292163e+01 0.70764387 0.794540580
156 7.292163e+01 0.70764387 0.794540580
157 7.292163e+01 0.70764387 0.794540580
158 7.292163e+01 0.70764387 0.794540580
159 5.687705e+01 0.71501443 0.859239422
160 5.687705e+01 0.71501443 0.859239422
161 6.561794e+01 0.91780325 0.891541742
162 6.561794e+01 0.91780325 0.891541742
163 6.561794e+01 0.91780325 0.891541742
164 6.561794e+01 0.91780325 0.891541742
165 6.561794e+01 0.91780325 0.891541742
166 6.561794e+01 0.91780325 0.891541742
167 6.561794e+01 0.91780325 0.891541742
168 6.561794e+01 0.91780325 0.891541742
169 6.561794e+01 0.91780325 0.891541742
170 6.561794e+01 0.91780325 0.891541742
171 6.561794e+01 0.91780325 0.891541742
172 6.561794e+01 0.91780325 0.891541742
173 6.561794e+01 0.91780325 0.891541742
174 6.561794e+01 0.91780325 0.891541742
175 6.561794e+01 0.91780325 0.891541742
176 6.561794e+01 0.91780325 0.891541742
177 6.561794e+01 0.91780325 0.891541742
178 5.307089e+01 0.79834662 0.908418205
179 5.307089e+01 0.79834662 0.908418205
180 5.307089e+01 0.79834662 0.908418205
181 5.307089e+01 0.79834662 0.908418205
182 5.307089e+01 0.79834662 0.908418205
183 5.220882e+01 0.93607921 0.957881635
184 2.624635e+01 0.78794717 1.104827761
185 2.624635e+01 0.78794717 1.104827761
186 2.875582e+01 0.77364446 1.066984033
187 2.875582e+01 0.77364446 1.066984033
188 2.875582e+01 0.77364446 1.066984033
189 2.875582e+01 0.77364446 1.066984033
190 2.875582e+01 0.77364446 1.066984033
191 2.875582e+01 0.77364446 1.066984033
192 2.875582e+01 0.77364446 1.066984033
193 2.875582e+01 0.77364446 1.066984033
194 2.875582e+01 0.77364446 1.066984033
195 2.875582e+01 0.77364446 1.066984033
196 2.875582e+01 0.77364446 1.066984033
197 2.875582e+01 0.77364446 1.066984033
198 2.875582e+01 0.77364446 1.066984033
199 2.875582e+01 0.77364446 1.066984033
200 2.875582e+01 0.77364446 1.066984033

$member$bestvalit
  [1] 1.193637e+22 1.193637e+22 1.002160e+20 9.505004e+19 8.100031e+19
  [6] 6.126058e+19 6.126058e+19 2.934663e+19 1.981919e+18 1.941839e+18
 [11] 7.277174e+17 3.040896e+17 3.680927e+16 3.680927e+16 3.680927e+16
 [16] 2.620213e+15 2.620213e+15 2.541543e+15 2.541543e+15 2.541543e+15
 [21] 1.255820e+14 6.170074e+13 6.170074e+13 6.170074e+13 6.170074e+13
 [26] 6.009870e+13 6.009870e+13 6.009870e+13 6.009870e+13 6.009870e+13
 [31] 5.789903e+13 5.551596e+13 5.551596e+13 5.551596e+13 3.631945e+12
 [36] 4.485430e+10 4.485430e+10 4.485430e+10 2.532188e+09 2.532188e+09
 [41] 2.532188e+09 2.532188e+09 1.214345e+09 9.924916e+08 9.924916e+08
 [46] 9.924916e+08 8.334940e+08 8.334940e+08 8.334940e+08 3.051206e+06
 [51] 1.777702e+06 1.777702e+06 1.764583e+06 1.764583e+06 1.617949e+06
 [56] 1.617949e+06 1.617949e+06 1.617949e+06 1.617949e+06 1.617949e+06
 [61] 1.617949e+06 1.617949e+06 1.617949e+06 1.617949e+06 1.617949e+06
 [66] 1.617949e+06 1.566118e+06 1.566118e+06 1.566118e+06 1.566118e+06
 [71] 1.483801e+06 1.337642e+06 1.337642e+06 1.337642e+06 1.281895e+06
 [76] 1.241106e+06 1.084808e+06 1.084808e+06 1.084808e+06 1.084808e+06
 [81] 1.084808e+06 1.084808e+06 9.915891e+05 9.915891e+05 9.915891e+05
 [86] 9.186526e+05 9.186526e+05 9.186526e+05 9.186526e+05 9.011141e+05
 [91] 9.011141e+05 9.011141e+05 8.600337e+05 7.079334e+05 7.079334e+05
 [96] 7.079334e+05 7.079334e+05 7.079334e+05 7.079334e+05 6.419430e+05
[101] 6.419430e+05 6.419430e+05 6.419430e+05 5.779733e+05 5.779733e+05
[106] 5.779733e+05 5.779733e+05 5.779733e+05 5.779733e+05 5.768013e+05
[111] 5.768013e+05 5.768013e+05 5.768013e+05 5.768013e+05 5.768013e+05
[116] 5.768013e+05 5.768013e+05 5.768013e+05 5.768013e+05 5.768013e+05
[121] 5.086514e+05 5.086514e+05 5.086514e+05 5.086514e+05 5.014616e+05
[126] 5.014616e+05 5.014616e+05 5.014616e+05 5.014616e+05 5.014616e+05
[131] 5.014616e+05 5.014616e+05 5.014616e+05 5.014616e+05 5.014616e+05
[136] 3.868027e+05 3.868027e+05 3.868027e+05 3.868027e+05 3.433831e+05
[141] 3.433831e+05 3.433831e+05 3.433831e+05 3.433831e+05 3.433831e+05
[146] 3.433831e+05 3.433831e+05 3.433831e+05 3.433831e+05 3.433831e+05
[151] 3.433831e+05 3.433831e+05 3.414543e+05 3.414543e+05 3.414543e+05
[156] 3.414543e+05 3.414543e+05 3.414543e+05 2.764345e+05 2.764345e+05
[161] 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05
[166] 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05
[171] 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05 2.441987e+05
[176] 2.441987e+05 2.441987e+05 2.312538e+05 2.312538e+05 2.312538e+05
[181] 2.312538e+05 2.312538e+05 1.964308e+05 1.561046e+05 1.561046e+05
[186] 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05
[191] 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05
[196] 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05 1.361706e+05

$member$pop
           [,1]       [,2]       [,3]
 [1,]  53.07089 0.79834662 0.90841820
 [2,] 564.58812 0.09858864 0.16937507
 [3,]  59.95118 0.68988630 0.84949857
 [4,]  71.90649 0.95463699 0.87229220
 [5,] 134.02759 0.88469394 0.67467266
 [6,]  56.87705 0.71501443 0.85923942
 [7,]  44.69991 0.66407711 0.91010960
 [8,] 768.11724 0.49497570 0.14878732
 [9,]  32.29255 0.82006991 1.06428716
[10,] 174.50626 0.91518131 0.60277907
[11,] 903.27717 0.05658743 0.07203337
[12,]  60.03793 0.97398196 0.93016604
[13,]  49.49453 0.64208499 0.86962012
[14,]  49.69038 0.69005464 0.88507508
[15,] 128.24776 0.87021291 0.68375543
[16,]  42.53432 0.66246257 0.91648718
[17,] 766.02877 0.63059976 0.16431835
[18,]  36.90487 0.88850620 1.05510482
[19,] 925.74284 0.98353866 0.13589367
[20,]  29.71446 0.66212833 1.01238202
[21,] 433.19632 0.97968762 0.35705647
[22,]  50.59536 0.70920852 0.88903248
[23,]  23.23697 0.64501168 1.04648008
[24,]  92.93291 0.80111597 0.75269201
[25,]  41.25448 0.60617661 0.90039473
[26,]  52.32471 0.69945744 0.88071139
[27,]  64.41288 0.99535637 0.91944940
[28,]  28.75582 0.77364446 1.06698403
[29,]  52.20882 0.93607921 0.95788164
[30,] 110.11998 0.96597447 0.75075037
[31,] 430.29780 0.83263690 0.33722682
[32,]  42.35594 0.69977417 0.94018013
[33,] 134.05565 0.83166544 0.66360006
[34,]  92.82666 0.83139200 0.76700160
[35,] 105.30567 0.79556780 0.72856907
[36,]  95.17322 0.99293932 0.80514903
[37,] 712.54786 0.38216829 0.15713542
[38,]  83.46038 0.76922446 0.77594004
[39,] 128.25935 0.75472693 0.65695497
[40,]  51.32072 0.71577328 0.89082411
[41,] 216.65207 0.81329531 0.52835692
[42,]  61.67759 0.80603361 0.86925631
[43,] 931.80781 0.90805234 0.12550960
[44,]  26.24635 0.78794717 1.10482776
[45,] 546.31258 0.99914093 0.30954317
[46,] 183.56641 0.90154915 0.59330917
[47,]  75.32639 0.91497544 0.84678433
[48,]  25.00010 0.64112877 1.02729101
[49,] 562.28594 0.97329434 0.27412152
[50,] 122.42013 0.84300042 0.68836926

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
28.7558231  0.7736445  0.8000000  1.0669840 

$iter
[1] 200

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] 0.8

$fitted.values
 [1] 1135.106 1178.025 1202.988 1216.218 1215.952 1232.670 1268.098 1270.037
 [9] 1229.385 1275.168 1312.475 1475.230 1541.048 1596.779 1559.165 1576.746
[17] 1661.205 1739.627 1857.906 1968.491

$residuals
 [1] -188.972782 -215.294645 -133.408884  -44.421284  -37.835839  -46.859892
 [7]  -28.739708   18.523951  -21.679261    3.240830   48.117524   65.553843
[13]   33.986816   99.180645   85.524565   49.284942   -6.165157   15.972438
[19]   29.514161   23.403347

$rss
[1] 136170.6

$cov.unscaled
              gamma         delta           rho            nu
gamma 871.335494136 29.8922495047 -54.763912168 -7.516774e-03
delta  29.892249505  1.0257492254  -1.879762289 -2.301205e-04
rho   -54.763912168 -1.8797622892   3.446011314  3.676450e-04
nu     -0.007516774 -0.0002301205   0.000367645  3.406467e-06

$allRhoSum
   rho      rss convergence
1 -0.8 322481.8          NA
2  0.0 153450.2          NA
3  0.8 136170.6          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
28.7558  0.7736  0.8000  1.0670 

> summary( cesGridDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   28.7558  2435.6750   0.012    0.991    
delta    0.7736    83.5694   0.009    0.993    
rho      0.8000   153.1740   0.005    0.996    
nu       1.0670     0.1523   7.006 2.45e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 82.51381 
Multiple R-squared: 0.9230725 

> coef( cesGridDeVrs )
     gamma      delta        rho         nu 
28.7558231  0.7736445  0.8000000  1.0669840 
> vcov( cesGridDeVrs )
              gamma         delta           rho           nu
gamma 5932512.63431 203522.235750 -3.728617e+05 -51.17817254
delta  203522.23575   6983.842940 -1.279842e+04  -1.56678211
rho   -372861.66238 -12798.415312  2.346227e+04   2.50312139
nu        -51.17817     -1.566782  2.503121e+00   0.02319302
> coef( summary( cesGridDeVrs ) )
        Estimate   Std. Error     t value     Pr(>|t|)
gamma 28.7558231 2435.6749854 0.011806100 9.905803e-01
delta  0.7736445   83.5693900 0.009257510 9.926137e-01
rho    0.8000000  153.1739749 0.005222819 9.958328e-01
nu     1.0669840    0.1522926 7.006146636 2.449712e-12
> plot( cesGridDeVrs )
> 


R version 2.14.1 (2011-12-22)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i686-pc-linux-gnu (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( micEconCES )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: lattice

Attaching package: 'Matrix'

The following object(s) are masked from 'package:base':

    det

Loading required package: car
Loading required package: MASS
Loading required package: nnet
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following object(s) are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: miscTools
Loading required package: micEcon
Loading required package: minpack.lm
Loading required package: DEoptim

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

> 
> # load data
> data( germanFarms )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> 
> ############  cesEstGridRho  ################
> ## CES: Land & Intermediate inputs
> ## Nelder-Mead, CRS
> cesGridNm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ),
+    method = "Nelder-Mead" )
> print.default( cesGridNm ) 
$optim
$optim$par
     gamma      delta 
165.451976   1.873604 

$optim$value
[1] 153698.6

$optim$counts
function gradient 
     253       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
165.451976   1.873604   0.400000 

$iter
[1] 253

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7142857 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.421 1175.322 1202.310 1201.676 1203.370 1218.548 1251.723 1262.176
 [9] 1220.439 1267.590 1296.949 1447.258 1504.935 1566.003 1546.893 1573.324
[17] 1675.257 1763.352 1883.031 1988.798

$residuals
 [1] -199.287826 -212.591141 -132.731035  -29.879531  -25.253543  -32.737675
 [7]  -12.365274   26.384897  -12.732401   10.818020   63.643561   93.525968
[13]   70.099403  129.956124   97.796473   52.706943  -20.216796   -7.752477
[19]    4.388877    3.096481

$rss
[1] 153698.6

$cov.unscaled
            gamma       delta         rho
gamma 25044.31400 204.3996978 40.13715081
delta   204.39970   1.6682512  0.32760344
rho      40.13715   0.3276034  0.06433956

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156353.9       FALSE
6  1.2 162424.9       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma   delta     rho 
165.452   1.874   0.400 

Elasticity of Substitution: 0.7143 

> summary( cesGridNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 253 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.452  13873.133   0.012    0.990
delta     1.874    113.227   0.017    0.987
rho       0.400     22.236   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7143    11.3450   0.063     0.95

> coef( cesGridNm )
     gamma      delta        rho 
165.451976   1.873604   0.400000 
> vcov( cesGridNm )
            gamma      delta         rho
gamma 192463825.5 1570797.58 308451.2353
delta   1570797.6   12820.40   2517.6099
rho      308451.2    2517.61    494.4451
> coef( summary( cesGridNm ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.451976 13873.13323 0.01192607 0.9904846
delta   1.873604   113.22718 0.01654730 0.9867978
rho     0.400000    22.23612 0.01798875 0.9856478
> fitted( cesGridNm )
 [1] 1145.421 1175.322 1202.310 1201.676 1203.370 1218.548 1251.723 1262.176
 [9] 1220.439 1267.590 1296.949 1447.258 1504.935 1566.003 1546.893 1573.324
[17] 1675.257 1763.352 1883.031 1988.798
> residuals( cesGridNm )
 [1] -199.287826 -212.591141 -132.731035  -29.879531  -25.253543  -32.737675
 [7]  -12.365274   26.384897  -12.732401   10.818020   63.643561   93.525968
[13]   70.099403  129.956124   97.796473   52.706943  -20.216796   -7.752477
[19]    4.388877    3.096481
> plot( cesGridNm )
> 
> ## Nelder-Mead, TC, CRS
> cesGridNmTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Nelder-Mead", 
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNmTc ) 
$optim
$optim$par
      gamma      lambda       delta 
16.05752577  0.01708075  0.90663651 

$optim$value
[1] 17440.55

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho 
16.05752577  0.01708075  0.90663651 -0.80000000 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
3.758571 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  957.5101 1037.9583 1066.1861 1135.5578 1148.5798 1184.4720 1236.0287
 [8] 1230.6964 1226.8848 1276.1998 1351.9662 1534.0077 1635.5398 1683.7044
[15] 1622.5154 1635.7665 1679.0878 1745.0230 1868.0654 2003.6519

$residuals
 [1] -11.377061 -75.227833   3.393028  36.238702  29.536233   1.338019
 [7]   3.329136  57.864531 -19.178555   2.208703   8.626375   6.776351
[13] -60.505113  12.254972  22.173752  -9.735324 -24.047970  10.576812
[19]  19.354909 -11.757906

$rss
[1] 17440.55

$cov.unscaled
               gamma        lambda         delta           rho
gamma   4.778795e+00  4.843946e-06  1.054703e-01 -4.003109e-01
lambda  4.843946e-06  2.325925e-09  1.634902e-07 -7.417957e-07
delta   1.054703e-01  1.634902e-07  2.329639e-03 -8.846328e-03
rho    -4.003109e-01 -7.417957e-07 -8.846328e-03  3.360177e-02

$allRhoSum
   rho      rss convergence
1 -0.8 17440.55       FALSE
2 -0.4 17480.87        TRUE
3  0.0 17530.81        TRUE
4  0.4 17590.31        TRUE
5  0.8 17659.34        TRUE
6  1.2 17737.79        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNmTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
   gamma   lambda    delta      rho 
16.05753  0.01708  0.90664 -0.80000 

Elasticity of Substitution: 5 

> summary( cesGridNmTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  16.057526  64.554180   0.249    0.804    
lambda  0.017081   0.001424  11.993   <2e-16 ***
delta   0.906637   1.425310   0.636    0.525    
rho    -0.800000   5.413102  -0.148    0.883    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.53012 
Multiple R-squared: 0.9901472 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      135.3   0.037    0.971

> 
> ## Nelder-Mead, VRS
> cesGridNmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "NM", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNmVrs )
$optim
$optim$par
    gamma     delta        nu 
2.2576334 0.8649508 1.5670310 

$optim$value
[1] 50384.7

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 2.2576334  0.8649508 -0.4000000  1.5670310 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
6.258033 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1] 1007.271 1093.638 1117.146 1174.866 1168.337 1193.025 1242.491 1218.253
 [9] 1172.984 1223.563 1293.257 1535.020 1646.262 1699.194 1591.246 1587.502
[17] 1648.860 1727.290 1882.857 2047.312

$residuals
 [1]  -61.137841 -130.907506  -47.566719   -3.069683    9.779173   -7.215228
 [7]   -3.132706   70.308303   34.722374   54.845794   67.336035    5.764507
[13]  -71.227774   -3.234177   53.443505   38.529493    6.180242   28.310089
[19]    4.563365  -55.418100

$rss
[1] 50384.7

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.1166752387  1.578392e-02 -4.326885e-02 -1.289928e-04
delta  0.0157839156  2.144597e-03 -5.884107e-03 -1.199442e-05
rho   -0.0432688518 -5.884107e-03  1.614781e-02  3.025097e-05
nu    -0.0001289928 -1.199442e-05  3.025097e-05  3.451601e-06

$allRhoSum
   rho       rss convergence
1 -0.8  50626.98        TRUE
2 -0.4  50384.70       FALSE
3  0.0 151216.59       FALSE
4  0.4  68688.96       FALSE
5  0.8 105470.02       FALSE
6  1.2  70789.74       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
 2.258  0.865 -0.400  1.567 

Elasticity of Substitution: 1.667 

> summary( cesGridNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  2.25763   17.14445   0.132    0.895    
delta  0.86495    2.32438   0.372    0.710    
rho   -0.40000    6.37810  -0.063    0.950    
nu     1.56703    0.09325  16.805   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.19198 
Multiple R-squared: 0.9715359 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     17.717   0.094    0.925

> coef( cesGridNmVrs )
     gamma      delta        rho         nu 
 2.2576334  0.8649508 -0.4000000  1.5670310 
> vcov( cesGridNmVrs )
             gamma        delta          rho           nu
gamma  293.9323295  39.76339049 -109.0044001 -0.324963176
delta   39.7633905   5.40274419  -14.8234473 -0.030216762
rho   -109.0044001 -14.82344731   40.6801337  0.076209303
nu      -0.3249632  -0.03021676    0.0762093  0.008695393
> coef( summary( cesGridNmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  2.2576334 17.14445477  0.13168301 8.952350e-01
delta  0.8649508  2.32438039  0.37212100 7.098028e-01
rho   -0.4000000  6.37809797 -0.06271462 9.499938e-01
nu     1.5670310  0.09324909 16.80478547 2.251256e-63
> plot( cesGridNmVrs )
> 
> # using the CG optimization method
> cesGridCg <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridCg )
$optim
$optim$par
     gamma      delta 
27.9068606  0.4955612 

$optim$value
[1] 169812.4

$optim$counts
function gradient 
     764      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho 
27.9068606  0.4955612  1.2000000 

$iter
function gradient 
     764      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta 
27.90554  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1150.499 1191.180 1214.839 1227.279 1227.042 1242.844 1276.294 1278.175
 [9] 1239.772 1283.017 1318.137 1470.761 1532.158 1584.087 1549.139 1565.514
[17] 1643.929 1716.484 1825.582 1927.227

$residuals
 [1] -204.366049 -228.449350 -145.259629  -55.482559  -48.925516  -57.033884
 [7]  -36.936419   10.385547  -32.065721   -4.608809   42.455964   70.022711
[13]   42.876569  111.871950   95.550360   60.517571   11.111192   39.116120
[19]   61.838593   64.666686

$rss
[1] 169812.4

$cov.unscaled
           gamma     delta        rho
gamma 2146.45423 71.519690 -92.056247
delta   71.51969  2.383087  -3.067528
rho    -92.05625 -3.067528   3.948932

$allRhoSum
   rho      rss convergence
1 -0.8 699932.3       FALSE
2 -0.4 567846.4       FALSE
3  0.0 364164.0       FALSE
4  0.4 225699.0       FALSE
5  0.8 180872.4       FALSE
6  1.2 169812.4       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
27.9069  0.4956  1.2000 

Elasticity of Substitution: 0.4545 

> summary( cesGridCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 764 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   27.9069  4269.0433   0.007    0.995
delta    0.4956   142.2459   0.003    0.997
rho      1.2000   183.1089   0.007    0.995

Residual standard error: 92.14457 
Multiple R-squared: 0.9040671 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545    37.8324   0.012     0.99

> coef( cesGridCg )
     gamma      delta        rho 
27.9068606  0.4955612  1.2000000 
> vcov( cesGridCg )
           gamma     delta        rho
gamma 18224730.8 607246.63 -781614.76
delta   607246.6  20233.89  -26045.22
rho    -781614.8 -26045.22   33528.88
> coef( summary( cesGridCg ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 27.9068606  4269.0433 0.006537029 0.9947842
delta  0.4955612   142.2459 0.003483835 0.9972203
rho    1.2000000   183.1089 0.006553476 0.9947711
> fitted( cesGridCg )
 [1] 1150.499 1191.180 1214.839 1227.279 1227.042 1242.844 1276.294 1278.175
 [9] 1239.772 1283.017 1318.137 1470.761 1532.158 1584.087 1549.139 1565.514
[17] 1643.929 1716.484 1825.582 1927.227
> residuals( cesGridCg )
 [1] -204.366049 -228.449350 -145.259629  -55.482559  -48.925516  -57.033884
 [7]  -36.936419   10.385547  -32.065721   -4.608809   42.455964   70.022711
[13]   42.876569  111.871950   95.550360   60.517571   11.111192   39.116120
[19]   61.838593   64.666686
> plot( cesGridCg )
> 
> # using the CG optimization method, VRS
> cesGridCgVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridCgVrs )
$optim
$optim$par
     gamma      delta         nu 
10.0279173  0.8660399  1.3052536 

$optim$value
[1] 75358.38

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
10.0279173  0.8660399  0.0000000  1.3052536 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1069.131 1127.402 1153.664 1180.262 1178.256 1198.384 1240.316 1235.180
 [9] 1190.227 1240.750 1289.916 1488.097 1572.237 1632.839 1572.518 1585.882
[17] 1672.076 1758.465 1900.171 2038.746

$residuals
 [1] -122.9980225 -164.6712955  -84.0846000   -8.4657483   -0.1394763
 [6]  -12.5735008   -0.9581171   53.3810213   17.4793206   37.6587043
[11]   70.6761942   52.6872297    2.7977576   63.1204337   72.1715116
[16]   40.1487975  -17.0366126   -2.8652052  -12.7505132  -46.8522749

$rss
[1] 75359.21

$cov.unscaled
              gamma         delta           rho            nu
gamma  4.9683760354  2.418508e-01 -6.674141e-01 -8.061446e-04
delta  0.2418507541  1.179941e-02 -3.258690e-02 -3.002531e-05
rho   -0.6674140778 -3.258690e-02  9.002403e-02  7.492278e-05
nu    -0.0008061446 -3.002531e-05  7.492278e-05  3.474107e-06

$allRhoSum
   rho       rss convergence
1 -0.8 620063.30       FALSE
2 -0.4 333290.62       FALSE
3  0.0  75359.21       FALSE
4  0.4 150282.47       FALSE
5  0.8 145977.55       FALSE
6  1.2 116269.78       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
10.028  0.866  0.000  1.305 

Elasticity of Substitution: 1 

> summary( cesGridCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  10.0279   136.8234   0.073    0.942    
delta   0.8660     6.6678   0.130    0.897    
rho     0.0000    18.4176   0.000    1.000    
nu      1.3053     0.1144  11.408   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 61.38372 
Multiple R-squared: 0.957427 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00      18.42   0.054    0.957

> coef( cesGridCgVrs )
     gamma      delta        rho         nu 
10.0279173  0.8660399  0.0000000  1.3052536 
> vcov( cesGridCgVrs )
             gamma        delta           rho         nu
gamma 18720.645013  911.2841059 -2514.7899310 -3.0375209
delta   911.284106   44.4597279  -122.7861380 -0.1131342
rho   -2514.789931 -122.7861380   339.2070044  0.2823061
nu       -3.037521   -0.1131342     0.2823061  0.0130903
> coef( summary( cesGridCgVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma 10.0279173 136.8234081  0.07329095 9.415746e-01
delta  0.8660399   6.6678128  0.12988366 8.966585e-01
rho    0.0000000  18.4175732  0.00000000 1.000000e+00
nu     1.3052536   0.1144128 11.40827978 3.801733e-30
> plot( cesGridCgVrs )
> 
> # using the CG optimization method, TC, VRS
> cesGridCgTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "CG", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 12 warnings (use warnings() to see them)
> print.default( cesGridCgTcVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
8.45548323 0.01622336 0.50070992 0.99758868 

$optim$value
[1] 18039.39

$optim$counts
function gradient 
     575      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho         nu 
8.45548323 0.01622336 0.50070992 0.00000000 0.99758868 

$iter
function gradient 
     575      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "CG"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
8.455537 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  967.4029 1043.7303 1072.5983 1135.5352 1148.5268 1183.2068 1233.7627
 [8] 1231.4333 1224.8769 1275.0513 1346.9264 1526.6462 1624.6880 1676.0372
[15] 1620.3636 1635.7238 1683.6708 1750.8774 1873.6604 2007.8050

$residuals
 [1] -21.269933 -80.999863  -3.019171  36.261248  29.589251   2.603230
 [7]   5.595177  57.127649 -17.170717   3.357243  13.666239  14.137925
[13] -49.653292  19.922212  24.325476  -9.692627 -28.630895   4.722364
[19]  13.759897 -15.911024

$rss
[1] 18039.85

$cov.unscaled
               gamma        lambda         delta           rho            nu
gamma   4.2907318726  1.015937e-04  3.153817e-01 -4.063347e-01 -4.221089e-03
lambda  0.0001015937  1.297322e-08  6.559874e-06 -8.667005e-06 -4.617773e-07
delta   0.3153817486  6.559874e-06  2.331562e-02 -3.003619e-02 -2.655037e-04
rho    -0.4063347436 -8.667005e-06 -3.003619e-02  3.870444e-02  3.462822e-04
nu     -0.0042210888 -4.617773e-07 -2.655037e-04  3.462822e-04  2.000294e-05

$allRhoSum
   rho      rss convergence
1 -0.8 40126.17       FALSE
2 -0.4 25451.65       FALSE
3  0.0 18039.85       FALSE
4  0.4 36458.51       FALSE
5  0.8 56510.71       FALSE
6  1.2 68514.33       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCgTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
  gamma  lambda   delta     rho      nu 
8.45548 0.01622 0.50071 0.00000 0.99759 

Elasticity of Substitution: 1 

> summary( cesGridCgTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 575 function and 101 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   8.455483  62.210998   0.136    0.892    
lambda  0.016223   0.003421   4.743 2.11e-06 ***
delta   0.500710   4.585904   0.109    0.913    
rho     0.000000   5.908563   0.000    1.000    
nu      0.997589   0.134322   7.427 1.11e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.03319 
Multiple R-squared: 0.9898087 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      5.909   0.169    0.866

> 
> # using the SANN optimization method
> cesGridSann <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", random.seed = 1,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSann )
$optim
$optim$par
     gamma      delta 
26.6456166  0.5784538 

$optim$value
[1] 176322.4

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
26.6456166  0.5784538  0.8000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
  gamma   delta 
22.5893  0.5000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1152.199 1194.947 1217.987 1232.939 1232.329 1248.261 1281.784 1282.024
 [9] 1244.234 1286.760 1323.001 1476.163 1538.311 1588.525 1550.566 1565.080
[17] 1639.246 1709.058 1816.338 1917.306

$residuals
 [1] -206.065522 -232.216799 -148.408250  -61.142198  -54.212672  -62.450650
 [7]  -42.425975    6.536860  -36.527411   -8.351487   37.591152   64.620979
[13]   36.723943  107.434219   94.123296   60.951245   15.793813   46.541748
[19]   71.082507   74.587820

$rss
[1] 176322.4

$cov.unscaled
          gamma      delta         rho
gamma 393.11862 12.7852829 -16.8540897
delta  12.78528  0.4158283  -0.5481963
rho   -16.85409 -0.5481963   0.7227724

$allRhoSum
   rho      rss convergence
1 -0.8 493550.6          NA
2  0.0 276683.0          NA
3  0.8 176322.4          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Coefficients:
  gamma   delta     rho 
26.6456  0.5785  0.8000 

Elasticity of Substitution: 0.5556 

> summary( cesGridSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   26.6456  1861.6609   0.014    0.989
delta    0.5785    60.5474   0.010    0.992
rho      0.8000    79.8251   0.010    0.992

Residual standard error: 93.8942 
Multiple R-squared: 0.9003894 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5556    24.6374   0.023    0.982

> coef( cesGridSann )
     gamma      delta        rho 
26.6456166  0.5784538  0.8000000 
> vcov( cesGridSann )
          gamma      delta         rho
gamma 3465781.4 112716.605 -148587.700
delta  112716.6   3665.993   -4832.965
rho   -148587.7  -4832.965    6372.049
> coef( summary( cesGridSann ) )
        Estimate Std. Error     t value  Pr(>|t|)
gamma 26.6456166 1861.66093 0.014312819 0.9885804
delta  0.5784538   60.54744 0.009553727 0.9923773
rho    0.8000000   79.82512 0.010021908 0.9920038
> plot( cesGridSann )
> 
> # using the SANN optimization method, TC, CRS
> cesGridSannTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "SANN", random.seed = 31,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSannTc )
$optim
$optim$par
     gamma     lambda      delta 
8.42160926 0.01650105 0.50458611 

$optim$value
[1] 18331.96

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho 
8.42160926 0.01650105 0.50458611 0.00000000 

$iter
[1] 10000

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
8.455537 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  962.9606 1039.1643 1068.3055 1131.1349 1144.4236 1179.3384 1230.1555
 [8] 1228.3153 1221.9632 1272.5513 1344.6568 1524.9023 1623.3946 1675.4781
[15] 1620.4431 1636.4621 1685.4481 1753.6003 1877.4827 2012.7359

$residuals
 [1] -16.827584 -76.433825   1.273704  40.661593  33.692432   6.471575
 [7]   9.202352  60.245592 -14.256987   5.857226  15.935770  15.881824
[13] -48.359927  20.481340  24.246040 -10.431000 -30.408279   1.999499
[19]   9.937614 -20.841914

$rss
[1] 18331.96

$cov.unscaled
               gamma        lambda         delta           rho
gamma   3.376121e+00  4.238424e-06  2.579570e-01 -3.315052e-01
lambda  4.238424e-06  2.326753e-09  4.383472e-07 -6.832522e-07
delta   2.579570e-01  4.383472e-07  1.971725e-02 -2.534747e-02
rho    -3.315052e-01 -6.832522e-07 -2.534747e-02  3.259481e-02

$allRhoSum
   rho      rss convergence
1 -0.8 42086.50          NA
2  0.0 18331.96          NA
3  0.8 58372.28          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

Coefficients:
 gamma lambda  delta    rho 
8.4216 0.0165 0.5046 0.0000 

Elasticity of Substitution: 1 

> summary( cesGridSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   8.42161   55.62864   0.151    0.880    
lambda  0.01650    0.00146  11.299   <2e-16 ***
delta   0.50459    4.25121   0.119    0.906    
rho     0.00000    5.46592   0.000    1.000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 30.27537 
Multiple R-squared: 0.9896436 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      5.466   0.183    0.855

> 
> # using the SANN optimization method, VRS
> cesGridSannVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", vrs = TRUE, random.seed = 21,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSannVrs )
$optim
$optim$par
    gamma     delta        nu 
4.3276772 0.9603577 1.5073915 

$optim$value
[1] 52703.57

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho         nu 
 4.3276772  0.9603577 -0.8000000  1.5073915 

$iter
[1] 10000

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
 gamma  delta     nu 
4.4463 0.5000 1.0000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1] 1023.812 1107.075 1130.274 1185.445 1179.207 1203.150 1251.120 1228.253
 [9] 1184.014 1233.459 1300.530 1533.628 1640.190 1691.758 1590.087 1587.999
[17] 1651.205 1729.720 1881.109 2039.130

$residuals
 [1]  -77.678854 -144.344596  -60.695176  -13.648215   -1.091417  -17.339744
 [7]  -11.762603   60.307674   23.692034   44.949983   60.062290    7.156072
[13]  -65.155581    4.201635   54.602084   38.031967    3.834900   25.879890
[19]    6.311267  -47.236203

$rss
[1] 52703.57

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.1398484685  5.984076e-03 -0.0502810258 -1.733671e-04
delta  0.0059840759  2.588693e-04 -0.0021781336 -4.458956e-06
rho   -0.0502810258 -2.178134e-03  0.0183311397  3.463990e-05
nu    -0.0001733671 -4.458956e-06  0.0000346399  3.423941e-06

$allRhoSum
   rho      rss convergence
1 -0.8 52703.57          NA
2  0.0 70790.31          NA
3  0.8 97582.46          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Coefficients:
  gamma   delta     rho      nu 
 4.3277  0.9604 -0.8000  1.5074 

Elasticity of Substitution: 5 

> summary( cesGridSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  4.32768   19.19702   0.225    0.822    
delta  0.96036    0.82593   1.163    0.245    
rho   -0.80000    6.95024  -0.115    0.908    
nu     1.50739    0.09499  15.869   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 51.33399 
Multiple R-squared: 0.9702259 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      173.8   0.029    0.977

> coef( cesGridSannVrs )
     gamma      delta        rho         nu 
 4.3276772  0.9603577 -0.8000000  1.5073915 
> vcov( cesGridSannVrs )
             gamma       delta           rho           nu
gamma  368.5256520 15.76910701 -132.49946886 -0.456853342
delta   15.7691070  0.68216666   -5.73977036 -0.011750145
rho   -132.4994689 -5.73977036   48.30582189  0.091282312
nu      -0.4568533 -0.01175015    0.09128231  0.009022696
> coef( summary( cesGridSannVrs ) )
        Estimate  Std. Error    t value     Pr(>|t|)
gamma  4.3276772 19.19702196  0.2254348 8.216410e-01
delta  0.9603577  0.82593381  1.1627539 2.449294e-01
rho   -0.8000000  6.95023898 -0.1151040 9.083627e-01
nu     1.5073915  0.09498787 15.8693049 1.033794e-56
> plot( cesGridSannVrs )
> 
> # using the BFGS optimization method
> cesGridBfgs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgs )
$optim
$optim$par
     gamma      delta 
165.416166   1.873405 

$optim$value
[1] 153698.6

$optim$counts
function gradient 
     311       73 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma      delta        rho 
165.416166   1.873405   0.400000 

$iter
function gradient 
     311       73 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7142857 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.682 1203.375 1218.553 1251.729 1262.181
 [9] 1220.443 1267.595 1296.954 1447.264 1504.942 1566.009 1546.896 1573.326
[17] 1675.256 1763.350 1883.028 1988.794

$residuals
 [1] -199.290790 -212.595468 -132.735016  -29.885080  -25.258865  -32.743104
 [7]  -12.370804   26.380374  -12.737239   10.813556   63.638344   93.520163
[13]   70.093032  129.950726   97.793030   52.704670  -20.216390   -7.750328
[19]    4.392094    3.099990

$rss
[1] 153698.6

$cov.unscaled
            gamma       delta         rho
gamma 25028.06521 204.2973629 40.13042105
delta   204.29736   1.6676631  0.32759707
rho      40.13042   0.3275971  0.06435975

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156492.7       FALSE
6  1.2 162512.0       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.416   1.873   0.400 

Elasticity of Substitution: 0.7143 

> summary( cesGridBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 311 function and 73 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.416  13868.632   0.012    0.990
delta     1.873    113.207   0.017    0.987
rho       0.400     22.240   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7143    11.3467   0.063     0.95

> coef( cesGridBfgs )
     gamma      delta        rho 
165.416166   1.873405   0.400000 
> vcov( cesGridBfgs )
            gamma       delta         rho
gamma 192338954.3 1570011.138 308399.5169
delta   1570011.1   12815.876   2517.5609
rho      308399.5    2517.561    494.6002
> coef( summary( cesGridBfgs ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.416166 13868.63203 0.01192736 0.9904836
delta   1.873405   113.20723 0.01654846 0.9867968
rho     0.400000    22.23961 0.01798593 0.9856501
> plot( cesGridBfgs )
> 
> # using the BFGS optimization method, VRS
> cesGridBfgsVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridBfgsVrs )
$optim
$optim$par
    gamma     delta        nu 
1.2492161 0.6466248 1.5666065 

$optim$value
[1] 50070.49

$optim$counts
function gradient 
     545      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
    gamma     delta       rho        nu 
1.2492161 0.6466248 0.0000000 1.5666065 

$iter
function gradient 
     545      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1008.258 1094.162 1117.908 1174.525 1168.214 1192.858 1242.345 1218.874
 [9] 1173.299 1224.229 1293.513 1535.266 1646.207 1700.039 1592.720 1588.988
[17] 1649.408 1726.644 1881.288 2045.450

$residuals
 [1]  -62.125376 -131.431814  -48.328480   -2.728572    9.901919   -7.048462
 [7]   -2.987034   69.686738   34.407277   54.179556   67.079861    5.518344
[13]  -71.172296   -4.079306   51.969589   37.043396    5.632220   28.955409
[19]    6.132260  -53.556023

$rss
[1] 50070.49

$cov.unscaled
              gamma         delta           rho            nu
gamma  7.690092e-02  2.503990e-02 -0.0351093134 -9.302903e-05
delta  2.503990e-02  8.173779e-03 -0.0114682693 -2.219424e-05
rho   -3.510931e-02 -1.146827e-02  0.0160942655  2.848650e-05
nu    -9.302903e-05 -2.219424e-05  0.0000284865  3.449553e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 50070.49       FALSE
4  0.4 53240.29       FALSE
5  0.8 59147.17       FALSE
6  1.2 55582.96       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.2492 0.6466 0.0000 1.5666 

Elasticity of Substitution: 1 

> summary( cesGridBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 545 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.24922   13.87528   0.090    0.928    
delta  0.64662    4.52363   0.143    0.886    
rho    0.00000    6.34763   0.000    1.000    
nu     1.56661    0.09293  16.858   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.03523 
Multiple R-squared: 0.9717135 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.348   0.158    0.875

> coef( cesGridBfgsVrs )
    gamma     delta       rho        nu 
1.2492161 0.6466248 0.0000000 1.5666065 
> vcov( cesGridBfgsVrs )
            gamma        delta          rho          nu
gamma 192.5233245  62.68798669 -87.89701963 -0.23290044
delta  62.6879867  20.46325415 -28.71109101 -0.05556382
rho   -87.8970196 -28.71109101  40.29238485  0.07131666
nu     -0.2329004  -0.05556382   0.07131666  0.00863604
> coef( summary( cesGridNmVrs ) )
        Estimate  Std. Error     t value     Pr(>|t|)
gamma  2.2576334 17.14445477  0.13168301 8.952350e-01
delta  0.8649508  2.32438039  0.37212100 7.098028e-01
rho   -0.4000000  6.37809797 -0.06271462 9.499938e-01
nu     1.5670310  0.09324909 16.80478547 2.251256e-63
> plot( cesGridBfgsVrs )
> 
> # using the BFGS optimization method, TC, VRS
> cesGridBfgsTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "BFGS", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(gammaStar) : NaNs produced
2: In log(gammaStar) : NaNs produced
3: In log(gammaStar) : NaNs produced
4: In log(gammaStar) : NaNs produced
5: In log(gammaStar) : NaNs produced
6: In log(gammaStar) : NaNs produced
7: In log(gammaStar) : NaNs produced
8: In log(gammaStar) : NaNs produced
9: In log(gammaStar) : NaNs produced
> print.default( cesGridBfgsTcVrs )
$optim
$optim$par
      gamma      lambda       delta          nu 
15.23730625  0.01902593  0.71799934  0.91415071 

$optim$value
[1] 17026.61

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
      gamma      lambda       delta         rho          nu 
15.23730625  0.01902593  0.71799934 -0.40000000  0.91415071 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
5.284923 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957.1373 1034.6487 1063.7367 1131.4010 1147.0798 1183.8508 1235.0587
 [8] 1233.8992 1234.8562 1284.2276 1358.7341 1530.2612 1628.3017 1677.1233
[15] 1625.4566 1642.0430 1684.3828 1748.4858 1865.9297 1995.9954

$residuals
 [1] -11.004259 -71.918185   5.842426  40.395463  31.036274   1.959211
 [7]   4.299147  54.661696 -27.149983  -5.819089   1.858495  10.522865
[13] -53.267026  18.836076  19.232509 -16.011852 -29.342889   7.114018
[19]  21.490549  -4.101358

$rss
[1] 17026.61

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma  12.440130327  1.754550e-04  4.886806e-01 -7.783367e-01 -7.242974e-03
lambda  0.000175455  1.298587e-08  6.108029e-06 -1.001055e-05 -4.604104e-07
delta   0.488680634  6.108029e-06  1.930174e-02 -3.073543e-02 -2.453345e-04
rho    -0.778336658 -1.001055e-05 -3.073543e-02  4.895647e-02  3.972359e-04
nu     -0.007242974 -4.604104e-07 -2.453345e-04  3.972359e-04  1.990237e-05

$allRhoSum
   rho      rss convergence
1 -0.8 17333.26       FALSE
2 -0.4 17026.61        TRUE
3  0.0 17104.64        TRUE
4  0.4 17189.91        TRUE
5  0.8 17650.61       FALSE
6  1.2 22229.63       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
   gamma   lambda    delta      rho       nu 
15.23731  0.01903  0.71800 -0.40000  0.91415 

Elasticity of Substitution: 1.667 

> summary( cesGridBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   15.237306 102.910940   0.148    0.882    
lambda   0.019026   0.003325   5.722 1.05e-08 ***
delta    0.717999   4.053660   0.177    0.859    
rho     -0.400000   6.455860  -0.062    0.951    
nu       0.914151   0.130167   7.023 2.17e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.17757 
Multiple R-squared: 0.9903811 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.667     17.933   0.093    0.926

> 
> # using the BFGS optimization method, TC, multErr, VRS
> cesGridBfgsTcMeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "BFGS", vrs = TRUE,
+    multErr = TRUE, rho = seq( from = -0.4, to = 1.2, by = 0.4 ),
+    control = list( maxit = 1000 ) )
Warning message:
In log(yHat) : NaNs produced
> print.default( cesGridBfgsTcMeVrs )
$optim
$optim$par
     gamma     lambda      delta         nu 
4.73284495 0.01992050 0.04606613 0.91286988 

$optim$value
[1] 0.0116343

$optim$counts
function gradient 
     697      309 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
     gamma     lambda      delta        rho         nu 
4.73284495 0.01992050 0.04606613 0.80000000 0.91286988 

$iter
function gradient 
     697      309 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
  gamma  lambda   delta      nu 
2.94879 0.01500 0.50000 1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1]  949.7599 1029.0542 1058.4615 1128.0338 1144.5767 1182.3264 1234.5047
 [8] 1233.5932 1236.1584 1286.1158 1362.5633 1535.7171 1635.7579 1685.0111
[15] 1631.6026 1647.0707 1683.4223 1743.4456 1858.8558 1989.6643

$residuals
 [1] -0.003826040 -0.066621950  0.010448832  0.038061870  0.028881736
 [6]  0.002942099  0.003923508  0.043594836 -0.023285614 -0.006010752
[11] -0.001447350  0.003294026 -0.037828987  0.006476462  0.007988637
[16] -0.012856247 -0.017003719  0.006947176  0.015249843  0.001120042

$rss
[1] 0.0116343

$cov.unscaled
               gamma      lambda         delta           rho            nu
gamma   522590.21474  39.9938538  31644.538400 -231080.32702 -2154.9997706
lambda      39.99385   0.0200709      1.366575     -10.48902    -0.8049285
delta    31644.53840   1.3665752   2009.955565  -14660.90955   -78.0818172
rho    -231080.32702 -10.4890177 -14660.909546  106971.22569   583.7711652
nu       -2154.99977  -0.8049285    -78.081817     583.77117    38.8213011

$allRhoSum
   rho        rss convergence
1 -0.4 0.01180744       FALSE
2  0.0 0.01183440       FALSE
3  0.4 0.01163804       FALSE
4  0.8 0.01163430        TRUE
5  1.2 0.01170308        TRUE

$rhoValues
[1] -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

Coefficients:
  gamma  lambda   delta     rho      nu 
4.73284 0.01992 0.04607 0.80000 0.91287 

Elasticity of Substitution: 0.5556 

> summary( cesGridBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 697 function and 309 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   4.732845  17.435551   0.271    0.786    
lambda  0.019921   0.003417   5.830 5.55e-09 ***
delta   0.046066   1.081305   0.043    0.966    
rho     0.800000   7.888393   0.101    0.919    
nu      0.912870   0.150276   6.075 1.24e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02411876 
Multiple R-squared: 0.9871504 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5556     2.4347   0.228     0.82

> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesGridBfgsCon <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsCon )
$optim
$optim$par
   gamma    delta 
49.14295  1.00000 

$optim$value
[1] 165832.4

$optim$counts
function gradient 
      25       25 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
   gamma    delta      rho 
49.14295  1.00000  0.80000 

$iter
function gradient 
      25       25 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
  gamma   delta 
22.5893  0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 0.8

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 9.413506e-01 1.667939e-02 4.666695e+10
delta 1.667939e-02 2.955558e-04 8.459843e+08
rho   4.666695e+10 8.459843e+08 1.543331e+23

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4        TRUE
2 -0.4 165832.4        TRUE
3  0.0 165832.4        TRUE
4  0.4 165832.4       FALSE
5  0.8 165832.4        TRUE
6  1.2 165832.4        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
gamma delta   rho 
49.14  1.00  0.80 

Elasticity of Substitution: 0.5556 

> summary( cesGridBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 25 function and 25 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  8.835e+01   0.556    0.578
delta 1.000e+00  1.565e+00   0.639    0.523
rho   8.000e-01  3.577e+13   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 5.556e-01  1.104e+13       0        1

> coef( cesGridBfgsCon )
   gamma    delta      rho 
49.14295  1.00000  0.80000 
> vcov( cesGridBfgsCon )
             gamma        delta          rho
gamma 7.805320e+03 1.382992e+02 3.869446e+14
delta 1.382992e+02 2.450636e+00 7.014579e+12
rho   3.869446e+14 7.014579e+12 1.279671e+27
> coef( summary( cesGridBfgsCon ) )
      Estimate   Std. Error      t value  Pr(>|t|)
gamma 49.14295 8.834772e+01 5.562447e-01 0.5780436
delta  1.00000 1.565451e+00 6.387937e-01 0.5229571
rho    0.80000 3.577249e+13 2.236355e-14 1.0000000
> plot( cesGridBfgsCon )
> 
> # using the L-BFGS-B optimization method, TC, CRS
> cesGridBfgsConTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "L-BFGS-B",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsConTc )
$optim
$optim$par
      gamma      lambda       delta 
16.06509129  0.01707746  0.90669741 

$optim$value
[1] 17440.55

$optim$counts
function gradient 
     108      108 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
      gamma      lambda       delta         rho 
16.06509129  0.01707746  0.90669741 -0.80000000 

$iter
function gradient 
     108      108 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
3.758571 0.015000 0.500000 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] -0.8

$fitted.values
 [1]  957.5516 1037.9903 1066.2188 1135.5760 1148.5965 1184.4849 1236.0385
 [8] 1230.7110 1226.8912 1276.2072 1351.9638 1534.0001 1635.5231 1683.6930
[15] 1622.5157 1635.7720 1679.1108 1745.0545 1868.1000 2003.6833

$residuals
 [1] -11.418572 -75.259786   3.360351  36.220428  29.519579   1.325078
 [7]   3.319309  57.849946 -19.185043   2.201328   8.628830   6.784039
[13] -60.488391  12.266362  22.173374  -9.740875 -24.070963  10.545309
[19]  19.320280 -11.789306

$rss
[1] 17440.55

$cov.unscaled
               gamma        lambda         delta           rho
gamma   4.778813e+00  4.840845e-06  1.053990e-01 -4.002742e-01
lambda  4.840845e-06  2.325833e-09  1.633247e-07 -7.415169e-07
delta   1.053990e-01  1.633247e-07  2.326484e-03 -8.839512e-03
rho    -4.002742e-01 -7.415169e-07 -8.839512e-03  3.359551e-02

$allRhoSum
   rho      rss convergence
1 -0.8 17440.55        TRUE
2 -0.4 17480.87        TRUE
3  0.0 17530.81        TRUE
4  0.4 17590.31        TRUE
5  0.8 17659.34        TRUE
6  1.2 66746.14        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
   gamma   lambda    delta      rho 
16.06509  0.01708  0.90670 -0.80000 

Elasticity of Substitution: 5 

> summary( cesGridBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 108 function and 108 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  16.065091  64.554283   0.249    0.803    
lambda  0.017077   0.001424  11.991   <2e-16 ***
delta   0.906697   1.424344   0.637    0.524    
rho    -0.800000   5.412597  -0.148    0.882    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.53011 
Multiple R-squared: 0.9901472 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      135.3   0.037    0.971

> 
> # using the L-BFGS-B optimization method with constrained parameters, VRS
> cesGridBfgsConVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsConVrs )
$optim
$optim$par
    gamma     delta        nu 
1.0844227 0.6345651 1.5845929 

$optim$value
[1] 49966.45

$optim$counts
function gradient 
     137      137 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
    gamma     delta       rho        nu 
1.0844227 0.6345651 0.0000000 1.5845929 

$iter
function gradient 
     137      137 

$convergence
[1] FALSE

$message
[1] "NEW_X"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1] 1004.172 1091.848 1115.436 1174.031 1167.433 1192.383 1242.386 1217.693
 [9] 1172.065 1223.035 1293.673 1538.463 1651.301 1704.677 1594.094 1589.211
[17] 1647.944 1724.609 1880.164 2046.099

$residuals
 [1]  -58.039495 -129.117519  -45.856409   -2.234364   10.682838   -6.573018
 [7]   -3.027975   70.867857   35.640830   55.373431   66.919755    2.321556
[13]  -76.266818   -8.717528   50.595357   36.820287    7.096093   30.990992
[19]    7.256072  -54.204808

$rss
[1] 49966.45

$cov.unscaled
              gamma         delta           rho            nu
gamma  5.793924e-02  2.148633e-02 -2.968736e-02 -8.034451e-05
delta  2.148633e-02  7.988170e-03 -1.104432e-02 -2.176766e-05
rho   -2.968736e-02 -1.104432e-02  1.527309e-02  2.755062e-05
nu    -8.034451e-05 -2.176766e-05  2.755062e-05  3.448088e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45       FALSE
4  0.4 50685.78       FALSE
5  0.8 56767.62       FALSE
6  1.2 50579.58       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.0844 0.6346 0.0000 1.5846 

Elasticity of Substitution: 1 

> summary( cesGridBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 137 function and 137 gradient calls
Message: NEW_X 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.08442   12.03125   0.090    0.928    
delta  0.63457    4.46733   0.142    0.887    
rho    0.00000    6.17714   0.000    1.000    
nu     1.58459    0.09281  17.073   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.98322 
Multiple R-squared: 0.9717722 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.177   0.162    0.871

> coef( cesGridBfgsConVrs )
    gamma     delta       rho        nu 
1.0844227 0.6345651 0.0000000 1.5845929 
> vcov( cesGridBfgsConVrs )
            gamma        delta          rho           nu
gamma 144.7509106  53.67979188 -74.16861035 -0.200726495
delta  53.6797919  19.95702685 -27.59226363 -0.054382625
rho   -74.1686104 -27.59226363  38.15710417  0.068830343
nu     -0.2007265  -0.05438262   0.06883034  0.008614435
> coef( summary( cesGridBfgsConVrs ) )
       Estimate  Std. Error     t value     Pr(>|t|)
gamma 1.0844227 12.03124726  0.09013386 9.281808e-01
delta 0.6345651  4.46732883  0.14204575 8.870439e-01
rho   0.0000000  6.17714369  0.00000000 1.000000e+00
nu    1.5845929  0.09281398 17.07278230 2.366482e-65
> plot( cesGridBfgsConVrs )
> 
> # using the Levenberg-Marquardt optimization method
> cesGridLm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 165.423876366334, 1.87344744871233 
residual sum-of-squares: 153699
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho 
165.423876   1.873447   0.400000 

$iter
[1] 22

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.7142857 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.681 1203.375 1218.553 1251.728 1262.180
 [9] 1220.443 1267.595 1296.954 1447.264 1504.941 1566.009 1546.896 1573.327
[17] 1675.257 1763.352 1883.030 1988.796

$residuals
 [1] -199.290890 -212.595297 -132.734936  -29.884667  -25.258501  -32.742726
 [7]  -12.370427   26.380531  -12.736988   10.813697   63.638626   93.520475
[13]   70.093427  129.950875   97.792776   52.704151  -20.217542   -7.751907
[19]    4.390212    3.097979

$rss
[1] 153698.6

$cov.unscaled
            gamma      delta         rho
gamma 25031.51534 204.318963 40.13182460
delta   204.31896   1.667786  0.32759801
rho      40.13182   0.327598  0.06435538

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8        TRUE
4  0.4 153698.6        TRUE
5  0.8 156028.7       FALSE
6  1.2 162374.1       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.424   1.873   0.400 

Elasticity of Substitution: 0.7143 

> summary( cesGridLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 22 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.424  13869.588   0.012    0.990
delta     1.873    113.211   0.017    0.987
rho       0.400     22.239   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7143    11.3464   0.063     0.95

> coef( cesGridLm )
     gamma      delta        rho 
165.423876   1.873447   0.400000 
> vcov( cesGridLm )
            gamma       delta         rho
gamma 192365468.2 1570177.133 308410.3031
delta   1570177.1   12816.819   2517.5681
rho      308410.3    2517.568    494.5666
> coef( summary( cesGridLm ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.423876 13869.58789 0.01192709 0.9904838
delta   1.873447   113.21139 0.01654822 0.9867970
rho     0.400000    22.23885 0.01798654 0.9856496
> plot( cesGridLm )
> 
> # using the Levenberg-Marquardt optimization method, VRS
> cesGridLmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(gammaStar) : NaNs produced
2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.165069324985032, 0.039375862397587, 1.58848816342804 
residual sum-of-squares: 49123
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
0.16506932 0.03937586 1.20000000 1.58848816 

$iter
[1] 47

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
27.90554  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1005.531 1091.710 1116.144 1171.216 1165.307 1190.161 1240.331 1218.113
 [9] 1171.374 1223.617 1293.036 1538.404 1650.579 1707.123 1598.527 1593.921
[17] 1650.480 1724.012 1877.487 2043.283

$residuals
 [1]  -59.3977607 -128.9800132  -46.5649000    0.5809323   12.8091247
 [6]   -4.3514307   -0.9728616   70.4483579   36.3321209   54.7918763
[11]   67.5569840    2.3800553  -75.5443215  -11.1640338   46.1623948
[16]   32.1102257    4.5597783   31.5880894    9.9336786  -51.3889320

$rss
[1] 49122.99

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.464972e-04  2.694964e-04 -2.283070e-03 -7.675387e-06
delta  2.694964e-04  2.123928e-04 -1.801904e-03 -2.984097e-06
rho   -2.283070e-03 -1.801904e-03  1.529043e-02  2.277279e-05
nu    -7.675387e-06 -2.984097e-06  2.277279e-05  3.446075e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45        TRUE
4  0.4 49665.41        TRUE
5  0.8 49384.15       FALSE
6  1.2 49122.99        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho      nu 
0.16507 0.03938 1.20000 1.58849 

Elasticity of Substitution: 0.4545 

> summary( cesGridLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 47 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.16507    0.92252   0.179    0.858    
delta  0.03938    0.72227   0.055    0.957    
rho    1.20000    6.12826   0.196    0.845    
nu     1.58849    0.09200  17.266   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.55955 
Multiple R-squared: 0.9722487 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545     1.2662   0.359     0.72

> coef( cesGridLmVrs )
     gamma      delta        rho         nu 
0.16506932 0.03937586 1.20000000 1.58848816 
> vcov( cesGridLmVrs )
           gamma        delta         rho           nu
gamma  0.8510490  0.661923533 -5.60756034 -0.018851897
delta  0.6619235  0.521668349 -4.42574530 -0.007329388
rho   -5.6075603 -4.425745298 37.55557112  0.055933363
nu    -0.0188519 -0.007329388  0.05593336  0.008464076
> coef( summary( cesGridLmVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 0.16506932 0.92252316  0.17893244 8.579907e-01
delta 0.03937586 0.72226612  0.05451711 9.565232e-01
rho   1.20000000 6.12826004  0.19581414 8.447556e-01
nu    1.58848816 0.09200041 17.26609852 8.467703e-67
> plot( cesGridLmVrs )
> 
> # using the Levenberg-Marquardt optimization method, TC, VRS
> cesGridLmTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 21.8438390266117, 0.0191050223701434, 0.898105762683758, 0.910705640121149 
residual sum-of-squares: 16956
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
      gamma      lambda       delta         rho          nu 
21.84383903  0.01910502  0.89810576 -0.80000000  0.91070564 

$iter
[1] 45

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
3.758571 0.015000 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  956.6652 1034.4259 1063.3754 1131.7597 1147.4022 1184.2468 1235.4303
 [8] 1233.8714 1235.2562 1284.3555 1359.1406 1530.2538 1628.3747 1676.5573
[15] 1624.7047 1641.3131 1684.0363 1748.7234 1866.4258 1996.3762

$residuals
 [1] -10.532149 -71.695410   6.203764  40.036728  30.713814   1.563244
 [7]   3.927526  54.689487 -27.549984  -5.946964   1.452055  10.530253
[13] -53.340031  19.402126  19.984434 -15.281984 -28.996428   6.876438
[19]  20.994429  -4.482173

$rss
[1] 16955.55

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma  13.128728428  1.895820e-04  2.290744e-01 -0.8074908846 -7.867202e-03
lambda  0.000189582  1.299507e-08  2.861489e-06 -0.0000103682 -4.607286e-07
delta   0.229074351  2.861489e-06  4.032596e-03 -0.0142109078 -1.148355e-04
rho    -0.807490885 -1.036820e-05 -1.421091e-02  0.0500939316  4.112287e-04
nu     -0.007867202 -4.607286e-07 -1.148355e-04  0.0004112287  1.991461e-05

$allRhoSum
   rho      rss convergence
1 -0.8 16955.55        TRUE
2 -0.4 17026.54        TRUE
3  0.0 17104.64        TRUE
4  0.4 17189.91        TRUE
5  0.8 17282.39        TRUE
6  1.2 17382.09        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
   gamma   lambda    delta      rho       nu 
21.84384  0.01911  0.89811 -0.80000  0.91071 

Elasticity of Substitution: 5 

> summary( cesGridLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 45 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   21.843839 105.499945   0.207    0.836    
lambda   0.019105   0.003319   5.756 8.62e-09 ***
delta    0.898106   1.848984   0.486    0.627    
rho     -0.800000   6.516786  -0.123    0.902    
nu       0.910706   0.129935   7.009 2.40e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.11662 
Multiple R-squared: 0.9904212 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      162.9   0.031    0.976

> 
> # using the Levenberg-Marquardt optimization method, multErr, VRS
> cesGridLmMeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, vrs = TRUE, multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(gammaStar) : NaNs produced
2: In log(gammaStar) : NaNs produced
3: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
4: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
5: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
> print.default( cesGridLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.0751174685337367, 0.0318841911577494, 1.694598877961 
residual sum-of-squares: 0.03264
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
     gamma      delta        rho         nu 
0.07511747 0.03188419 1.20000000 1.69459888 

$iter
[1] 36

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "LM"

$multErr
[1] TRUE

$start
   gamma    delta       nu 
3.318307 0.500000 1.000000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1]  981.7679 1076.6608 1100.6877 1165.0731 1157.8516 1184.3746 1237.5167
 [8] 1209.6482 1162.0442 1215.1714 1291.5532 1554.5040 1677.2709 1732.9340
[15] 1607.4388 1597.3798 1646.6856 1718.4149 1878.4836 2055.5084

$residuals
 [1] -0.036971796 -0.111846133 -0.028669913  0.005754156  0.017350372
 [6]  0.001211242  0.001486639  0.063196477  0.038542149  0.050730803
[11]  0.052074792 -0.008865100 -0.062890723 -0.021567350  0.022909258
[16]  0.017777466  0.005060552  0.021408260  0.004746117 -0.031437266

$rss
[1] 0.03263555

$cov.unscaled
            gamma        delta         rho        nu
gamma   117.69062   171.676466 -1776.46036 -8.629780
delta   171.67647   254.203288 -2634.31779 -7.936837
rho   -1776.46036 -2634.317794 27305.67340 77.955958
nu       -8.62978    -7.936837    77.95596  6.538979

$allRhoSum
   rho        rss convergence
1 -0.8 0.03293881        TRUE
2 -0.4 0.03285591        TRUE
3  0.0 0.03278399        TRUE
4  0.4 0.03272322        TRUE
5  0.8 0.03267372        TRUE
6  1.2 0.03263555        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma   delta     rho      nu 
0.07512 0.03188 1.20000 1.69460 

Elasticity of Substitution: 0.4545 

> summary( cesGridLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 36 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.07512    0.43823   0.171    0.864    
delta  0.03188    0.64405   0.050    0.961    
rho    1.20000    6.67509   0.180    0.857    
nu     1.69460    0.10330  16.405   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.04039527 
Multiple R-squared: 0.9639554 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545     1.3792    0.33    0.742

> vcov( cesGridLmMeVrs )
            gamma       delta        rho          nu
gamma  0.19204493  0.28013783 -2.8987884 -0.01408188
delta  0.28013783  0.41480326 -4.2986211 -0.01295115
rho   -2.89878845 -4.29862110 44.5567896  0.12720680
nu    -0.01408188 -0.01295115  0.1272068  0.01067016
> 
> # using the Newton-type optimization method implemented in nlm()
> cesGridNewton <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewton )
$nlm
$nlm$minimum
[1] 153698.6

$nlm$estimate
[1] 165.423876   1.873447

$nlm$gradient
[1] -9.986658e-07  1.850640e-04

$nlm$code
[1] 1

$nlm$iterations
[1] 70


$coefficients
     gamma      delta        rho 
165.423876   1.873447   0.400000 

$iter
[1] 70

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7142857 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta 
16.06668  0.50000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145.424 1175.326 1202.314 1201.681 1203.375 1218.553 1251.728 1262.180
 [9] 1220.443 1267.595 1296.954 1447.264 1504.941 1566.009 1546.896 1573.327
[17] 1675.257 1763.352 1883.030 1988.796

$residuals
 [1] -199.290890 -212.595297 -132.734936  -29.884667  -25.258501  -32.742726
 [7]  -12.370427   26.380531  -12.736988   10.813697   63.638626   93.520475
[13]   70.093427  129.950875   97.792776   52.704151  -20.217542   -7.751907
[19]    4.390212    3.097979

$rss
[1] 153698.6

$cov.unscaled
            gamma      delta         rho
gamma 25031.51537 204.318963 40.13182463
delta   204.31896   1.667786  0.32759801
rho      40.13182   0.327598  0.06435538

$allRhoSum
   rho      rss convergence
1 -0.8 153725.4        TRUE
2 -0.4 153710.7        TRUE
3  0.0 153701.8       FALSE
4  0.4 153698.6        TRUE
5  0.8 180874.6        TRUE
6  1.2 169812.9        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
  gamma   delta     rho 
165.424   1.873   0.400 

Elasticity of Substitution: 0.7143 

> summary( cesGridNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 70 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma   165.424  13869.588   0.012    0.990
delta     1.873    113.211   0.017    0.987
rho       0.400     22.239   0.018    0.986

Residual standard error: 87.66374 
Multiple R-squared: 0.9131703 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7143    11.3464   0.063     0.95

> coef( cesGridNewton )
     gamma      delta        rho 
165.423876   1.873447   0.400000 
> vcov( cesGridNewton )
            gamma       delta         rho
gamma 192365468.5 1570177.135 308410.3033
delta   1570177.1   12816.819   2517.5681
rho      308410.3    2517.568    494.5666
> coef( summary( cesGridNewton ) )
        Estimate  Std. Error    t value  Pr(>|t|)
gamma 165.423876 13869.58790 0.01192709 0.9904838
delta   1.873447   113.21139 0.01654822 0.9867970
rho     0.400000    22.23885 0.01798654 0.9856496
> plot( cesGridNewton )
> 
> # using the Newton-type optimization method implemented in nlm(), TC, CRS
> cesGridNewtonTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Newton",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonTc )
$nlm
$nlm$minimum
[1] 17440.55

$nlm$estimate
[1] 16.06509524  0.01707746  0.90669745

$nlm$gradient
[1]  0.02217432  7.09283977 -2.25008595

$nlm$code
[1] 2

$nlm$iterations
[1] 93


$coefficients
      gamma      lambda       delta         rho 
16.06509524  0.01707746  0.90669745 -0.80000000 

$iter
[1] 93

$convergence
[1] TRUE

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma   lambda    delta 
3.758571 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  957.5516 1037.9903 1066.2188 1135.5760 1148.5965 1184.4849 1236.0385
 [8] 1230.7110 1226.8912 1276.2072 1351.9638 1534.0000 1635.5230 1683.6930
[15] 1622.5157 1635.7720 1679.1108 1745.0545 1868.1000 2003.6834

$residuals
 [1] -11.418582 -75.259791   3.360346  36.220430  29.519581   1.325081
 [7]   3.319312  57.849946 -19.185041   2.201329   8.628835   6.784046
[13] -60.488381  12.266367  22.173371  -9.740883 -24.070982  10.545282
[19]  19.320250 -11.789338

$rss
[1] 17440.55

$cov.unscaled
               gamma        lambda         delta           rho
gamma   4.778813e+00  4.840843e-06  1.053989e-01 -4.002742e-01
lambda  4.840843e-06  2.325833e-09  1.633246e-07 -7.415168e-07
delta   1.053989e-01  1.633246e-07  2.326482e-03 -8.839508e-03
rho    -4.002742e-01 -7.415168e-07 -8.839508e-03  3.359551e-02

$allRhoSum
   rho      rss convergence
1 -0.8 17440.55        TRUE
2 -0.4 25053.25        TRUE
3  0.0 18121.65        TRUE
4  0.4 35849.66        TRUE
5  0.8 56559.90        TRUE
6  1.2 66746.14        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
   gamma   lambda    delta      rho 
16.06510  0.01708  0.90670 -0.80000 

Elasticity of Substitution: 5 

> summary( cesGridNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 93 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  16.065095  64.554282   0.249    0.803    
lambda  0.017077   0.001424  11.991   <2e-16 ***
delta   0.906697   1.424344   0.637    0.524    
rho    -0.800000   5.412597  -0.148    0.882    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.53011 
Multiple R-squared: 0.9901472 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      135.3   0.037    0.971

> 
> # using the Newton-type optimization method implemented in nlm(), VRS
> cesGridNewtonVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonVrs )
$nlm
$nlm$minimum
[1] 50253.65

$nlm$estimate
[1] 1.364098 0.654290 1.555338

$nlm$gradient
[1]  -33428.09  231697.83 -218084.20

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
   gamma    delta      rho       nu 
1.364098 0.654290 0.000000 1.555338 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
10.03123  0.50000  1.00000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1010.328 1095.077 1118.909 1174.261 1168.132 1192.573 1241.712 1219.016
 [9] 1173.497 1224.376 1292.779 1532.515 1642.219 1696.305 1591.072 1588.060
[17] 1649.500 1727.053 1881.046 2044.015

$residuals
 [1]  -64.1949005 -132.3465370  -49.3296295   -2.4644740    9.9838110
 [6]   -6.7631602   -2.3539750   69.5450089   34.2091619   54.0326417
[11]   67.8138176    8.2689534  -67.1845131   -0.3460493   53.6167279
[16]   37.9713639    5.5394736   28.5464332    6.3747391  -52.1204926

$rss
[1] 50253.65

$cov.unscaled
              gamma         delta           rho            nu
gamma  0.0917967086  2.757090e-02 -3.905133e-02 -1.020105e-04
delta  0.0275708962  8.301569e-03 -1.176609e-02 -2.248921e-05
rho   -0.0390513318 -1.176609e-02  1.668029e-02  2.914592e-05
nu    -0.0001020105 -2.248921e-05  2.914592e-05  3.453859e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 59749.78        TRUE
3  0.0 50253.65       FALSE
4  0.4 51505.55       FALSE
5  0.8 98004.85        TRUE
6  1.2 98745.97        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
1.3641 0.6543 0.0000 1.5553 

Elasticity of Substitution: 1 

> summary( cesGridNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  1.36410   15.18736   0.090    0.928    
delta  0.65429    4.56719   0.143    0.886    
rho    0.00000    6.47397   0.000    1.000    
nu     1.55534    0.09316  16.696   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 50.12666 
Multiple R-squared: 0.97161 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    1.000      6.474   0.154    0.877

> coef( cesGridNewtonVrs )
   gamma    delta      rho       nu 
1.364098 0.654290 0.000000 1.555338 
> vcov( cesGridNewtonVrs )
          gamma        delta          rho           nu
gamma 230.65598  69.27690863 -98.12359826 -0.256320046
delta  69.27691  20.85920739 -29.56445163 -0.056508248
rho   -98.12360 -29.56445163  41.91227369  0.073234447
nu     -0.25632  -0.05650825   0.07323445  0.008678452
> coef( summary( cesGridNewtonVrs ) )
      Estimate  Std. Error     t value     Pr(>|t|)
gamma 1.364098 15.18736264  0.08981793 9.284319e-01
delta 0.654290  4.56718813  0.14325883 8.860858e-01
rho   0.000000  6.47396893  0.00000000 1.000000e+00
nu    1.555338  0.09315821 16.69566296 1.409449e-62
> plot( cesGridNewtonVrs )
> 
> # using the Newton-type optimization method implemented in nlm(), TC, multErr, CRS
> cesGridNewtonTcMe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Newton", multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.01181493

$nlm$estimate
[1] 3.89764222 0.01806541 0.15742424

$nlm$gradient
[1]  6.052524e-09  1.924563e-07 -1.042997e-07

$nlm$code
[1] 1

$nlm$iterations
[1] 39


$coefficients
     gamma     lambda      delta        rho 
3.89764222 0.01806541 0.15742424 0.40000000 

$iter
[1] 39

$convergence
[1] TRUE

$ela
E_1_2 (all) 
  0.7142857 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] TRUE

$start
   gamma   lambda    delta 
2.606375 0.015000 0.500000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1]  949.3677 1031.6773 1060.3367 1131.6352 1145.6446 1182.6272 1235.2972
 [8] 1230.3721 1228.2096 1278.2939 1356.1580 1540.2660 1644.0867 1692.9788
[15] 1629.9778 1642.1427 1679.2381 1740.9149 1861.9837 1998.6501

$residuals
 [1] -3.412995e-03 -6.916771e-02  8.678812e-03  3.487437e-02  2.794916e-02
 [6]  2.687684e-03  3.281746e-03  4.620937e-02 -1.683467e-02  8.967851e-05
[11]  3.264622e-03  3.363077e-04 -4.290776e-02  1.759002e-03  8.984962e-03
[16] -9.859737e-03 -1.451508e-02  8.399764e-03  1.356851e-02 -3.386038e-03

$rss
[1] 0.01181493

$cov.unscaled
               gamma       lambda         delta           rho
gamma   8.281836e+05 -6.008577792  1.052554e+05 -2.538060e+05
lambda -6.008578e+00  0.003380888 -6.430806e-01  1.353308e+00
delta   1.052554e+05 -0.643080648  1.338409e+04 -3.228565e+04
rho    -2.538060e+05  1.353307594 -3.228565e+04  7.790197e+04

$allRhoSum
   rho        rss convergence
1 -0.8 0.02517619        TRUE
2 -0.4 0.02389291        TRUE
3  0.0 0.01923221        TRUE
4  0.4 0.01181493        TRUE
5  0.8 0.01187131        TRUE
6  1.2 0.01348975        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
  gamma  lambda   delta     rho 
3.89764 0.01807 0.15742 0.40000 

Elasticity of Substitution: 0.7143 

> summary( cesGridNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 39 iterations

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   3.897642  22.118920   0.176    0.860    
lambda  0.018065   0.001413  12.783   <2e-16 ***
delta   0.157424   2.811869   0.056    0.955    
rho     0.400000   6.783828   0.059    0.953    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.02430528 
Multiple R-squared: 0.9869509 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.7143     3.4611   0.206    0.836

> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesGridPort <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPort )
$nlminb
$nlminb$par
   gamma    delta 
49.14295  1.00000 

$nlminb$objective
[1] 165832.4

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 47

$nlminb$evaluations
function gradient 
      71       48 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
   gamma    delta      rho 
49.14295  1.00000 -0.80000 

$iter
[1] 47

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma  delta 
4.4463 0.5000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] -0.8

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812030 -226.528907 -143.760265  -52.354411  -46.034845  -54.066630
 [7]  -33.936006   12.318503  -29.713284   -2.748202   45.035837   72.884174
[13]   46.197491  114.047832   95.703326   59.353878    6.785316   32.647977
[19]   53.896799   56.153212

$rss
[1] 165832.4

$cov.unscaled
             gamma        delta          rho
gamma 6.863802e-03 9.644876e-06 2.754124e+09
delta 9.644876e-06 1.368849e-08 2.374645e+06
rho   2.754124e+09 2.374645e+06 1.183270e+23

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4        TRUE
2 -0.4 165832.4        TRUE
3  0.0 165832.4        TRUE
4  0.4 165832.4        TRUE
5  0.8 165832.4        TRUE
6  1.2 165832.4        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
gamma delta   rho 
49.14  1.00 -0.80 

Elasticity of Substitution: 5 

> summary( cesGridPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 47 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.914e+01  7.544e+00   6.514 7.31e-11 ***
delta  1.000e+00  1.065e-02  93.865  < 2e-16 ***
rho   -8.000e-01  3.132e+13   0.000        1    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 5.000e+00  7.831e+14       0        1

> coef( cesGridPort )
   gamma    delta      rho 
49.14295  1.00000 -0.80000 
> vcov( cesGridPort )
             gamma        delta          rho
gamma 5.691202e+01 7.997163e-02 2.283614e+13
delta 7.997163e-02 1.134998e-04 1.968965e+10
rho   2.283614e+13 1.968965e+10 9.811219e+26
> coef( summary( cesGridPort ) )
      Estimate   Std. Error       t value     Pr(>|t|)
gamma 49.14295 7.544006e+00  6.514172e+00 7.309177e-11
delta  1.00000 1.065363e-02  9.386475e+01 0.000000e+00
rho   -0.80000 3.132286e+13 -2.554045e-14 1.000000e+00
> plot( cesGridPort )
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesGridPortVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortVrs )
$nlminb
$nlminb$par
     gamma      delta         nu 
0.18391577 0.04069031 1.57430648 

$nlminb$objective
[1] 49189.91

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 128

$nlminb$evaluations
function gradient 
     200      128 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
     gamma      delta        rho         nu 
0.18391577 0.04069031 1.20000000 1.57430648 

$iter
[1] 128

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
  0.4545455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma    delta       nu 
27.90554  0.50000  1.00000 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 1.2

$fitted.values
 [1] 1008.422 1093.350 1117.840 1171.596 1165.871 1190.491 1240.244 1218.819
 [9] 1172.202 1224.320 1292.764 1535.707 1646.436 1703.109 1596.836 1592.993
[17] 1650.591 1724.402 1876.994 2041.267

$residuals
 [1]  -62.2887960 -130.6192818  -48.2612166    0.2009635   12.2447484
 [6]   -4.6811880   -0.8861381   69.7420157   35.5040322   54.0881186
[11]   67.8288597    5.0771667  -71.4018092   -7.1497656   47.8530783
[16]   33.0378577    4.4485647   31.1977739   10.4267277  -49.3730846

$rss
[1] 49189.91

$cov.unscaled
              gamma         delta           rho            nu
gamma  4.550174e-04  3.248733e-04 -2.667069e-03 -8.691903e-06
delta  3.248733e-04  2.348802e-04 -1.931003e-03 -3.143046e-06
rho   -2.667069e-03 -1.931003e-03  1.587875e-02  2.322009e-05
nu    -8.691903e-06 -3.143046e-06  2.322009e-05  3.448727e-06

$allRhoSum
   rho      rss convergence
1 -0.8 50626.23        TRUE
2 -0.4 50286.89        TRUE
3  0.0 49966.45        TRUE
4  0.4 49695.65       FALSE
5  0.8 49388.09       FALSE
6  1.2 49189.91       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma   delta     rho      nu 
0.18392 0.04069 1.20000 1.57431 

Elasticity of Substitution: 0.4545 

> summary( cesGridPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 128 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma  0.18392    1.05788   0.174    0.862    
delta  0.04069    0.76006   0.054    0.957    
rho    1.20000    6.24930   0.192    0.848    
nu     1.57431    0.09210  17.094   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 49.5933 
Multiple R-squared: 0.9722109 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.4545     1.2912   0.352    0.725

> coef( cesGridPortVrs )
     gamma      delta        rho         nu 
0.18391577 0.04069031 1.20000000 1.57430648 
> vcov( cesGridPortVrs )
           gamma        delta         rho           nu
gamma  1.1191134  0.799024512 -6.55964571 -0.021377698
delta  0.7990245  0.577686943 -4.74929238 -0.007730309
rho   -6.5596457 -4.749292385 39.05371726  0.057109711
nu    -0.0213777 -0.007730309  0.05710971  0.008482130
> coef( summary( cesGridPortVrs ) )
        Estimate Std. Error     t value     Pr(>|t|)
gamma 0.18391577 1.05788156  0.17385289 8.619811e-01
delta 0.04069031 0.76005720  0.05353586 9.573050e-01
rho   1.20000000 6.24929734  0.19202159 8.477253e-01
nu    1.57430648 0.09209848 17.09372892 1.652601e-65
> plot( cesGridPortVrs )
> 
> # using the PORT optimization rountine implemented in nlminb(), TC, VRS
> cesGridPortTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "PORT", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortTcVrs )
$nlminb
$nlminb$par
      gamma      lambda       delta          nu 
21.84384077  0.01910502  0.89810578  0.91070565 

$nlminb$objective
[1] 16955.55

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 115

$nlminb$evaluations
function gradient 
     160      116 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
      gamma      lambda       delta         rho          nu 
21.84384077  0.01910502  0.89810578 -0.80000000  0.91070565 

$iter
[1] 115

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
   gamma   lambda    delta       nu 
3.758571 0.015000 0.500000 1.000000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] -0.8

$fitted.values
 [1]  956.6652 1034.4259 1063.3754 1131.7598 1147.4022 1184.2468 1235.4303
 [8] 1233.8714 1235.2562 1284.3555 1359.1406 1530.2538 1628.3747 1676.5573
[15] 1624.7047 1641.3131 1684.0363 1748.7234 1866.4258 1996.3762

$residuals
 [1] -10.532158 -71.695417   6.203757  40.036724  30.713810   1.563242
 [7]   3.927525  54.689485 -27.549984  -5.946963   1.452057  10.530255
[13] -53.340027  19.402128  19.984435 -15.281985 -28.996432   6.876431
[19]  20.994420  -4.482182

$rss
[1] 16955.55

$cov.unscaled
              gamma        lambda         delta           rho            nu
gamma  13.128726937  1.895820e-04  2.290743e-01 -8.074908e-01 -7.867202e-03
lambda  0.000189582  1.299507e-08  2.861488e-06 -1.036819e-05 -4.607286e-07
delta   0.229074287  2.861488e-06  4.032594e-03 -1.421090e-02 -1.148355e-04
rho    -0.807490796 -1.036819e-05 -1.421090e-02  5.009393e-02  4.112287e-04
nu     -0.007867202 -4.607286e-07 -1.148355e-04  4.112287e-04  1.991461e-05

$allRhoSum
   rho      rss convergence
1 -0.8 16955.55        TRUE
2 -0.4 17026.54        TRUE
3  0.0 17104.64        TRUE
4  0.4 17189.91        TRUE
5  0.8 17296.45       FALSE
6  1.2 19295.06       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
   gamma   lambda    delta      rho       nu 
21.84384  0.01911  0.89811 -0.80000  0.91071 

Elasticity of Substitution: 5 

> summary( cesGridPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 115 iterations
Message: relative convergence (4) 

Coefficients:
         Estimate Std. Error t value Pr(>|t|)    
gamma   21.843841 105.499939   0.207    0.836    
lambda   0.019105   0.003319   5.756 8.62e-09 ***
delta    0.898106   1.848984   0.486    0.627    
rho     -0.800000   6.516786  -0.123    0.902    
nu       0.910706   0.129935   7.009 2.40e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.11662 
Multiple R-squared: 0.9904212 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      162.9   0.031    0.976

> 
> # using the PORT optimization rountine implemented in nlminb(), multErr
> cesGridPortMe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT", multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortMe )
$nlminb
$nlminb$par
   gamma    delta 
48.30514  1.00000 

$nlminb$objective
[1] 0.1157039

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 58

$nlminb$evaluations
function gradient 
      69       59 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
   gamma    delta      rho 
48.30514  1.00000 -0.40000 

$iter
[1] 58

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
   1.666667 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "PORT"

$multErr
[1] TRUE

$start
   gamma    delta 
1.816679 0.500000 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] -0.4

$fitted.values
 [1] 1130.340 1168.984 1192.654 1203.281 1203.281 1218.739 1251.586 1254.484
 [9] 1216.323 1259.315 1293.129 1442.874 1502.773 1554.942 1522.578 1539.968
[17] 1620.154 1693.578 1802.265 1902.739

$residuals
 [1] -0.177890779 -0.194117041 -0.108915660 -0.026513940 -0.021135372
 [6] -0.027390308 -0.009818258  0.026801371 -0.007109802  0.015048092
[11]  0.050855860  0.065654175  0.046965342  0.086810119  0.077146481
[16]  0.054380669  0.021303707  0.035967059  0.046166940  0.045791345

$rss
[1] 0.1157039

$cov.unscaled
             gamma         delta           rho
gamma 4.184394e+04  1.346693e+02  5.434294e+14
delta 1.346693e+02  4.367434e-01 -5.670810e+12
rho   5.434294e+14 -5.670810e+12  2.606183e+28

$allRhoSum
   rho       rss convergence
1 -0.8 0.1157039        TRUE
2 -0.4 0.1157039        TRUE
3  0.0 0.1157039        TRUE
4  0.4 0.1157039        TRUE
5  0.8 0.1157039        TRUE
6  1.2 0.1157039        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho 
48.31  1.00 -0.40 

Elasticity of Substitution: 1.667 

> summary( cesGridPortMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 58 iterations
Message: relative convergence (4) 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  4.831e+01  1.556e+01   3.105   0.0019 ** 
delta  1.000e+00  5.027e-02  19.894   <2e-16 ***
rho   -4.000e-01  1.228e+13   0.000   1.0000    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 0.07606046 
Multiple R-squared: 0.8722098 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.667e+00  3.411e+13       0        1

> vcov( cesGridPortMe )
             gamma         delta           rho
gamma 2.420753e+02  7.790882e-01  3.143844e+12
delta 7.790882e-01  2.526645e-03 -3.280673e+10
rho   3.143844e+12 -3.280673e+10  1.507727e+26
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesGridDe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", random.seed = 321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDe )
$DEoptim
$optim
$optim$bestmem
    par1     par2 
49.14295  1.00000 

$optim$bestval
[1] 165832.4

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
            par1      par2
1   1.243650e+09 0.5942603
2   4.407279e+08 0.7512382
3   2.558309e+08 0.9650117
4   3.122592e+07 0.4453546
5   3.122592e+07 0.4453546
6   3.122592e+07 0.4453546
7   2.087199e+07 0.3224183
8   3.122592e+07 0.4623156
9   2.473843e+07 0.8119128
10  2.891482e+05 0.7715427
11  2.891482e+05 0.7715427
12  2.891482e+05 0.7715427
13  2.891482e+05 0.7715427
14  2.891482e+05 0.7715427
15  2.891482e+05 0.8998770
16  2.891482e+05 0.9722668
17  2.891482e+05 0.9722668
18  2.891482e+05 0.9722668
19  2.891482e+05 0.9722668
20  9.506404e+04 0.7559218
21  9.506404e+04 0.7559218
22  9.506404e+04 0.7559218
23  2.302820e+04 0.8167190
24  2.302820e+04 0.8167190
25  2.302820e+04 0.8167190
26  2.302820e+04 0.8426907
27  2.302820e+04 0.8426907
28  2.302820e+04 0.8898182
29  2.302820e+04 0.8898182
30  2.302820e+04 0.8898182
31  2.302820e+04 0.8898182
32  2.302820e+04 0.9764671
33  2.302820e+04 0.9764671
34  2.302820e+04 0.9764671
35  2.302820e+04 0.9764671
36  1.743326e+04 0.9496269
37  1.045944e+04 0.9727675
38  5.822985e+02 0.8959168
39  2.151670e+02 0.9764671
40  2.151670e+02 0.9764671
41  2.151670e+02 0.9764671
42  2.151670e+02 0.9764671
43  2.151670e+02 0.9764671
44  2.151670e+02 0.9764671
45  2.151670e+02 0.9764671
46  1.068316e+02 0.9529744
47  1.068316e+02 0.9529744
48  1.068316e+02 0.9529744
49  1.068316e+02 0.9529744
50  3.947492e+01 0.9529744
51  3.947492e+01 0.9529744
52  3.947492e+01 0.9529744
53  3.947492e+01 0.9529744
54  3.947492e+01 0.9529744
55  3.357591e+01 0.8892083
56  3.357591e+01 0.8892083
57  3.357591e+01 0.8764437
58  3.357591e+01 0.8764437
59  3.357591e+01 0.8764437
60  3.357591e+01 0.8764437
61  3.357591e+01 0.8764437
62  3.357591e+01 0.8764437
63  3.357591e+01 0.8764437
64  3.357591e+01 0.8764437
65  4.516023e+01 0.9681272
66  4.891418e+01 0.9992339
67  4.891418e+01 0.9992339
68  4.891418e+01 0.9992339
69  4.891418e+01 0.9992339
70  4.891418e+01 0.9992339
71  4.891418e+01 0.9992339
72  4.891418e+01 0.9992339
73  4.891418e+01 0.9992339
74  4.891418e+01 0.9992339
75  4.891418e+01 0.9992339
76  4.891418e+01 0.9992339
77  4.891418e+01 0.9992339
78  4.891418e+01 0.9992339
79  4.891418e+01 0.9992339
80  4.891418e+01 0.9992339
81  4.891418e+01 0.9992339
82  4.891418e+01 0.9992339
83  4.891418e+01 0.9992339
84  4.891418e+01 0.9992339
85  4.891418e+01 0.9992339
86  4.891418e+01 0.9992339
87  4.891418e+01 0.9992339
88  4.886178e+01 0.9980997
89  4.886178e+01 0.9980997
90  4.886178e+01 0.9980997
91  4.911694e+01 0.9995384
92  4.911694e+01 0.9995384
93  4.911694e+01 0.9995384
94  4.911694e+01 0.9995384
95  4.913601e+01 0.9997562
96  4.913934e+01 0.9999053
97  4.911694e+01 0.9999858
98  4.911694e+01 0.9999858
99  4.911694e+01 0.9999858
100 4.911694e+01 0.9999858
101 4.911694e+01 0.9999858
102 4.911694e+01 0.9999858
103 4.911694e+01 0.9999858
104 4.911694e+01 0.9999858
105 4.911694e+01 0.9999858
106 4.911694e+01 0.9999858
107 4.912702e+01 0.9999577
108 4.912702e+01 0.9999577
109 4.912702e+01 0.9999577
110 4.915304e+01 0.9999849
111 4.914950e+01 0.9999900
112 4.914950e+01 0.9999900
113 4.914950e+01 0.9999900
114 4.914950e+01 0.9999900
115 4.914371e+01 0.9999959
116 4.914371e+01 0.9999959
117 4.914371e+01 0.9999959
118 4.914371e+01 0.9999959
119 4.914175e+01 0.9999959
120 4.914249e+01 0.9999987
121 4.914247e+01 0.9999999
122 4.914247e+01 0.9999999
123 4.914247e+01 0.9999999
124 4.914247e+01 0.9999999
125 4.914247e+01 0.9999999
126 4.914247e+01 0.9999999
127 4.914218e+01 1.0000000
128 4.914218e+01 1.0000000
129 4.914218e+01 1.0000000
130 4.914218e+01 1.0000000
131 4.914218e+01 1.0000000
132 4.914255e+01 1.0000000
133 4.914254e+01 1.0000000
134 4.914285e+01 1.0000000
135 4.914337e+01 1.0000000
136 4.914337e+01 1.0000000
137 4.914311e+01 1.0000000
138 4.914311e+01 1.0000000
139 4.914295e+01 1.0000000
140 4.914295e+01 1.0000000
141 4.914281e+01 1.0000000
142 4.914281e+01 1.0000000
143 4.914285e+01 1.0000000
144 4.914285e+01 1.0000000
145 4.914285e+01 1.0000000
146 4.914299e+01 1.0000000
147 4.914295e+01 1.0000000
148 4.914292e+01 1.0000000
149 4.914292e+01 1.0000000
150 4.914292e+01 1.0000000
151 4.914296e+01 1.0000000
152 4.914296e+01 1.0000000
153 4.914296e+01 1.0000000
154 4.914296e+01 1.0000000
155 4.914296e+01 1.0000000
156 4.914296e+01 1.0000000
157 4.914295e+01 1.0000000
158 4.914295e+01 1.0000000
159 4.914295e+01 1.0000000
160 4.914295e+01 1.0000000
161 4.914295e+01 1.0000000
162 4.914295e+01 1.0000000
163 4.914294e+01 1.0000000
164 4.914295e+01 1.0000000
165 4.914295e+01 1.0000000
166 4.914295e+01 1.0000000
167 4.914295e+01 1.0000000
168 4.914295e+01 1.0000000
169 4.914295e+01 1.0000000
170 4.914295e+01 1.0000000
171 4.914295e+01 1.0000000
172 4.914295e+01 1.0000000
173 4.914295e+01 1.0000000
174 4.914295e+01 1.0000000
175 4.914295e+01 1.0000000
176 4.914295e+01 1.0000000
177 4.914295e+01 1.0000000
178 4.914295e+01 1.0000000
179 4.914295e+01 1.0000000
180 4.914295e+01 1.0000000
181 4.914295e+01 1.0000000
182 4.914295e+01 1.0000000
183 4.914295e+01 1.0000000
184 4.914295e+01 1.0000000
185 4.914295e+01 1.0000000
186 4.914295e+01 1.0000000
187 4.914295e+01 1.0000000
188 4.914295e+01 1.0000000
189 4.914295e+01 1.0000000
190 4.914295e+01 1.0000000
191 4.914295e+01 1.0000000
192 4.914295e+01 1.0000000
193 4.914295e+01 1.0000000
194 4.914295e+01 1.0000000
195 4.914295e+01 1.0000000
196 4.914295e+01 1.0000000
197 4.914295e+01 1.0000000
198 4.914295e+01 1.0000000
199 4.914295e+01 1.0000000
200 4.914295e+01 1.0000000

$member$bestvalit
  [1] 3.432710e+23 1.601258e+22 1.403099e+21 5.542714e+20 5.542714e+20
  [6] 5.542714e+20 5.387144e+20 4.979393e+20 3.441500e+19 6.063048e+15
 [11] 6.063048e+15 6.063048e+15 6.063048e+15 6.063048e+15 2.700481e+15
 [16] 1.711800e+15 1.711800e+15 1.711800e+15 1.711800e+15 7.229683e+14
 [21] 7.229683e+14 7.229683e+14 2.886212e+13 2.886212e+13 2.886212e+13
 [26] 2.449960e+13 2.449960e+13 1.819838e+13 1.819838e+13 1.819838e+13
 [31] 1.819838e+13 1.053565e+13 1.053565e+13 1.053565e+13 1.053565e+13
 [36] 7.143531e+12 2.214325e+12 9.907333e+09 5.734664e+08 5.734664e+08
 [41] 5.734664e+08 5.734664e+08 5.734664e+08 5.734664e+08 5.734664e+08
 [46] 9.624539e+07 9.624539e+07 9.624539e+07 9.624539e+07 3.691095e+05
 [51] 3.691095e+05 3.691095e+05 3.691095e+05 3.691095e+05 2.299135e+05
 [56] 2.299135e+05 1.955066e+05 1.955066e+05 1.955066e+05 1.955066e+05
 [61] 1.955066e+05 1.955066e+05 1.955066e+05 1.955066e+05 1.819122e+05
 [66] 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05
 [71] 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05
 [76] 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05
 [81] 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05 1.661625e+05
 [86] 1.661625e+05 1.661625e+05 1.661326e+05 1.661326e+05 1.661326e+05
 [91] 1.659399e+05 1.659399e+05 1.659399e+05 1.659399e+05 1.658867e+05
 [96] 1.658492e+05 1.658443e+05 1.658443e+05 1.658443e+05 1.658443e+05
[101] 1.658443e+05 1.658443e+05 1.658443e+05 1.658443e+05 1.658443e+05
[106] 1.658443e+05 1.658405e+05 1.658405e+05 1.658405e+05 1.658374e+05
[111] 1.658351e+05 1.658351e+05 1.658351e+05 1.658351e+05 1.658330e+05
[116] 1.658330e+05 1.658330e+05 1.658330e+05 1.658330e+05 1.658326e+05
[121] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[126] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[131] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[136] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[141] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[146] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[151] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[156] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[161] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[166] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[171] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[176] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[181] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[186] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[191] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05
[196] 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05 1.658324e+05

$member$pop
          [,1] [,2]
 [1,] 49.14295    1
 [2,] 49.14295    1
 [3,] 49.14295    1
 [4,] 49.14295    1
 [5,] 49.14295    1
 [6,] 49.14295    1
 [7,] 49.14295    1
 [8,] 49.14295    1
 [9,] 49.14295    1
[10,] 49.14295    1
[11,] 49.14295    1
[12,] 49.14295    1
[13,] 49.14295    1
[14,] 49.14295    1
[15,] 49.14295    1
[16,] 49.14295    1
[17,] 49.14295    1
[18,] 49.14295    1
[19,] 49.14295    1
[20,] 49.14295    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
   gamma    delta      rho 
49.14295  1.00000  0.00000 

$iter
[1] 200

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 0

$fitted.values
 [1] 1149.945 1189.259 1213.339 1224.151 1224.151 1239.877 1273.294 1276.242
 [9] 1237.419 1281.157 1315.557 1467.900 1528.837 1581.912 1548.986 1566.677
[17] 1648.255 1722.952 1833.523 1935.741

$residuals
 [1] -203.812029 -226.528906 -143.760264  -52.354410  -46.034843  -54.066629
 [7]  -33.936004   12.318504  -29.713282   -2.748200   45.035838   72.884176
[13]   46.197493  114.047833   95.703328   59.353880    6.785318   32.647979
[19]   53.896801   56.153215

$rss
[1] 165832.4

$cov.unscaled
              gamma         delta           rho
gamma  1.153355e+02  1.508618e+00 -3.354987e+14
delta  1.508618e+00  1.973522e-02 -4.389334e+12
rho   -3.354987e+14 -4.389334e+12  9.763359e+26

$allRhoSum
   rho      rss convergence
1 -0.8 165832.4          NA
2  0.0 165832.4          NA
3  0.8 165832.4          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
49.14  1.00  0.00 

Elasticity of Substitution: 1 

> summary( cesGridDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)
gamma 4.914e+01  9.779e+02   0.050    0.960
delta 1.000e+00  1.279e+01   0.078    0.938
rho   0.000e+00  2.845e+15   0.000    1.000

Residual standard error: 91.05832 
Multiple R-squared: 0.9063156 

Elasticity of Substitution:
             Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.000e+00  2.845e+15       0        1

> coef( cesGridDe )
   gamma    delta      rho 
49.14295  1.00000  0.00000 
> vcov( cesGridDe )
              gamma         delta           rho
gamma  9.563178e+05  1.250888e+04 -2.781827e+18
delta  1.250888e+04  1.636369e+02 -3.639468e+16
rho   -2.781827e+18 -3.639468e+16  8.095405e+30
> coef( summary( cesGridDe ) )
      Estimate   Std. Error    t value  Pr(>|t|)
gamma 49.14295 9.779150e+02 0.05025278 0.9599210
delta  1.00000 1.279206e+01 0.07817347 0.9376901
rho    0.00000 2.845242e+15 0.00000000 1.0000000
> plot( cesGridDe )
> 
> # using the DE optimization method implemented in DEoptim(), TC, CRS
> cesGridDeTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "DE", random.seed = 321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDeTc )
$DEoptim
$optim
$optim$bestmem
       par1        par2        par3 
16.06113614  0.01708461  0.90668821 

$optim$bestval
[1] 17440.95

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
            par1        par2      par3
1   6.295737e+08 -0.43555244 0.6611907
2   7.053718e+07 -0.06901528 0.6407007
3   7.053718e+07 -0.06901528 0.9148036
4   7.053718e+07 -0.06901528 0.9148036
5   1.299827e+08 -0.47045374 0.9500255
6   4.304904e+07 -0.43555244 0.8890287
7   4.304904e+07 -0.43555244 0.9780598
8   4.304904e+07 -0.43555244 0.9780598
9   1.097223e+07 -0.45321124 0.9853344
10  3.216758e+06 -0.39526690 0.9309820
11  3.216758e+06 -0.39526690 0.9309820
12  3.216758e+06 -0.39526690 0.9309820
13  3.216758e+06 -0.39526690 0.9309820
14  3.216758e+06 -0.39526690 0.9309820
15  3.492456e+06 -0.37496165 0.9462017
16  3.492456e+06 -0.37496165 0.9462017
17  3.492456e+06 -0.37496165 0.9462017
18  3.492456e+06 -0.37496165 0.9462017
19  3.492456e+06 -0.37496165 0.9462017
20  3.216758e+06 -0.39526690 0.9393170
21  3.216758e+06 -0.39526690 0.9393170
22  1.298467e+06 -0.44124497 0.9174381
23  1.258778e+06 -0.44870314 0.9143047
24  1.258778e+06 -0.44870314 0.9143047
25  1.577055e+06 -0.44912059 0.9685513
26  3.974630e+05 -0.40259133 0.9049825
27  1.113755e+04 -0.42920063 0.9537137
28  1.113755e+04 -0.42920063 0.9965211
29  1.113755e+04 -0.42920063 0.9965211
30  1.113755e+04 -0.42920063 0.9965211
31  1.113755e+04 -0.42920063 0.9965211
32  1.113755e+04 -0.42920063 0.9965211
33  1.113755e+04 -0.42920063 0.9965211
34  1.113755e+04 -0.42920063 0.9965211
35  4.109336e+03 -0.40642725 0.9438636
36  4.109336e+03 -0.40642725 0.9438636
37  4.109336e+03 -0.46542506 0.9545797
38  4.109336e+03 -0.46542506 0.9545797
39  4.109336e+03 -0.46542506 0.9545797
40  4.109336e+03 -0.47741097 0.9545797
41  4.109336e+03 -0.47741097 0.9545797
42  4.109336e+03 -0.47741097 0.9545797
43  4.109336e+03 -0.47741097 0.9545797
44  4.109336e+03 -0.47741097 0.9545797
45  4.109336e+03 -0.47741097 0.9545797
46  4.109336e+03 -0.47741097 0.9545797
47  4.109336e+03 -0.47741097 0.9545797
48  4.109336e+03 -0.47741097 0.9545797
49  2.856174e+03 -0.43415978 0.9347337
50  2.856174e+03 -0.43415978 0.9347337
51  2.856174e+03 -0.43415978 0.9649947
52  2.856174e+03 -0.43415978 0.9649947
53  2.856174e+03 -0.43415978 0.9649947
54  2.821785e+03 -0.48347129 0.9580428
55  2.470407e+02 -0.45191160 0.9300745
56  2.470407e+02 -0.45191160 0.9300745
57  3.049482e+01 -0.39850893 0.9452733
58  3.049482e+01 -0.39850893 0.9452733
59  3.049482e+01 -0.39850893 0.9452733
60  3.495624e+01 -0.43807777 0.9342559
61  3.495624e+01 -0.43807777 0.9342559
62  3.495624e+01 -0.43807777 0.9342559
63  3.495624e+01 -0.43807777 0.9184532
64  3.495624e+01 -0.43807777 0.9184532
65  3.495624e+01 -0.43807777 0.9139652
66  3.495624e+01 -0.43807777 0.8628957
67  3.495624e+01 -0.43807777 0.8628957
68  1.320413e+01 -0.01470014 0.8550762
69  1.320413e+01 -0.01470014 0.8550762
70  1.320413e+01 -0.01470014 0.8550762
71  1.320413e+01  0.02114516 0.8815828
72  1.320413e+01  0.02114516 0.8815828
73  1.320413e+01  0.02114516 0.8815828
74  1.320413e+01  0.02114516 0.8815828
75  1.320413e+01  0.02114516 0.8815828
76  1.320413e+01  0.02114516 0.8815828
77  1.320413e+01  0.02114516 0.8815828
78  1.320413e+01  0.02114516 0.8815828
79  1.320413e+01  0.02114516 0.8815828
80  1.320413e+01  0.02114516 0.8815828
81  1.320413e+01  0.02114516 0.8815828
82  1.320413e+01  0.02114516 0.8815828
83  1.755970e+01  0.01248863 0.9111583
84  1.755970e+01  0.01248863 0.9111583
85  1.755970e+01  0.01248863 0.9111583
86  1.755970e+01  0.01248863 0.9111583
87  1.755970e+01  0.01248863 0.9111583
88  1.755970e+01  0.01248863 0.9111583
89  1.755970e+01  0.01248863 0.9111583
90  1.755970e+01  0.01248863 0.9111583
91  1.755970e+01  0.01248863 0.9111583
92  1.755970e+01  0.01248863 0.9111583
93  1.755970e+01  0.01248863 0.9111583
94  1.755970e+01  0.01248863 0.9111583
95  1.755970e+01  0.01248863 0.9111583
96  1.755970e+01  0.01248863 0.9111583
97  1.506205e+01  0.01389795 0.8908031
98  1.594060e+01  0.01825803 0.9048181
99  1.594060e+01  0.01825803 0.9048181
100 1.594060e+01  0.01825803 0.9048181
101 1.243943e+01  0.02153503 0.8773799
102 1.243943e+01  0.02153503 0.8773799
103 1.243943e+01  0.02153503 0.8773799
104 1.243943e+01  0.02153503 0.8773799
105 1.243943e+01  0.02153503 0.8773799
106 8.515310e+00  0.01994169 0.7967409
107 8.515310e+00  0.01994169 0.7967409
108 8.515310e+00  0.01994169 0.7967409
109 8.515310e+00  0.01994169 0.7967409
110 8.515310e+00  0.01994169 0.7967409
111 1.183001e+01  0.01724668 0.8577590
112 1.183001e+01  0.01724668 0.8577590
113 1.214884e+01  0.01969548 0.8682331
114 1.214884e+01  0.01969548 0.8682331
115 1.214884e+01  0.01969548 0.8682331
116 1.215843e+01  0.01969548 0.8682331
117 1.594060e+01  0.01643540 0.9048181
118 1.594060e+01  0.01643540 0.9048181
119 1.594060e+01  0.01643540 0.9048181
120 1.594060e+01  0.01643540 0.9048181
121 1.594060e+01  0.01643540 0.9048181
122 1.594060e+01  0.01643540 0.9048181
123 1.594060e+01  0.01643540 0.9048181
124 1.594060e+01  0.01643540 0.9048181
125 1.594060e+01  0.01643540 0.9048181
126 1.594060e+01  0.01643540 0.9048181
127 1.594060e+01  0.01643540 0.9048181
128 1.594060e+01  0.01643540 0.9048181
129 1.511514e+01  0.01675040 0.8969768
130 1.511514e+01  0.01675040 0.8969768
131 1.511514e+01  0.01675040 0.8969768
132 1.511514e+01  0.01675040 0.8969768
133 1.594060e+01  0.01658266 0.9048181
134 1.594060e+01  0.01658266 0.9048181
135 1.594060e+01  0.01658266 0.9048181
136 1.594060e+01  0.01658266 0.9048181
137 1.594060e+01  0.01658266 0.9048181
138 1.594060e+01  0.01658266 0.9048181
139 1.594060e+01  0.01658266 0.9048181
140 1.594060e+01  0.01658266 0.9048181
141 1.594060e+01  0.01658266 0.9048181
142 1.594060e+01  0.01658266 0.9048181
143 1.594060e+01  0.01658266 0.9048181
144 1.594060e+01  0.01658266 0.9048181
145 1.594060e+01  0.01658266 0.9048181
146 1.594060e+01  0.01658266 0.9048181
147 1.594060e+01  0.01658266 0.9048181
148 1.594060e+01  0.01658266 0.9048181
149 1.583757e+01  0.01662787 0.9039306
150 1.583757e+01  0.01662787 0.9039306
151 1.636184e+01  0.01717236 0.9093813
152 1.636184e+01  0.01717236 0.9093813
153 1.661823e+01  0.01691090 0.9112919
154 1.661823e+01  0.01691090 0.9112919
155 1.661823e+01  0.01691090 0.9112919
156 1.661823e+01  0.01691090 0.9112919
157 1.661823e+01  0.01691090 0.9112919
158 1.661823e+01  0.01691090 0.9112919
159 1.661823e+01  0.01691090 0.9112919
160 1.661823e+01  0.01691090 0.9112919
161 1.661823e+01  0.01691090 0.9112919
162 1.661823e+01  0.01691090 0.9112919
163 1.580883e+01  0.01713153 0.9043469
164 1.580883e+01  0.01713153 0.9043469
165 1.619182e+01  0.01693534 0.9076666
166 1.619182e+01  0.01693534 0.9076666
167 1.619182e+01  0.01693534 0.9076666
168 1.619182e+01  0.01693534 0.9076666
169 1.619182e+01  0.01693534 0.9076666
170 1.619182e+01  0.01700175 0.9076666
171 1.619182e+01  0.01700175 0.9076666
172 1.619182e+01  0.01700175 0.9076666
173 1.619182e+01  0.01700175 0.9076666
174 1.619182e+01  0.01700175 0.9076666
175 1.619182e+01  0.01700175 0.9076666
176 1.619182e+01  0.01700175 0.9076666
177 1.619182e+01  0.01700175 0.9076666
178 1.619182e+01  0.01700175 0.9076666
179 1.619182e+01  0.01700175 0.9076666
180 1.619182e+01  0.01700175 0.9076666
181 1.619182e+01  0.01700175 0.9076666
182 1.619182e+01  0.01700175 0.9076666
183 1.619182e+01  0.01700175 0.9076666
184 1.619182e+01  0.01700175 0.9076666
185 1.619182e+01  0.01700175 0.9076666
186 1.619182e+01  0.01700175 0.9076666
187 1.619182e+01  0.01700175 0.9076666
188 1.619182e+01  0.01700175 0.9076666
189 1.619182e+01  0.01700175 0.9076666
190 1.619182e+01  0.01700175 0.9076666
191 1.601267e+01  0.01713412 0.9062976
192 1.601267e+01  0.01713412 0.9062976
193 1.601267e+01  0.01713412 0.9062976
194 1.601267e+01  0.01713412 0.9062976
195 1.601267e+01  0.01713412 0.9062976
196 1.594795e+01  0.01710981 0.9057145
197 1.594795e+01  0.01710981 0.9057145
198 1.606114e+01  0.01708461 0.9066882
199 1.606114e+01  0.01708461 0.9066882
200 1.606114e+01  0.01708461 0.9066882

$member$bestvalit
  [1] 9.182180e+21 1.419401e+21 1.268400e+20 1.268400e+20 1.962146e+19
  [6] 6.206350e+18 1.353490e+18 1.353490e+18 6.919597e+16 2.197830e+16
 [11] 2.197830e+16 2.197830e+16 2.197830e+16 2.197830e+16 2.158380e+16
 [16] 2.158380e+16 2.158380e+16 2.158380e+16 2.158380e+16 1.910643e+16
 [21] 1.910643e+16 3.732889e+15 3.579085e+15 3.579085e+15 2.145190e+15
 [26] 4.829114e+14 1.535337e+11 5.640834e+10 5.640834e+10 5.640834e+10
 [31] 5.640834e+10 5.640834e+10 5.640834e+10 5.640834e+10 2.683231e+10
 [36] 2.683231e+10 1.774340e+10 1.774340e+10 1.774340e+10 1.703210e+10
 [41] 1.703210e+10 1.703210e+10 1.703210e+10 1.703210e+10 1.703210e+10
 [46] 1.703210e+10 1.703210e+10 1.703210e+10 1.358119e+10 1.358119e+10
 [51] 7.631132e+09 7.631132e+09 7.631132e+09 7.250453e+09 1.016703e+08
 [56] 1.016703e+08 3.718404e+07 3.718404e+07 3.718404e+07 3.710939e+07
 [61] 3.710939e+07 3.710939e+07 3.680500e+07 3.680500e+07 3.673104e+07
 [66] 3.632707e+07 3.632707e+07 3.276119e+06 3.276119e+06 3.276119e+06
 [71] 4.394876e+04 4.394876e+04 4.394876e+04 4.394876e+04 4.394876e+04
 [76] 4.394876e+04 4.394876e+04 4.394876e+04 4.394876e+04 4.394876e+04
 [81] 4.394876e+04 4.394876e+04 4.184584e+04 4.184584e+04 4.184584e+04
 [86] 4.184584e+04 4.184584e+04 4.184584e+04 4.184584e+04 4.184584e+04
 [91] 4.184584e+04 4.184584e+04 4.184584e+04 4.184584e+04 4.184584e+04
 [96] 4.184584e+04 3.669802e+04 3.643074e+04 3.643074e+04 3.643074e+04
[101] 3.639284e+04 3.639284e+04 3.639284e+04 3.639284e+04 3.639284e+04
[106] 2.611539e+04 2.611539e+04 2.611539e+04 2.611539e+04 2.611539e+04
[111] 2.420838e+04 2.420838e+04 2.169741e+04 2.169741e+04 2.169741e+04
[116] 2.137088e+04 1.851393e+04 1.851393e+04 1.851393e+04 1.851393e+04
[121] 1.851393e+04 1.851393e+04 1.851393e+04 1.851393e+04 1.851393e+04
[126] 1.851393e+04 1.851393e+04 1.851393e+04 1.830416e+04 1.830416e+04
[131] 1.830416e+04 1.830416e+04 1.793480e+04 1.793480e+04 1.793480e+04
[136] 1.793480e+04 1.793480e+04 1.793480e+04 1.793480e+04 1.793480e+04
[141] 1.793480e+04 1.793480e+04 1.793480e+04 1.793480e+04 1.793480e+04
[146] 1.793480e+04 1.793480e+04 1.793480e+04 1.792166e+04 1.792166e+04
[151] 1.754749e+04 1.754749e+04 1.748349e+04 1.748349e+04 1.748349e+04
[156] 1.748349e+04 1.748349e+04 1.748349e+04 1.748349e+04 1.748349e+04
[161] 1.748349e+04 1.748349e+04 1.747363e+04 1.747363e+04 1.747168e+04
[166] 1.747168e+04 1.747168e+04 1.747168e+04 1.747168e+04 1.744460e+04
[171] 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04
[176] 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04
[181] 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04
[186] 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04 1.744460e+04
[191] 1.744441e+04 1.744441e+04 1.744441e+04 1.744441e+04 1.744441e+04
[196] 1.744315e+04 1.744315e+04 1.744095e+04 1.744095e+04 1.744095e+04

$member$pop
           [,1]       [,2]      [,3]
 [1,] 15.947954 0.01710981 0.9057145
 [2,] 15.964594 0.01699568 0.9056253
 [3,] 16.604023 0.01693460 0.9111703
 [4,] 15.876377 0.01721509 0.9052063
 [5,] 15.852018 0.01703627 0.9046782
 [6,] 16.493297 0.01698156 0.9103871
 [7,] 16.061136 0.01708461 0.9066882
 [8,] 15.760203 0.01727796 0.9041702
 [9,] 16.191822 0.01699908 0.9076666
[10,] 16.234017 0.01699248 0.9080126
[11,] 15.980446 0.01706088 0.9058749
[12,] 16.117004 0.01702396 0.9070304
[13,] 16.128013 0.01699623 0.9071058
[14,] 15.926042 0.01707444 0.9054252
[15,] 15.850453 0.01722293 0.9049667
[16,] 15.655275 0.01723700 0.9031832
[17,] 15.666950 0.01724645 0.9033412
[18,] 16.250762 0.01702126 0.9082488
[19,]  8.460303 0.01873859 0.7896042
[20,] 15.832434 0.01719693 0.9048466
[21,] 15.916946 0.01711200 0.9054408
[22,] 15.937693 0.01707219 0.9055911
[23,] 16.091632 0.01711511 0.9070156
[24,] 16.515609 0.01695054 0.9104926
[25,] 16.165352 0.01709612 0.9076979
[26,] 15.925362 0.01712530 0.9055436
[27,] 15.697314 0.01728415 0.9036291
[28,] 16.176895 0.01704501 0.9077166
[29,] 15.763824 0.01712657 0.9039991
[30,] 16.139455 0.01712384 0.9074032

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
      gamma      lambda       delta         rho 
16.06113614  0.01708461  0.90668821 -0.80000000 

$iter
[1] 200

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] -0.8

$fitted.values
 [1]  957.3841 1037.8176 1066.0485 1135.4047 1148.4311 1184.3229 1235.8782
 [8] 1230.5588 1226.7489 1276.0676 1351.8264 1533.8551 1635.3807 1683.5568
[15] 1622.3936 1635.6589 1679.0033 1744.9532 1868.0039 2003.5944

$residuals
 [1] -11.251050 -75.087067   3.530653  36.391757  29.684956   1.487103
 [7]   3.479608  58.002092 -19.042748   2.340947   8.766192   6.928951
[13] -60.346057  12.402567  22.295551  -9.627801 -23.963451  10.646582
[19]  19.416403 -11.700405

$rss
[1] 17440.95

$cov.unscaled
               gamma        lambda         delta           rho
gamma   4.777974e+00  4.843743e-06  1.054099e-01 -4.002805e-01
lambda  4.843743e-06  2.326471e-09  1.634364e-07 -7.419189e-07
delta   1.054099e-01  1.634364e-07  2.327372e-03 -8.842114e-03
rho    -4.002805e-01 -7.419189e-07 -8.842114e-03  3.360246e-02

$allRhoSum
   rho      rss convergence
1 -0.8 17440.95          NA
2  0.0 19026.93          NA
3  0.8 17663.19          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 321, control = DEoptim.control(trace = FALSE))

Coefficients:
   gamma   lambda    delta      rho 
16.06114  0.01708  0.90669 -0.80000 

Elasticity of Substitution: 5 

> summary( cesGridDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma  16.061136  64.549366   0.249    0.804    
lambda  0.017085   0.001424  11.995   <2e-16 ***
delta   0.906688   1.424633   0.636    0.524    
rho    -0.800000   5.413219  -0.148    0.883    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 29.53045 
Multiple R-squared: 0.990147 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      5.0      135.3   0.037    0.971

> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesGridDeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", vrs = TRUE, random.seed = 4321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDeVrs )
$DEoptim
$optim
$optim$bestmem
      par1       par2       par3 
15.9454463  0.9315793  1.3028003 

$optim$bestval
[1] 106230.3

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
            par1       par2       par3
1   3.706601e+09 0.89265025 0.64299795
2   3.706601e+09 0.89265025 0.64299795
3   4.055801e+09 0.78289384 0.33148322
4   4.055801e+09 0.78289384 0.33148322
5   6.062633e+08 0.51046237 0.43346809
6   3.582161e+08 0.66971374 0.59127843
7   3.582161e+08 0.66971374 0.59127843
8   1.997830e+08 0.69321241 0.01830512
9   1.997830e+08 0.69321241 0.01830512
10  1.997830e+08 0.69321241 0.01830512
11  1.997830e+08 0.69321241 0.01830512
12  8.187155e+07 0.97623329 0.19644826
13  8.187155e+07 0.97623329 0.19644826
14  4.866986e+06 0.86091617 0.28297683
15  4.866986e+06 0.86091617 0.28297683
16  4.866986e+06 0.86091617 0.28297683
17  4.866986e+06 0.86091617 0.28297683
18  4.866986e+06 0.86091617 0.28297683
19  4.866986e+06 0.86091617 0.28297683
20  4.866986e+06 0.86091617 0.28297683
21  4.866986e+06 0.86091617 0.28297683
22  4.866986e+06 0.96251991 0.28297683
23  5.893881e+06 0.77754255 0.19495127
24  8.798369e+05 0.49675152 0.30328577
25  8.798369e+05 0.49675152 0.30328577
26  1.588885e+06 0.65732957 0.15878623
27  8.798369e+05 0.98995658 0.30328577
28  8.798369e+05 0.98995658 0.30328577
29  8.798369e+05 0.98995658 0.30328577
30  9.471299e+05 0.55151006 0.23464593
31  5.313089e+05 0.24504150 0.25697458
32  5.313089e+05 0.24504150 0.25697458
33  5.313089e+05 0.24504150 0.25697458
34  4.410066e+05 0.03518496 0.12550051
35  4.410066e+05 0.03518496 0.12550051
36  4.410066e+05 0.62615039 0.12055879
37  4.410066e+05 0.62615039 0.12055879
38  1.484905e+05 0.55383922 0.05619392
39  1.484905e+05 0.55383922 0.05619392
40  1.484905e+05 0.55383922 0.05619392
41  1.484905e+05 0.55383922 0.05619392
42  5.969124e+04 0.87441015 0.13156909
43  5.969124e+04 0.87441015 0.13156909
44  5.969124e+04 0.87441015 0.13156909
45  4.850168e+04 0.65572448 0.03228772
46  5.558273e+03 0.87441015 0.13156909
47  5.558273e+03 0.87441015 0.13156909
48  5.558273e+03 0.87441015 0.13156909
49  5.558273e+03 0.87441015 0.13156909
50  5.558273e+03 0.87441015 0.13156909
51  5.558273e+03 0.87441015 0.13156909
52  5.558273e+03 0.87441015 0.13156909
53  5.558273e+03 0.87441015 0.13156909
54  4.182510e+03 0.87673570 0.15896857
55  1.186081e+03 0.84649927 0.11384492
56  1.186081e+03 0.91093713 0.06392186
57  1.186081e+03 0.91093713 0.05689234
58  1.186081e+03 0.91093713 0.05689234
59  1.186081e+03 0.91093713 0.05689234
60  1.186081e+03 0.91093713 0.05689234
61  1.186081e+03 0.91093713 0.05689234
62  1.186081e+03 0.91093713 0.05689234
63  1.186081e+03 0.91093713 0.05689234
64  1.186081e+03 0.91093713 0.05689234
65  1.186081e+03 0.91093713 0.05689234
66  1.186081e+03 0.91093713 0.05689234
67  1.186081e+03 0.91093713 0.05689234
68  1.186081e+03 0.91093713 0.05689234
69  1.186081e+03 0.91093713 0.05689234
70  1.186081e+03 0.91093713 0.05689234
71  1.186081e+03 0.91093713 0.05689234
72  1.091692e+03 0.77859209 0.07525628
73  1.091692e+03 0.77859209 0.07525628
74  9.268208e+02 0.72731352 0.11697443
75  9.268208e+02 0.72731352 0.11697443
76  9.268208e+02 0.72731352 0.11697443
77  8.946722e+02 0.95564883 0.14424377
78  7.776815e+02 0.87069149 0.17661346
79  5.733368e+02 0.98529788 0.26290648
80  5.733368e+02 0.85982583 0.26290648
81  5.166632e+02 0.97228564 0.29002731
82  5.166632e+02 0.97228564 0.29002731
83  4.916680e+02 0.97520664 0.31082902
84  4.916680e+02 0.97520664 0.31082902
85  4.916680e+02 0.97520664 0.31082902
86  4.876859e+02 0.97982729 0.32143795
87  4.155689e+02 0.91541850 0.36510287
88  4.155689e+02 0.91541850 0.36510287
89  3.840586e+02 0.97071419 0.39821451
90  3.116295e+02 0.95835668 0.43730285
91  3.116295e+02 0.95835668 0.43730285
92  3.116295e+02 0.87780707 0.43730285
93  2.366420e+02 0.87780707 0.50547938
94  2.137272e+02 0.90873770 0.55234786
95  2.137272e+02 0.90873770 0.55234786
96  2.137272e+02 0.90873770 0.55234786
97  2.137272e+02 0.90873770 0.55234786
98  2.099472e+02 0.97520664 0.57388149
99  2.099472e+02 0.97520664 0.57388149
100 2.099472e+02 0.97520664 0.57388149
101 1.819354e+02 0.98385560 0.60855471
102 1.819354e+02 0.98385560 0.60855471
103 1.819354e+02 0.98385560 0.60855471
104 1.819354e+02 0.98385560 0.60855471
105 1.618816e+02 0.93403217 0.63402926
106 1.618816e+02 0.93403217 0.63402926
107 1.618816e+02 0.93403217 0.63402926
108 1.148194e+02 0.84331682 0.71413997
109 1.148194e+02 0.84331682 0.71413997
110 1.148194e+02 0.84331682 0.71413997
111 1.148194e+02 0.84331682 0.71413997
112 1.140847e+02 0.82180932 0.70633390
113 1.140847e+02 0.82180932 0.70633390
114 7.497474e+01 0.82788489 0.83522321
115 7.497474e+01 0.82788489 0.83522321
116 7.070324e+01 0.90763963 0.85293664
117 7.070324e+01 0.90763963 0.85293664
118 7.958139e+01 0.95659059 0.83976921
119 7.958139e+01 0.95659059 0.83976921
120 7.497474e+01 0.87261199 0.83522321
121 7.497474e+01 0.87261199 0.83522321
122 5.332075e+01 0.98148147 0.96803877
123 5.332075e+01 0.98148147 0.96803877
124 5.332075e+01 0.98148147 0.96803877
125 5.332075e+01 0.98148147 0.96803877
126 5.332075e+01 0.98148147 0.96803877
127 5.332075e+01 0.98148147 0.96803877
128 5.332075e+01 0.98148147 0.96803877
129 3.652937e+01 0.92149034 1.05096522
130 3.652937e+01 0.92149034 1.05096522
131 3.652937e+01 0.92149034 1.05096522
132 3.652937e+01 0.92149034 1.05096522
133 3.652937e+01 0.92149034 1.05096522
134 3.652937e+01 0.92149034 1.05537682
135 2.746494e+01 0.97036950 1.15687800
136 2.746494e+01 0.97036950 1.15687800
137 2.746494e+01 0.97036950 1.15687800
138 2.746494e+01 0.97036950 1.15687800
139 2.746494e+01 0.97036950 1.15687800
140 2.746494e+01 0.97036950 1.15687800
141 2.746494e+01 0.97036950 1.15687800
142 2.746494e+01 0.97036950 1.15687800
143 2.746494e+01 0.97036950 1.15687800
144 2.746494e+01 0.97036950 1.15687800
145 2.746494e+01 0.97036950 1.15687800
146 2.746494e+01 0.97036950 1.15687800
147 2.746494e+01 0.97036950 1.15687800
148 2.746494e+01 0.97036950 1.15687800
149 1.594545e+01 0.93157928 1.30280033
150 1.594545e+01 0.93157928 1.30280033
151 1.594545e+01 0.93157928 1.30280033
152 1.594545e+01 0.93157928 1.30280033
153 1.594545e+01 0.93157928 1.30280033
154 1.594545e+01 0.93157928 1.30280033
155 1.594545e+01 0.93157928 1.30280033
156 1.594545e+01 0.93157928 1.30280033
157 1.594545e+01 0.93157928 1.30280033
158 1.594545e+01 0.93157928 1.30280033
159 1.594545e+01 0.93157928 1.30280033
160 1.594545e+01 0.93157928 1.30280033
161 1.594545e+01 0.93157928 1.30280033
162 1.594545e+01 0.93157928 1.30280033
163 1.594545e+01 0.93157928 1.30280033
164 1.594545e+01 0.93157928 1.30280033
165 1.594545e+01 0.93157928 1.30280033
166 1.594545e+01 0.93157928 1.30280033
167 1.594545e+01 0.93157928 1.30280033
168 1.594545e+01 0.93157928 1.30280033
169 1.594545e+01 0.93157928 1.30280033
170 1.594545e+01 0.93157928 1.30280033
171 1.594545e+01 0.93157928 1.30280033
172 1.594545e+01 0.93157928 1.30280033
173 1.594545e+01 0.93157928 1.30280033
174 1.594545e+01 0.93157928 1.30280033
175 1.594545e+01 0.93157928 1.30280033
176 1.594545e+01 0.93157928 1.30280033
177 1.594545e+01 0.93157928 1.30280033
178 1.594545e+01 0.93157928 1.30280033
179 1.594545e+01 0.93157928 1.30280033
180 1.594545e+01 0.93157928 1.30280033
181 1.594545e+01 0.93157928 1.30280033
182 1.594545e+01 0.93157928 1.30280033
183 1.594545e+01 0.93157928 1.30280033
184 1.594545e+01 0.93157928 1.30280033
185 1.594545e+01 0.93157928 1.30280033
186 1.594545e+01 0.93157928 1.30280033
187 1.594545e+01 0.93157928 1.30280033
188 1.594545e+01 0.93157928 1.30280033
189 1.594545e+01 0.93157928 1.30280033
190 1.594545e+01 0.93157928 1.30280033
191 1.594545e+01 0.93157928 1.30280033
192 1.594545e+01 0.93157928 1.30280033
193 1.594545e+01 0.93157928 1.30280033
194 1.594545e+01 0.93157928 1.30280033
195 1.594545e+01 0.93157928 1.30280033
196 1.594545e+01 0.93157928 1.30280033
197 1.594545e+01 0.93157928 1.30280033
198 1.594545e+01 0.93157928 1.30280033
199 1.594545e+01 0.93157928 1.30280033
200 1.594545e+01 0.93157928 1.30280033

$member$bestvalit
  [1] 2.473668e+22 2.473668e+22 3.675192e+21 3.675192e+21 2.598378e+20
  [6] 2.352652e+20 2.352652e+20 9.163611e+17 9.163611e+17 9.163611e+17
 [11] 9.163611e+17 5.070354e+17 5.070354e+17 3.495369e+15 3.495369e+15
 [16] 3.495369e+15 3.495369e+15 3.495369e+15 3.495369e+15 3.495369e+15
 [21] 3.495369e+15 3.252298e+15 2.876666e+15 1.903890e+14 1.903890e+14
 [26] 1.702872e+14 1.196042e+14 1.196042e+14 1.196042e+14 1.184762e+14
 [31] 6.795593e+13 6.795593e+13 6.795593e+13 1.792298e+13 1.792298e+13
 [36] 9.882476e+12 9.882476e+12 6.820605e+11 6.820605e+11 6.820605e+11
 [41] 6.820605e+11 1.741417e+11 1.741417e+11 1.741417e+11 5.718951e+10
 [46] 1.097326e+09 1.097326e+09 1.097326e+09 1.097326e+09 1.097326e+09
 [51] 1.097326e+09 1.097326e+09 1.097326e+09 6.941006e+08 4.057774e+06
 [56] 1.692883e+06 1.644623e+06 1.644623e+06 1.644623e+06 1.644623e+06
 [61] 1.644623e+06 1.644623e+06 1.644623e+06 1.644623e+06 1.644623e+06
 [66] 1.644623e+06 1.644623e+06 1.644623e+06 1.644623e+06 1.644623e+06
 [71] 1.644623e+06 1.592287e+06 1.592287e+06 1.490696e+06 1.490696e+06
 [76] 1.490696e+06 1.458308e+06 1.362218e+06 1.177701e+06 1.177050e+06
 [81] 1.139475e+06 1.139475e+06 1.065741e+06 1.065741e+06 1.065741e+06
 [86] 1.049195e+06 9.965576e+05 9.965576e+05 9.592932e+05 8.617686e+05
 [91] 8.617686e+05 8.337321e+05 7.336469e+05 6.499900e+05 6.499900e+05
 [96] 6.499900e+05 6.499900e+05 6.358453e+05 6.358453e+05 6.358453e+05
[101] 5.527038e+05 5.527038e+05 5.527038e+05 5.527038e+05 5.192573e+05
[106] 5.192573e+05 5.192573e+05 4.365519e+05 4.365519e+05 4.365519e+05
[111] 4.365519e+05 4.321285e+05 4.321285e+05 3.747419e+05 3.747419e+05
[116] 3.389353e+05 3.389353e+05 2.984438e+05 2.984438e+05 2.927253e+05
[121] 2.927253e+05 1.865773e+05 1.865773e+05 1.865773e+05 1.865773e+05
[126] 1.865773e+05 1.865773e+05 1.865773e+05 1.664691e+05 1.664691e+05
[131] 1.664691e+05 1.664691e+05 1.664691e+05 1.429821e+05 1.090030e+05
[136] 1.090030e+05 1.090030e+05 1.090030e+05 1.090030e+05 1.090030e+05
[141] 1.090030e+05 1.090030e+05 1.090030e+05 1.090030e+05 1.090030e+05
[146] 1.090030e+05 1.090030e+05 1.090030e+05 1.062303e+05 1.062303e+05
[151] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[156] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[161] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[166] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[171] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[176] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[181] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[186] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[191] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05
[196] 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05 1.062303e+05

$member$pop
           [,1]      [,2]      [,3]
 [1,]  53.32075 0.9718256 0.9680388
 [2,]  27.46494 0.9703695 1.1568780
 [3,]  54.93186 0.9983118 0.9610684
 [4,] 254.39329 0.7943712 0.4804322
 [5,]  36.52937 0.9214903 1.0558073
 [6,] 167.54491 0.9632185 0.6332120
 [7,]  44.09548 0.9331950 1.0099069
 [8,]  12.53948 0.9997174 1.3944026
 [9,]  20.93741 0.9257930 1.2083623
[10,]  62.48422 0.9825950 0.9233798
[11,] 175.04168 0.8000136 0.5776650
[12,] 157.92648 0.9239496 0.6300552
[13,] 212.92799 0.9162534 0.5482948
[14,] 214.27500 0.9164817 0.5480549
[15,] 186.67972 0.8196555 0.5691775
[16,]  29.31718 0.9056904 1.1168236
[17,]  72.57688 0.8385832 0.8254187
[18,] 235.40485 0.8368232 0.5054794
[19,]  15.94545 0.9315793 1.3028003
[20,] 158.76565 0.9490712 0.6410303
[21,] 170.01163 0.9817801 0.6371343
[22,]  79.58139 0.9565906 0.8464915
[23,]  11.77127 0.6622278 1.2434792
[24,] 573.33675 0.9204101 0.2629065
[25,]  48.38153 0.9304789 0.9799230
[26,] 151.47453 0.9832242 0.6652097
[27,] 174.20098 0.9810668 0.6224347
[28,]  70.70324 0.8757472 0.8529366
[29,]  74.97474 0.8700378 0.8352232
[30,]  44.76664 0.8575578 0.9792861

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
     gamma      delta        rho         nu 
15.9454463  0.9315793  0.8000000  1.3028003 

$iter
[1] 200

$ela
E_1_2 (all) 
  0.5555556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] 0.8

$fitted.values
 [1] 1077.637 1126.319 1155.970 1169.944 1169.864 1189.494 1231.414 1234.769
 [9] 1186.220 1240.941 1284.752 1481.882 1562.648 1633.239 1588.401 1611.622
[17] 1720.737 1822.360 1975.820 2120.475

$residuals
 [1] -131.504440 -163.588672  -86.390773    1.852877    8.252098   -3.684126
 [7]    7.943335   53.791584   21.486004   37.467939   75.840689   58.901914
[13]   12.386913   62.719916   56.288202   14.409113  -65.697617  -66.760142
[19]  -88.399577 -128.580718

$rss
[1] 106230.3

$cov.unscaled
              gamma         delta           rho            nu
gamma  3.923249e+02 22.6951802956 -1.142956e+02 -4.797812e-03
delta  2.269518e+01  1.3131158695 -6.614692e+00 -2.502118e-04
rho   -1.142956e+02 -6.6146921931  3.333286e+01  1.086332e-03
nu    -4.797812e-03 -0.0002502118  1.086332e-03  3.464849e-06

$allRhoSum
   rho      rss convergence
1 -0.8 212123.6          NA
2  0.0 108668.1          NA
3  0.8 106230.3          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Coefficients:
  gamma   delta     rho      nu 
15.9454  0.9316  0.8000  1.3028 

Elasticity of Substitution: 0.5556 

> summary( cesGridDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   15.9454  1443.5511   0.011    0.991    
delta    0.9316    83.5143   0.011    0.991    
rho      0.8000   420.7707   0.002    0.998    
nu       1.3028     0.1357   9.603   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 

Residual standard error: 72.88014 
Multiple R-squared: 0.9399868 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)   0.5556   129.8675   0.004    0.997

> coef( cesGridDeVrs )
     gamma      delta        rho         nu 
15.9454463  0.9315793  0.8000000  1.3028003 
> vcov( cesGridDeVrs )
              gamma         delta           rho          nu
gamma 2083839.78439 120545.789374 -6.070826e+05 -25.4836518
delta  120545.78937   6974.634568 -3.513404e+04  -1.3290036
rho   -607082.55576 -35134.036456  1.770480e+05   5.7700667
nu        -25.48365     -1.329004  5.770067e+00   0.0184036
> coef( summary( cesGridDeVrs ) )
        Estimate   Std. Error     t value     Pr(>|t|)
gamma 15.9454463 1443.5511021 0.011045987 9.911868e-01
delta  0.9315793   83.5142776 0.011154731 9.911000e-01
rho    0.8000000  420.7706843 0.001901273 9.984830e-01
nu     1.3028003    0.1356599 9.603432081 7.732581e-22
> plot( cesGridDeVrs )
> 

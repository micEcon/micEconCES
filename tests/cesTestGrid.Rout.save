
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "micEconCES" )
Loading required package: minpack.lm
Loading required package: DEoptim
Loading required package: parallel

DEoptim package
Differential Evolution algorithm in R
Authors: D. Ardia, K. Mullen, B. Peterson and J. Ulrich

Loading required package: car
Loading required package: carData

To cite package 'micEconCES' in publications use:
  Henningsen, Arne, Géraldine Henningsen, and Gergő Literáti (2021):
  Econometric Estimation of the 'Constant Elasticity of Substitution'
  Function in R: the micEconCES Package. In Hashimzade, N. and M.
  Thornton (editors), Handbook of Research Methods and Applications in
  Empirical Microeconomics. Edward Elgar, p. 596–640.
  https://doi.org/10.4337/9781788976480.00030 (open access:
  https://bit.ly/3I5U310).

If you have questions, suggestions, or comments regarding the 'micEconCES' package, please use the 'issue' tracker at the GitHub page of the package:
https://github.com/micEcon/micEconCES
> options( digits = 3 )
> set.seed( 12345 )  # to make the bootstrapping in dwt() reproducible
> 
> # load data
> data( germanFarms, package = "micEcon" )
> # output quantity:
> germanFarms$qOutput <- germanFarms$vOutput / germanFarms$pOutput
> # quantity of intermediate inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # time trend
> germanFarms$time <- c( 1:nrow( germanFarms ) )
> 
> 
> ############  cesEstGridRho  ################
> ## CES: Land & Intermediate inputs
> ## Nelder-Mead, CRS
> cesGridNm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ),
+    method = "Nelder-Mead", returnGrad = TRUE )
> print.default( cesGridNm ) 
$optim
$optim$par
 gamma  delta 
165.45   1.87 

$optim$value
[1] 153699

$optim$counts
function gradient 
     253       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho 
165.45   1.87   0.40 

$iter
[1] 253

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta 
 16.1   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145 1175 1202 1202 1203 1219 1252 1262 1220 1268 1297 1447 1505 1566 1547
[16] 1573 1675 1763 1883 1989

$residuals
 [1] -199.29 -212.59 -132.73  -29.88  -25.25  -32.74  -12.37   26.38  -12.73
[10]   10.82   63.64   93.53   70.10  129.96   97.80   52.71  -20.22   -7.75
[19]    4.39    3.10

$rss
[1] 153699

$cov.unscaled
        gamma   delta     rho
gamma 25044.3 204.400 40.1372
delta   204.4   1.668  0.3276
rho      40.1   0.328  0.0643

$grad
      gamma delta  rho
 [1,]  6.92 -1264 2116
 [2,]  7.10 -1304 2206
 [3,]  7.27 -1331 2244
 [4,]  7.26 -1338 2285
 [5,]  7.27 -1339 2282
 [6,]  7.36 -1356 2312
 [7,]  7.57 -1393 2374
 [8,]  7.63 -1399 2365
 [9,]  7.38 -1355 2299
[10,]  7.66 -1405 2373
[11,]  7.84 -1441 2446
[12,]  8.75 -1608 2729
[13,]  9.10 -1673 2846
[14,]  9.47 -1735 2929
[15,]  9.35 -1704 2844
[16,]  9.51 -1727 2860
[17,] 10.13 -1825 2974
[18,] 10.66 -1912 3088
[19,] 11.38 -2037 3274
[20,] 12.02 -2151 3456

$allRhoSum
   rho    rss convergence
1 -0.8 153725        TRUE
2 -0.4 153711        TRUE
3  0.0 153702        TRUE
4  0.4 153699        TRUE
5  0.8 156354       FALSE
6  1.2 162425       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Coefficients:
 gamma  delta    rho 
165.45   1.87   0.40 

Elasticity of Substitution: 0.714 

> summary( cesGridNm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Nelder-Mead", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 253 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   165.45   13873.13    0.01     0.99
delta     1.87     113.23    0.02     0.99
rho       0.40      22.24    0.02     0.99

Residual standard error: 87.7 
Multiple R-squared: 0.913 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714     11.345    0.06     0.95

> coef( cesGridNm )
 gamma  delta    rho 
165.45   1.87   0.40 
> vcov( cesGridNm )
         gamma   delta    rho
gamma 1.92e+08 1570798 308451
delta 1.57e+06   12820   2518
rho   3.08e+05    2518    494
> coef( summary( cesGridNm ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   165.45    13873.1  0.0119    0.990
delta     1.87      113.2  0.0165    0.987
rho       0.40       22.2  0.0180    0.986
> fitted( cesGridNm )
 [1] 1145 1175 1202 1202 1203 1219 1252 1262 1220 1268 1297 1447 1505 1566 1547
[16] 1573 1675 1763 1883 1989
> residuals( cesGridNm )
 [1] -199.29 -212.59 -132.73  -29.88  -25.25  -32.74  -12.37   26.38  -12.73
[10]   10.82   63.64   93.53   70.10  129.96   97.80   52.71  -20.22   -7.75
[19]    4.39    3.10
> plot( cesGridNm )
> dwt( cesGridNm )
 lag Autocorrelation D-W Statistic p-value
   1           0.748         0.245       0
 Alternative hypothesis: rho != 0
> 
> ## Nelder-Mead, TC, CRS
> cesGridNmTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Nelder-Mead", 
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNmTc ) 
$optim
$optim$par
  gamma  lambda   delta 
16.0575  0.0171  0.9066 

$optim$value
[1] 17441

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
  gamma  lambda   delta     rho 
16.0575  0.0171  0.9066 -0.8000 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
 3.759  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  958 1038 1066 1136 1149 1184 1236 1231 1227 1276 1352 1534 1636 1684 1623
[16] 1636 1679 1745 1868 2004

$residuals
 [1] -11.38 -75.23   3.39  36.24  29.54   1.34   3.33  57.86 -19.18   2.21
[11]   8.63   6.78 -60.51  12.25  22.17  -9.74 -24.05  10.58  19.35 -11.76

$rss
[1] 17441

$cov.unscaled
           gamma    lambda     delta       rho
gamma   4.78e+00  4.84e-06  1.05e-01 -4.00e-01
lambda  4.84e-06  2.33e-09  1.63e-07 -7.42e-07
delta   1.05e-01  1.63e-07  2.33e-03 -8.85e-03
rho    -4.00e-01 -7.42e-07 -8.85e-03  3.36e-02

$allRhoSum
   rho   rss convergence
1 -0.8 17441       FALSE
2 -0.4 17481        TRUE
3  0.0 17531        TRUE
4  0.4 17590        TRUE
5  0.8 17659        TRUE
6  1.2 17738        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNmTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
  gamma  lambda   delta     rho 
16.0575  0.0171  0.9066 -0.8000 

Elasticity of Substitution: 5 

> summary( cesGridNmTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Nelder-Mead", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  16.05753   64.55418    0.25     0.80    
lambda  0.01708    0.00142   11.99   <2e-16 ***
delta   0.90664    1.42531    0.64     0.52    
rho    -0.80000    5.41310   -0.15     0.88    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.5 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        135    0.04     0.97

> try( dwt( summary( cesGridNmTc ) ) )
Error in durbinWatsonTest.cesEst(...) : 
  the model object must have a component 'grad'; please re-estimate the model with argument 'returnGrad' set to 'TRUE'
> 
> ## Nelder-Mead, VRS
> cesGridNmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "NM", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ), returnGrad = TRUE )
> print.default( cesGridNmVrs )
$optim
$optim$par
gamma delta    nu 
2.258 0.865 1.567 

$optim$value
[1] 50385

$optim$counts
function gradient 
     502       NA 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
 2.258  0.865 -0.400  1.567 

$iter
[1] 502

$convergence
[1] FALSE

$ela
E_1_2 (all) 
       1.67 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

$method
[1] "Nelder-Mead"

$multErr
[1] FALSE

$start
gamma delta    nu 
 6.26  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1] 1007 1094 1117 1175 1168 1193 1242 1218 1173 1224 1293 1535 1646 1699 1591
[16] 1588 1649 1727 1883 2047

$residuals
 [1]  -61.14 -130.91  -47.57   -3.07    9.78   -7.22   -3.13   70.31   34.72
[10]   54.85   67.34    5.76  -71.23   -3.23   53.44   38.53    6.18   28.31
[19]    4.56  -55.42

$rss
[1] 50385

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.116675  0.015784 -4.33e-02 -1.29e-04
delta  0.015784  0.002145 -5.88e-03 -1.20e-05
rho   -0.043269 -0.005884  1.61e-02  3.03e-05
nu    -0.000129 -0.000012  3.03e-05  3.45e-06

$grad
      gamma  delta   rho   nu
 [1,]   446  -7490 -1540 3921
 [2,]   484  -8310 -1738 4315
 [3,]   495  -8426 -1752 4423
 [4,]   520  -9095 -1931 4689
 [5,]   518  -9009 -1907 4659
 [6,]   528  -9206 -1949 4773
 [7,]   550  -9580 -2027 5004
 [8,]   540  -9238 -1929 4891
 [9,]   520  -8963 -1883 4681
[10,]   542  -9268 -1933 4915
[11,]   573  -9893 -2080 5241
[12,]   680 -11740 -2468 6389
[13,]   729 -12647 -2668 6925
[14,]   753 -12851 -2678 7182
[15,]   705 -11749 -2402 6659
[16,]   703 -11544 -2331 6641
[17,]   730 -11607 -2284 6938
[18,]   765 -11936 -2313 7319
[19,]   834 -12892 -2480 8082
[20,]   907 -14003 -2692 8897

$allRhoSum
   rho    rss convergence
1 -0.8  50627        TRUE
2 -0.4  50385       FALSE
3  0.0 151217       FALSE
4  0.4  68689       FALSE
5  0.8 105470       FALSE
6  1.2  70790       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Coefficients:
 gamma  delta    rho     nu 
 2.258  0.865 -0.400  1.567 

Elasticity of Substitution: 1.67 

> summary( cesGridNmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "NM", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Estimation by non-linear least-squares using the 'Nelder-Mead' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 502 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   2.2576    17.1445    0.13     0.90    
delta   0.8650     2.3244    0.37     0.71    
rho    -0.4000     6.3781   -0.06     0.95    
nu      1.5670     0.0932   16.80   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.2 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.67      17.72    0.09     0.93

> coef( cesGridNmVrs )
 gamma  delta    rho     nu 
 2.258  0.865 -0.400  1.567 
> vcov( cesGridNmVrs )
         gamma    delta       rho      nu
gamma  293.932  39.7634 -109.0044 -0.3250
delta   39.763   5.4027  -14.8234 -0.0302
rho   -109.004 -14.8234   40.6801  0.0762
nu      -0.325  -0.0302    0.0762  0.0087
> coef( summary( cesGridNmVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    2.258    17.1445  0.1317 8.95e-01
delta    0.865     2.3244  0.3721 7.10e-01
rho     -0.400     6.3781 -0.0627 9.50e-01
nu       1.567     0.0932 16.8048 2.25e-63
> plot( cesGridNmVrs )
> dwt( cesGridNmVrs )
 lag Autocorrelation D-W Statistic p-value
   1           0.513         0.846       0
 Alternative hypothesis: rho != 0
> 
> # using the CG optimization method
> cesGridCg <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridCg )
$optim
$optim$par
 gamma  delta 
27.907  0.496 

$optim$value
[1] 169812

$optim$counts
function gradient 
     764      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho 
27.907  0.496  1.200 

$iter
function gradient 
     764      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
      0.455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "CG"

$multErr
[1] FALSE

$start
gamma delta 
 27.9   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1150 1191 1215 1227 1227 1243 1276 1278 1240 1283 1318 1471 1532 1584 1549
[16] 1566 1644 1716 1826 1927

$residuals
 [1] -204.37 -228.45 -145.26  -55.48  -48.93  -57.03  -36.94   10.39  -32.07
[10]   -4.61   42.46   70.02   42.88  111.87   95.55   60.52   11.11   39.12
[19]   61.84   64.67

$rss
[1] 169812

$cov.unscaled
       gamma delta    rho
gamma 2146.5 71.52 -92.06
delta   71.5  2.38  -3.07
rho    -92.1 -3.07   3.95

$allRhoSum
   rho    rss convergence
1 -0.8 699932       FALSE
2 -0.4 567846       FALSE
3  0.0 364164       FALSE
4  0.4 225699       FALSE
5  0.8 180872       FALSE
6  1.2 169812       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCg )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
 gamma  delta    rho 
27.907  0.496  1.200 

Elasticity of Substitution: 0.455 

> summary( cesGridCg )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "CG", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 764 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   27.907   4269.043    0.01     0.99
delta    0.496    142.246    0.00     1.00
rho      1.200    183.109    0.01     0.99

Residual standard error: 92.1 
Multiple R-squared: 0.904 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.455     37.832    0.01     0.99

> coef( cesGridCg )
 gamma  delta    rho 
27.907  0.496  1.200 
> vcov( cesGridCg )
         gamma  delta     rho
gamma 18224732 607247 -781615
delta   607247  20234  -26045
rho    -781615 -26045   33529
> coef( summary( cesGridCg ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   27.907       4269 0.00654    0.995
delta    0.496        142 0.00348    0.997
rho      1.200        183 0.00655    0.995
> fitted( cesGridCg )
 [1] 1150 1191 1215 1227 1227 1243 1276 1278 1240 1283 1318 1471 1532 1584 1549
[16] 1566 1644 1716 1826 1927
> residuals( cesGridCg )
 [1] -204.37 -228.45 -145.26  -55.48  -48.93  -57.03  -36.94   10.39  -32.07
[10]   -4.61   42.46   70.02   42.88  111.87   95.55   60.52   11.11   39.12
[19]   61.84   64.67
> plot( cesGridCg )
> 
> # using the CG optimization method, VRS
> cesGridCgVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "CG", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ), returnGrad = TRUE )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridCgVrs )
$optim
$optim$par
 gamma  delta     nu 
10.028  0.866  1.305 

$optim$value
[1] 75358

$optim$counts
function gradient 
     658      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma  delta    rho     nu 
10.028  0.866  0.000  1.305 

$iter
function gradient 
     658      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

$method
[1] "CG"

$multErr
[1] FALSE

$start
gamma delta    nu 
 10.0   0.5   1.0 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1069 1127 1154 1180 1178 1198 1240 1235 1190 1241 1290 1488 1572 1633 1573
[16] 1586 1672 1758 1900 2039

$residuals
 [1] -122.998 -164.671  -84.085   -8.466   -0.139  -12.574   -0.958   53.381
 [9]   17.479   37.659   70.676   52.687    2.798   63.120   72.172   40.149
[17]  -17.037   -2.865  -12.751  -46.852

$rss
[1] 75359

$cov.unscaled
          gamma    delta       rho        nu
gamma  4.968376  0.24185 -6.67e-01 -8.06e-04
delta  0.241851  0.01180 -3.26e-02 -3.00e-05
rho   -0.667414 -0.03259  9.00e-02  7.49e-05
nu    -0.000806 -0.00003  7.49e-05  3.47e-06

$grad
      gamma delta   rho   nu
 [1,]   107 -4422  -813 3825
 [2,]   112 -4741  -886 4079
 [3,]   115 -4824  -896 4194
 [4,]   118 -5034  -954 4312
 [5,]   117 -5011  -947 4303
 [6,]   120 -5099  -964 4392
 [7,]   124 -5274  -997 4578
 [8,]   123 -5186  -968 4555
 [9,]   119 -5026  -943 4356
[10,]   124 -5205  -970 4580
[11,]   129 -5452 -1024 4800
[12,]   148 -6289 -1181 5700
[13,]   157 -6667 -1256 6089
[14,]   163 -6842 -1274 6371
[15,]   157 -6469 -1183 6090
[16,]   158 -6449 -1166 6152
[17,]   167 -6633 -1169 6554
[18,]   175 -6878 -1196 6961
[19,]   189 -7380 -1274 7635
[20,]   203 -7912 -1364 8301

$allRhoSum
   rho    rss convergence
1 -0.8 620063       FALSE
2 -0.4 333291       FALSE
3  0.0  75359       FALSE
4  0.4 150282       FALSE
5  0.8 145978       FALSE
6  1.2 116270       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCgVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Coefficients:
 gamma  delta    rho     nu 
10.028  0.866  0.000  1.305 

Elasticity of Substitution: 1 

> summary( cesGridCgVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "CG", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 658 function and 101 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   10.028    136.823    0.07     0.94    
delta    0.866      6.668    0.13     0.90    
rho      0.000     18.418    0.00     1.00    
nu       1.305      0.114   11.41   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 61.4 
Multiple R-squared: 0.957 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.0       18.4    0.05     0.96

> coef( cesGridCgVrs )
 gamma  delta    rho     nu 
10.028  0.866  0.000  1.305 
> vcov( cesGridCgVrs )
         gamma    delta       rho      nu
gamma 18720.65  911.284 -2514.790 -3.0375
delta   911.28   44.460  -122.786 -0.1131
rho   -2514.79 -122.786   339.207  0.2823
nu       -3.04   -0.113     0.282  0.0131
> coef( summary( cesGridCgVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   10.028    136.823  0.0733 9.42e-01
delta    0.866      6.668  0.1299 8.97e-01
rho      0.000     18.418  0.0000 1.00e+00
nu       1.305      0.114 11.4083 3.80e-30
> plot( cesGridCgVrs )
> dwt( cesGridCgVrs )
 lag Autocorrelation D-W Statistic p-value
   1           0.505          0.87       0
 Alternative hypothesis: rho != 0
> 
> # using the CG optimization method, TC, VRS
> cesGridCgTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "CG", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 12 warnings (use warnings() to see them)
> print.default( cesGridCgTcVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
8.4555 0.0162 0.5007 0.9976 

$optim$value
[1] 18039

$optim$counts
function gradient 
     575      101 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho     nu 
8.4555 0.0162 0.5007 0.0000 0.9976 

$iter
function gradient 
     575      101 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "CG"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 8.456  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  967 1044 1073 1136 1149 1183 1234 1231 1225 1275 1347 1527 1625 1676 1620
[16] 1636 1684 1751 1874 2008

$residuals
 [1] -21.27 -81.00  -3.02  36.26  29.59   2.60   5.60  57.13 -17.17   3.36
[11]  13.67  14.14 -49.65  19.92  24.33  -9.69 -28.63   4.72  13.76 -15.91

$rss
[1] 18040

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma   4.290732  1.02e-04  3.15e-01 -4.06e-01 -4.22e-03
lambda  0.000102  1.30e-08  6.56e-06 -8.67e-06 -4.62e-07
delta   0.315382  6.56e-06  2.33e-02 -3.00e-02 -2.66e-04
rho    -0.406335 -8.67e-06 -3.00e-02  3.87e-02  3.46e-04
nu     -0.004221 -4.62e-07 -2.66e-04  3.46e-04  2.00e-05

$allRhoSum
   rho   rss convergence
1 -0.8 40126       FALSE
2 -0.4 25452       FALSE
3  0.0 18040       FALSE
4  0.4 36459       FALSE
5  0.8 56513       FALSE
6  1.2 68514       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridCgTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
 gamma lambda  delta    rho     nu 
8.4555 0.0162 0.5007 0.0000 0.9976 

Elasticity of Substitution: 1 

> summary( cesGridCgTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "CG", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'CG' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 575 function and 101 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   8.45548   62.21100    0.14     0.89    
lambda  0.01622    0.00342    4.74  2.1e-06 ***
delta   0.50071    4.58590    0.11     0.91    
rho     0.00000    5.90856    0.00     1.00    
nu      0.99759    0.13432    7.43  1.1e-13 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       5.91    0.17     0.87

> 
> # using the SANN optimization method
> cesGridSann <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", random.seed = 1,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSann )
$optim
$optim$par
 gamma  delta 
26.646  0.578 

$optim$value
[1] 176322

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho 
26.646  0.578  0.800 

$iter
[1] 10000

$ela
E_1_2 (all) 
      0.556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
gamma delta 
 22.6   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.8

$fitted.values
 [1] 1152 1195 1218 1233 1232 1248 1282 1282 1244 1287 1323 1476 1538 1589 1551
[16] 1565 1639 1709 1816 1917

$residuals
 [1] -206.07 -232.22 -148.41  -61.14  -54.21  -62.45  -42.43    6.54  -36.53
[10]   -8.35   37.59   64.62   36.72  107.43   94.12   60.95   15.79   46.54
[19]   71.08   74.59

$rss
[1] 176322

$cov.unscaled
      gamma  delta     rho
gamma 393.1 12.785 -16.854
delta  12.8  0.416  -0.548
rho   -16.9 -0.548   0.723

$allRhoSum
   rho    rss convergence
1 -0.8 493551          NA
2  0.0 276683          NA
3  0.8 176322          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSann )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Coefficients:
 gamma  delta    rho 
26.646  0.578  0.800 

Elasticity of Substitution: 0.556 

> summary( cesGridSann )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "SANN", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 1)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   26.646   1861.661    0.01     0.99
delta    0.578     60.547    0.01     0.99
rho      0.800     79.825    0.01     0.99

Residual standard error: 93.9 
Multiple R-squared: 0.9 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.556     24.637    0.02     0.98

> coef( cesGridSann )
 gamma  delta    rho 
26.646  0.578  0.800 
> vcov( cesGridSann )
        gamma  delta     rho
gamma 3465781 112717 -148588
delta  112717   3666   -4833
rho   -148588  -4833    6372
> coef( summary( cesGridSann ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   26.646     1861.7 0.01431    0.989
delta    0.578       60.5 0.00955    0.992
rho      0.800       79.8 0.01002    0.992
> plot( cesGridSann )
> 
> # using the SANN optimization method, TC, CRS
> cesGridSannTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "SANN", random.seed = 31,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSannTc )
$optim
$optim$par
 gamma lambda  delta 
8.4216 0.0165 0.5046 

$optim$value
[1] 18332

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho 
8.4216 0.0165 0.5046 0.0000 

$iter
[1] 10000

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
 8.456  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  963 1039 1068 1131 1144 1179 1230 1228 1222 1273 1345 1525 1623 1675 1620
[16] 1636 1685 1754 1877 2013

$residuals
 [1] -16.83 -76.43   1.27  40.66  33.69   6.47   9.20  60.25 -14.26   5.86
[11]  15.94  15.88 -48.36  20.48  24.25 -10.43 -30.41   2.00   9.94 -20.84

$rss
[1] 18332

$cov.unscaled
           gamma    lambda     delta       rho
gamma   3.38e+00  4.24e-06  2.58e-01 -3.32e-01
lambda  4.24e-06  2.33e-09  4.38e-07 -6.83e-07
delta   2.58e-01  4.38e-07  1.97e-02 -2.53e-02
rho    -3.32e-01 -6.83e-07 -2.53e-02  3.26e-02

$allRhoSum
   rho   rss convergence
1 -0.8 42087          NA
2  0.0 18332          NA
3  0.8 58372          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSannTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

Coefficients:
 gamma lambda  delta    rho 
8.4216 0.0165 0.5046 0.0000 

Elasticity of Substitution: 1 

> summary( cesGridSannTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 31)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   8.42161   55.62864    0.15     0.88    
lambda  0.01650    0.00146   11.30   <2e-16 ***
delta   0.50459    4.25121    0.12     0.91    
rho     0.00000    5.46592    0.00     1.00    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 30.3 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       5.47    0.18     0.85

> 
> # using the SANN optimization method, VRS
> cesGridSannVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "SANN", vrs = TRUE, random.seed = 21,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ) )
> print.default( cesGridSannVrs )
$optim
$optim$par
gamma delta    nu 
 4.33  0.96  1.51 

$optim$value
[1] 52704

$optim$counts
function gradient 
   10000       NA 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
gamma delta   rho    nu 
 4.33  0.96 -0.80  1.51 

$iter
[1] 10000

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

$method
[1] "SANN"

$multErr
[1] FALSE

$start
gamma delta    nu 
 4.45  0.50  1.00 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1] 1024 1107 1130 1185 1179 1203 1251 1228 1184 1233 1301 1534 1640 1692 1590
[16] 1588 1651 1730 1881 2039

$residuals
 [1]  -77.68 -144.34  -60.70  -13.65   -1.09  -17.34  -11.76   60.31   23.69
[10]   44.95   60.06    7.16  -65.16    4.20   54.60   38.03    3.83   25.88
[19]    6.31  -47.24

$rss
[1] 52704

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.139848  5.98e-03 -5.03e-02 -1.73e-04
delta  0.005984  2.59e-04 -2.18e-03 -4.46e-06
rho   -0.050281 -2.18e-03  1.83e-02  3.46e-05
nu    -0.000173 -4.46e-06  3.46e-05  3.42e-06

$allRhoSum
   rho   rss convergence
1 -0.8 52704          NA
2  0.0 70790          NA
3  0.8 97582          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridSannVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Coefficients:
gamma delta   rho    nu 
 4.33  0.96 -0.80  1.51 

Elasticity of Substitution: 5 

> summary( cesGridSannVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "SANN", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 21)

Estimation by non-linear least-squares using the 'SANN' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    4.328     19.197    0.23     0.82    
delta    0.960      0.826    1.16     0.24    
rho     -0.800      6.950   -0.12     0.91    
nu       1.507      0.095   15.87   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 51.3 
Multiple R-squared: 0.97 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        174    0.03     0.98

> coef( cesGridSannVrs )
gamma delta   rho    nu 
 4.33  0.96 -0.80  1.51 
> vcov( cesGridSannVrs )
         gamma   delta       rho       nu
gamma  368.526 15.7691 -132.4995 -0.45685
delta   15.769  0.6822   -5.7398 -0.01175
rho   -132.499 -5.7398   48.3058  0.09128
nu      -0.457 -0.0118    0.0913  0.00902
> coef( summary( cesGridSannVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma     4.33     19.197   0.225 8.22e-01
delta     0.96      0.826   1.163 2.45e-01
rho      -0.80      6.950  -0.115 9.08e-01
nu        1.51      0.095  15.869 1.03e-56
> plot( cesGridSannVrs )
> 
> # using the BFGS optimization method
> cesGridBfgs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ), returnGrad = TRUE )
> print.default( cesGridBfgs )
$optim
$optim$par
 gamma  delta 
165.42   1.87 

$optim$value
[1] 153699

$optim$counts
function gradient 
     311       73 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma  delta    rho 
165.42   1.87   0.40 

$iter
function gradient 
     311       73 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
gamma delta 
 16.1   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145 1175 1202 1202 1203 1219 1252 1262 1220 1268 1297 1447 1505 1566 1547
[16] 1573 1675 1763 1883 1989

$residuals
 [1] -199.29 -212.60 -132.74  -29.89  -25.26  -32.74  -12.37   26.38  -12.74
[10]   10.81   63.64   93.52   70.09  129.95   97.79   52.70  -20.22   -7.75
[19]    4.39    3.10

$rss
[1] 153699

$cov.unscaled
        gamma   delta     rho
gamma 25028.1 204.297 40.1304
delta   204.3   1.668  0.3276
rho      40.1   0.328  0.0644

$grad
      gamma delta  rho
 [1,]  6.92 -1264 2116
 [2,]  7.11 -1304 2205
 [3,]  7.27 -1331 2244
 [4,]  7.26 -1339 2285
 [5,]  7.27 -1339 2282
 [6,]  7.37 -1356 2311
 [7,]  7.57 -1393 2373
 [8,]  7.63 -1399 2365
 [9,]  7.38 -1355 2299
[10,]  7.66 -1405 2373
[11,]  7.84 -1441 2445
[12,]  8.75 -1608 2728
[13,]  9.10 -1673 2846
[14,]  9.47 -1735 2928
[15,]  9.35 -1704 2843
[16,]  9.51 -1727 2860
[17,] 10.13 -1825 2973
[18,] 10.66 -1912 3087
[19,] 11.38 -2037 3274
[20,] 12.02 -2151 3455

$allRhoSum
   rho    rss convergence
1 -0.8 153725        TRUE
2 -0.4 153711        TRUE
3  0.0 153702        TRUE
4  0.4 153699        TRUE
5  0.8 156493       FALSE
6  1.2 162512       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

Coefficients:
 gamma  delta    rho 
165.42   1.87   0.40 

Elasticity of Substitution: 0.714 

> summary( cesGridBfgs )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "BFGS", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 311 function and 73 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42   13868.63    0.01     0.99
delta     1.87     113.21    0.02     0.99
rho       0.40      22.24    0.02     0.99

Residual standard error: 87.7 
Multiple R-squared: 0.913 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714     11.347    0.06     0.95

> coef( cesGridBfgs )
 gamma  delta    rho 
165.42   1.87   0.40 
> vcov( cesGridBfgs )
         gamma   delta    rho
gamma 1.92e+08 1570011 308399
delta 1.57e+06   12816   2518
rho   3.08e+05    2518    495
> coef( summary( cesGridBfgs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42    13868.6  0.0119    0.990
delta     1.87      113.2  0.0165    0.987
rho       0.40       22.2  0.0180    0.986
> plot( cesGridBfgs )
> dwt( cesGridBfgs )
 lag Autocorrelation D-W Statistic p-value
   1           0.748         0.245       0
 Alternative hypothesis: rho != 0
> 
> # using the BFGS optimization method, VRS
> cesGridBfgsVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "BFGS", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
There were 50 or more warnings (use warnings() to see the first 50)
> print.default( cesGridBfgsVrs )
$optim
$optim$par
gamma delta    nu 
1.180 0.642 1.574 

$optim$value
[1] 50004

$optim$counts
function gradient 
     546      100 

$optim$convergence
[1] 1

$optim$message
NULL


$coefficients
gamma delta   rho    nu 
1.180 0.642 0.000 1.574 

$iter
function gradient 
     546      100 

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
gamma delta    nu 
 10.0   0.5   1.0 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1006 1093 1117 1174 1168 1192 1242 1218 1173 1224 1293 1536 1648 1702 1593
[16] 1589 1649 1726 1881 2046

$residuals
 [1]  -60.26 -130.25  -47.10   -2.26   10.48   -6.59   -2.75   70.39   35.15
[10]   54.88   67.24    4.41  -73.06   -5.84   51.49   36.99    6.15   29.62
[19]    6.33  -54.16

$rss
[1] 50004

$cov.unscaled
          gamma     delta       rho        nu
gamma  6.86e-02  0.023528 -3.28e-02 -8.77e-05
delta  2.35e-02  0.008093 -1.13e-02 -2.20e-05
rho   -3.28e-02 -0.011292  1.58e-02  2.81e-05
nu    -8.77e-05 -0.000022  2.81e-05  3.45e-06

$allRhoSum
   rho   rss convergence
1 -0.8 50626        TRUE
2 -0.4 50287        TRUE
3  0.0 50004       FALSE
4  0.4 52015       FALSE
5  0.8 56493       FALSE
6  1.2 59653       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho    nu 
1.180 0.642 0.000 1.574 

Elasticity of Substitution: 1 

> summary( cesGridBfgsVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 546 function and 100 gradient calls

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.1796    13.0933    0.09     0.93    
delta   0.6422     4.4984    0.14     0.89    
rho     0.0000     6.2769    0.00     1.00    
nu      1.5744     0.0929   16.95   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.28    0.16     0.87

> coef( cesGridBfgsVrs )
gamma delta   rho    nu 
1.180 0.642 0.000 1.574 
> vcov( cesGridBfgsVrs )
        gamma    delta      rho       nu
gamma 171.435  58.8244 -82.0198 -0.21922
delta  58.824  20.2352 -28.2326 -0.05505
rho   -82.020 -28.2326  39.3998  0.07028
nu     -0.219  -0.0551   0.0703  0.00863
> coef( summary( cesGridNmVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    2.258    17.1445  0.1317 8.95e-01
delta    0.865     2.3244  0.3721 7.10e-01
rho     -0.400     6.3781 -0.0627 9.50e-01
nu       1.567     0.0932 16.8048 2.25e-63
> plot( cesGridBfgsVrs )
> 
> # using the BFGS optimization method, TC, VRS
> cesGridBfgsTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "BFGS", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(gammaStar) : NaNs produced
2: In log(gammaStar) : NaNs produced
3: In log(gammaStar) : NaNs produced
4: In log(gammaStar) : NaNs produced
5: In log(gammaStar) : NaNs produced
6: In log(gammaStar) : NaNs produced
7: In log(gammaStar) : NaNs produced
8: In log(gammaStar) : NaNs produced
9: In log(gammaStar) : NaNs produced
> print.default( cesGridBfgsTcVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
15.237  0.019  0.718  0.914 

$optim$value
[1] 17027

$optim$counts
function gradient 
     606       94 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho     nu 
15.237  0.019  0.718 -0.400  0.914 

$iter
function gradient 
     606       94 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
       1.67 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "BFGS"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 5.285  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.4

$fitted.values
 [1]  957 1035 1064 1131 1147 1184 1235 1234 1235 1284 1359 1530 1628 1677 1625
[16] 1642 1684 1748 1866 1996

$residuals
 [1] -11.00 -71.92   5.84  40.40  31.04   1.96   4.30  54.66 -27.15  -5.82
[11]   1.86  10.52 -53.27  18.84  19.23 -16.01 -29.34   7.11  21.49  -4.10

$rss
[1] 17027

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma  12.440049  1.75e-04  4.89e-01 -0.778333 -7.24e-03
lambda  0.000175  1.30e-08  6.11e-06 -0.000010 -4.60e-07
delta   0.488678  6.11e-06  1.93e-02 -0.030735 -2.45e-04
rho    -0.778333 -1.00e-05 -3.07e-02  0.048956  3.97e-04
nu     -0.007243 -4.60e-07 -2.45e-04  0.000397  1.99e-05

$allRhoSum
   rho   rss convergence
1 -0.8 18018       FALSE
2 -0.4 17027        TRUE
3  0.0 17105        TRUE
4  0.4 17195        TRUE
5  0.8 17665       FALSE
6  1.2 22832       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
 gamma lambda  delta    rho     nu 
15.237  0.019  0.718 -0.400  0.914 

Elasticity of Substitution: 1.67 

> summary( cesGridBfgsTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 606 function and 94 gradient calls

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   15.23726  102.91061    0.15     0.88    
lambda   0.01903    0.00332    5.72  1.1e-08 ***
delta    0.71800    4.05366    0.18     0.86    
rho     -0.40000    6.45585   -0.06     0.95    
nu       0.91415    0.13017    7.02  2.2e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.2 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.67      17.93    0.09     0.93

> 
> # using the BFGS optimization method, TC, multErr, VRS
> cesGridBfgsTcMeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "BFGS", vrs = TRUE,
+    multErr = TRUE, rho = seq( from = -0.4, to = 1.2, by = 0.4 ),
+    control = list( maxit = 1000 ) )
> print.default( cesGridBfgsTcMeVrs )
$optim
$optim$par
 gamma lambda  delta     nu 
8.4343 0.0199 0.3706 0.9138 

$optim$value
[1] 0.0115

$optim$counts
function gradient 
      77       29 

$optim$convergence
[1] 0

$optim$message
NULL


$coefficients
 gamma lambda  delta    rho     nu 
8.4343 0.0199 0.3706 0.0000 0.9138 

$iter
function gradient 
      77       29 

$convergence
[1] TRUE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

$method
[1] "BFGS"

$multErr
[1] TRUE

$start
 gamma lambda  delta     nu 
 8.438  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1]  949 1029 1058 1129 1145 1183 1235 1233 1236 1286 1363 1536 1636 1684 1630
[16] 1645 1683 1744 1860 1991

$residuals
 [1] -0.003096 -0.066542  0.010819  0.037211  0.028298  0.002341  0.003374
 [8]  0.043882 -0.023269 -0.005617 -0.001479  0.003209 -0.038145  0.006866
[15]  0.009008 -0.011748 -0.016496  0.006691  0.014487  0.000281

$rss
[1] 0.0115

$cov.unscaled
         gamma   lambda     delta       rho        nu
gamma  8762887 126.7896 705444.99 -970342.4 -6933.703
lambda     127   0.0201      8.07     -11.6    -0.806
delta   705445   8.0738  57171.23  -78615.6  -448.209
rho    -970342 -11.6168 -78615.62  108135.8   630.257
nu       -6934  -0.8057   -448.21     630.3    38.856

$allRhoSum
   rho    rss convergence
1 -0.4 0.0118       FALSE
2  0.0 0.0115        TRUE
3  0.4 0.0121       FALSE
4  0.8 0.0128       FALSE
5  1.2 0.0135        TRUE

$rhoValues
[1] -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsTcMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

Coefficients:
 gamma lambda  delta    rho     nu 
8.4343 0.0199 0.3706 0.0000 0.9138 

Elasticity of Substitution: 1 

> summary( cesGridBfgsTcMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "BFGS", multErr = TRUE, 
    rho = seq(from = -0.4, to = 1.2, by = 0.4), control = list(maxit = 1000))

Estimation by non-linear least-squares using the 'BFGS' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 77 function and 29 gradient calls

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma    8.4343    71.0330    0.12     0.91    
lambda   0.0199     0.0034    5.85    5e-09 ***
delta    0.3706     5.7375    0.06     0.95    
rho      0.0000     7.8908    0.00     1.00    
nu       0.9137     0.1496    6.11    1e-09 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.024 
Multiple R-squared: 0.987 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       7.89    0.13      0.9

> 
> # using the L-BFGS-B optimization method with constrained parameters
> cesGridBfgsCon <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ), returnGrad = TRUE )
> print.default( cesGridBfgsCon )
$optim
$optim$par
gamma delta 
 49.1   1.0 

$optim$value
[1] 165832

$optim$counts
function gradient 
      68       68 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
gamma delta   rho 
 49.1   1.0  -0.8 

$iter
function gradient 
      68       68 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
gamma delta 
 4.45  0.50 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] -0.8

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
         gamma    delta      rho
gamma 7.10e-03 9.87e-06 5.11e+09
delta 9.87e-06 1.39e-08 4.75e+06
rho   5.11e+09 4.75e+06 8.63e+22

$grad
      gamma  delta       rho
 [1,]  23.4 -16702 -9.09e-13
 [2,]  24.2 -18078 -1.82e-12
 [3,]  24.7 -18160  9.09e-13
 [4,]  24.9 -19367  0.00e+00
 [5,]  24.9 -19205  0.00e+00
 [6,]  25.2 -19478 -9.09e-13
 [7,]  25.9 -19972 -1.82e-12
 [8,]  26.0 -19320  0.00e+00
 [9,]  25.2 -19036 -9.09e-13
[10,]  26.1 -19345 -9.09e-13
[11,]  26.8 -20290  0.00e+00
[12,]  29.9 -22628  0.00e+00
[13,]  31.1 -23791 -9.09e-13
[14,]  32.2 -23812  0.00e+00
[15,]  31.5 -22166  0.00e+00
[16,]  31.9 -21720  0.00e+00
[17,]  33.5 -21377 -1.82e-12
[18,]  35.1 -21522 -9.09e-13
[19,]  37.3 -22482  0.00e+00
[20,]  39.4 -23685 -1.82e-12

$allRhoSum
   rho    rss convergence
1 -0.8 165832        TRUE
2 -0.4 165832        TRUE
3  0.0 165832        TRUE
4  0.4 165832        TRUE
5  0.8 165832        TRUE
6  1.2 165832        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsCon )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

Coefficients:
gamma delta   rho 
 49.1   1.0  -0.8 

Elasticity of Substitution: 5 

> summary( cesGridBfgsCon )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, by = 0.4), 
    returnGrad = TRUE)

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 68 function and 68 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  4.91e+01   7.67e+00     6.4  1.5e-10 ***
delta  1.00e+00   1.07e-02    93.1  < 2e-16 ***
rho   -8.00e-01   2.68e+13     0.0        1    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 5.00e+00   6.69e+14       0        1

> coef( cesGridBfgsCon )
gamma delta   rho 
 49.1   1.0  -0.8 
> vcov( cesGridBfgsCon )
         gamma    delta      rho
gamma 5.89e+01 8.18e-02 4.23e+13
delta 8.18e-02 1.15e-04 3.94e+10
rho   4.23e+13 3.94e+10 7.16e+26
> coef( summary( cesGridBfgsCon ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma     49.1   7.67e+00  6.40e+00 1.51e-10
delta      1.0   1.07e-02  9.31e+01 0.00e+00
rho       -0.8   2.68e+13 -2.99e-14 1.00e+00
> plot( cesGridBfgsCon )
Warning message:
In plot.window(...) :
  axis(2, *): range of values (    0) is small wrt |M| = 1.7e+05 --> not pretty()
> dwt( cesGridBfgsCon )
 lag Autocorrelation D-W Statistic p-value
   1           0.722         0.299       0
 Alternative hypothesis: rho != 0
> 
> # using the L-BFGS-B optimization method, TC, CRS
> cesGridBfgsConTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "L-BFGS-B",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsConTc )
$optim
$optim$par
  gamma  lambda   delta 
16.0651  0.0171  0.9067 

$optim$value
[1] 17441

$optim$counts
function gradient 
     113      113 

$optim$convergence
[1] 0

$optim$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"


$coefficients
  gamma  lambda   delta     rho 
16.0651  0.0171  0.9067 -0.8000 

$iter
function gradient 
     113      113 

$convergence
[1] TRUE

$message
[1] "CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
 3.759  0.015  0.500 

$lower
[1]    0 -Inf    0

$upper
[1] Inf Inf   1

$rho
[1] -0.8

$fitted.values
 [1]  958 1038 1066 1136 1149 1184 1236 1231 1227 1276 1352 1534 1636 1684 1623
[16] 1636 1679 1745 1868 2004

$residuals
 [1] -11.42 -75.26   3.36  36.22  29.52   1.32   3.32  57.85 -19.19   2.20
[11]   8.63   6.78 -60.49  12.27  22.17  -9.74 -24.07  10.55  19.32 -11.79

$rss
[1] 17441

$cov.unscaled
           gamma    lambda     delta       rho
gamma   4.78e+00  4.84e-06  1.05e-01 -4.00e-01
lambda  4.84e-06  2.33e-09  1.63e-07 -7.42e-07
delta   1.05e-01  1.63e-07  2.33e-03 -8.84e-03
rho    -4.00e-01 -7.42e-07 -8.84e-03  3.36e-02

$allRhoSum
   rho   rss convergence
1 -0.8 17441        TRUE
2 -0.4 17481        TRUE
3  0.0 17531        TRUE
4  0.4 17590        TRUE
5  0.8 17659        TRUE
6  1.2 66746        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsConTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
  gamma  lambda   delta     rho 
16.0651  0.0171  0.9067 -0.8000 

Elasticity of Substitution: 5 

> summary( cesGridBfgsConTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "L-BFGS-B", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 113 function and 113 gradient calls
Message: CONVERGENCE: REL_REDUCTION_OF_F <= FACTR*EPSMCH 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  16.06508   64.55439    0.25     0.80    
lambda  0.01708    0.00142   11.99   <2e-16 ***
delta   0.90670    1.42435    0.64     0.52    
rho    -0.80000    5.41260   -0.15     0.88    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.5 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        135    0.04     0.97

> 
> # using the L-BFGS-B optimization method with constrained parameters, VRS
> cesGridBfgsConVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "L-BFGS-B", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridBfgsConVrs )
$optim
$optim$par
gamma delta    nu 
1.086 0.635 1.584 

$optim$value
[1] 49967

$optim$counts
function gradient 
     137      137 

$optim$convergence
[1] 1

$optim$message
[1] "NEW_X"


$coefficients
gamma delta   rho    nu 
1.086 0.635 0.000 1.584 

$iter
function gradient 
     137      137 

$convergence
[1] FALSE

$message
[1] "NEW_X"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "L-BFGS-B"

$multErr
[1] FALSE

$start
gamma delta    nu 
 10.0   0.5   1.0 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1] 1004 1092 1115 1174 1167 1192 1242 1218 1172 1223 1294 1538 1651 1705 1594
[16] 1589 1648 1724 1880 2046

$residuals
 [1]  -58.07 -129.12  -45.86   -2.22   10.70   -6.55   -2.99   70.89   35.66
[10]   55.40   66.97    2.44  -76.12   -8.55   50.71   36.93    7.21   31.13
[19]    7.44  -53.97

$rss
[1] 49967

$cov.unscaled
          gamma     delta       rho        nu
gamma  5.82e-02  2.15e-02 -2.98e-02 -8.05e-05
delta  2.15e-02  7.99e-03 -1.11e-02 -2.18e-05
rho   -2.98e-02 -1.11e-02  1.53e-02  2.76e-05
nu    -8.05e-05 -2.18e-05  2.76e-05  3.45e-06

$allRhoSum
   rho   rss convergence
1 -0.8 50626        TRUE
2 -0.4 50287        TRUE
3  0.0 49967       FALSE
4  0.4 50780       FALSE
5  0.8 59965       FALSE
6  1.2 50501       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridBfgsConVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho    nu 
1.086 0.635 0.000 1.584 

Elasticity of Substitution: 1 

> summary( cesGridBfgsConVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "L-BFGS-B", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'L-BFGS-B' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 137 function and 137 gradient calls
Message: NEW_X 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.0865    12.0548    0.09     0.93    
delta   0.6346     4.4686    0.14     0.89    
rho     0.0000     6.1794    0.00     1.00    
nu      1.5842     0.0928   17.07   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.18    0.16     0.87

> coef( cesGridBfgsConVrs )
gamma delta   rho    nu 
1.086 0.635 0.000 1.584 
> vcov( cesGridBfgsConVrs )
        gamma    delta      rho       nu
gamma 145.318  53.8006 -74.3407 -0.20114
delta  53.801  19.9687 -27.6103 -0.05441
rho   -74.341 -27.6103  38.1847  0.06886
nu     -0.201  -0.0544   0.0689  0.00862
> coef( summary( cesGridBfgsConVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.086    12.0548  0.0901 9.28e-01
delta    0.635     4.4686  0.1420 8.87e-01
rho      0.000     6.1794  0.0000 1.00e+00
nu       1.584     0.0928 17.0681 2.57e-65
> plot( cesGridBfgsConVrs )
> 
> # using the Levenberg-Marquardt optimization method
> cesGridLm <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLm )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 165.423876366337, 1.87344744871235 
residual sum-of-squares: 153699
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
 gamma  delta    rho 
165.42   1.87   0.40 

$iter
[1] 22

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
gamma delta 
 16.1   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145 1175 1202 1202 1203 1219 1252 1262 1220 1268 1297 1447 1505 1566 1547
[16] 1573 1675 1763 1883 1989

$residuals
 [1] -199.29 -212.60 -132.73  -29.88  -25.26  -32.74  -12.37   26.38  -12.74
[10]   10.81   63.64   93.52   70.09  129.95   97.79   52.70  -20.22   -7.75
[19]    4.39    3.10

$rss
[1] 153699

$cov.unscaled
        gamma   delta     rho
gamma 25031.5 204.319 40.1318
delta   204.3   1.668  0.3276
rho      40.1   0.328  0.0644

$allRhoSum
   rho    rss convergence
1 -0.8 153725        TRUE
2 -0.4 153711        TRUE
3  0.0 153702        TRUE
4  0.4 153699        TRUE
5  0.8 156029       FALSE
6  1.2 162374       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLm )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
 gamma  delta    rho 
165.42   1.87   0.40 

Elasticity of Substitution: 0.714 

> summary( cesGridLm )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 22 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42   13869.59    0.01     0.99
delta     1.87     113.21    0.02     0.99
rho       0.40      22.24    0.02     0.99

Residual standard error: 87.7 
Multiple R-squared: 0.913 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714     11.346    0.06     0.95

> coef( cesGridLm )
 gamma  delta    rho 
165.42   1.87   0.40 
> vcov( cesGridLm )
         gamma   delta    rho
gamma 1.92e+08 1570177 308410
delta 1.57e+06   12817   2518
rho   3.08e+05    2518    495
> coef( summary( cesGridLm ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42    13869.6  0.0119    0.990
delta     1.87      113.2  0.0165    0.987
rho       0.40       22.2  0.0180    0.986
> plot( cesGridLm )
> 
> # using the Levenberg-Marquardt optimization method, VRS
> cesGridLmVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(gammaStar) : NaNs produced
2: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLmVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.165069324985033, 0.0393758623975871, 1.58848816342804 
residual sum-of-squares: 49123
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
 gamma  delta    rho     nu 
0.1651 0.0394 1.2000 1.5885 

$iter
[1] 47

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
      0.455 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
gamma delta    nu 
 27.9   0.5   1.0 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 1.2

$fitted.values
 [1] 1006 1092 1116 1171 1165 1190 1240 1218 1171 1224 1293 1538 1651 1707 1599
[16] 1594 1650 1724 1877 2043

$residuals
 [1]  -59.398 -128.980  -46.565    0.581   12.809   -4.351   -0.973   70.448
 [9]   36.332   54.792   67.557    2.380  -75.544  -11.164   46.162   32.110
[17]    4.560   31.588    9.934  -51.389

$rss
[1] 49123

$cov.unscaled
          gamma     delta       rho        nu
gamma  3.46e-04  2.69e-04 -2.28e-03 -7.68e-06
delta  2.69e-04  2.12e-04 -1.80e-03 -2.98e-06
rho   -2.28e-03 -1.80e-03  1.53e-02  2.28e-05
nu    -7.68e-06 -2.98e-06  2.28e-05  3.45e-06

$allRhoSum
   rho   rss convergence
1 -0.8 50626        TRUE
2 -0.4 50287        TRUE
3  0.0 49966        TRUE
4  0.4 49665        TRUE
5  0.8 49384       FALSE
6  1.2 49123        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
 gamma  delta    rho     nu 
0.1651 0.0394 1.2000 1.5885 

Elasticity of Substitution: 0.455 

> summary( cesGridLmVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 47 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   0.1651     0.9225    0.18     0.86    
delta   0.0394     0.7223    0.05     0.96    
rho     1.2000     6.1283    0.20     0.84    
nu      1.5885     0.0920   17.27   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 49.6 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.455      1.266    0.36     0.72

> coef( cesGridLmVrs )
 gamma  delta    rho     nu 
0.1651 0.0394 1.2000 1.5885 
> vcov( cesGridLmVrs )
        gamma    delta     rho       nu
gamma  0.8510  0.66192 -5.6076 -0.01885
delta  0.6619  0.52167 -4.4257 -0.00733
rho   -5.6076 -4.42575 37.5556  0.05593
nu    -0.0189 -0.00733  0.0559  0.00846
> coef( summary( cesGridLmVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   0.1651      0.923  0.1789 8.58e-01
delta   0.0394      0.722  0.0545 9.57e-01
rho     1.2000      6.128  0.1958 8.45e-01
nu      1.5885      0.092 17.2661 8.47e-67
> plot( cesGridLmVrs )
> 
> # using the Levenberg-Marquardt optimization method, TC, VRS
> cesGridLmTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridLmTcVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 21.8438390266114, 0.0191050223701433, 0.898105762683758, 0.910705640121154 
residual sum-of-squares: 16956
reason terminated: Relative error in the sum of squares is at most `ftol'.

$coefficients
  gamma  lambda   delta     rho      nu 
21.8438  0.0191  0.8981 -0.8000  0.9107 

$iter
[1] 45

$convergence
[1] TRUE

$message
[1] "Relative error in the sum of squares is at most `ftol'."

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "LM"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
 3.759  0.015  0.500  1.000 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  957 1034 1063 1132 1147 1184 1235 1234 1235 1284 1359 1530 1628 1677 1625
[16] 1641 1684 1749 1866 1996

$residuals
 [1] -10.53 -71.70   6.20  40.04  30.71   1.56   3.93  54.69 -27.55  -5.95
[11]   1.45  10.53 -53.34  19.40  19.98 -15.28 -29.00   6.88  20.99  -4.48

$rss
[1] 16956

$cov.unscaled
          gamma    lambda     delta       rho        nu
gamma  13.12873  1.90e-04  2.29e-01 -8.07e-01 -7.87e-03
lambda  0.00019  1.30e-08  2.86e-06 -1.04e-05 -4.61e-07
delta   0.22907  2.86e-06  4.03e-03 -1.42e-02 -1.15e-04
rho    -0.80749 -1.04e-05 -1.42e-02  5.01e-02  4.11e-04
nu     -0.00787 -4.61e-07 -1.15e-04  4.11e-04  1.99e-05

$allRhoSum
   rho   rss convergence
1 -0.8 16956        TRUE
2 -0.4 17027        TRUE
3  0.0 17105        TRUE
4  0.4 17190        TRUE
5  0.8 17282        TRUE
6  1.2 17382        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
  gamma  lambda   delta     rho      nu 
21.8438  0.0191  0.8981 -0.8000  0.9107 

Elasticity of Substitution: 5 

> summary( cesGridLmTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 45 iterations
Message: Relative error in the sum of squares is at most `ftol'. 

Coefficients:
        Estimate Std. Error t value Pr(>|t|)    
gamma   21.84384  105.49994    0.21     0.84    
lambda   0.01911    0.00332    5.76  8.6e-09 ***
delta    0.89811    1.84898    0.49     0.63    
rho     -0.80000    6.51679   -0.12     0.90    
nu       0.91071    0.12994    7.01  2.4e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.1 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        163    0.03     0.98

> 
> # using the Levenberg-Marquardt optimization method, multErr, VRS
> cesGridLmMeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, vrs = TRUE, multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
Warning messages:
1: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
2: In log(gammaStar) : NaNs produced
3: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
4: In log(cesCalc(xNames = xNames, tName = tName, data = data, coef = par,  :
  NaNs produced
5: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

6: In nls.lm(par = start, fn = residFun, data = data, jac = jac, yName = yName,  :
  lmder: info = -1. Number of iterations has reached `maxiter' == 50.

> print.default( cesGridLmMeVrs )
$nls.lm
Nonlinear regression via the Levenberg-Marquardt algorithm
parameter estimates: 0.226337350898455, 0.286644667247497, 1.69201475328875 
residual sum-of-squares: 0.0327
reason terminated: Relative error between `par' and the solution is at most `ptol'.

$coefficients
gamma delta   rho    nu 
0.226 0.287 0.400 1.692 

$iter
[1] 48

$convergence
[1] TRUE

$message
[1] "Relative error between `par' and the solution is at most `ptol'."

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "LM"

$multErr
[1] TRUE

$start
gamma delta    nu 
 15.9   0.5   1.0 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1]  981 1077 1100 1167 1159 1186 1239 1209 1162 1215 1292 1554 1678 1731 1604
[16] 1594 1645 1719 1881 2058

$residuals
 [1] -3.59e-02 -1.12e-01 -2.81e-02  4.19e-03  1.62e-02  3.43e-05  4.55e-04
 [8]  6.36e-02  3.83e-02  5.12e-02  5.19e-02 -8.77e-03 -6.31e-02 -2.04e-02
[15]  2.50e-02  1.99e-02  5.98e-03  2.08e-02  3.32e-03 -3.28e-02

$rss
[1] 0.0327

$cov.unscaled
         gamma    delta      rho     nu
gamma   5188.9   7593.8 -11866.7 -47.24
delta   7593.8  11144.5 -17426.9 -55.66
rho   -11866.7 -17426.9  27257.1  82.75
nu       -47.2    -55.7     82.8   6.54

$allRhoSum
   rho    rss convergence
1 -0.8 0.0329        TRUE
2 -0.4 0.0329        TRUE
3  0.0 0.0328        TRUE
4  0.4 0.0327        TRUE
5  0.8 0.0328       FALSE
6  1.2 0.0329       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridLmMeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho    nu 
0.226 0.287 0.400 1.692 

Elasticity of Substitution: 0.714 

> summary( cesGridLmMeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'LM' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 48 iterations
Message: Relative error between `par' and the solution is at most `ptol'. 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    0.226      2.914    0.08     0.94    
delta    0.287      4.270    0.07     0.95    
rho      0.400      6.678    0.06     0.95    
nu       1.692      0.103   16.36   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0404 
Multiple R-squared: 0.964 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714      3.407    0.21     0.83

> vcov( cesGridLmMeVrs )
         gamma    delta     rho      nu
gamma   8.4899  12.4246 -19.416 -0.0773
delta  12.4246  18.2341 -28.513 -0.0911
rho   -19.4158 -28.5133  44.597  0.1354
nu     -0.0773  -0.0911   0.135  0.0107
> 
> # using the Newton-type optimization method implemented in nlm()
> cesGridNewton <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewton )
$nlm
$nlm$minimum
[1] 153699

$nlm$estimate
[1] 165.42   1.87

$nlm$gradient
[1] -9.98e-07  1.85e-04

$nlm$code
[1] 1

$nlm$iterations
[1] 70


$coefficients
 gamma  delta    rho 
165.42   1.87   0.40 

$iter
[1] 70

$convergence
[1] TRUE

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
gamma delta 
 16.1   0.5 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0.4

$fitted.values
 [1] 1145 1175 1202 1202 1203 1219 1252 1262 1220 1268 1297 1447 1505 1566 1547
[16] 1573 1675 1763 1883 1989

$residuals
 [1] -199.29 -212.60 -132.73  -29.88  -25.26  -32.74  -12.37   26.38  -12.74
[10]   10.81   63.64   93.52   70.09  129.95   97.79   52.70  -20.22   -7.75
[19]    4.39    3.10

$rss
[1] 153699

$cov.unscaled
        gamma   delta     rho
gamma 25031.5 204.319 40.1318
delta   204.3   1.668  0.3276
rho      40.1   0.328  0.0644

$allRhoSum
   rho    rss convergence
1 -0.8 153725        TRUE
2 -0.4 153711        TRUE
3  0.0 153702        TRUE
4  0.4 153699        TRUE
5  0.8 180875        TRUE
6  1.2 169813        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewton )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
 gamma  delta    rho 
165.42   1.87   0.40 

Elasticity of Substitution: 0.714 

> summary( cesGridNewton )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "Newton", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 70 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42   13869.59    0.01     0.99
delta     1.87     113.21    0.02     0.99
rho       0.40      22.24    0.02     0.99

Residual standard error: 87.7 
Multiple R-squared: 0.913 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714     11.346    0.06     0.95

> coef( cesGridNewton )
 gamma  delta    rho 
165.42   1.87   0.40 
> vcov( cesGridNewton )
         gamma   delta    rho
gamma 1.92e+08 1570177 308410
delta 1.57e+06   12817   2518
rho   3.08e+05    2518    495
> coef( summary( cesGridNewton ) )
      Estimate Std. Error t value Pr(>|t|)
gamma   165.42    13869.6  0.0119    0.990
delta     1.87      113.2  0.0165    0.987
rho       0.40       22.2  0.0180    0.986
> plot( cesGridNewton )
> 
> # using the Newton-type optimization method implemented in nlm(), TC, CRS
> cesGridNewtonTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Newton",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonTc )
$nlm
$nlm$minimum
[1] 17441

$nlm$estimate
[1] 16.0651  0.0171  0.9067

$nlm$gradient
[1] -0.0168 -7.8863  1.7078

$nlm$code
[1] 2

$nlm$iterations
[1] 93


$coefficients
  gamma  lambda   delta     rho 
16.0651  0.0171  0.9067 -0.8000 

$iter
[1] 93

$convergence
[1] TRUE

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
 gamma lambda  delta 
 3.759  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  958 1038 1066 1136 1149 1184 1236 1231 1227 1276 1352 1534 1636 1684 1623
[16] 1636 1679 1745 1868 2004

$residuals
 [1] -11.42 -75.26   3.36  36.22  29.52   1.33   3.32  57.85 -19.19   2.20
[11]   8.63   6.78 -60.49  12.27  22.17  -9.74 -24.07  10.55  19.32 -11.79

$rss
[1] 17441

$cov.unscaled
           gamma    lambda     delta       rho
gamma   4.78e+00  4.84e-06  1.05e-01 -4.00e-01
lambda  4.84e-06  2.33e-09  1.63e-07 -7.42e-07
delta   1.05e-01  1.63e-07  2.33e-03 -8.84e-03
rho    -4.00e-01 -7.42e-07 -8.84e-03  3.36e-02

$allRhoSum
   rho   rss convergence
1 -0.8 17441        TRUE
2 -0.4 25053        TRUE
3  0.0 18122        TRUE
4  0.4 35850        TRUE
5  0.8 56560        TRUE
6  1.2 66746        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
  gamma  lambda   delta     rho 
16.0651  0.0171  0.9067 -0.8000 

Elasticity of Substitution: 5 

> summary( cesGridNewtonTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 93 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  16.06509   64.55428    0.25     0.80    
lambda  0.01708    0.00142   11.99   <2e-16 ***
delta   0.90670    1.42434    0.64     0.52    
rho    -0.80000    5.41260   -0.15     0.88    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.5 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        135    0.04     0.97

> 
> # using the Newton-type optimization method implemented in nlm(), VRS
> cesGridNewtonVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "Newton", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonVrs )
$nlm
$nlm$minimum
[1] 50321

$nlm$estimate
[1] 1.400 0.658 1.553

$nlm$gradient
[1]  -37826  272510 -248887

$nlm$code
[1] 4

$nlm$iterations
[1] 100


$coefficients
gamma delta   rho    nu 
1.400 0.658 0.000 1.553 

$iter
[1] 100

$convergence
[1] FALSE

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "Newton"

$multErr
[1] FALSE

$start
gamma delta    nu 
 10.0   0.5   1.0 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] 0

$fitted.values
 [1] 1011 1095 1119 1174 1168 1192 1241 1219 1173 1224 1292 1532 1641 1695 1591
[16] 1588 1650 1728 1882 2045

$residuals
 [1]  -64.520 -132.280  -49.333   -2.000   10.378   -6.316   -1.832   69.768
 [9]   34.476   54.246   68.299    9.197  -65.941    0.677   53.957   38.008
[17]    5.013   27.722    5.492  -52.871

$rss
[1] 50321

$cov.unscaled
          gamma     delta       rho        nu
gamma  0.096674  2.83e-02 -4.03e-02 -1.05e-04
delta  0.028335  8.33e-03 -1.19e-02 -2.26e-05
rho   -0.040319 -1.19e-02  1.69e-02  2.94e-05
nu    -0.000105 -2.26e-05  2.94e-05  3.46e-06

$allRhoSum
   rho   rss convergence
1 -0.8 50626        TRUE
2 -0.4 59750        TRUE
3  0.0 50321       FALSE
4  0.4 52191       FALSE
5  0.8 98005        TRUE
6  1.2 98746        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho    nu 
1.400 0.658 0.000 1.553 

Elasticity of Substitution: 1 

> summary( cesGridNewtonVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "Newton", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 100 iterations

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   1.3997    15.5961    0.09     0.93    
delta   0.6576     4.5769    0.14     0.89    
rho     0.0000     6.5177    0.00     1.00    
nu      1.5532     0.0932   16.66   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.2 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.52    0.15     0.88

> coef( cesGridNewtonVrs )
gamma delta   rho    nu 
1.400 0.658 0.000 1.553 
> vcov( cesGridNewtonVrs )
         gamma    delta       rho      nu
gamma  243.238  71.2934 -101.4450 -0.2637
delta   71.293  20.9484  -29.8278 -0.0568
rho   -101.445 -29.8278   42.4805  0.0739
nu      -0.264  -0.0568    0.0739  0.0087
> coef( summary( cesGridNewtonVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.400    15.5961  0.0897 9.28e-01
delta    0.658     4.5769  0.1437 8.86e-01
rho      0.000     6.5177  0.0000 1.00e+00
nu       1.553     0.0932 16.6567 2.71e-62
> plot( cesGridNewtonVrs )
> 
> # using the Newton-type optimization method implemented in nlm(), TC, multErr, CRS
> cesGridNewtonTcMe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "Newton", multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridNewtonTcMe )
$nlm
$nlm$minimum
[1] 0.0117

$nlm$estimate
[1] 14.070  0.018  0.888

$nlm$gradient
[1]  1.86e-09  1.70e-06 -9.70e-08

$nlm$code
[1] 2

$nlm$iterations
[1] 86


$coefficients
 gamma lambda  delta    rho 
14.070  0.018  0.888 -0.800 

$iter
[1] 86

$convergence
[1] TRUE

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "Newton"

$multErr
[1] TRUE

$start
 gamma lambda  delta 
 3.731  0.015  0.500 

$lower
[1] -Inf

$upper
[1] Inf

$rho
[1] -0.8

$fitted.values
 [1]  948 1032 1060 1133 1147 1184 1236 1230 1228 1278 1356 1540 1645 1692 1627
[16] 1639 1678 1742 1864 2001

$residuals
 [1] -0.002263 -0.069030  0.009290  0.033508  0.026991  0.001698  0.002391
 [8]  0.046648 -0.016898  0.000662  0.003167  0.000286 -0.043294  0.002536
[15]  0.010708 -0.008028 -0.013719  0.007894  0.012242 -0.004789

$rss
[1] 0.0117

$cov.unscaled
           gamma    lambda     delta       rho
gamma   1.06e+07 -19.74114  2.83e+05 -9.12e+05
lambda -1.97e+01   0.00338 -4.28e-01  1.18e+00
delta   2.83e+05  -0.42776  7.52e+03 -2.43e+04
rho    -9.12e+05   1.18219 -2.43e+04  7.84e+04

$allRhoSum
   rho    rss convergence
1 -0.8 0.0117        TRUE
2 -0.4 0.0139        TRUE
3  0.0 0.0128        TRUE
4  0.4 0.0118        TRUE
5  0.8 0.0350        TRUE
6  1.2 0.0402        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridNewtonTcMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
 gamma lambda  delta    rho 
14.070  0.018  0.888 -0.800 

Elasticity of Substitution: 5 

> summary( cesGridNewtonTcMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "Newton", multErr = TRUE, rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'Newton' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 86 iterations

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   14.0701    78.7599    0.18     0.86    
lambda   0.0180     0.0014   12.84   <2e-16 ***
delta    0.8883     2.0949    0.42     0.67    
rho     -0.8000     6.7621   -0.12     0.91    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 0.0242 
Multiple R-squared: 0.987 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        169    0.03     0.98

> 
> # using the PORT optimization rountine implemented in nlminb(), constrained
> cesGridPort <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT",
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPort )
$nlminb
$nlminb$par
gamma delta 
 49.1   1.0 

$nlminb$objective
[1] 165832

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 44

$nlminb$evaluations
function gradient 
      72       44 

$nlminb$message
[1] "both X-convergence and relative convergence (5)"


$coefficients
gamma delta   rho 
 49.1   1.0  -0.8 

$iter
[1] 44

$convergence
[1] TRUE

$message
[1] "both X-convergence and relative convergence (5)"

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta 
 4.45  0.50 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] -0.8

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
         gamma    delta      rho
gamma 6.86e-03 9.64e-06 2.75e+09
delta 9.64e-06 1.37e-08 2.37e+06
rho   2.75e+09 2.37e+06 1.18e+23

$allRhoSum
   rho    rss convergence
1 -0.8 165832        TRUE
2 -0.4 165832        TRUE
3  0.0 165832        TRUE
4  0.4 165832        TRUE
5  0.8 165832        TRUE
6  1.2 165832        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPort )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Coefficients:
gamma delta   rho 
 49.1   1.0  -0.8 

Elasticity of Substitution: 5 

> summary( cesGridPort )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", rho = seq(from = -0.8, to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 44 iterations
Message: both X-convergence and relative convergence (5) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  4.91e+01   7.54e+00    6.51  7.3e-11 ***
delta  1.00e+00   1.07e-02   93.86  < 2e-16 ***
rho   -8.00e-01   3.13e+13    0.00        1    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 5.00e+00   7.83e+14       0        1

> coef( cesGridPort )
gamma delta   rho 
 49.1   1.0  -0.8 
> vcov( cesGridPort )
         gamma    delta      rho
gamma 5.69e+01 8.00e-02 2.28e+13
delta 8.00e-02 1.13e-04 1.97e+10
rho   2.28e+13 1.97e+10 9.81e+26
> coef( summary( cesGridPort ) )
      Estimate Std. Error   t value Pr(>|t|)
gamma     49.1   7.54e+00  6.51e+00 7.31e-11
delta      1.0   1.07e-02  9.39e+01 0.00e+00
rho       -0.8   3.13e+13 -2.55e-14 1.00e+00
> plot( cesGridPort )
> 
> # using the PORT optimization rountine implemented in nlminb(), VRS, constrained
> cesGridPortVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ), returnGrad = TRUE )
> print.default( cesGridPortVrs )
$nlminb
$nlminb$par
gamma delta    nu 
1.276 0.649 1.564 

$nlminb$objective
[1] 50116

$nlminb$convergence
[1] 1

$nlminb$iterations
[1] 140

$nlminb$evaluations
function gradient 
     200      140 

$nlminb$message
[1] "function evaluation limit reached without convergence (9)"


$coefficients
gamma delta   rho    nu 
1.276 0.649 0.000 1.564 

$iter
[1] 140

$convergence
[1] FALSE

$message
[1] "function evaluation limit reached without convergence (9)"

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

$method
[1] "PORT"

$multErr
[1] FALSE

$start
gamma delta    nu 
 10.0   0.5   1.0 

$lower
[1] 0 0 0

$upper
[1] Inf   1 Inf

$rho
[1] 0

$fitted.values
 [1] 1008 1094 1118 1174 1168 1192 1242 1218 1173 1224 1293 1534 1645 1698 1592
[16] 1588 1649 1726 1881 2045

$residuals
 [1]  -62.13 -131.10  -48.02   -2.05   10.53   -6.37   -2.21   70.23   34.95
[10]   54.72   67.87    6.84  -69.52   -2.53   52.93   37.79    6.03   29.22
[19]    6.52  -52.91

$rss
[1] 50116

$cov.unscaled
          gamma     delta       rho        nu
gamma  8.03e-02  2.56e-02 -3.61e-02 -9.52e-05
delta  2.56e-02  8.21e-03 -1.15e-02 -2.23e-05
rho   -3.61e-02 -1.15e-02  1.63e-02  2.87e-05
nu    -9.52e-05 -2.23e-05  2.87e-05  3.45e-06

$grad
      gamma delta   rho   nu
 [1,]   790 -4998 -1804 4300
 [2,]   857 -5512 -2023 4722
 [3,]   876 -5601 -2044 4840
 [4,]   920 -6000 -2233 5121
 [5,]   915 -5951 -2208 5089
 [6,]   934 -6079 -2257 5213
 [7,]   973 -6327 -2348 5461
 [8,]   955 -6131 -2246 5344
 [9,]   919 -5935 -2187 5115
[10,]   959 -6152 -2252 5371
[11,]  1013 -6549 -2416 5719
[12,]  1202 -7769 -2865 6954
[13,]  1289 -8357 -3093 7529
[14,]  1331 -8529 -3119 7811
[15,]  1247 -7848 -2818 7254
[16,]  1244 -7741 -2747 7236
[17,]  1292 -7840 -2714 7552
[18,]  1353 -8093 -2762 7957
[19,]  1474 -8755 -2967 8772
[20,]  1602 -9510 -3221 9646

$allRhoSum
   rho    rss convergence
1 -0.8 561120       FALSE
2 -0.4 105336       FALSE
3  0.0  50116       FALSE
4  0.4  92443       FALSE
5  0.8  54177       FALSE
6  1.2 145039       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Coefficients:
gamma delta   rho    nu 
1.276 0.649 0.000 1.564 

Elasticity of Substitution: 1 

> summary( cesGridPortVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "PORT", rho = seq(from = -0.8, to = 1.2, 
        by = 0.4), returnGrad = TRUE)

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence NOT achieved after 140 iterations
Message: function evaluation limit reached without convergence (9) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma    1.276     14.188    0.09     0.93    
delta    0.649      4.535    0.14     0.89    
rho      0.000      6.382    0.00     1.00    
nu       1.564      0.093   16.82   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 50.1 
Multiple R-squared: 0.972 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)     1.00       6.38    0.16     0.88

> coef( cesGridPortVrs )
gamma delta   rho    nu 
1.276 0.649 0.000 1.564 
> vcov( cesGridPortVrs )
        gamma    delta      rho       nu
gamma 201.314  64.2576 -90.3700 -0.23860
delta  64.258  20.5619 -28.9367 -0.05583
rho   -90.370 -28.9367  40.7318  0.07186
nu     -0.239  -0.0558   0.0719  0.00865
> coef( summary( cesGridPortVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    1.276     14.189  0.0899 9.28e-01
delta    0.649      4.535  0.1431 8.86e-01
rho      0.000      6.382  0.0000 1.00e+00
nu       1.564      0.093 16.8157 1.87e-63
> plot( cesGridPortVrs )
> dwt( cesGridPortVrs )
 lag Autocorrelation D-W Statistic p-value
   1           0.513         0.847   0.002
 Alternative hypothesis: rho != 0
> 
> # using the PORT optimization rountine implemented in nlminb(), TC, VRS
> cesGridPortTcVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "PORT", vrs = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortTcVrs )
$nlminb
$nlminb$par
 gamma lambda  delta     nu 
6.6275 0.0189 0.1750 0.9178 

$nlminb$objective
[1] 17190

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 106

$nlminb$evaluations
function gradient 
     159      107 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
 gamma lambda  delta    rho     nu 
6.6275 0.0189 0.1750 0.4000 0.9178 

$iter
[1] 106

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
      0.714 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

$method
[1] "PORT"

$multErr
[1] FALSE

$start
 gamma lambda  delta     nu 
13.517  0.015  0.500  1.000 

$lower
[1]    0 -Inf    0    0

$upper
[1] Inf Inf   1 Inf

$rho
[1] 0.4

$fitted.values
 [1]  958 1035 1064 1131 1146 1183 1234 1234 1234 1284 1358 1530 1628 1678 1627
[16] 1644 1685 1748 1865 1995

$residuals
 [1] -12.04 -72.32   5.14  41.24  31.72   2.77   5.08  54.48 -26.63  -5.85
[11]   2.47  10.72 -52.74  18.04  17.68 -17.66 -30.25   7.40  22.47  -3.13

$rss
[1] 17190

$cov.unscaled
           gamma    lambda     delta       rho        nu
gamma   1.51e+00  6.28e-05  1.19e-01 -2.66e-01 -2.61e-03
lambda  6.28e-05  1.30e-08  4.07e-06 -9.37e-06 -4.60e-07
delta   1.19e-01  4.07e-06  9.51e-03 -2.12e-02 -1.64e-04
rho    -2.66e-01 -9.37e-06 -2.12e-02  4.74e-02  3.72e-04
nu     -2.61e-03 -4.60e-07 -1.64e-04  3.72e-04  1.99e-05

$allRhoSum
   rho   rss convergence
1 -0.8 22594       FALSE
2 -0.4 23815       FALSE
3  0.0 17303       FALSE
4  0.4 17190        TRUE
5  0.8 44931       FALSE
6  1.2 19221       FALSE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortTcVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Coefficients:
 gamma lambda  delta    rho     nu 
6.6275 0.0189 0.1750 0.4000 0.9178 

Elasticity of Substitution: 0.714 

> summary( cesGridPortTcVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", vrs = TRUE, method = "PORT", rho = seq(from = -0.8, 
        to = 1.2, by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term
Convergence achieved after 106 iterations
Message: relative convergence (4) 

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma   6.62748   36.06205    0.18     0.85    
lambda  0.01893    0.00334    5.67  1.4e-08 ***
delta   0.17503    2.85927    0.06     0.95    
rho     0.40000    6.38262    0.06     0.95    
nu      0.91783    0.13071    7.02  2.2e-12 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.3 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)    0.714      3.256    0.22     0.83

> 
> # using the PORT optimization rountine implemented in nlminb(), multErr
> cesGridPortMe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "PORT", multErr = TRUE,
+    rho = seq( from = -0.8, to = 1.2, by = 0.4 ) )
> print.default( cesGridPortMe )
$nlminb
$nlminb$par
gamma delta 
 48.3   1.0 

$nlminb$objective
[1] 0.116

$nlminb$convergence
[1] 0

$nlminb$iterations
[1] 26

$nlminb$evaluations
function gradient 
      34       27 

$nlminb$message
[1] "relative convergence (4)"


$coefficients
gamma delta   rho 
 48.3   1.0   0.8 

$iter
[1] 26

$convergence
[1] TRUE

$message
[1] "relative convergence (4)"

$ela
E_1_2 (all) 
      0.556 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

$method
[1] "PORT"

$multErr
[1] TRUE

$start
gamma delta 
 2.23  0.50 

$lower
[1] 0 0

$upper
[1] Inf   1

$rho
[1] 0.8

$fitted.values
 [1] 1130 1169 1193 1203 1203 1219 1252 1254 1216 1259 1293 1443 1503 1555 1523
[16] 1540 1620 1694 1802 1903

$residuals
 [1] -0.17789 -0.19412 -0.10892 -0.02651 -0.02114 -0.02739 -0.00982  0.02680
 [9] -0.00711  0.01505  0.05086  0.06565  0.04697  0.08681  0.07715  0.05438
[17]  0.02130  0.03597  0.04617  0.04579

$rss
[1] 0.116

$cov.unscaled
          gamma     delta       rho
gamma  2.97e+06  5.31e+04 -4.37e+17
delta  5.31e+04  9.51e+02 -7.67e+15
rho   -4.37e+17 -7.67e+15  3.37e+29

$allRhoSum
   rho   rss convergence
1 -0.8 0.116        TRUE
2 -0.4 0.116        TRUE
3  0.0 0.116        TRUE
4  0.4 0.116        TRUE
5  0.8 0.116        TRUE
6  1.2 0.116        TRUE

$rhoValues
[1] -0.8 -0.4  0.0  0.4  0.8  1.2

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridPortMe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Coefficients:
gamma delta   rho 
 48.3   1.0   0.8 

Elasticity of Substitution: 0.556 

> summary( cesGridPortMe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "PORT", multErr = TRUE, rho = seq(from = -0.8, to = 1.2, 
        by = 0.4))

Estimation by non-linear least-squares using the 'PORT' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming a multiplicative error term
Convergence achieved after 26 iterations
Message: relative convergence (4) 

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.83e+01   1.31e+02    0.37     0.71
delta 1.00e+00   2.35e+00    0.43     0.67
rho   8.00e-01   4.42e+13    0.00     1.00

Residual standard error: 0.0761 
Multiple R-squared: 0.872 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 5.56e-01   1.36e+13       0        1

> vcov( cesGridPortMe )
          gamma     delta       rho
gamma  1.72e+04  3.07e+02 -2.53e+15
delta  3.07e+02  5.50e+00 -4.44e+13
rho   -2.53e+15 -4.44e+13  1.95e+27
> 
> # using the DE optimization method implemented in DEoptim(), CRS
> cesGridDe <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", random.seed = 321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDe )
$DEoptim
$optim
$optim$bestmem
par1 par2 
49.1  1.0 

$optim$bestval
[1] 165832

$optim$nfeval
[1] 4020

$optim$iter
[1] 200


$member
$member$lower
par1 par2 
   0    0 

$member$upper
 par1  par2 
1e+10 1e+00 

$member$bestmemit
        par1  par2
1   4.51e+08 0.993
2   4.51e+08 0.993
3   6.98e+07 0.540
4   6.98e+07 0.641
5   2.13e+07 0.667
6   2.13e+07 0.667
7   2.13e+07 0.667
8   8.18e+06 0.964
9   8.18e+06 0.964
10  8.18e+06 0.964
11  8.42e+05 0.964
12  8.42e+05 0.964
13  8.42e+05 0.992
14  8.42e+05 0.992
15  5.16e+05 0.992
16  5.16e+05 0.992
17  5.16e+05 0.992
18  5.16e+05 0.992
19  7.31e+04 0.964
20  7.31e+04 0.964
21  7.31e+04 0.964
22  7.31e+04 0.991
23  1.36e+04 0.930
24  1.36e+04 0.930
25  1.36e+04 0.930
26  1.36e+04 0.930
27  1.36e+04 0.961
28  2.92e+03 0.963
29  2.92e+03 0.963
30  2.92e+03 0.963
31  2.92e+03 0.963
32  2.92e+03 0.963
33  2.92e+03 0.963
34  2.92e+03 0.963
35  2.92e+03 0.963
36  2.92e+03 0.963
37  8.17e+02 0.962
38  8.17e+02 0.962
39  4.97e+02 0.983
40  4.97e+02 0.983
41  4.97e+02 0.983
42  4.97e+02 0.983
43  4.20e+02 0.965
44  2.72e+02 0.951
45  1.21e+02 0.978
46  1.21e+02 0.978
47  7.47e+01 0.991
48  7.00e+01 0.992
49  3.19e+01 0.955
50  3.19e+01 0.955
51  3.19e+01 0.955
52  3.55e+01 0.935
53  3.43e+01 0.911
54  4.15e+01 0.958
55  4.15e+01 0.958
56  3.78e+01 0.911
57  3.78e+01 0.911
58  4.56e+01 0.972
59  4.56e+01 0.972
60  4.56e+01 0.972
61  4.56e+01 0.972
62  4.56e+01 0.972
63  4.15e+01 0.946
64  4.76e+01 0.990
65  4.90e+01 0.999
66  4.90e+01 0.999
67  4.90e+01 0.999
68  4.90e+01 0.999
69  4.90e+01 0.999
70  4.90e+01 0.999
71  4.90e+01 0.999
72  4.90e+01 0.999
73  4.90e+01 0.999
74  4.90e+01 0.999
75  4.90e+01 0.999
76  4.90e+01 0.999
77  4.91e+01 1.000
78  4.91e+01 1.000
79  4.91e+01 1.000
80  4.91e+01 1.000
81  4.91e+01 1.000
82  4.91e+01 1.000
83  4.91e+01 1.000
84  4.91e+01 1.000
85  4.91e+01 1.000
86  4.91e+01 1.000
87  4.91e+01 1.000
88  4.91e+01 1.000
89  4.91e+01 1.000
90  4.91e+01 1.000
91  4.91e+01 1.000
92  4.91e+01 1.000
93  4.91e+01 1.000
94  4.91e+01 1.000
95  4.91e+01 1.000
96  4.91e+01 1.000
97  4.91e+01 1.000
98  4.91e+01 1.000
99  4.91e+01 1.000
100 4.91e+01 1.000
101 4.91e+01 1.000
102 4.91e+01 1.000
103 4.91e+01 1.000
104 4.91e+01 1.000
105 4.91e+01 1.000
106 4.91e+01 1.000
107 4.91e+01 1.000
108 4.91e+01 1.000
109 4.91e+01 1.000
110 4.91e+01 1.000
111 4.91e+01 1.000
112 4.91e+01 1.000
113 4.91e+01 1.000
114 4.91e+01 1.000
115 4.91e+01 1.000
116 4.91e+01 1.000
117 4.91e+01 1.000
118 4.91e+01 1.000
119 4.91e+01 1.000
120 4.91e+01 1.000
121 4.91e+01 1.000
122 4.91e+01 1.000
123 4.91e+01 1.000
124 4.91e+01 1.000
125 4.91e+01 1.000
126 4.91e+01 1.000
127 4.91e+01 1.000
128 4.91e+01 1.000
129 4.91e+01 1.000
130 4.91e+01 1.000
131 4.91e+01 1.000
132 4.91e+01 1.000
133 4.91e+01 1.000
134 4.91e+01 1.000
135 4.91e+01 1.000
136 4.91e+01 1.000
137 4.91e+01 1.000
138 4.91e+01 1.000
139 4.91e+01 1.000
140 4.91e+01 1.000
141 4.91e+01 1.000
142 4.91e+01 1.000
143 4.91e+01 1.000
144 4.91e+01 1.000
145 4.91e+01 1.000
146 4.91e+01 1.000
147 4.91e+01 1.000
148 4.91e+01 1.000
149 4.91e+01 1.000
150 4.91e+01 1.000
151 4.91e+01 1.000
152 4.91e+01 1.000
153 4.91e+01 1.000
154 4.91e+01 1.000
155 4.91e+01 1.000
156 4.91e+01 1.000
157 4.91e+01 1.000
158 4.91e+01 1.000
159 4.91e+01 1.000
160 4.91e+01 1.000
161 4.91e+01 1.000
162 4.91e+01 1.000
163 4.91e+01 1.000
164 4.91e+01 1.000
165 4.91e+01 1.000
166 4.91e+01 1.000
167 4.91e+01 1.000
168 4.91e+01 1.000
169 4.91e+01 1.000
170 4.91e+01 1.000
171 4.91e+01 1.000
172 4.91e+01 1.000
173 4.91e+01 1.000
174 4.91e+01 1.000
175 4.91e+01 1.000
176 4.91e+01 1.000
177 4.91e+01 1.000
178 4.91e+01 1.000
179 4.91e+01 1.000
180 4.91e+01 1.000
181 4.91e+01 1.000
182 4.91e+01 1.000
183 4.91e+01 1.000
184 4.91e+01 1.000
185 4.91e+01 1.000
186 4.91e+01 1.000
187 4.91e+01 1.000
188 4.91e+01 1.000
189 4.91e+01 1.000
190 4.91e+01 1.000
191 4.91e+01 1.000
192 4.91e+01 1.000
193 4.91e+01 1.000
194 4.91e+01 1.000
195 4.91e+01 1.000
196 4.91e+01 1.000
197 4.91e+01 1.000
198 4.91e+01 1.000
199 4.91e+01 1.000
200 4.91e+01 1.000

$member$bestvalit
  [1] 3.66e+21 3.66e+21 1.52e+21 8.06e+20 6.38e+19 6.38e+19 6.38e+19 1.45e+18
  [9] 1.45e+18 1.45e+18 1.53e+16 1.53e+16 1.28e+16 1.28e+16 4.83e+15 4.83e+15
 [17] 4.83e+15 4.83e+15 1.15e+14 1.15e+14 1.15e+14 9.74e+13 4.89e+12 4.89e+12
 [25] 4.89e+12 4.89e+12 4.03e+12 1.79e+11 1.79e+11 1.79e+11 1.79e+11 1.79e+11
 [33] 1.79e+11 1.79e+11 1.79e+11 1.79e+11 1.31e+10 1.31e+10 3.89e+09 3.89e+09
 [41] 3.89e+09 3.89e+09 3.05e+09 1.24e+09 1.11e+08 1.11e+08 1.35e+07 9.06e+06
 [49] 2.84e+06 2.84e+06 2.84e+06 7.06e+05 4.26e+05 2.25e+05 2.25e+05 1.97e+05
 [57] 1.97e+05 1.77e+05 1.77e+05 1.77e+05 1.77e+05 1.77e+05 1.76e+05 1.68e+05
 [65] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [73] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [81] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [89] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
 [97] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[105] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[113] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[121] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[129] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[137] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[145] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[153] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[161] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[169] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[177] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[185] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05
[193] 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05 1.66e+05

$member$pop
      [,1] [,2]
 [1,] 49.1    1
 [2,] 49.1    1
 [3,] 49.1    1
 [4,] 49.1    1
 [5,] 49.1    1
 [6,] 49.1    1
 [7,] 49.1    1
 [8,] 49.1    1
 [9,] 49.1    1
[10,] 49.1    1
[11,] 49.1    1
[12,] 49.1    1
[13,] 49.1    1
[14,] 49.1    1
[15,] 49.1    1
[16,] 49.1    1
[17,] 49.1    1
[18,] 49.1    1
[19,] 49.1    1
[20,] 49.1    1

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho 
 49.1   1.0   0.0 

$iter
[1] 200

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0

$upper
[1] 1e+10 1e+00

$rho
[1] 0

$fitted.values
 [1] 1150 1189 1213 1224 1224 1240 1273 1276 1237 1281 1316 1468 1529 1582 1549
[16] 1567 1648 1723 1834 1936

$residuals
 [1] -203.81 -226.53 -143.76  -52.35  -46.03  -54.07  -33.94   12.32  -29.71
[10]   -2.75   45.04   72.88   46.20  114.05   95.70   59.35    6.79   32.65
[19]   53.90   56.15

$rss
[1] 165832

$cov.unscaled
          gamma     delta       rho
gamma  1.15e+02  1.51e+00 -5.45e+14
delta  1.51e+00  1.97e-02 -7.13e+12
rho   -5.45e+14 -7.13e+12  2.58e+27

$allRhoSum
   rho    rss convergence
1 -0.8 165832          NA
2  0.0 165832          NA
3  0.8 165832          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDe )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho 
 49.1   1.0   0.0 

Elasticity of Substitution: 1 

> summary( cesGridDe )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    method = "DE", rho = seq(from = -0.8, to = 0.8, by = 0.8), 
    random.seed = 321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)
gamma 4.91e+01   9.78e+02    0.05     0.96
delta 1.00e+00   1.28e+01    0.08     0.94
rho   0.00e+00   4.62e+15    0.00     1.00

Residual standard error: 91.1 
Multiple R-squared: 0.906 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all) 1.00e+00   4.62e+15       0        1

> coef( cesGridDe )
gamma delta   rho 
 49.1   1.0   0.0 
> vcov( cesGridDe )
          gamma     delta       rho
gamma  9.56e+05  1.25e+04 -4.52e+18
delta  1.25e+04  1.64e+02 -5.91e+16
rho   -4.52e+18 -5.91e+16  2.14e+31
> coef( summary( cesGridDe ) )
      Estimate Std. Error t value Pr(>|t|)
gamma     49.1   9.78e+02  0.0503    0.960
delta      1.0   1.28e+01  0.0782    0.938
rho        0.0   4.62e+15  0.0000    1.000
> plot( cesGridDe )
> 
> # using the DE optimization method implemented in DEoptim(), TC, CRS
> cesGridDeTc <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    tName = "time", data = germanFarms, method = "DE", random.seed = 321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ), returnGrad = TRUE,
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDeTc )
$DEoptim
$optim
$optim$bestmem
  par1   par2   par3 
16.114  0.017  0.907 

$optim$bestval
[1] 17442

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
 0.0 -0.5  0.0 

$member$upper
 par1  par2  par3 
1e+10 5e-01 1e+00 

$member$bestmemit
        par1      par2  par3
1   4.86e+09 -4.03e-01 0.979
2   1.24e+09 -1.82e-01 0.924
3   1.24e+09 -1.82e-01 0.924
4   1.73e+08 -4.49e-01 0.942
5   1.73e+08 -4.49e-01 0.942
6   1.73e+08 -4.49e-01 0.942
7   1.73e+08 -4.49e-01 0.942
8   1.73e+08 -4.49e-01 0.942
9   4.30e+07 -3.22e-01 0.946
10  4.30e+07 -3.22e-01 0.946
11  4.30e+07 -3.22e-01 0.946
12  4.30e+07 -3.22e-01 0.946
13  5.33e+07 -3.12e-01 0.975
14  7.95e+06 -3.75e-01 0.888
15  7.95e+06 -3.75e-01 0.888
16  9.61e+06 -3.68e-01 0.927
17  9.61e+06 -3.68e-01 0.927
18  5.41e+06 -3.12e-01 0.893
19  6.60e+06 -4.77e-01 0.931
20  5.65e+06 -3.66e-01 0.940
21  1.68e+06 -4.07e-01 0.939
22  8.64e+05 -3.45e-01 0.970
23  8.64e+05 -3.45e-01 0.970
24  8.64e+05 -3.45e-01 0.970
25  8.64e+05 -3.45e-01 0.970
26  3.91e+04 -2.53e-01 0.904
27  3.91e+04 -2.53e-01 0.904
28  3.91e+04 -2.53e-01 0.934
29  3.91e+04 -3.20e-01 0.934
30  3.91e+04 -3.20e-01 0.934
31  2.31e+04 -3.88e-01 0.911
32  2.31e+04 -3.88e-01 0.911
33  2.61e+03 -2.52e-01 0.922
34  2.61e+03 -2.52e-01 0.922
35  2.61e+03 -2.52e-01 0.922
36  2.61e+03 -2.52e-01 0.922
37  2.61e+03 -2.52e-01 0.922
38  2.61e+03 -2.52e-01 0.922
39  2.61e+03 -2.52e-01 0.922
40  2.61e+03 -2.52e-01 0.922
41  2.61e+03 -2.52e-01 0.922
42  2.61e+03 -2.52e-01 0.922
43  3.63e+00 -1.93e-01 0.894
44  3.63e+00 -1.93e-01 0.894
45  3.63e+00 -1.93e-01 0.894
46  3.63e+00 -1.93e-01 0.894
47  3.63e+00 -1.93e-01 0.894
48  3.63e+00 -1.25e-01 0.886
49  3.63e+00 -1.25e-01 0.886
50  3.63e+00 -1.25e-01 0.886
51  3.63e+00 -1.25e-01 0.886
52  3.63e+00 -1.25e-01 0.886
53  3.63e+00 -1.25e-01 0.886
54  3.63e+00 -1.25e-01 0.886
55  3.63e+00 -1.25e-01 0.886
56  3.63e+00  5.51e-02 0.886
57  3.63e+00  5.51e-02 0.886
58  3.63e+00  5.51e-02 0.886
59  3.63e+00  5.51e-02 0.845
60  3.63e+00  5.51e-02 0.845
61  3.63e+00  5.51e-02 0.845
62  3.63e+00  9.81e-02 0.845
63  3.63e+00  9.81e-02 0.845
64  3.63e+00  9.81e-02 0.845
65  3.63e+00  9.81e-02 0.845
66  3.63e+00  9.81e-02 0.845
67  3.63e+00  9.81e-02 0.845
68  3.63e+00  9.81e-02 0.845
69  3.63e+00  9.81e-02 0.845
70  3.63e+00  9.81e-02 0.845
71  3.63e+00  9.81e-02 0.845
72  1.18e+01  5.07e-02 0.966
73  1.18e+01  5.07e-02 0.966
74  1.18e+01  5.07e-02 0.966
75  4.04e+01 -3.12e-06 0.996
76  4.04e+01 -3.12e-06 0.996
77  4.04e+01 -3.12e-06 0.996
78  4.04e+01 -3.12e-06 0.996
79  4.04e+01 -3.12e-06 0.996
80  4.04e+01 -3.12e-06 0.996
81  4.04e+01 -3.12e-06 0.996
82  4.04e+01 -3.12e-06 0.996
83  4.04e+01 -3.12e-06 0.993
84  4.04e+01 -3.12e-06 0.993
85  4.04e+01 -3.12e-06 0.993
86  2.09e+01  7.74e-04 0.923
87  4.19e+01 -3.12e-06 0.993
88  4.19e+01 -3.12e-06 0.993
89  1.95e+01  1.57e-02 0.925
90  1.95e+01  1.57e-02 0.925
91  1.95e+01  1.57e-02 0.925
92  1.95e+01  1.57e-02 0.925
93  1.95e+01  1.57e-02 0.925
94  1.95e+01  1.57e-02 0.925
95  1.95e+01  1.57e-02 0.925
96  1.95e+01  1.57e-02 0.925
97  1.95e+01  1.57e-02 0.925
98  1.95e+01  1.57e-02 0.925
99  1.95e+01  1.57e-02 0.925
100 1.95e+01  1.57e-02 0.925
101 1.95e+01  1.57e-02 0.925
102 1.95e+01  1.57e-02 0.925
103 1.95e+01  1.57e-02 0.925
104 1.95e+01  1.57e-02 0.925
105 1.90e+01  1.63e-02 0.930
106 1.90e+01  1.63e-02 0.930
107 1.90e+01  1.63e-02 0.930
108 1.90e+01  1.63e-02 0.930
109 1.90e+01  1.63e-02 0.930
110 1.90e+01  1.63e-02 0.930
111 1.90e+01  1.63e-02 0.930
112 1.90e+01  1.63e-02 0.930
113 1.90e+01  1.63e-02 0.930
114 1.90e+01  1.63e-02 0.930
115 1.90e+01  1.63e-02 0.930
116 1.90e+01  1.63e-02 0.930
117 1.90e+01  1.63e-02 0.930
118 1.90e+01  1.63e-02 0.929
119 1.95e+01  1.59e-02 0.931
120 1.95e+01  1.59e-02 0.931
121 1.95e+01  1.59e-02 0.931
122 1.95e+01  1.59e-02 0.931
123 1.95e+01  1.59e-02 0.931
124 1.95e+01  1.59e-02 0.931
125 1.95e+01  1.59e-02 0.931
126 1.95e+01  1.59e-02 0.931
127 1.95e+01  1.59e-02 0.931
128 1.95e+01  1.59e-02 0.931
129 1.95e+01  1.59e-02 0.931
130 1.95e+01  1.59e-02 0.931
131 1.95e+01  1.59e-02 0.931
132 1.95e+01  1.59e-02 0.931
133 1.95e+01  1.59e-02 0.931
134 1.95e+01  1.59e-02 0.931
135 1.95e+01  1.59e-02 0.931
136 1.95e+01  1.59e-02 0.931
137 1.95e+01  1.59e-02 0.931
138 1.95e+01  1.59e-02 0.931
139 1.95e+01  1.59e-02 0.931
140 1.95e+01  1.59e-02 0.931
141 1.95e+01  1.59e-02 0.931
142 1.95e+01  1.59e-02 0.931
143 1.95e+01  1.59e-02 0.931
144 1.95e+01  1.59e-02 0.931
145 1.95e+01  1.59e-02 0.931
146 1.95e+01  1.59e-02 0.931
147 1.95e+01  1.59e-02 0.931
148 1.95e+01  1.59e-02 0.931
149 1.95e+01  1.59e-02 0.931
150 1.95e+01  1.59e-02 0.931
151 1.85e+01  1.61e-02 0.925
152 1.91e+01  1.58e-02 0.928
153 1.91e+01  1.58e-02 0.928
154 1.91e+01  1.58e-02 0.928
155 1.91e+01  1.58e-02 0.928
156 1.91e+01  1.58e-02 0.928
157 1.91e+01  1.58e-02 0.928
158 1.91e+01  1.58e-02 0.928
159 1.91e+01  1.58e-02 0.928
160 1.91e+01  1.58e-02 0.928
161 1.87e+01  1.61e-02 0.926
162 1.87e+01  1.61e-02 0.926
163 1.88e+01  1.61e-02 0.926
164 1.88e+01  1.61e-02 0.926
165 1.81e+01  1.59e-02 0.921
166 1.81e+01  1.59e-02 0.921
167 1.77e+01  1.65e-02 0.919
168 1.77e+01  1.64e-02 0.919
169 1.77e+01  1.64e-02 0.919
170 1.77e+01  1.64e-02 0.919
171 1.77e+01  1.64e-02 0.919
172 1.77e+01  1.64e-02 0.919
173 1.77e+01  1.64e-02 0.919
174 1.77e+01  1.64e-02 0.919
175 1.70e+01  1.67e-02 0.914
176 1.70e+01  1.67e-02 0.914
177 1.70e+01  1.67e-02 0.914
178 1.70e+01  1.67e-02 0.914
179 1.70e+01  1.67e-02 0.914
180 1.70e+01  1.67e-02 0.914
181 1.70e+01  1.67e-02 0.914
182 1.66e+01  1.69e-02 0.911
183 1.66e+01  1.69e-02 0.911
184 1.66e+01  1.69e-02 0.911
185 1.66e+01  1.69e-02 0.911
186 1.66e+01  1.69e-02 0.911
187 1.66e+01  1.69e-02 0.911
188 1.66e+01  1.69e-02 0.911
189 1.67e+01  1.68e-02 0.912
190 1.67e+01  1.68e-02 0.912
191 1.67e+01  1.68e-02 0.912
192 1.67e+01  1.68e-02 0.912
193 1.64e+01  1.68e-02 0.909
194 1.62e+01  1.69e-02 0.907
195 1.62e+01  1.69e-02 0.907
196 1.63e+01  1.69e-02 0.908
197 1.63e+01  1.69e-02 0.908
198 1.63e+01  1.69e-02 0.908
199 1.61e+01  1.70e-02 0.907
200 1.61e+01  1.71e-02 0.907

$member$bestvalit
  [1] 1.92e+22 1.07e+22 1.07e+22 4.36e+19 4.36e+19 4.36e+19 4.36e+19 4.36e+19
  [9] 4.10e+18 4.10e+18 4.10e+18 4.10e+18 3.65e+18 2.69e+17 2.69e+17 2.33e+17
 [17] 2.33e+17 1.53e+17 6.85e+16 6.54e+16 5.01e+15 9.29e+14 9.29e+14 9.29e+14
 [25] 9.29e+14 9.25e+12 9.25e+12 5.83e+12 4.20e+12 4.20e+12 1.58e+12 1.58e+12
 [33] 3.05e+10 3.05e+10 3.05e+10 3.05e+10 3.05e+10 3.05e+10 3.05e+10 3.05e+10
 [41] 3.05e+10 3.05e+10 3.90e+07 3.90e+07 3.90e+07 3.90e+07 3.90e+07 3.71e+07
 [49] 3.71e+07 3.71e+07 3.71e+07 3.71e+07 3.71e+07 3.71e+07 3.71e+07 1.38e+07
 [57] 1.38e+07 1.38e+07 9.24e+06 9.24e+06 9.24e+06 6.14e+06 6.14e+06 6.14e+06
 [65] 6.14e+06 6.14e+06 6.14e+06 6.14e+06 6.14e+06 6.14e+06 6.14e+06 4.52e+06
 [73] 4.52e+06 4.52e+06 9.49e+05 9.49e+05 9.49e+05 9.49e+05 9.49e+05 9.49e+05
 [81] 9.49e+05 9.49e+05 5.41e+05 5.41e+05 5.41e+05 4.42e+05 3.19e+05 3.19e+05
 [89] 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04
 [97] 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04 9.16e+04
[105] 2.25e+04 2.25e+04 2.25e+04 2.25e+04 2.25e+04 2.25e+04 2.25e+04 2.25e+04
[113] 2.25e+04 2.25e+04 2.25e+04 2.25e+04 2.25e+04 1.99e+04 1.87e+04 1.87e+04
[121] 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04
[129] 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04
[137] 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04
[145] 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.87e+04 1.86e+04 1.85e+04
[153] 1.85e+04 1.85e+04 1.85e+04 1.85e+04 1.85e+04 1.85e+04 1.85e+04 1.85e+04
[161] 1.83e+04 1.83e+04 1.82e+04 1.82e+04 1.81e+04 1.81e+04 1.77e+04 1.77e+04
[169] 1.77e+04 1.77e+04 1.77e+04 1.77e+04 1.77e+04 1.77e+04 1.75e+04 1.75e+04
[177] 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04
[185] 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04
[193] 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.75e+04 1.74e+04

$member$pop
      [,1]   [,2]  [,3]
 [1,] 16.0 0.0171 0.906
 [2,] 16.9 0.0168 0.914
 [3,] 16.3 0.0170 0.909
 [4,] 16.1 0.0171 0.907
 [5,] 16.1 0.0170 0.907
 [6,] 17.0 0.0166 0.914
 [7,] 16.6 0.0166 0.911
 [8,] 16.4 0.0169 0.910
 [9,] 16.8 0.0167 0.912
[10,] 16.4 0.0170 0.909
[11,] 16.3 0.0169 0.908
[12,] 16.5 0.0169 0.910
[13,] 16.9 0.0168 0.913
[14,] 16.7 0.0166 0.911
[15,] 16.3 0.0170 0.908
[16,] 16.6 0.0168 0.911
[17,] 15.9 0.0172 0.906
[18,] 17.7 0.0164 0.919
[19,] 16.1 0.0170 0.907
[20,] 16.2 0.0169 0.907
[21,] 16.7 0.0168 0.912
[22,] 16.6 0.0167 0.910
[23,] 27.4 0.0128 0.964
[24,] 17.0 0.0167 0.914
[25,] 16.1 0.0171 0.907
[26,] 16.5 0.0170 0.910
[27,] 16.3 0.0170 0.909
[28,] 15.7 0.0172 0.904
[29,] 15.9 0.0171 0.906
[30,] 16.8 0.0166 0.912

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
 gamma lambda  delta    rho 
16.114  0.017  0.907 -0.800 

$iter
[1] 200

$ela
E_1_2 (all) 
          5 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), returnGrad = TRUE, random.seed = 321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1]  0.0 -0.5  0.0

$upper
[1] 1e+10 5e-01 1e+00

$rho
[1] -0.8

$fitted.values
 [1]  958 1038 1066 1136 1149 1184 1236 1231 1227 1276 1352 1534 1635 1683 1622
[16] 1635 1679 1745 1868 2003

$residuals
 [1] -11.61 -75.37   3.26  36.23  29.55   1.40   3.43  57.94 -19.03   2.37
[11]   8.89   7.12 -60.06  12.69  22.52  -9.41 -23.83  10.76  19.56 -11.48

$rss
[1] 17442

$cov.unscaled
           gamma    lambda     delta       rho
gamma   4.78e+00  4.82e-06  1.05e-01 -4.00e-01
lambda  4.82e-06  2.33e-09  1.62e-07 -7.40e-07
delta   1.05e-01  1.62e-07  2.31e-03 -8.80e-03
rho    -4.00e-01 -7.40e-07 -8.80e-03  3.36e-02

$grad
      gamma lambda  delta   rho
 [1,]  59.4    958  -6689 -1043
 [2,]  64.4   2076  -7409 -1174
 [3,]  66.2   3199  -7555 -1190
 [4,]  70.5   4542  -8257 -1325
 [5,]  71.3   5743  -8319 -1332
 [6,]  73.5   7106  -8584 -1375
 [7,]  76.7   8651  -8951 -1433
 [8,]  76.4   9845  -8767 -1387
 [9,]  76.1  11041  -8805 -1400
[10,]  79.2  12760  -9079 -1435
[11,]  83.9  14869  -9713 -1546
[12,]  95.2  18404 -11018 -1753
[13,] 101.5  21256 -11799 -1884
[14,] 104.5  23566 -11959 -1888
[15,] 100.7  24333 -11249 -1746
[16,] 101.5  26167 -11167 -1714
[17,] 104.2  28541 -11087 -1662
[18,] 108.3  31407 -11303 -1671
[19,] 115.9  35489 -11983 -1760
[20,] 124.3  40067 -12838 -1884

$allRhoSum
   rho   rss convergence
1 -0.8 17442          NA
2  0.0 19707          NA
3  0.8 18022          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDeTc )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), returnGrad = TRUE, random.seed = 321, control = DEoptim.control(trace = FALSE))

Coefficients:
 gamma lambda  delta    rho 
16.114  0.017  0.907 -0.800 

Elasticity of Substitution: 5 

> summary( cesGridDeTc )
Estimated CES function with constant returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    tName = "time", method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), returnGrad = TRUE, random.seed = 321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
       Estimate Std. Error t value Pr(>|t|)    
gamma  16.11385   64.56482    0.25     0.80    
lambda  0.01705    0.00142   11.97   <2e-16 ***
delta   0.90710    1.41831    0.64     0.52    
rho    -0.80000    5.41054   -0.15     0.88    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 29.5 
Multiple R-squared: 0.99 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)        5        135    0.04     0.97

> dwt( cesGridDeTc )
 lag Autocorrelation D-W Statistic p-value
   1         -0.0433          2.07   0.548
 Alternative hypothesis: rho != 0
> 
> # using the DE optimization method implemented in DEoptim(), VRS
> cesGridDeVrs <- cesEst( yName = "qOutput", xNames = c( "land", "qVarInput" ),
+    data = germanFarms, method = "DE", vrs = TRUE, random.seed = 4321,
+    rho = seq( from = -0.8, to = 0.8, by = 0.8 ),
+    control = DEoptim.control( trace = FALSE ) )
> print.default( cesGridDeVrs )
$DEoptim
$optim
$optim$bestmem
 par1  par2  par3 
19.01  0.95  1.22 

$optim$bestval
[1] 93306

$optim$nfeval
[1] 6030

$optim$iter
[1] 200


$member
$member$lower
par1 par2 par3 
   0    0    0 

$member$upper
 par1  par2  par3 
1e+10 1e+00 1e+01 

$member$bestmemit
        par1  par2   par3
1   9.09e+09 0.972 1.9586
2   4.88e+09 0.760 0.7042
3   6.35e+09 0.933 0.2903
4   4.41e+09 0.862 0.0493
5   4.38e+08 0.654 0.2377
6   4.38e+08 0.654 0.2377
7   4.38e+08 0.654 0.2377
8   2.22e+08 0.654 0.2377
9   1.65e+08 0.773 0.2882
10  7.43e+06 0.870 0.4893
11  7.43e+06 0.870 0.4893
12  7.43e+06 0.870 0.4893
13  7.43e+06 0.870 0.4893
14  1.21e+07 0.845 0.2806
15  7.29e+06 0.953 0.2517
16  7.29e+06 0.953 0.2517
17  7.29e+06 0.786 0.1677
18  7.29e+06 0.786 0.1677
19  7.29e+06 0.786 0.1677
20  7.29e+06 0.786 0.1677
21  7.29e+06 0.786 0.1677
22  2.22e+06 0.256 0.2128
23  2.22e+06 0.256 0.2128
24  2.22e+06 0.256 0.2128
25  1.90e+06 0.870 0.2411
26  1.90e+06 0.870 0.2411
27  1.90e+06 0.870 0.2411
28  1.90e+06 0.870 0.2411
29  2.22e+06 0.768 0.1117
30  2.22e+06 0.768 0.1117
31  2.22e+06 0.768 0.1117
32  1.36e+05 0.735 0.1886
33  1.36e+05 0.735 0.1886
34  1.36e+05 0.889 0.1886
35  1.36e+05 0.889 0.1886
36  3.19e+04 0.778 0.2723
37  3.19e+04 0.778 0.2723
38  3.19e+04 0.778 0.2723
39  3.19e+04 0.859 0.2723
40  3.19e+04 0.859 0.2723
41  3.19e+04 0.859 0.2723
42  3.19e+04 0.859 0.2723
43  3.19e+04 0.859 0.2723
44  3.19e+04 0.859 0.2723
45  3.19e+04 0.859 0.2108
46  3.06e+04 0.972 0.1130
47  7.65e+03 0.971 0.1252
48  7.65e+03 0.971 0.1252
49  7.65e+03 0.971 0.1252
50  7.65e+03 0.971 0.1252
51  7.65e+03 0.971 0.1252
52  7.65e+03 0.971 0.1252
53  6.51e+03 0.971 0.1252
54  6.51e+03 0.971 0.1252
55  2.07e+03 0.997 0.0625
56  2.07e+03 0.997 0.0625
57  2.07e+03 0.997 0.0625
58  2.07e+03 0.997 0.0625
59  8.85e+02 0.989 0.0776
60  8.85e+02 0.989 0.0780
61  8.85e+02 0.989 0.0780
62  8.85e+02 0.989 0.0780
63  1.31e+03 0.989 0.0303
64  1.31e+03 0.989 0.0303
65  1.31e+03 0.989 0.0303
66  1.31e+03 0.989 0.0303
67  1.31e+03 0.989 0.0303
68  1.31e+03 0.989 0.0303
69  1.31e+03 0.989 0.0303
70  1.31e+03 0.989 0.0303
71  1.31e+03 0.989 0.0303
72  1.31e+03 0.989 0.0303
73  1.19e+03 0.844 0.0447
74  1.19e+03 0.844 0.0447
75  1.19e+03 0.844 0.0447
76  1.19e+03 0.844 0.0447
77  1.19e+03 0.844 0.0447
78  9.70e+02 0.923 0.0905
79  8.58e+02 0.787 0.1201
80  8.79e+02 0.913 0.1241
81  7.64e+02 0.818 0.1523
82  7.64e+02 0.818 0.1523
83  7.64e+02 0.818 0.1523
84  4.84e+02 0.685 0.2353
85  4.84e+02 0.685 0.2353
86  5.01e+02 0.669 0.2316
87  5.56e+02 0.803 0.2316
88  5.05e+02 0.857 0.2644
89  5.05e+02 0.857 0.2644
90  5.05e+02 0.857 0.2644
91  5.05e+02 0.857 0.2644
92  4.45e+02 0.762 0.2803
93  4.45e+02 0.762 0.2803
94  5.63e+02 0.939 0.2594
95  5.63e+02 0.939 0.2594
96  4.55e+02 0.880 0.2978
97  3.32e+02 0.668 0.3339
98  4.77e+02 0.961 0.3050
99  4.77e+02 0.961 0.3050
100 4.77e+02 0.961 0.3050
101 3.23e+02 0.753 0.3579
102 3.23e+02 0.753 0.3579
103 3.23e+02 0.753 0.3579
104 3.23e+02 0.753 0.3579
105 3.23e+02 0.753 0.3579
106 3.23e+02 0.753 0.3579
107 3.85e+02 0.954 0.3670
108 2.13e+02 0.739 0.4463
109 2.13e+02 0.739 0.4463
110 3.05e+02 0.964 0.4360
111 3.05e+02 0.964 0.4360
112 3.05e+02 0.964 0.4360
113 3.05e+02 0.964 0.4360
114 2.79e+02 0.991 0.4755
115 2.79e+02 0.991 0.4755
116 2.79e+02 0.991 0.4755
117 2.79e+02 0.991 0.4755
118 2.79e+02 0.991 0.4755
119 2.24e+02 0.987 0.5438
120 2.24e+02 0.987 0.5438
121 2.24e+02 0.987 0.5438
122 2.24e+02 0.987 0.5438
123 2.24e+02 0.987 0.5438
124 2.24e+02 0.987 0.5438
125 1.79e+02 0.944 0.5907
126 1.79e+02 0.944 0.5907
127 1.79e+02 0.944 0.5907
128 1.79e+02 0.944 0.5907
129 1.79e+02 0.944 0.5907
130 1.60e+02 0.941 0.6146
131 1.60e+02 0.941 0.6146
132 1.60e+02 0.941 0.6146
133 1.60e+02 0.941 0.6146
134 1.60e+02 0.941 0.6146
135 1.60e+02 0.941 0.6146
136 1.60e+02 0.941 0.6146
137 1.69e+02 0.960 0.6149
138 1.69e+02 0.960 0.6149
139 1.69e+02 0.960 0.6149
140 1.69e+02 0.960 0.6149
141 1.55e+02 0.944 0.6284
142 1.55e+02 0.944 0.6284
143 1.31e+02 0.917 0.6602
144 1.31e+02 0.917 0.6602
145 1.11e+02 0.940 0.7100
146 1.27e+02 0.944 0.6858
147 1.14e+02 0.925 0.6978
148 9.98e+01 0.907 0.7227
149 1.11e+02 0.929 0.7121
150 1.09e+02 0.931 0.7240
151 1.09e+02 0.931 0.7240
152 9.67e+01 0.952 0.7687
153 1.08e+02 0.997 0.7639
154 9.58e+01 0.977 0.7881
155 9.55e+01 0.997 0.7994
156 9.55e+01 0.997 0.7994
157 7.00e+01 0.938 0.8530
158 6.80e+01 0.946 0.8594
159 6.80e+01 0.946 0.8594
160 6.80e+01 0.946 0.8594
161 6.80e+01 0.946 0.8594
162 5.69e+01 0.962 0.9188
163 5.94e+01 0.965 0.9182
164 5.94e+01 0.965 0.9182
165 4.92e+01 0.948 0.9610
166 4.92e+01 0.948 0.9610
167 5.46e+01 0.990 0.9562
168 5.46e+01 0.990 0.9562
169 5.46e+01 0.990 0.9562
170 5.46e+01 0.990 0.9562
171 5.46e+01 0.990 0.9562
172 5.08e+01 0.989 0.9785
173 5.08e+01 0.989 0.9785
174 5.08e+01 0.989 0.9785
175 5.08e+01 0.989 0.9785
176 5.08e+01 0.989 0.9785
177 3.40e+01 0.948 1.0543
178 3.46e+01 0.959 1.0638
179 3.31e+01 0.953 1.0724
180 3.55e+01 1.000 1.0944
181 2.55e+01 1.000 1.1980
182 2.06e+01 0.996 1.2462
183 2.06e+01 0.996 1.2462
184 2.06e+01 0.996 1.2462
185 2.18e+01 0.967 1.2041
186 2.18e+01 0.967 1.2041
187 2.18e+01 0.967 1.2041
188 2.18e+01 0.967 1.2041
189 2.18e+01 0.967 1.2041
190 2.18e+01 0.967 1.2041
191 2.18e+01 0.967 1.2041
192 2.18e+01 0.967 1.2041
193 2.18e+01 0.967 1.2041
194 2.18e+01 0.967 1.2041
195 1.90e+01 0.950 1.2208
196 1.90e+01 0.950 1.2208
197 1.90e+01 0.950 1.2208
198 1.90e+01 0.950 1.2208
199 1.90e+01 0.950 1.2208
200 1.90e+01 0.950 1.2208

$member$bestvalit
  [1] 1.44e+27 1.59e+23 6.41e+21 5.64e+20 3.19e+19 3.19e+19 3.19e+19 8.20e+18
  [9] 5.75e+18 4.44e+16 4.44e+16 4.44e+16 4.44e+16 2.53e+16 6.22e+15 6.22e+15
 [17] 4.12e+15 4.12e+15 4.12e+15 4.12e+15 4.12e+15 1.12e+15 1.12e+15 1.12e+15
 [25] 4.42e+14 4.42e+14 4.42e+14 4.42e+14 2.46e+14 2.46e+14 2.46e+14 1.79e+12
 [33] 1.79e+12 1.49e+12 1.49e+12 1.80e+11 1.80e+11 1.80e+11 1.56e+11 1.56e+11
 [41] 1.56e+11 1.56e+11 1.56e+11 1.56e+11 9.70e+10 3.81e+10 2.15e+09 2.15e+09
 [49] 2.15e+09 2.15e+09 2.15e+09 2.15e+09 1.48e+09 1.48e+09 2.78e+07 2.78e+07
 [57] 2.78e+07 2.78e+07 2.99e+06 2.97e+06 2.97e+06 2.97e+06 1.72e+06 1.72e+06
 [65] 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06 1.72e+06
 [73] 1.67e+06 1.67e+06 1.67e+06 1.67e+06 1.67e+06 1.66e+06 1.52e+06 1.51e+06
 [81] 1.45e+06 1.45e+06 1.45e+06 1.40e+06 1.40e+06 1.32e+06 1.28e+06 1.22e+06
 [89] 1.22e+06 1.22e+06 1.22e+06 1.19e+06 1.19e+06 1.18e+06 1.18e+06 1.15e+06
 [97] 1.13e+06 1.12e+06 1.12e+06 1.12e+06 1.05e+06 1.05e+06 1.05e+06 1.05e+06
[105] 1.05e+06 1.05e+06 9.89e+05 9.51e+05 9.51e+05 8.66e+05 8.66e+05 8.66e+05
[113] 8.66e+05 7.81e+05 7.81e+05 7.81e+05 7.81e+05 7.81e+05 6.53e+05 6.53e+05
[121] 6.53e+05 6.53e+05 6.53e+05 6.53e+05 6.04e+05 6.04e+05 6.04e+05 6.04e+05
[129] 6.04e+05 5.67e+05 5.67e+05 5.67e+05 5.67e+05 5.67e+05 5.67e+05 5.67e+05
[137] 5.61e+05 5.61e+05 5.61e+05 5.61e+05 5.46e+05 5.46e+05 5.14e+05 5.14e+05
[145] 4.80e+05 4.73e+05 4.69e+05 4.52e+05 4.44e+05 4.39e+05 4.39e+05 3.74e+05
[153] 3.60e+05 3.43e+05 3.25e+05 3.25e+05 3.09e+05 2.84e+05 2.84e+05 2.84e+05
[161] 2.84e+05 2.43e+05 2.35e+05 2.35e+05 2.26e+05 2.26e+05 2.00e+05 2.00e+05
[169] 2.00e+05 2.00e+05 2.00e+05 1.82e+05 1.82e+05 1.82e+05 1.82e+05 1.82e+05
[177] 1.50e+05 1.40e+05 1.39e+05 1.24e+05 1.14e+05 1.07e+05 1.07e+05 1.07e+05
[185] 9.91e+04 9.91e+04 9.91e+04 9.91e+04 9.91e+04 9.91e+04 9.91e+04 9.91e+04
[193] 9.91e+04 9.91e+04 9.33e+04 9.33e+04 9.33e+04 9.33e+04 9.33e+04 9.33e+04

$member$pop
       [,1]  [,2]  [,3]
 [1,]  70.0 0.973 0.873
 [2,]  24.7 0.985 1.182
 [3,] 101.6 0.984 0.774
 [4,]  54.6 0.987 0.956
 [5,]  28.7 0.988 1.136
 [6,]  35.5 0.969 1.072
 [7,]  50.8 0.989 0.979
 [8,] 113.8 0.959 0.723
 [9,]  23.4 0.927 1.141
[10,]  73.2 0.988 0.873
[11,]  72.0 0.972 0.865
[12,]  23.9 0.987 1.195
[13,]  52.8 0.906 0.898
[14,]  58.3 0.987 0.943
[15,]  47.6 0.952 0.969
[16,]  76.6 0.926 0.807
[17,]  65.5 0.974 0.892
[18,]  34.6 0.959 1.064
[19,]  57.5 0.999 0.953
[20,]  21.8 0.967 1.204
[21,]  33.1 0.953 1.072
[22,]  59.4 0.965 0.918
[23,]  78.5 0.976 0.844
[24,]  35.5 1.000 1.094
[25,] 165.5 0.986 0.633
[26,]  22.3 0.959 1.195
[27,]  30.6 0.973 1.102
[28,]  19.0 0.950 1.221
[29,]  85.5 0.972 0.813
[30,]  25.5 1.000 1.198

$member$storepop
list()


attr(,"class")
[1] "DEoptim"

$coefficients
gamma delta   rho    nu 
19.01  0.95  0.00  1.22 

$iter
[1] 200

$ela
E_1_2 (all) 
          1 

$call
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

$method
[1] "DE"

$multErr
[1] FALSE

$lower
[1] 0 0 0

$upper
[1] 1e+10 1e+00 1e+01

$rho
[1] 0

$fitted.values
 [1] 1084 1133 1160 1177 1176 1195 1234 1235 1190 1240 1283 1466 1542 1604 1558
[16] 1576 1669 1757 1893 2022

$residuals
 [1] -137.74 -170.20  -90.14   -5.17    1.85   -9.05    5.21   54.03   17.51
[10]   38.30   77.78   74.42   32.98   92.09   87.06   50.18  -13.74   -1.35
[19]   -5.69  -30.55

$rss
[1] 93306

$cov.unscaled
         gamma     delta       rho        nu
gamma 18.06079  4.96e-01 -3.324901 -1.58e-03
delta  0.49589  1.36e-02 -0.091562 -3.37e-05
rho   -3.32490 -9.16e-02  0.614623  2.03e-04
nu    -0.00158 -3.37e-05  0.000203  3.52e-06

$allRhoSum
   rho    rss convergence
1 -0.8 158947          NA
2  0.0  93306          NA
3  0.8 109533          NA

$rhoValues
[1] -0.8  0.0  0.8

attr(,"class")
[1] "cesEst" "list"  
> print( cesGridDeVrs )
Estimated CES function

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Coefficients:
gamma delta   rho    nu 
19.01  0.95  0.00  1.22 

Elasticity of Substitution: 1 

> summary( cesGridDeVrs )
Estimated CES function with variable returns to scale

Call:
cesEst(yName = "qOutput", xNames = c("land", "qVarInput"), data = germanFarms, 
    vrs = TRUE, method = "DE", rho = seq(from = -0.8, to = 0.8, 
        by = 0.8), random.seed = 4321, control = DEoptim.control(trace = FALSE))

Estimation by non-linear least-squares using the 'DE' optimizer
and a one-dimensional grid search for coefficient 'rho'
assuming an additive error term

Coefficients:
      Estimate Std. Error t value Pr(>|t|)    
gamma   19.008    290.274    0.07     0.95    
delta    0.950      7.979    0.12     0.91    
rho      0.000     53.548    0.00     1.00    
nu       1.221      0.128    9.53   <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1

Residual standard error: 68.3 
Multiple R-squared: 0.947 

Elasticity of Substitution:
            Estimate Std. Error t value Pr(>|t|)
E_1_2 (all)      1.0       53.5    0.02     0.99

> coef( cesGridDeVrs )
gamma delta   rho    nu 
19.01  0.95  0.00  1.22 
> vcov( cesGridDeVrs )
          gamma    delta       rho      nu
gamma  84258.98 2313.477 -1.55e+04 -7.3750
delta   2313.48   63.658 -4.27e+02 -0.1571
rho   -15511.66 -427.166  2.87e+03  0.9481
nu        -7.37   -0.157  9.48e-01  0.0164
> coef( summary( cesGridDeVrs ) )
      Estimate Std. Error t value Pr(>|t|)
gamma    19.01    290.274  0.0655 9.48e-01
delta     0.95      7.979  0.1190 9.05e-01
rho       0.00     53.548  0.0000 1.00e+00
nu        1.22      0.128  9.5324 1.54e-21
> plot( cesGridDeVrs )
> 
> proc.time()
   user  system elapsed 
 19.273   0.129  19.399 
